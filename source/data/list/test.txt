
test.o:     file format pe-x86-64


Disassembly of section .text:

0000000000000000 <listInsert>:
   0:	55                   	push   rbp
   1:	48 89 e5             	mov    rbp,rsp
   4:	48 83 ec 30          	sub    rsp,0x30
   8:	48 89 4d 10          	mov    QWORD PTR [rbp+0x10],rcx
   c:	89 55 18             	mov    DWORD PTR [rbp+0x18],edx
   f:	4c 89 45 20          	mov    QWORD PTR [rbp+0x20],r8
  13:	48 83 7d 10 00       	cmp    QWORD PTR [rbp+0x10],0x0
  18:	75 0a                	jne    24 <listInsert+0x24>
  1a:	b8 00 10 00 80       	mov    eax,0x80001000
  1f:	e9 9e 00 00 00       	jmp    c2 <listInsert+0xc2>
  24:	8b 55 18             	mov    edx,DWORD PTR [rbp+0x18]
  27:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
  2b:	48 89 c1             	mov    rcx,rax
  2e:	e8 00 00 00 00       	call   33 <listInsert+0x33>
  33:	85 c0                	test   eax,eax
  35:	75 0a                	jne    41 <listInsert+0x41>
  37:	b8 00 20 00 80       	mov    eax,0x80002000
  3c:	e9 81 00 00 00       	jmp    c2 <listInsert+0xc2>
  41:	e8 00 00 00 00       	call   46 <listInsert+0x46>
  46:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  4a:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
  4f:	75 07                	jne    58 <listInsert+0x58>
  51:	b8 02 10 00 80       	mov    eax,0x80001002
  56:	eb 6a                	jmp    c2 <listInsert+0xc2>
  58:	8b 55 18             	mov    edx,DWORD PTR [rbp+0x18]
  5b:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
  5f:	48 89 c1             	mov    rcx,rax
  62:	e8 00 00 00 00       	call   67 <listInsert+0x67>
  67:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  6b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  6f:	48 8b 55 20          	mov    rdx,QWORD PTR [rbp+0x20]
  73:	48 89 10             	mov    QWORD PTR [rax],rdx
  76:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  7a:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
  7e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  82:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
  86:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  8a:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  8e:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
  92:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  96:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  9a:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
  9e:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
  a2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  a6:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
  aa:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
  ae:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
  b2:	8b 00                	mov    eax,DWORD PTR [rax]
  b4:	8d 50 01             	lea    edx,[rax+0x1]
  b7:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
  bb:	89 10                	mov    DWORD PTR [rax],edx
  bd:	b8 00 00 00 00       	mov    eax,0x0
  c2:	48 83 c4 30          	add    rsp,0x30
  c6:	5d                   	pop    rbp
  c7:	c3                   	ret

00000000000000c8 <listSplit>:
  c8:	55                   	push   rbp
  c9:	53                   	push   rbx
  ca:	48 83 ec 38          	sub    rsp,0x38
  ce:	48 8d 6c 24 30       	lea    rbp,[rsp+0x30]
  d3:	48 89 4d 20          	mov    QWORD PTR [rbp+0x20],rcx
  d7:	89 55 28             	mov    DWORD PTR [rbp+0x28],edx
  da:	48 83 7d 20 00       	cmp    QWORD PTR [rbp+0x20],0x0
  df:	75 0a                	jne    eb <listSplit+0x23>
  e1:	b8 00 00 00 00       	mov    eax,0x0
  e6:	e9 d2 00 00 00       	jmp    1bd <listSplit+0xf5>
  eb:	8b 55 28             	mov    edx,DWORD PTR [rbp+0x28]
  ee:	48 8b 45 20          	mov    rax,QWORD PTR [rbp+0x20]
  f2:	48 89 c1             	mov    rcx,rax
  f5:	e8 00 00 00 00       	call   fa <listSplit+0x32>
  fa:	85 c0                	test   eax,eax
  fc:	75 0a                	jne    108 <listSplit+0x40>
  fe:	b8 00 00 00 00       	mov    eax,0x0
 103:	e9 b5 00 00 00       	jmp    1bd <listSplit+0xf5>
 108:	8b 55 28             	mov    edx,DWORD PTR [rbp+0x28]
 10b:	48 8b 45 20          	mov    rax,QWORD PTR [rbp+0x20]
 10f:	48 89 c1             	mov    rcx,rax
 112:	e8 00 00 00 00       	call   117 <listSplit+0x4f>
 117:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 11b:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
 120:	75 0a                	jne    12c <listSplit+0x64>
 122:	b8 00 00 00 00       	mov    eax,0x0
 127:	e9 91 00 00 00       	jmp    1bd <listSplit+0xf5>
 12c:	e8 00 00 00 00       	call   131 <listSplit+0x69>
 131:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 135:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 13a:	75 07                	jne    143 <listSplit+0x7b>
 13c:	b8 00 00 00 00       	mov    eax,0x0
 141:	eb 7a                	jmp    1bd <listSplit+0xf5>
 143:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 147:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
 14b:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 14f:	48 8b 45 20          	mov    rax,QWORD PTR [rbp+0x20]
 153:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
 157:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 15b:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 15f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 163:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
 167:	48 8b 45 20          	mov    rax,QWORD PTR [rbp+0x20]
 16b:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 16f:	48 8b 45 20          	mov    rax,QWORD PTR [rbp+0x20]
 173:	8b 18                	mov    ebx,DWORD PTR [rax]
 175:	8b 45 28             	mov    eax,DWORD PTR [rbp+0x28]
 178:	89 c1                	mov    ecx,eax
 17a:	e8 00 00 00 00       	call   17f <listSplit+0xb7>
 17f:	29 c3                	sub    ebx,eax
 181:	89 da                	mov    edx,ebx
 183:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 187:	89 10                	mov    DWORD PTR [rax],edx
 189:	8b 45 28             	mov    eax,DWORD PTR [rbp+0x28]
 18c:	89 c1                	mov    ecx,eax
 18e:	e8 00 00 00 00       	call   193 <listSplit+0xcb>
 193:	48 8b 55 20          	mov    rdx,QWORD PTR [rbp+0x20]
 197:	89 02                	mov    DWORD PTR [rdx],eax
 199:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 19d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 1a1:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
 1a8:	00 
 1a9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1ad:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1b1:	48 c7 40 10 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
 1b8:	00 
 1b9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 1bd:	48 83 c4 38          	add    rsp,0x38
 1c1:	5b                   	pop    rbx
 1c2:	5d                   	pop    rbp
 1c3:	c3                   	ret

00000000000001c4 <listJoin>:
 1c4:	55                   	push   rbp
 1c5:	48 89 e5             	mov    rbp,rsp
 1c8:	48 83 ec 20          	sub    rsp,0x20
 1cc:	48 89 4d 10          	mov    QWORD PTR [rbp+0x10],rcx
 1d0:	48 89 55 18          	mov    QWORD PTR [rbp+0x18],rdx
 1d4:	48 83 7d 10 00       	cmp    QWORD PTR [rbp+0x10],0x0
 1d9:	75 07                	jne    1e2 <listJoin+0x1e>
 1db:	b8 00 00 00 00       	mov    eax,0x0
 1e0:	eb 62                	jmp    244 <listJoin+0x80>
 1e2:	48 83 7d 18 00       	cmp    QWORD PTR [rbp+0x18],0x0
 1e7:	75 07                	jne    1f0 <listJoin+0x2c>
 1e9:	b8 00 00 00 00       	mov    eax,0x0
 1ee:	eb 54                	jmp    244 <listJoin+0x80>
 1f0:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
 1f4:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1f8:	48 8b 55 18          	mov    rdx,QWORD PTR [rbp+0x18]
 1fc:	48 8b 52 08          	mov    rdx,QWORD PTR [rdx+0x8]
 200:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 204:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
 208:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
 20c:	48 8b 45 18          	mov    rax,QWORD PTR [rbp+0x18]
 210:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 214:	48 8b 45 18          	mov    rax,QWORD PTR [rbp+0x18]
 218:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
 21c:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
 220:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 224:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
 228:	8b 10                	mov    edx,DWORD PTR [rax]
 22a:	48 8b 45 18          	mov    rax,QWORD PTR [rbp+0x18]
 22e:	8b 00                	mov    eax,DWORD PTR [rax]
 230:	01 c2                	add    edx,eax
 232:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
 236:	89 10                	mov    DWORD PTR [rax],edx
 238:	48 8b 45 18          	mov    rax,QWORD PTR [rbp+0x18]
 23c:	48 89 c1             	mov    rcx,rax
 23f:	e8 00 00 00 00       	call   244 <listJoin+0x80>
 244:	48 83 c4 20          	add    rsp,0x20
 248:	5d                   	pop    rbp
 249:	c3                   	ret

000000000000024a <listSlice>:
 24a:	55                   	push   rbp
 24b:	53                   	push   rbx
 24c:	48 83 ec 68          	sub    rsp,0x68
 250:	48 8d 6c 24 60       	lea    rbp,[rsp+0x60]
 255:	48 89 4d 20          	mov    QWORD PTR [rbp+0x20],rcx
 259:	89 55 28             	mov    DWORD PTR [rbp+0x28],edx
 25c:	44 89 45 30          	mov    DWORD PTR [rbp+0x30],r8d
 260:	48 83 7d 20 00       	cmp    QWORD PTR [rbp+0x20],0x0
 265:	75 0a                	jne    271 <listSlice+0x27>
 267:	b8 00 00 00 00       	mov    eax,0x0
 26c:	e9 e4 01 00 00       	jmp    455 <listSlice+0x20b>
 271:	8b 55 28             	mov    edx,DWORD PTR [rbp+0x28]
 274:	48 8b 45 20          	mov    rax,QWORD PTR [rbp+0x20]
 278:	48 89 c1             	mov    rcx,rax
 27b:	e8 00 00 00 00       	call   280 <listSlice+0x36>
 280:	85 c0                	test   eax,eax
 282:	75 0a                	jne    28e <listSlice+0x44>
 284:	b8 00 00 00 00       	mov    eax,0x0
 289:	e9 c7 01 00 00       	jmp    455 <listSlice+0x20b>
 28e:	8b 55 30             	mov    edx,DWORD PTR [rbp+0x30]
 291:	48 8b 45 20          	mov    rax,QWORD PTR [rbp+0x20]
 295:	48 89 c1             	mov    rcx,rax
 298:	e8 00 00 00 00       	call   29d <listSlice+0x53>
 29d:	85 c0                	test   eax,eax
 29f:	75 0a                	jne    2ab <listSlice+0x61>
 2a1:	b8 00 00 00 00       	mov    eax,0x0
 2a6:	e9 aa 01 00 00       	jmp    455 <listSlice+0x20b>
 2ab:	b9 18 00 00 00       	mov    ecx,0x18
 2b0:	e8 00 00 00 00       	call   2b5 <listSlice+0x6b>
 2b5:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
 2b9:	48 83 7d d8 00       	cmp    QWORD PTR [rbp-0x28],0x0
 2be:	75 0a                	jne    2ca <listSlice+0x80>
 2c0:	b8 00 00 00 00       	mov    eax,0x0
 2c5:	e9 8b 01 00 00       	jmp    455 <listSlice+0x20b>
 2ca:	8b 45 30             	mov    eax,DWORD PTR [rbp+0x30]
 2cd:	89 c1                	mov    ecx,eax
 2cf:	e8 00 00 00 00       	call   2d4 <listSlice+0x8a>
 2d4:	89 c3                	mov    ebx,eax
 2d6:	8b 45 28             	mov    eax,DWORD PTR [rbp+0x28]
 2d9:	89 c1                	mov    ecx,eax
 2db:	e8 00 00 00 00       	call   2e0 <listSlice+0x96>
 2e0:	29 c3                	sub    ebx,eax
 2e2:	89 da                	mov    edx,ebx
 2e4:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 2e8:	89 10                	mov    DWORD PTR [rax],edx
 2ea:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 2ee:	8b 00                	mov    eax,DWORD PTR [rax]
 2f0:	85 c0                	test   eax,eax
 2f2:	75 21                	jne    315 <listSlice+0xcb>
 2f4:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 2f8:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
 2ff:	00 
 300:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 304:	48 c7 40 10 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
 30b:	00 
 30c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 310:	e9 40 01 00 00       	jmp    455 <listSlice+0x20b>
 315:	8b 55 28             	mov    edx,DWORD PTR [rbp+0x28]
 318:	48 8b 45 20          	mov    rax,QWORD PTR [rbp+0x20]
 31c:	48 89 c1             	mov    rcx,rax
 31f:	e8 00 00 00 00       	call   324 <listSlice+0xda>
 324:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 328:	48 c7 45 f0 00 00 00 	mov    QWORD PTR [rbp-0x10],0x0
 32f:	00 
 330:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
 337:	00 
 338:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
 33f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 343:	8b 00                	mov    eax,DWORD PTR [rax]
 345:	83 e8 01             	sub    eax,0x1
 348:	89 45 d4             	mov    DWORD PTR [rbp-0x2c],eax
 34b:	e8 00 00 00 00       	call   350 <listSlice+0x106>
 350:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 354:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 359:	0f 84 98 00 00 00    	je     3f7 <listSlice+0x1ad>
 35f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 363:	48 8b 10             	mov    rdx,QWORD PTR [rax]
 366:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 36a:	48 89 10             	mov    QWORD PTR [rax],rdx
 36d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 371:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
 375:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 379:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 37d:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
 381:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 385:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 389:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 38d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 391:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 395:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 399:	eb 42                	jmp    3dd <listSlice+0x193>
 39b:	e8 00 00 00 00       	call   3a0 <listSlice+0x156>
 3a0:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
 3a4:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
 3a9:	74 4f                	je     3fa <listSlice+0x1b0>
 3ab:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 3af:	48 8b 10             	mov    rdx,QWORD PTR [rax]
 3b2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 3b6:	48 89 10             	mov    QWORD PTR [rax],rdx
 3b9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 3bd:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
 3c1:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 3c5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
 3c9:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
 3cd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 3d1:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 3d5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 3d9:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
 3dd:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
 3e0:	3b 45 d4             	cmp    eax,DWORD PTR [rbp-0x2c]
 3e3:	7c b6                	jl     39b <listSlice+0x151>
 3e5:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 3e9:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
 3ed:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
 3f1:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 3f5:	eb 5e                	jmp    455 <listSlice+0x20b>
 3f7:	90                   	nop
 3f8:	eb 01                	jmp    3fb <listSlice+0x1b1>
 3fa:	90                   	nop
 3fb:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
 402:	00 
 403:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 407:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 40b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 40f:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [rbp-0x20],0x0
 416:	eb 24                	jmp    43c <listSlice+0x1f2>
 418:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 41c:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 420:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
 424:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
 428:	48 89 c1             	mov    rcx,rax
 42b:	e8 00 00 00 00       	call   430 <listSlice+0x1e6>
 430:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
 434:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
 438:	83 45 e0 01          	add    DWORD PTR [rbp-0x20],0x1
 43c:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
 43f:	3b 45 e4             	cmp    eax,DWORD PTR [rbp-0x1c]
 442:	7c d4                	jl     418 <listSlice+0x1ce>
 444:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
 448:	48 89 c1             	mov    rcx,rax
 44b:	e8 00 00 00 00       	call   450 <listSlice+0x206>
 450:	b8 00 00 00 00       	mov    eax,0x0
 455:	48 83 c4 68          	add    rsp,0x68
 459:	5b                   	pop    rbx
 45a:	5d                   	pop    rbp
 45b:	c3                   	ret
 45c:	90                   	nop
 45d:	90                   	nop
 45e:	90                   	nop
 45f:	90                   	nop

Disassembly of section .xdata:

0000000000000000 <.xdata>:
   0:	01 08                	add    DWORD PTR [rax],ecx
   2:	03 05 08 52 04 03    	add    eax,DWORD PTR [rip+0x3045208]        # 3045210 <listSlice+0x3044fc6>
   8:	01 50 00             	add    DWORD PTR [rax+0x0],edx
   b:	00 01                	add    BYTE PTR [rcx],al
   d:	0b 04 35 0b 03 06 62 	or     eax,DWORD PTR [rsi*1+0x6206030b]
  14:	02 30                	add    dh,BYTE PTR [rax]
  16:	01 50 01             	add    DWORD PTR [rax+0x1],edx
  19:	08 03                	or     BYTE PTR [rbx],al
  1b:	05 08 32 04 03       	add    eax,0x3043208
  20:	01 50 00             	add    DWORD PTR [rax+0x0],edx
  23:	00 01                	add    BYTE PTR [rcx],al
  25:	0b 04 65 0b 03 06 c2 	or     eax,DWORD PTR [riz*2-0x3df9fcf5]
  2c:	02 30                	add    dh,BYTE PTR [rax]
  2e:	01                   	.byte 0x1
  2f:	50                   	push   rax

Disassembly of section .pdata:

0000000000000000 <.pdata>:
   0:	00 00                	add    BYTE PTR [rax],al
   2:	00 00                	add    BYTE PTR [rax],al
   4:	c8 00 00 00          	enter  0x0,0x0
   8:	00 00                	add    BYTE PTR [rax],al
   a:	00 00                	add    BYTE PTR [rax],al
   c:	c8 00 00 00          	enter  0x0,0x0
  10:	c4 01 00 00          	(bad)
  14:	0c 00                	or     al,0x0
  16:	00 00                	add    BYTE PTR [rax],al
  18:	c4 01 00 00          	(bad)
  1c:	4a 02 00             	rex.WX add al,BYTE PTR [rax]
  1f:	00 18                	add    BYTE PTR [rax],bl
  21:	00 00                	add    BYTE PTR [rax],al
  23:	00 4a 02             	add    BYTE PTR [rdx+0x2],cl
  26:	00 00                	add    BYTE PTR [rax],al
  28:	5c                   	pop    rsp
  29:	04 00                	add    al,0x0
  2b:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
	...

Disassembly of section .rdata$zzz:

0000000000000000 <.rdata$zzz>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 78 38             	sub    BYTE PTR [rax+0x38],bh
   8:	36 5f                	ss pop rdi
   a:	36 34 2d             	ss xor al,0x2d
   d:	77 69                	ja     78 <.rdata$zzz+0x78>
   f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  10:	33 32                	xor    esi,DWORD PTR [rdx]
  12:	2d 73 65 68 2d       	sub    eax,0x2d686573
  17:	72 65                	jb     7e <.rdata$zzz+0x7e>
  19:	76 31                	jbe    4c <.rdata$zzz+0x4c>
  1b:	2c 20                	sub    al,0x20
  1d:	42 75 69             	rex.X jne 89 <.rdata$zzz+0x89>
  20:	6c                   	ins    BYTE PTR es:[rdi],dx
  21:	74 20                	je     43 <.rdata$zzz+0x43>
  23:	62                   	(bad)
  24:	79 20                	jns    46 <.rdata$zzz+0x46>
  26:	4d 69 6e 47 57 2d 42 	imul   r13,QWORD PTR [r14+0x47],0x75422d57
  2d:	75 
  2e:	69 6c 64 73 20 70 72 	imul   ebp,DWORD PTR [rsp+riz*2+0x73],0x6f727020
  35:	6f 
  36:	6a 65                	push   0x65
  38:	63 74 29 20          	movsxd esi,DWORD PTR [rcx+rbp*1+0x20]
  3c:	31 33                	xor    DWORD PTR [rbx],esi
  3e:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  41:	30 00                	xor    BYTE PTR [rax],al
	...
