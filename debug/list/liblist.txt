In archive liblist.a:

list.o:     file format pe-x86-64


Disassembly of section .text:

0000000000000000 <listInsert>:
   0:	57                   	push   rdi
   1:	56                   	push   rsi
   2:	53                   	push   rbx
   3:	48 83 ec 30          	sub    rsp,0x30
   7:	0f 29 74 24 20       	movaps XMMWORD PTR [rsp+0x20],xmm6
   c:	48 85 c9             	test   rcx,rcx
   f:	48 89 cb             	mov    rbx,rcx
  12:	89 d7                	mov    edi,edx
  14:	66 49 0f 6e f0       	movq   xmm6,r8
  19:	74 5c                	je     77 <listInsert+0x77>
  1b:	e8 00 00 00 00       	call   20 <listInsert+0x20>
  20:	85 c0                	test   eax,eax
  22:	74 4c                	je     70 <listInsert+0x70>
  24:	e8 00 00 00 00       	call   29 <listInsert+0x29>
  29:	48 85 c0             	test   rax,rax
  2c:	48 89 c6             	mov    rsi,rax
  2f:	74 4d                	je     7e <listInsert+0x7e>
  31:	89 fa                	mov    edx,edi
  33:	48 89 d9             	mov    rcx,rbx
  36:	e8 00 00 00 00       	call   3b <listInsert+0x3b>
  3b:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
  3f:	48 89 46 10          	mov    QWORD PTR [rsi+0x10],rax
  43:	66 48 0f 6e c2       	movq   xmm0,rdx
  48:	66 0f 6c f0          	punpcklqdq xmm6,xmm0
  4c:	0f 11 36             	movups XMMWORD PTR [rsi],xmm6
  4f:	48 89 72 10          	mov    QWORD PTR [rdx+0x10],rsi
  53:	48 89 70 08          	mov    QWORD PTR [rax+0x8],rsi
  57:	31 c0                	xor    eax,eax
  59:	83 03 01             	add    DWORD PTR [rbx],0x1
  5c:	0f 28 74 24 20       	movaps xmm6,XMMWORD PTR [rsp+0x20]
  61:	48 83 c4 30          	add    rsp,0x30
  65:	5b                   	pop    rbx
  66:	5e                   	pop    rsi
  67:	5f                   	pop    rdi
  68:	c3                   	ret
  69:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
  70:	b8 fd ff ff ff       	mov    eax,0xfffffffd
  75:	eb e5                	jmp    5c <listInsert+0x5c>
  77:	b8 fc ff ff ff       	mov    eax,0xfffffffc
  7c:	eb de                	jmp    5c <listInsert+0x5c>
  7e:	b8 fb ff ff ff       	mov    eax,0xfffffffb
  83:	eb d7                	jmp    5c <listInsert+0x5c>
  85:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
  8c:	00 00 00 00 

0000000000000090 <listSplit>:
  90:	b8 01 00 00 00       	mov    eax,0x1
  95:	c3                   	ret
  96:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  9d:	00 00 00 

00000000000000a0 <listJoin>:
  a0:	b8 01 00 00 00       	mov    eax,0x1
  a5:	c3                   	ret
  a6:	90                   	nop
  a7:	90                   	nop
  a8:	90                   	nop
  a9:	90                   	nop
  aa:	90                   	nop
  ab:	90                   	nop
  ac:	90                   	nop
  ad:	90                   	nop
  ae:	90                   	nop
  af:	90                   	nop

Disassembly of section .xdata:

0000000000000000 <.xdata>:
   0:	01 0c 06             	add    DWORD PTR [rsi+rax*1],ecx
   3:	00 0c 68             	add    BYTE PTR [rax+rbp*2],cl
   6:	02 00                	add    al,BYTE PTR [rax]
   8:	07                   	(bad)
   9:	52                   	push   rdx
   a:	03 30                	add    esi,DWORD PTR [rax]
   c:	02 60 01             	add    ah,BYTE PTR [rax+0x1]
   f:	70 01                	jo     12 <.xdata+0x12>
  11:	00 00                	add    BYTE PTR [rax],al
  13:	00 01                	add    BYTE PTR [rcx],al
  15:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

0000000000000000 <.pdata>:
   0:	00 00                	add    BYTE PTR [rax],al
   2:	00 00                	add    BYTE PTR [rax],al
   4:	85 00                	test   DWORD PTR [rax],eax
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	00 00                	add    BYTE PTR [rax],al
   c:	90                   	nop
   d:	00 00                	add    BYTE PTR [rax],al
   f:	00 96 00 00 00 10    	add    BYTE PTR [rsi+0x10000000],dl
  15:	00 00                	add    BYTE PTR [rax],al
  17:	00 a0 00 00 00 a6    	add    BYTE PTR [rax-0x5a000000],ah
  1d:	00 00                	add    BYTE PTR [rax],al
  1f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...

Disassembly of section .rdata$zzz:

0000000000000000 <.rdata$zzz>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 78 38             	sub    BYTE PTR [rax+0x38],bh
   8:	36 5f                	ss pop rdi
   a:	36 34 2d             	ss xor al,0x2d
   d:	77 69                	ja     78 <.rdata$zzz+0x78>
   f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  10:	33 32                	xor    esi,DWORD PTR [rdx]
  12:	2d 73 65 68 2d       	sub    eax,0x2d686573
  17:	72 65                	jb     7e <.rdata$zzz+0x7e>
  19:	76 31                	jbe    4c <.rdata$zzz+0x4c>
  1b:	2c 20                	sub    al,0x20
  1d:	42 75 69             	rex.X jne 89 <.rdata$zzz+0x89>
  20:	6c                   	ins    BYTE PTR es:[rdi],dx
  21:	74 20                	je     43 <.rdata$zzz+0x43>
  23:	62                   	(bad)
  24:	79 20                	jns    46 <.rdata$zzz+0x46>
  26:	4d 69 6e 47 57 2d 42 	imul   r13,QWORD PTR [r14+0x47],0x75422d57
  2d:	75 
  2e:	69 6c 64 73 20 70 72 	imul   ebp,DWORD PTR [rsp+riz*2+0x73],0x6f727020
  35:	6f 
  36:	6a 65                	push   0x65
  38:	63 74 29 20          	movsxd esi,DWORD PTR [rcx+rbp*1+0x20]
  3c:	31 33                	xor    DWORD PTR [rbx],esi
  3e:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  41:	30 00                	xor    BYTE PTR [rax],al
	...

list_basic.o:     file format pe-x86-64


Disassembly of section .text:

0000000000000000 <listCreate>:
   0:	48 83 ec 28          	sub    rsp,0x28
   4:	b9 18 00 00 00       	mov    ecx,0x18
   9:	e8 00 00 00 00       	call   e <listCreate+0xe>
   e:	48 85 c0             	test   rax,rax
  11:	74 0e                	je     21 <listCreate+0x21>
  13:	66 0f ef c0          	pxor   xmm0,xmm0
  17:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
  1d:	0f 11 40 08          	movups XMMWORD PTR [rax+0x8],xmm0
  21:	48 83 c4 28          	add    rsp,0x28
  25:	c3                   	ret
  26:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  2d:	00 00 00 

0000000000000030 <listDelete>:
  30:	57                   	push   rdi
  31:	56                   	push   rsi
  32:	53                   	push   rbx
  33:	48 83 ec 20          	sub    rsp,0x20
  37:	48 85 c9             	test   rcx,rcx
  3a:	48 89 cf             	mov    rdi,rcx
  3d:	74 39                	je     78 <listDelete+0x48>
  3f:	8b 01                	mov    eax,DWORD PTR [rcx]
  41:	48 8b 59 08          	mov    rbx,QWORD PTR [rcx+0x8]
  45:	85 c0                	test   eax,eax
  47:	7e 1a                	jle    63 <listDelete+0x33>
  49:	31 f6                	xor    esi,esi
  4b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
  50:	48 89 d9             	mov    rcx,rbx
  53:	83 c6 01             	add    esi,0x1
  56:	48 8b 5b 10          	mov    rbx,QWORD PTR [rbx+0x10]
  5a:	e8 00 00 00 00       	call   5f <listDelete+0x2f>
  5f:	39 37                	cmp    DWORD PTR [rdi],esi
  61:	7f ed                	jg     50 <listDelete+0x20>
  63:	48 89 f9             	mov    rcx,rdi
  66:	48 83 c4 20          	add    rsp,0x20
  6a:	5b                   	pop    rbx
  6b:	5e                   	pop    rsi
  6c:	5f                   	pop    rdi
  6d:	e9 00 00 00 00       	jmp    72 <listDelete+0x42>
  72:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
  78:	48 83 c4 20          	add    rsp,0x20
  7c:	5b                   	pop    rbx
  7d:	5e                   	pop    rsi
  7e:	5f                   	pop    rdi
  7f:	c3                   	ret

0000000000000080 <listAdd>:
  80:	56                   	push   rsi
  81:	53                   	push   rbx
  82:	48 83 ec 28          	sub    rsp,0x28
  86:	48 85 c9             	test   rcx,rcx
  89:	48 89 cb             	mov    rbx,rcx
  8c:	48 89 d6             	mov    rsi,rdx
  8f:	74 5f                	je     f0 <listAdd+0x70>
  91:	e8 00 00 00 00       	call   96 <listAdd+0x16>
  96:	48 85 c0             	test   rax,rax
  99:	74 55                	je     f0 <listAdd+0x70>
  9b:	8b 0b                	mov    ecx,DWORD PTR [rbx]
  9d:	85 c9                	test   ecx,ecx
  9f:	74 2f                	je     d0 <listAdd+0x50>
  a1:	48 8b 53 10          	mov    rdx,QWORD PTR [rbx+0x10]
  a5:	48 c7 40 10 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
  ac:	00 
  ad:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
  b1:	48 89 42 10          	mov    QWORD PTR [rdx+0x10],rax
  b5:	48 89 43 10          	mov    QWORD PTR [rbx+0x10],rax
  b9:	83 c1 01             	add    ecx,0x1
  bc:	48 89 30             	mov    QWORD PTR [rax],rsi
  bf:	31 c0                	xor    eax,eax
  c1:	89 0b                	mov    DWORD PTR [rbx],ecx
  c3:	48 83 c4 28          	add    rsp,0x28
  c7:	5b                   	pop    rbx
  c8:	5e                   	pop    rsi
  c9:	c3                   	ret
  ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
  d0:	66 48 0f 6e c8       	movq   xmm1,rax
  d5:	f2 0f 12 c1          	movddup xmm0,xmm1
  d9:	0f 11 43 08          	movups XMMWORD PTR [rbx+0x8],xmm0
  dd:	66 0f ef c0          	pxor   xmm0,xmm0
  e1:	0f 11 40 08          	movups XMMWORD PTR [rax+0x8],xmm0
  e5:	eb d2                	jmp    b9 <listAdd+0x39>
  e7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  ee:	00 00 
  f0:	b8 ff ff ff ff       	mov    eax,0xffffffff
  f5:	eb cc                	jmp    c3 <listAdd+0x43>
  f7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  fe:	00 00 

0000000000000100 <listDel>:
 100:	57                   	push   rdi
 101:	56                   	push   rsi
 102:	53                   	push   rbx
 103:	48 83 ec 20          	sub    rsp,0x20
 107:	48 89 cb             	mov    rbx,rcx
 10a:	89 d7                	mov    edi,edx
 10c:	e8 00 00 00 00       	call   111 <listDel+0x11>
 111:	48 85 c0             	test   rax,rax
 114:	48 89 c6             	mov    rsi,rax
 117:	74 61                	je     17a <listDel+0x7a>
 119:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
 11d:	48 89 d9             	mov    rcx,rbx
 120:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 124:	48 89 42 10          	mov    QWORD PTR [rdx+0x10],rax
 128:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
 12c:	89 fa                	mov    edx,edi
 12e:	e8 00 00 00 00       	call   133 <listDel+0x33>
 133:	85 c0                	test   eax,eax
 135:	74 08                	je     13f <listDel+0x3f>
 137:	48 8b 46 10          	mov    rax,QWORD PTR [rsi+0x10]
 13b:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
 13f:	89 fa                	mov    edx,edi
 141:	48 89 d9             	mov    rcx,rbx
 144:	e8 00 00 00 00       	call   149 <listDel+0x49>
 149:	85 c0                	test   eax,eax
 14b:	74 08                	je     155 <listDel+0x55>
 14d:	48 8b 46 08          	mov    rax,QWORD PTR [rsi+0x8]
 151:	48 89 43 10          	mov    QWORD PTR [rbx+0x10],rax
 155:	48 89 f1             	mov    rcx,rsi
 158:	e8 00 00 00 00       	call   15d <listDel+0x5d>
 15d:	83 2b 01             	sub    DWORD PTR [rbx],0x1
 160:	74 0e                	je     170 <listDel+0x70>
 162:	31 c0                	xor    eax,eax
 164:	48 83 c4 20          	add    rsp,0x20
 168:	5b                   	pop    rbx
 169:	5e                   	pop    rsi
 16a:	5f                   	pop    rdi
 16b:	c3                   	ret
 16c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 170:	66 0f ef c0          	pxor   xmm0,xmm0
 174:	0f 11 43 08          	movups XMMWORD PTR [rbx+0x8],xmm0
 178:	eb e8                	jmp    162 <listDel+0x62>
 17a:	b8 ff ff ff ff       	mov    eax,0xffffffff
 17f:	eb e3                	jmp    164 <listDel+0x64>
 181:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
 188:	00 00 00 00 
 18c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000000190 <listCrean>:
 190:	44 8b 01             	mov    r8d,DWORD PTR [rcx]
 193:	48 8b 41 08          	mov    rax,QWORD PTR [rcx+0x8]
 197:	45 85 c0             	test   r8d,r8d
 19a:	7e 1a                	jle    1b6 <listCrean+0x26>
 19c:	31 d2                	xor    edx,edx
 19e:	66 90                	xchg   ax,ax
 1a0:	83 c2 01             	add    edx,0x1
 1a3:	48 89 c1             	mov    rcx,rax
 1a6:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1aa:	44 39 c2             	cmp    edx,r8d
 1ad:	48 c7 01 00 00 00 00 	mov    QWORD PTR [rcx],0x0
 1b4:	75 ea                	jne    1a0 <listCrean+0x10>
 1b6:	31 c0                	xor    eax,eax
 1b8:	c3                   	ret
 1b9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000001c0 <listFill>:
 1c0:	44 8b 09             	mov    r9d,DWORD PTR [rcx]
 1c3:	48 8b 41 08          	mov    rax,QWORD PTR [rcx+0x8]
 1c7:	45 85 c9             	test   r9d,r9d
 1ca:	7e 16                	jle    1e2 <listFill+0x22>
 1cc:	31 c9                	xor    ecx,ecx
 1ce:	66 90                	xchg   ax,ax
 1d0:	83 c1 01             	add    ecx,0x1
 1d3:	49 89 c0             	mov    r8,rax
 1d6:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
 1da:	44 39 c9             	cmp    ecx,r9d
 1dd:	49 89 10             	mov    QWORD PTR [r8],rdx
 1e0:	75 ee                	jne    1d0 <listFill+0x10>
 1e2:	31 c0                	xor    eax,eax
 1e4:	c3                   	ret
 1e5:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
 1ec:	00 00 00 00 

00000000000001f0 <listGet>:
 1f0:	48 83 ec 28          	sub    rsp,0x28
 1f4:	e8 00 00 00 00       	call   1f9 <listGet+0x9>
 1f9:	48 85 c0             	test   rax,rax
 1fc:	74 03                	je     201 <listGet+0x11>
 1fe:	48 8b 00             	mov    rax,QWORD PTR [rax]
 201:	48 83 c4 28          	add    rsp,0x28
 205:	c3                   	ret
 206:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
 20d:	00 00 00 

0000000000000210 <listSet>:
 210:	53                   	push   rbx
 211:	48 83 ec 20          	sub    rsp,0x20
 215:	4c 89 c3             	mov    rbx,r8
 218:	e8 00 00 00 00       	call   21d <listSet+0xd>
 21d:	48 85 c0             	test   rax,rax
 220:	74 0b                	je     22d <listSet+0x1d>
 222:	48 89 18             	mov    QWORD PTR [rax],rbx
 225:	31 c0                	xor    eax,eax
 227:	48 83 c4 20          	add    rsp,0x20
 22b:	5b                   	pop    rbx
 22c:	c3                   	ret
 22d:	b8 ff ff ff ff       	mov    eax,0xffffffff
 232:	eb f3                	jmp    227 <listSet+0x17>
 234:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
 23b:	00 00 00 00 
 23f:	90                   	nop

0000000000000240 <listLength>:
 240:	8b 01                	mov    eax,DWORD PTR [rcx]
 242:	c3                   	ret
 243:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
 24a:	00 00 00 00 
 24e:	66 90                	xchg   ax,ax

0000000000000250 <listCopy>:
 250:	55                   	push   rbp
 251:	57                   	push   rdi
 252:	56                   	push   rsi
 253:	53                   	push   rbx
 254:	48 83 ec 38          	sub    rsp,0x38
 258:	48 89 cb             	mov    rbx,rcx
 25b:	b9 18 00 00 00       	mov    ecx,0x18
 260:	e8 00 00 00 00       	call   265 <listCopy+0x15>
 265:	48 85 c0             	test   rax,rax
 268:	48 89 c5             	mov    rbp,rax
 26b:	0f 84 9a 00 00 00    	je     30b <listCopy+0xbb>
 271:	8b 3b                	mov    edi,DWORD PTR [rbx]
 273:	85 ff                	test   edi,edi
 275:	89 38                	mov    DWORD PTR [rax],edi
 277:	75 17                	jne    290 <listCopy+0x40>
 279:	66 0f ef c0          	pxor   xmm0,xmm0
 27d:	0f 11 40 08          	movups XMMWORD PTR [rax+0x8],xmm0
 281:	48 89 e8             	mov    rax,rbp
 284:	48 83 c4 38          	add    rsp,0x38
 288:	5b                   	pop    rbx
 289:	5e                   	pop    rsi
 28a:	5f                   	pop    rdi
 28b:	5d                   	pop    rbp
 28c:	c3                   	ret
 28d:	0f 1f 00             	nop    DWORD PTR [rax]
 290:	48 8b 5b 08          	mov    rbx,QWORD PTR [rbx+0x8]
 294:	83 ef 01             	sub    edi,0x1
 297:	e8 00 00 00 00       	call   29c <listCopy+0x4c>
 29c:	48 85 c0             	test   rax,rax
 29f:	74 62                	je     303 <listCopy+0xb3>
 2a1:	48 8b 13             	mov    rdx,QWORD PTR [rbx]
 2a4:	85 ff                	test   edi,edi
 2a6:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
 2ad:	00 
 2ae:	48 8b 73 10          	mov    rsi,QWORD PTR [rbx+0x10]
 2b2:	48 89 10             	mov    QWORD PTR [rax],rdx
 2b5:	48 89 45 08          	mov    QWORD PTR [rbp+0x8],rax
 2b9:	7e 65                	jle    320 <listCopy+0xd0>
 2bb:	31 db                	xor    ebx,ebx
 2bd:	eb 18                	jmp    2d7 <listCopy+0x87>
 2bf:	90                   	nop
 2c0:	f3 0f 7e 06          	movq   xmm0,QWORD PTR [rsi]
 2c4:	83 c3 01             	add    ebx,0x1
 2c7:	39 df                	cmp    edi,ebx
 2c9:	0f 16 44 24 28       	movhps xmm0,QWORD PTR [rsp+0x28]
 2ce:	0f 11 00             	movups XMMWORD PTR [rax],xmm0
 2d1:	48 8b 76 10          	mov    rsi,QWORD PTR [rsi+0x10]
 2d5:	74 49                	je     320 <listCopy+0xd0>
 2d7:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
 2dc:	e8 00 00 00 00       	call   2e1 <listCopy+0x91>
 2e1:	48 85 c0             	test   rax,rax
 2e4:	75 da                	jne    2c0 <listCopy+0x70>
 2e6:	85 db                	test   ebx,ebx
 2e8:	48 8b 75 08          	mov    rsi,QWORD PTR [rbp+0x8]
 2ec:	74 15                	je     303 <listCopy+0xb3>
 2ee:	31 ff                	xor    edi,edi
 2f0:	48 89 f1             	mov    rcx,rsi
 2f3:	83 c7 01             	add    edi,0x1
 2f6:	48 8b 76 10          	mov    rsi,QWORD PTR [rsi+0x10]
 2fa:	e8 00 00 00 00       	call   2ff <listCopy+0xaf>
 2ff:	39 df                	cmp    edi,ebx
 301:	75 ed                	jne    2f0 <listCopy+0xa0>
 303:	48 89 e9             	mov    rcx,rbp
 306:	e8 00 00 00 00       	call   30b <listCopy+0xbb>
 30b:	31 ed                	xor    ebp,ebp
 30d:	48 89 e8             	mov    rax,rbp
 310:	48 83 c4 38          	add    rsp,0x38
 314:	5b                   	pop    rbx
 315:	5e                   	pop    rsi
 316:	5f                   	pop    rdi
 317:	5d                   	pop    rbp
 318:	c3                   	ret
 319:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
 320:	48 89 45 10          	mov    QWORD PTR [rbp+0x10],rax
 324:	48 89 e8             	mov    rax,rbp
 327:	48 83 c4 38          	add    rsp,0x38
 32b:	5b                   	pop    rbx
 32c:	5e                   	pop    rsi
 32d:	5f                   	pop    rdi
 32e:	5d                   	pop    rbp
 32f:	c3                   	ret

Disassembly of section .xdata:

0000000000000000 <.xdata>:
   0:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   3:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
   6:	00 00                	add    BYTE PTR [rax],al
   8:	01 07                	add    DWORD PTR [rdi],eax
   a:	04 00                	add    al,0x0
   c:	07                   	(bad)
   d:	32 03                	xor    al,BYTE PTR [rbx]
   f:	30 02                	xor    BYTE PTR [rdx],al
  11:	60                   	(bad)
  12:	01 70 01             	add    DWORD PTR [rax+0x1],esi
  15:	06                   	(bad)
  16:	03 00                	add    eax,DWORD PTR [rax]
  18:	06                   	(bad)
  19:	42 02 30             	rex.X add sil,BYTE PTR [rax]
  1c:	01 60 00             	add    DWORD PTR [rax+0x0],esp
  1f:	00 01                	add    BYTE PTR [rcx],al
  21:	07                   	(bad)
  22:	04 00                	add    al,0x0
  24:	07                   	(bad)
  25:	32 03                	xor    al,BYTE PTR [rbx]
  27:	30 02                	xor    BYTE PTR [rdx],al
  29:	60                   	(bad)
  2a:	01 70 01             	add    DWORD PTR [rax+0x1],esi
  2d:	00 00                	add    BYTE PTR [rax],al
  2f:	00 01                	add    BYTE PTR [rcx],al
  31:	00 00                	add    BYTE PTR [rax],al
  33:	00 01                	add    BYTE PTR [rcx],al
  35:	04 01                	add    al,0x1
  37:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
  3a:	00 00                	add    BYTE PTR [rax],al
  3c:	01 05 02 00 05 32    	add    DWORD PTR [rip+0x32050002],eax        # 32050044 <listCopy+0x3204fdf4>
  42:	01 30                	add    DWORD PTR [rax],esi
  44:	01 00                	add    DWORD PTR [rax],eax
  46:	00 00                	add    BYTE PTR [rax],al
  48:	01 08                	add    DWORD PTR [rax],ecx
  4a:	05 00 08 62 04       	add    eax,0x4620800
  4f:	30 03                	xor    BYTE PTR [rbx],al
  51:	60                   	(bad)
  52:	02 70 01             	add    dh,BYTE PTR [rax+0x1]
  55:	50                   	push   rax
	...

Disassembly of section .pdata:

0000000000000000 <.pdata>:
   0:	00 00                	add    BYTE PTR [rax],al
   2:	00 00                	add    BYTE PTR [rax],al
   4:	26 00 00             	es add BYTE PTR [rax],al
   7:	00 00                	add    BYTE PTR [rax],al
   9:	00 00                	add    BYTE PTR [rax],al
   b:	00 30                	add    BYTE PTR [rax],dh
   d:	00 00                	add    BYTE PTR [rax],al
   f:	00 80 00 00 00 08    	add    BYTE PTR [rax+0x8000000],al
  15:	00 00                	add    BYTE PTR [rax],al
  17:	00 80 00 00 00 f7    	add    BYTE PTR [rax-0x9000000],al
  1d:	00 00                	add    BYTE PTR [rax],al
  1f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  22:	00 00                	add    BYTE PTR [rax],al
  24:	00 01                	add    BYTE PTR [rcx],al
  26:	00 00                	add    BYTE PTR [rax],al
  28:	81 01 00 00 20 00    	add    DWORD PTR [rcx],0x200000
  2e:	00 00                	add    BYTE PTR [rax],al
  30:	90                   	nop
  31:	01 00                	add    DWORD PTR [rax],eax
  33:	00 b9 01 00 00 2c    	add    BYTE PTR [rcx+0x2c000001],bh
  39:	00 00                	add    BYTE PTR [rax],al
  3b:	00 c0                	add    al,al
  3d:	01 00                	add    DWORD PTR [rax],eax
  3f:	00 e5                	add    ch,ah
  41:	01 00                	add    DWORD PTR [rax],eax
  43:	00 30                	add    BYTE PTR [rax],dh
  45:	00 00                	add    BYTE PTR [rax],al
  47:	00 f0                	add    al,dh
  49:	01 00                	add    DWORD PTR [rax],eax
  4b:	00 06                	add    BYTE PTR [rsi],al
  4d:	02 00                	add    al,BYTE PTR [rax]
  4f:	00 34 00             	add    BYTE PTR [rax+rax*1],dh
  52:	00 00                	add    BYTE PTR [rax],al
  54:	10 02                	adc    BYTE PTR [rdx],al
  56:	00 00                	add    BYTE PTR [rax],al
  58:	34 02                	xor    al,0x2
  5a:	00 00                	add    BYTE PTR [rax],al
  5c:	3c 00                	cmp    al,0x0
  5e:	00 00                	add    BYTE PTR [rax],al
  60:	40 02 00             	rex add al,BYTE PTR [rax]
  63:	00 43 02             	add    BYTE PTR [rbx+0x2],al
  66:	00 00                	add    BYTE PTR [rax],al
  68:	44 00 00             	add    BYTE PTR [rax],r8b
  6b:	00 50 02             	add    BYTE PTR [rax+0x2],dl
  6e:	00 00                	add    BYTE PTR [rax],al
  70:	30 03                	xor    BYTE PTR [rbx],al
  72:	00 00                	add    BYTE PTR [rax],al
  74:	48 00 00             	rex.W add BYTE PTR [rax],al
	...

Disassembly of section .rdata$zzz:

0000000000000000 <.rdata$zzz>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 78 38             	sub    BYTE PTR [rax+0x38],bh
   8:	36 5f                	ss pop rdi
   a:	36 34 2d             	ss xor al,0x2d
   d:	77 69                	ja     78 <listDelete+0x48>
   f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  10:	33 32                	xor    esi,DWORD PTR [rdx]
  12:	2d 73 65 68 2d       	sub    eax,0x2d686573
  17:	72 65                	jb     7e <listDelete+0x4e>
  19:	76 31                	jbe    4c <.rdata$zzz+0x4c>
  1b:	2c 20                	sub    al,0x20
  1d:	42 75 69             	rex.X jne 89 <listAdd+0x9>
  20:	6c                   	ins    BYTE PTR es:[rdi],dx
  21:	74 20                	je     43 <.rdata$zzz+0x43>
  23:	62                   	(bad)
  24:	79 20                	jns    46 <.rdata$zzz+0x46>
  26:	4d 69 6e 47 57 2d 42 	imul   r13,QWORD PTR [r14+0x47],0x75422d57
  2d:	75 
  2e:	69 6c 64 73 20 70 72 	imul   ebp,DWORD PTR [rsp+riz*2+0x73],0x6f727020
  35:	6f 
  36:	6a 65                	push   0x65
  38:	63 74 29 20          	movsxd esi,DWORD PTR [rcx+rbp*1+0x20]
  3c:	31 33                	xor    DWORD PTR [rbx],esi
  3e:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  41:	30 00                	xor    BYTE PTR [rax],al
	...

list_base.o:     file format pe-x86-64


Disassembly of section .text:

0000000000000000 <listIndexConvert>:
   0:	89 c8                	mov    eax,ecx
   2:	f7 d0                	not    eax
   4:	c3                   	ret
   5:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   c:	00 00 00 00 

0000000000000010 <listIndexConvertP>:
  10:	89 c8                	mov    eax,ecx
  12:	c1 f8 1f             	sar    eax,0x1f
  15:	31 c8                	xor    eax,ecx
  17:	c3                   	ret
  18:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  1f:	00 

0000000000000020 <listIndexConvertN>:
  20:	89 c8                	mov    eax,ecx
  22:	c1 f8 1f             	sar    eax,0x1f
  25:	31 c8                	xor    eax,ecx
  27:	f7 d0                	not    eax
  29:	c3                   	ret
  2a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000000030 <listIndexRange>:
  30:	8b 01                	mov    eax,DWORD PTR [rcx]
  32:	89 c1                	mov    ecx,eax
  34:	f7 d1                	not    ecx
  36:	39 d1                	cmp    ecx,edx
  38:	0f 9c c1             	setl   cl
  3b:	39 d0                	cmp    eax,edx
  3d:	0f 9f c0             	setg   al
  40:	0f b6 c0             	movzx  eax,al
  43:	21 c8                	and    eax,ecx
  45:	c3                   	ret
  46:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  4d:	00 00 00 

0000000000000050 <listIsBegin>:
  50:	89 d0                	mov    eax,edx
  52:	c1 f8 1f             	sar    eax,0x1f
  55:	39 d0                	cmp    eax,edx
  57:	0f 94 c0             	sete   al
  5a:	0f b6 c0             	movzx  eax,al
  5d:	c3                   	ret
  5e:	66 90                	xchg   ax,ax

0000000000000060 <listIsEnd>:
  60:	48 89 c8             	mov    rax,rcx
  63:	89 d1                	mov    ecx,edx
  65:	8b 10                	mov    edx,DWORD PTR [rax]
  67:	89 c8                	mov    eax,ecx
  69:	c1 f8 1f             	sar    eax,0x1f
  6c:	31 c8                	xor    eax,ecx
  6e:	83 ea 01             	sub    edx,0x1
  71:	39 c2                	cmp    edx,eax
  73:	0f 94 c0             	sete   al
  76:	0f b6 c0             	movzx  eax,al
  79:	c3                   	ret
  7a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000000080 <listNodeCreate>:
  80:	b9 18 00 00 00       	mov    ecx,0x18
  85:	e9 00 00 00 00       	jmp    8a <listNodeCreate+0xa>
  8a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000000090 <listAccess>:
  90:	8b 01                	mov    eax,DWORD PTR [rcx]
  92:	41 89 c0             	mov    r8d,eax
  95:	41 f7 d0             	not    r8d
  98:	44 39 c2             	cmp    edx,r8d
  9b:	7e 04                	jle    a1 <listAccess+0x11>
  9d:	39 c2                	cmp    edx,eax
  9f:	7c 07                	jl     a8 <listAccess+0x18>
  a1:	31 c0                	xor    eax,eax
  a3:	c3                   	ret
  a4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
  a8:	85 d2                	test   edx,edx
  aa:	78 34                	js     e0 <listAccess+0x50>
  ac:	48 8b 41 08          	mov    rax,QWORD PTR [rcx+0x8]
  b0:	74 f1                	je     a3 <listAccess+0x13>
  b2:	8d 4a ff             	lea    ecx,[rdx-0x1]
  b5:	f6 c2 01             	test   dl,0x1
  b8:	74 0e                	je     c8 <listAccess+0x38>
  ba:	85 c9                	test   ecx,ecx
  bc:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
  c0:	89 ca                	mov    edx,ecx
  c2:	74 df                	je     a3 <listAccess+0x13>
  c4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
  c8:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
  cc:	83 ea 02             	sub    edx,0x2
  cf:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
  d3:	75 f3                	jne    c8 <listAccess+0x38>
  d5:	c3                   	ret
  d6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
  dd:	00 00 00 
  e0:	83 fa ff             	cmp    edx,0xffffffff
  e3:	48 8b 41 10          	mov    rax,QWORD PTR [rcx+0x10]
  e7:	74 ba                	je     a3 <listAccess+0x13>
  e9:	8d 4a 01             	lea    ecx,[rdx+0x1]
  ec:	f6 c2 01             	test   dl,0x1
  ef:	75 0f                	jne    100 <listAccess+0x70>
  f1:	83 f9 ff             	cmp    ecx,0xffffffff
  f4:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  f8:	89 ca                	mov    edx,ecx
  fa:	74 a7                	je     a3 <listAccess+0x13>
  fc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
 100:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 104:	83 c2 02             	add    edx,0x2
 107:	83 fa ff             	cmp    edx,0xffffffff
 10a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 10e:	74 93                	je     a3 <listAccess+0x13>
 110:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 114:	83 c2 02             	add    edx,0x2
 117:	83 fa ff             	cmp    edx,0xffffffff
 11a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
 11e:	75 e0                	jne    100 <listAccess+0x70>
 120:	eb 81                	jmp    a3 <listAccess+0x13>
 122:	90                   	nop
 123:	90                   	nop
 124:	90                   	nop
 125:	90                   	nop
 126:	90                   	nop
 127:	90                   	nop
 128:	90                   	nop
 129:	90                   	nop
 12a:	90                   	nop
 12b:	90                   	nop
 12c:	90                   	nop
 12d:	90                   	nop
 12e:	90                   	nop
 12f:	90                   	nop

Disassembly of section .xdata:

0000000000000000 <.xdata>:
   0:	01 00                	add    DWORD PTR [rax],eax
   2:	00 00                	add    BYTE PTR [rax],al
   4:	01 00                	add    DWORD PTR [rax],eax
   6:	00 00                	add    BYTE PTR [rax],al
   8:	01 00                	add    DWORD PTR [rax],eax
   a:	00 00                	add    BYTE PTR [rax],al
   c:	01 00                	add    DWORD PTR [rax],eax
   e:	00 00                	add    BYTE PTR [rax],al
  10:	01 00                	add    DWORD PTR [rax],eax
  12:	00 00                	add    BYTE PTR [rax],al
  14:	01 00                	add    DWORD PTR [rax],eax
  16:	00 00                	add    BYTE PTR [rax],al
  18:	01 00                	add    DWORD PTR [rax],eax
  1a:	00 00                	add    BYTE PTR [rax],al
  1c:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .pdata:

0000000000000000 <.pdata>:
   0:	00 00                	add    BYTE PTR [rax],al
   2:	00 00                	add    BYTE PTR [rax],al
   4:	05 00 00 00 00       	add    eax,0x0
   9:	00 00                	add    BYTE PTR [rax],al
   b:	00 10                	add    BYTE PTR [rax],dl
   d:	00 00                	add    BYTE PTR [rax],al
   f:	00 18                	add    BYTE PTR [rax],bl
  11:	00 00                	add    BYTE PTR [rax],al
  13:	00 04 00             	add    BYTE PTR [rax+rax*1],al
  16:	00 00                	add    BYTE PTR [rax],al
  18:	20 00                	and    BYTE PTR [rax],al
  1a:	00 00                	add    BYTE PTR [rax],al
  1c:	2a 00                	sub    al,BYTE PTR [rax]
  1e:	00 00                	add    BYTE PTR [rax],al
  20:	08 00                	or     BYTE PTR [rax],al
  22:	00 00                	add    BYTE PTR [rax],al
  24:	30 00                	xor    BYTE PTR [rax],al
  26:	00 00                	add    BYTE PTR [rax],al
  28:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
  2b:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
  2e:	00 00                	add    BYTE PTR [rax],al
  30:	50                   	push   rax
  31:	00 00                	add    BYTE PTR [rax],al
  33:	00 5e 00             	add    BYTE PTR [rsi+0x0],bl
  36:	00 00                	add    BYTE PTR [rax],al
  38:	10 00                	adc    BYTE PTR [rax],al
  3a:	00 00                	add    BYTE PTR [rax],al
  3c:	60                   	(bad)
  3d:	00 00                	add    BYTE PTR [rax],al
  3f:	00 7a 00             	add    BYTE PTR [rdx+0x0],bh
  42:	00 00                	add    BYTE PTR [rax],al
  44:	14 00                	adc    al,0x0
  46:	00 00                	add    BYTE PTR [rax],al
  48:	80 00 00             	add    BYTE PTR [rax],0x0
  4b:	00 8a 00 00 00 18    	add    BYTE PTR [rdx+0x18000000],cl
  51:	00 00                	add    BYTE PTR [rax],al
  53:	00 90 00 00 00 22    	add    BYTE PTR [rax+0x22000000],dl
  59:	01 00                	add    DWORD PTR [rax],eax
  5b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...

Disassembly of section .rdata$zzz:

0000000000000000 <.rdata$zzz>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 78 38             	sub    BYTE PTR [rax+0x38],bh
   8:	36 5f                	ss pop rdi
   a:	36 34 2d             	ss xor al,0x2d
   d:	77 69                	ja     78 <listIsEnd+0x18>
   f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  10:	33 32                	xor    esi,DWORD PTR [rdx]
  12:	2d 73 65 68 2d       	sub    eax,0x2d686573
  17:	72 65                	jb     7e <listIsEnd+0x1e>
  19:	76 31                	jbe    4c <.rdata$zzz+0x4c>
  1b:	2c 20                	sub    al,0x20
  1d:	42 75 69             	rex.X jne 89 <listNodeCreate+0x9>
  20:	6c                   	ins    BYTE PTR es:[rdi],dx
  21:	74 20                	je     43 <.rdata$zzz+0x43>
  23:	62                   	(bad)
  24:	79 20                	jns    46 <.rdata$zzz+0x46>
  26:	4d 69 6e 47 57 2d 42 	imul   r13,QWORD PTR [r14+0x47],0x75422d57
  2d:	75 
  2e:	69 6c 64 73 20 70 72 	imul   ebp,DWORD PTR [rsp+riz*2+0x73],0x6f727020
  35:	6f 
  36:	6a 65                	push   0x65
  38:	63 74 29 20          	movsxd esi,DWORD PTR [rcx+rbp*1+0x20]
  3c:	31 33                	xor    DWORD PTR [rbx],esi
  3e:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
  41:	30 00                	xor    BYTE PTR [rax],al
	...
