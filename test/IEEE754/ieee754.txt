
ieee754.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <__mingw_invalidParameterHandler>:
   140001000:	c3                   	ret
   140001001:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   140001008:	00 00 00 00 
   14000100c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000140001010 <pre_c_init>:
   140001010:	48 83 ec 28          	sub    rsp,0x28
   140001014:	48 8b 05 35 44 00 00 	mov    rax,QWORD PTR [rip+0x4435]        # 140005450 <.refptr.__mingw_initltsdrot_force>
   14000101b:	31 c9                	xor    ecx,ecx
   14000101d:	c7 00 01 00 00 00    	mov    DWORD PTR [rax],0x1
   140001023:	48 8b 05 36 44 00 00 	mov    rax,QWORD PTR [rip+0x4436]        # 140005460 <.refptr.__mingw_initltsdyn_force>
   14000102a:	c7 00 01 00 00 00    	mov    DWORD PTR [rax],0x1
   140001030:	48 8b 05 39 44 00 00 	mov    rax,QWORD PTR [rip+0x4439]        # 140005470 <.refptr.__mingw_initltssuo_force>
   140001037:	c7 00 01 00 00 00    	mov    DWORD PTR [rax],0x1
   14000103d:	48 8b 05 ac 43 00 00 	mov    rax,QWORD PTR [rip+0x43ac]        # 1400053f0 <.refptr.__image_base__>
   140001044:	66 81 38 4d 5a       	cmp    WORD PTR [rax],0x5a4d
   140001049:	75 0f                	jne    14000105a <pre_c_init+0x4a>
   14000104b:	48 63 50 3c          	movsxd rdx,DWORD PTR [rax+0x3c]
   14000104f:	48 01 d0             	add    rax,rdx
   140001052:	81 38 50 45 00 00    	cmp    DWORD PTR [rax],0x4550
   140001058:	74 66                	je     1400010c0 <pre_c_init+0xb0>
   14000105a:	48 8b 05 df 43 00 00 	mov    rax,QWORD PTR [rip+0x43df]        # 140005440 <.refptr.__mingw_app_type>
   140001061:	89 0d a5 6f 00 00    	mov    DWORD PTR [rip+0x6fa5],ecx        # 14000800c <managedapp>
   140001067:	8b 00                	mov    eax,DWORD PTR [rax]
   140001069:	85 c0                	test   eax,eax
   14000106b:	74 43                	je     1400010b0 <pre_c_init+0xa0>
   14000106d:	b9 02 00 00 00       	mov    ecx,0x2
   140001072:	e8 41 1f 00 00       	call   140002fb8 <__set_app_type>
   140001077:	e8 c4 1e 00 00       	call   140002f40 <__p__fmode>
   14000107c:	48 8b 15 9d 44 00 00 	mov    rdx,QWORD PTR [rip+0x449d]        # 140005520 <.refptr._fmode>
   140001083:	8b 12                	mov    edx,DWORD PTR [rdx]
   140001085:	89 10                	mov    DWORD PTR [rax],edx
   140001087:	e8 ac 1e 00 00       	call   140002f38 <__p__commode>
   14000108c:	48 8b 15 6d 44 00 00 	mov    rdx,QWORD PTR [rip+0x446d]        # 140005500 <.refptr._commode>
   140001093:	8b 12                	mov    edx,DWORD PTR [rdx]
   140001095:	89 10                	mov    DWORD PTR [rax],edx
   140001097:	e8 94 0b 00 00       	call   140001c30 <_setargv>
   14000109c:	48 8b 05 fd 42 00 00 	mov    rax,QWORD PTR [rip+0x42fd]        # 1400053a0 <.refptr._MINGW_INSTALL_DEBUG_MATHERR>
   1400010a3:	83 38 01             	cmp    DWORD PTR [rax],0x1
   1400010a6:	74 50                	je     1400010f8 <pre_c_init+0xe8>
   1400010a8:	31 c0                	xor    eax,eax
   1400010aa:	48 83 c4 28          	add    rsp,0x28
   1400010ae:	c3                   	ret
   1400010af:	90                   	nop
   1400010b0:	b9 01 00 00 00       	mov    ecx,0x1
   1400010b5:	e8 fe 1e 00 00       	call   140002fb8 <__set_app_type>
   1400010ba:	eb bb                	jmp    140001077 <pre_c_init+0x67>
   1400010bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   1400010c0:	0f b7 50 18          	movzx  edx,WORD PTR [rax+0x18]
   1400010c4:	66 81 fa 0b 01       	cmp    dx,0x10b
   1400010c9:	74 45                	je     140001110 <pre_c_init+0x100>
   1400010cb:	66 81 fa 0b 02       	cmp    dx,0x20b
   1400010d0:	75 88                	jne    14000105a <pre_c_init+0x4a>
   1400010d2:	83 b8 84 00 00 00 0e 	cmp    DWORD PTR [rax+0x84],0xe
   1400010d9:	0f 86 7b ff ff ff    	jbe    14000105a <pre_c_init+0x4a>
   1400010df:	8b 90 f8 00 00 00    	mov    edx,DWORD PTR [rax+0xf8]
   1400010e5:	31 c9                	xor    ecx,ecx
   1400010e7:	85 d2                	test   edx,edx
   1400010e9:	0f 95 c1             	setne  cl
   1400010ec:	e9 69 ff ff ff       	jmp    14000105a <pre_c_init+0x4a>
   1400010f1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   1400010f8:	48 8b 0d 41 44 00 00 	mov    rcx,QWORD PTR [rip+0x4441]        # 140005540 <.refptr._matherr>
   1400010ff:	e8 9c 12 00 00       	call   1400023a0 <__mingw_setusermatherr>
   140001104:	31 c0                	xor    eax,eax
   140001106:	48 83 c4 28          	add    rsp,0x28
   14000110a:	c3                   	ret
   14000110b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140001110:	83 78 74 0e          	cmp    DWORD PTR [rax+0x74],0xe
   140001114:	0f 86 40 ff ff ff    	jbe    14000105a <pre_c_init+0x4a>
   14000111a:	44 8b 80 e8 00 00 00 	mov    r8d,DWORD PTR [rax+0xe8]
   140001121:	31 c9                	xor    ecx,ecx
   140001123:	45 85 c0             	test   r8d,r8d
   140001126:	0f 95 c1             	setne  cl
   140001129:	e9 2c ff ff ff       	jmp    14000105a <pre_c_init+0x4a>
   14000112e:	66 90                	xchg   ax,ax

0000000140001130 <pre_cpp_init>:
   140001130:	48 83 ec 38          	sub    rsp,0x38
   140001134:	48 8b 05 15 44 00 00 	mov    rax,QWORD PTR [rip+0x4415]        # 140005550 <.refptr._newmode>
   14000113b:	4c 8d 05 d6 6e 00 00 	lea    r8,[rip+0x6ed6]        # 140008018 <envp>
   140001142:	48 8d 15 d7 6e 00 00 	lea    rdx,[rip+0x6ed7]        # 140008020 <argv>
   140001149:	48 8d 0d d8 6e 00 00 	lea    rcx,[rip+0x6ed8]        # 140008028 <argc>
   140001150:	8b 00                	mov    eax,DWORD PTR [rax]
   140001152:	89 05 ac 6e 00 00    	mov    DWORD PTR [rip+0x6eac],eax        # 140008004 <startinfo>
   140001158:	48 8b 05 b1 43 00 00 	mov    rax,QWORD PTR [rip+0x43b1]        # 140005510 <.refptr._dowildcard>
   14000115f:	44 8b 08             	mov    r9d,DWORD PTR [rax]
   140001162:	48 8d 05 9b 6e 00 00 	lea    rax,[rip+0x6e9b]        # 140008004 <startinfo>
   140001169:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
   14000116e:	e8 6d 1b 00 00       	call   140002ce0 <__getmainargs>
   140001173:	90                   	nop
   140001174:	48 83 c4 38          	add    rsp,0x38
   140001178:	c3                   	ret
   140001179:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000140001180 <__tmainCRTStartup>:
   140001180:	41 54                	push   r12
   140001182:	55                   	push   rbp
   140001183:	57                   	push   rdi
   140001184:	56                   	push   rsi
   140001185:	53                   	push   rbx
   140001186:	48 83 ec 20          	sub    rsp,0x20
   14000118a:	48 8b 1d 0f 43 00 00 	mov    rbx,QWORD PTR [rip+0x430f]        # 1400054a0 <.refptr.__native_startup_lock>
   140001191:	31 ff                	xor    edi,edi
   140001193:	65 48 8b 04 25 30 00 	mov    rax,QWORD PTR gs:0x30
   14000119a:	00 00 
   14000119c:	48 8b 2d 1d 81 00 00 	mov    rbp,QWORD PTR [rip+0x811d]        # 1400092c0 <__imp_Sleep>
   1400011a3:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
   1400011a7:	eb 17                	jmp    1400011c0 <__tmainCRTStartup+0x40>
   1400011a9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   1400011b0:	48 39 c6             	cmp    rsi,rax
   1400011b3:	0f 84 67 01 00 00    	je     140001320 <__tmainCRTStartup+0x1a0>
   1400011b9:	b9 e8 03 00 00       	mov    ecx,0x3e8
   1400011be:	ff d5                	call   rbp
   1400011c0:	48 89 f8             	mov    rax,rdi
   1400011c3:	f0 48 0f b1 33       	lock cmpxchg QWORD PTR [rbx],rsi
   1400011c8:	48 85 c0             	test   rax,rax
   1400011cb:	75 e3                	jne    1400011b0 <__tmainCRTStartup+0x30>
   1400011cd:	48 8b 35 dc 42 00 00 	mov    rsi,QWORD PTR [rip+0x42dc]        # 1400054b0 <.refptr.__native_startup_state>
   1400011d4:	31 ff                	xor    edi,edi
   1400011d6:	8b 06                	mov    eax,DWORD PTR [rsi]
   1400011d8:	83 f8 01             	cmp    eax,0x1
   1400011db:	0f 84 56 01 00 00    	je     140001337 <__tmainCRTStartup+0x1b7>
   1400011e1:	8b 06                	mov    eax,DWORD PTR [rsi]
   1400011e3:	85 c0                	test   eax,eax
   1400011e5:	0f 84 b5 01 00 00    	je     1400013a0 <__tmainCRTStartup+0x220>
   1400011eb:	c7 05 13 6e 00 00 01 	mov    DWORD PTR [rip+0x6e13],0x1        # 140008008 <has_cctor>
   1400011f2:	00 00 00 
   1400011f5:	8b 06                	mov    eax,DWORD PTR [rsi]
   1400011f7:	83 f8 01             	cmp    eax,0x1
   1400011fa:	0f 84 4c 01 00 00    	je     14000134c <__tmainCRTStartup+0x1cc>
   140001200:	85 ff                	test   edi,edi
   140001202:	0f 84 65 01 00 00    	je     14000136d <__tmainCRTStartup+0x1ed>
   140001208:	48 8b 05 d1 41 00 00 	mov    rax,QWORD PTR [rip+0x41d1]        # 1400053e0 <.refptr.__dyn_tls_init_callback>
   14000120f:	48 8b 00             	mov    rax,QWORD PTR [rax]
   140001212:	48 85 c0             	test   rax,rax
   140001215:	74 0c                	je     140001223 <__tmainCRTStartup+0xa3>
   140001217:	45 31 c0             	xor    r8d,r8d
   14000121a:	ba 02 00 00 00       	mov    edx,0x2
   14000121f:	31 c9                	xor    ecx,ecx
   140001221:	ff d0                	call   rax
   140001223:	e8 d8 0d 00 00       	call   140002000 <_pei386_runtime_relocator>
   140001228:	48 8b 0d 01 43 00 00 	mov    rcx,QWORD PTR [rip+0x4301]        # 140005530 <.refptr._gnu_exception_handler>
   14000122f:	ff 15 83 80 00 00    	call   QWORD PTR [rip+0x8083]        # 1400092b8 <__imp_SetUnhandledExceptionFilter>
   140001235:	48 8b 15 54 42 00 00 	mov    rdx,QWORD PTR [rip+0x4254]        # 140005490 <.refptr.__mingw_oldexcpt_handler>
   14000123c:	48 8d 0d bd fd ff ff 	lea    rcx,[rip+0xfffffffffffffdbd]        # 140001000 <__mingw_invalidParameterHandler>
   140001243:	48 89 02             	mov    QWORD PTR [rdx],rax
   140001246:	e8 75 1d 00 00       	call   140002fc0 <_set_invalid_parameter_handler>
   14000124b:	e8 c0 0b 00 00       	call   140001e10 <_fpreset>
   140001250:	8b 1d d2 6d 00 00    	mov    ebx,DWORD PTR [rip+0x6dd2]        # 140008028 <argc>
   140001256:	8d 7b 01             	lea    edi,[rbx+0x1]
   140001259:	48 63 ff             	movsxd rdi,edi
   14000125c:	48 c1 e7 03          	shl    rdi,0x3
   140001260:	48 89 f9             	mov    rcx,rdi
   140001263:	e8 b0 1d 00 00       	call   140003018 <malloc>
   140001268:	85 db                	test   ebx,ebx
   14000126a:	48 8b 2d af 6d 00 00 	mov    rbp,QWORD PTR [rip+0x6daf]        # 140008020 <argv>
   140001271:	49 89 c4             	mov    r12,rax
   140001274:	0f 8e 46 01 00 00    	jle    1400013c0 <__tmainCRTStartup+0x240>
   14000127a:	48 83 ef 08          	sub    rdi,0x8
   14000127e:	31 db                	xor    ebx,ebx
   140001280:	48 8b 4c 1d 00       	mov    rcx,QWORD PTR [rbp+rbx*1+0x0]
   140001285:	e8 96 1c 00 00       	call   140002f20 <strlen>
   14000128a:	48 8d 70 01          	lea    rsi,[rax+0x1]
   14000128e:	48 89 f1             	mov    rcx,rsi
   140001291:	e8 82 1d 00 00       	call   140003018 <malloc>
   140001296:	49 89 f0             	mov    r8,rsi
   140001299:	49 89 04 1c          	mov    QWORD PTR [r12+rbx*1],rax
   14000129d:	48 8b 54 1d 00       	mov    rdx,QWORD PTR [rbp+rbx*1+0x0]
   1400012a2:	48 89 c1             	mov    rcx,rax
   1400012a5:	48 83 c3 08          	add    rbx,0x8
   1400012a9:	e8 3a 1d 00 00       	call   140002fe8 <memcpy>
   1400012ae:	48 39 df             	cmp    rdi,rbx
   1400012b1:	75 cd                	jne    140001280 <__tmainCRTStartup+0x100>
   1400012b3:	4c 01 e7             	add    rdi,r12
   1400012b6:	48 c7 07 00 00 00 00 	mov    QWORD PTR [rdi],0x0
   1400012bd:	4c 89 25 5c 6d 00 00 	mov    QWORD PTR [rip+0x6d5c],r12        # 140008020 <argv>
   1400012c4:	e8 47 09 00 00       	call   140001c10 <__main>
   1400012c9:	48 8b 05 30 41 00 00 	mov    rax,QWORD PTR [rip+0x4130]        # 140005400 <.refptr.__imp___initenv>
   1400012d0:	4c 8b 05 41 6d 00 00 	mov    r8,QWORD PTR [rip+0x6d41]        # 140008018 <envp>
   1400012d7:	8b 0d 4b 6d 00 00    	mov    ecx,DWORD PTR [rip+0x6d4b]        # 140008028 <argc>
   1400012dd:	48 8b 00             	mov    rax,QWORD PTR [rax]
   1400012e0:	4c 89 00             	mov    QWORD PTR [rax],r8
   1400012e3:	48 8b 15 36 6d 00 00 	mov    rdx,QWORD PTR [rip+0x6d36]        # 140008020 <argv>
   1400012ea:	e8 61 01 00 00       	call   140001450 <main>
   1400012ef:	8b 0d 17 6d 00 00    	mov    ecx,DWORD PTR [rip+0x6d17]        # 14000800c <managedapp>
   1400012f5:	89 05 15 6d 00 00    	mov    DWORD PTR [rip+0x6d15],eax        # 140008010 <mainret>
   1400012fb:	85 c9                	test   ecx,ecx
   1400012fd:	0f 84 c5 00 00 00    	je     1400013c8 <__tmainCRTStartup+0x248>
   140001303:	8b 15 ff 6c 00 00    	mov    edx,DWORD PTR [rip+0x6cff]        # 140008008 <has_cctor>
   140001309:	85 d2                	test   edx,edx
   14000130b:	74 73                	je     140001380 <__tmainCRTStartup+0x200>
   14000130d:	48 83 c4 20          	add    rsp,0x20
   140001311:	5b                   	pop    rbx
   140001312:	5e                   	pop    rsi
   140001313:	5f                   	pop    rdi
   140001314:	5d                   	pop    rbp
   140001315:	41 5c                	pop    r12
   140001317:	c3                   	ret
   140001318:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   14000131f:	00 
   140001320:	48 8b 35 89 41 00 00 	mov    rsi,QWORD PTR [rip+0x4189]        # 1400054b0 <.refptr.__native_startup_state>
   140001327:	bf 01 00 00 00       	mov    edi,0x1
   14000132c:	8b 06                	mov    eax,DWORD PTR [rsi]
   14000132e:	83 f8 01             	cmp    eax,0x1
   140001331:	0f 85 aa fe ff ff    	jne    1400011e1 <__tmainCRTStartup+0x61>
   140001337:	b9 1f 00 00 00       	mov    ecx,0x1f
   14000133c:	e8 bf 1a 00 00       	call   140002e00 <_amsg_exit>
   140001341:	8b 06                	mov    eax,DWORD PTR [rsi]
   140001343:	83 f8 01             	cmp    eax,0x1
   140001346:	0f 85 b4 fe ff ff    	jne    140001200 <__tmainCRTStartup+0x80>
   14000134c:	48 8b 15 7d 41 00 00 	mov    rdx,QWORD PTR [rip+0x417d]        # 1400054d0 <.refptr.__xc_z>
   140001353:	48 8b 0d 66 41 00 00 	mov    rcx,QWORD PTR [rip+0x4166]        # 1400054c0 <.refptr.__xc_a>
   14000135a:	e8 51 1c 00 00       	call   140002fb0 <_initterm>
   14000135f:	85 ff                	test   edi,edi
   140001361:	c7 06 02 00 00 00    	mov    DWORD PTR [rsi],0x2
   140001367:	0f 85 9b fe ff ff    	jne    140001208 <__tmainCRTStartup+0x88>
   14000136d:	31 c0                	xor    eax,eax
   14000136f:	48 87 03             	xchg   QWORD PTR [rbx],rax
   140001372:	e9 91 fe ff ff       	jmp    140001208 <__tmainCRTStartup+0x88>
   140001377:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   14000137e:	00 00 
   140001380:	e8 f3 1b 00 00       	call   140002f78 <_cexit>
   140001385:	8b 05 85 6c 00 00    	mov    eax,DWORD PTR [rip+0x6c85]        # 140008010 <mainret>
   14000138b:	48 83 c4 20          	add    rsp,0x20
   14000138f:	5b                   	pop    rbx
   140001390:	5e                   	pop    rsi
   140001391:	5f                   	pop    rdi
   140001392:	5d                   	pop    rbp
   140001393:	41 5c                	pop    r12
   140001395:	c3                   	ret
   140001396:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   14000139d:	00 00 00 
   1400013a0:	48 8b 15 49 41 00 00 	mov    rdx,QWORD PTR [rip+0x4149]        # 1400054f0 <.refptr.__xi_z>
   1400013a7:	c7 06 01 00 00 00    	mov    DWORD PTR [rsi],0x1
   1400013ad:	48 8b 0d 2c 41 00 00 	mov    rcx,QWORD PTR [rip+0x412c]        # 1400054e0 <.refptr.__xi_a>
   1400013b4:	e8 f7 1b 00 00       	call   140002fb0 <_initterm>
   1400013b9:	e9 37 fe ff ff       	jmp    1400011f5 <__tmainCRTStartup+0x75>
   1400013be:	66 90                	xchg   ax,ax
   1400013c0:	48 89 c7             	mov    rdi,rax
   1400013c3:	e9 ee fe ff ff       	jmp    1400012b6 <__tmainCRTStartup+0x136>
   1400013c8:	89 c1                	mov    ecx,eax
   1400013ca:	e8 f1 13 00 00       	call   1400027c0 <exit>
   1400013cf:	90                   	nop

00000001400013d0 <WinMainCRTStartup>:
   1400013d0:	48 83 ec 28          	sub    rsp,0x28

00000001400013d4 <.l_startw>:
   1400013d4:	48 8b 05 65 40 00 00 	mov    rax,QWORD PTR [rip+0x4065]        # 140005440 <.refptr.__mingw_app_type>
   1400013db:	c7 00 01 00 00 00    	mov    DWORD PTR [rax],0x1
   1400013e1:	e8 9a fd ff ff       	call   140001180 <__tmainCRTStartup>
   1400013e6:	90                   	nop

00000001400013e7 <.l_endw>:
   1400013e7:	90                   	nop
   1400013e8:	48 83 c4 28          	add    rsp,0x28
   1400013ec:	c3                   	ret
   1400013ed:	0f 1f 00             	nop    DWORD PTR [rax]

00000001400013f0 <mainCRTStartup>:
   1400013f0:	48 83 ec 28          	sub    rsp,0x28

00000001400013f4 <.l_start>:
   1400013f4:	48 8b 05 45 40 00 00 	mov    rax,QWORD PTR [rip+0x4045]        # 140005440 <.refptr.__mingw_app_type>
   1400013fb:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
   140001401:	e8 7a fd ff ff       	call   140001180 <__tmainCRTStartup>
   140001406:	90                   	nop

0000000140001407 <.l_end>:
   140001407:	90                   	nop
   140001408:	48 83 c4 28          	add    rsp,0x28
   14000140c:	c3                   	ret
   14000140d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000140001410 <atexit>:
   140001410:	48 83 ec 28          	sub    rsp,0x28
   140001414:	e8 a7 19 00 00       	call   140002dc0 <_onexit>
   140001419:	48 83 f8 01          	cmp    rax,0x1
   14000141d:	19 c0                	sbb    eax,eax
   14000141f:	48 83 c4 28          	add    rsp,0x28
   140001423:	c3                   	ret
   140001424:	90                   	nop
   140001425:	90                   	nop
   140001426:	90                   	nop
   140001427:	90                   	nop
   140001428:	90                   	nop
   140001429:	90                   	nop
   14000142a:	90                   	nop
   14000142b:	90                   	nop
   14000142c:	90                   	nop
   14000142d:	90                   	nop
   14000142e:	90                   	nop
   14000142f:	90                   	nop

0000000140001430 <__gcc_register_frame>:
   140001430:	48 8d 0d 09 00 00 00 	lea    rcx,[rip+0x9]        # 140001440 <__gcc_deregister_frame>
   140001437:	e9 d4 ff ff ff       	jmp    140001410 <atexit>
   14000143c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000140001440 <__gcc_deregister_frame>:
   140001440:	c3                   	ret
   140001441:	90                   	nop
   140001442:	90                   	nop
   140001443:	90                   	nop
   140001444:	90                   	nop
   140001445:	90                   	nop
   140001446:	90                   	nop
   140001447:	90                   	nop
   140001448:	90                   	nop
   140001449:	90                   	nop
   14000144a:	90                   	nop
   14000144b:	90                   	nop
   14000144c:	90                   	nop
   14000144d:	90                   	nop
   14000144e:	90                   	nop
   14000144f:	90                   	nop

0000000140001450 <main>:
   140001450:	55                   	push   rbp
   140001451:	48 89 e5             	mov    rbp,rsp
   140001454:	48 81 ec b0 00 00 00 	sub    rsp,0xb0
   14000145b:	e8 b0 07 00 00       	call   140001c10 <__main>
   140001460:	48 8d 45 f4          	lea    rax,[rbp-0xc]
   140001464:	48 89 c1             	mov    rcx,rax
   140001467:	e8 f4 00 00 00       	call   140001560 <IEEE754Binary32Create>
   14000146c:	48 8d 45 e0          	lea    rax,[rbp-0x20]
   140001470:	48 89 c1             	mov    rcx,rax
   140001473:	e8 63 02 00 00       	call   1400016db <IEEE754Binary64Create>
   140001478:	48 8d 45 c0          	lea    rax,[rbp-0x40]
   14000147c:	48 89 c1             	mov    rcx,rax
   14000147f:	e8 90 04 00 00       	call   140001914 <IEEE754Binary128Create>
   140001484:	48 8b 45 f4          	mov    rax,QWORD PTR [rbp-0xc]
   140001488:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
   14000148c:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   14000148f:	89 45 b8             	mov    DWORD PTR [rbp-0x48],eax
   140001492:	48 8d 45 b0          	lea    rax,[rbp-0x50]
   140001496:	48 89 c1             	mov    rcx,rax
   140001499:	e8 f6 01 00 00       	call   140001694 <IEEE754Binary32ItoF>
   14000149e:	f3 0f 5a c0          	cvtss2sd xmm0,xmm0
   1400014a2:	66 48 0f 7e c0       	movq   rax,xmm0
   1400014a7:	48 89 c2             	mov    rdx,rax
   1400014aa:	66 48 0f 6e c2       	movq   xmm0,rdx
   1400014af:	66 0f 28 c8          	movapd xmm1,xmm0
   1400014b3:	48 89 c2             	mov    rdx,rax
   1400014b6:	48 8d 05 43 3b 00 00 	lea    rax,[rip+0x3b43]        # 140005000 <.rdata>
   1400014bd:	48 89 c1             	mov    rcx,rax
   1400014c0:	e8 7b 17 00 00       	call   140002c40 <printf>
   1400014c5:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   1400014c9:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   1400014cd:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
   1400014d1:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
   1400014d5:	48 8d 45 a0          	lea    rax,[rbp-0x60]
   1400014d9:	48 89 c1             	mov    rcx,rax
   1400014dc:	e8 b0 03 00 00       	call   140001891 <IEEE754Binary64ItoF>
   1400014e1:	66 48 0f 7e c0       	movq   rax,xmm0
   1400014e6:	48 89 c2             	mov    rdx,rax
   1400014e9:	66 48 0f 6e c2       	movq   xmm0,rdx
   1400014ee:	66 0f 28 c8          	movapd xmm1,xmm0
   1400014f2:	48 89 c2             	mov    rdx,rax
   1400014f5:	48 8d 05 12 3b 00 00 	lea    rax,[rip+0x3b12]        # 14000500e <.rdata+0xe>
   1400014fc:	48 89 c1             	mov    rcx,rax
   1400014ff:	e8 3c 17 00 00       	call   140002c40 <printf>
   140001504:	48 8d 45 90          	lea    rax,[rbp-0x70]
   140001508:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
   14000150c:	48 89 95 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rdx
   140001513:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
   140001517:	48 89 95 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdx
   14000151e:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
   140001522:	48 89 55 80          	mov    QWORD PTR [rbp-0x80],rdx
   140001526:	48 8d 95 70 ff ff ff 	lea    rdx,[rbp-0x90]
   14000152d:	48 89 c1             	mov    rcx,rax
   140001530:	e8 a2 05 00 00       	call   140001ad7 <IEEE754Binary128ItoF>
   140001535:	db 6d 90             	fld    TBYTE PTR [rbp-0x70]
   140001538:	db 7d 90             	fstp   TBYTE PTR [rbp-0x70]
   14000153b:	48 8d 45 90          	lea    rax,[rbp-0x70]
   14000153f:	48 89 c2             	mov    rdx,rax
   140001542:	48 8d 05 d4 3a 00 00 	lea    rax,[rip+0x3ad4]        # 14000501d <.rdata+0x1d>
   140001549:	48 89 c1             	mov    rcx,rax
   14000154c:	e8 ef 16 00 00       	call   140002c40 <printf>
   140001551:	b8 00 00 00 00       	mov    eax,0x0
   140001556:	48 81 c4 b0 00 00 00 	add    rsp,0xb0
   14000155d:	5d                   	pop    rbp
   14000155e:	c3                   	ret
   14000155f:	90                   	nop

0000000140001560 <IEEE754Binary32Create>:
   140001560:	55                   	push   rbp
   140001561:	48 89 e5             	mov    rbp,rsp
   140001564:	48 83 ec 10          	sub    rsp,0x10
   140001568:	48 89 4d 10          	mov    QWORD PTR [rbp+0x10],rcx
   14000156c:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
   140001573:	c7 45 f8 80 00 00 00 	mov    DWORD PTR [rbp-0x8],0x80
   14000157a:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
   140001581:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
   140001585:	48 8b 55 f4          	mov    rdx,QWORD PTR [rbp-0xc]
   140001589:	48 89 10             	mov    QWORD PTR [rax],rdx
   14000158c:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   14000158f:	89 50 08             	mov    DWORD PTR [rax+0x8],edx
   140001592:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
   140001596:	48 83 c4 10          	add    rsp,0x10
   14000159a:	5d                   	pop    rbp
   14000159b:	c3                   	ret

000000014000159c <IEEE754Binary32Set>:
   14000159c:	55                   	push   rbp
   14000159d:	53                   	push   rbx
   14000159e:	48 83 ec 18          	sub    rsp,0x18
   1400015a2:	48 8d 6c 24 10       	lea    rbp,[rsp+0x10]
   1400015a7:	48 89 4d 20          	mov    QWORD PTR [rbp+0x20],rcx
   1400015ab:	48 89 d3             	mov    rbx,rdx
   1400015ae:	f3 0f 11 55 30       	movss  DWORD PTR [rbp+0x30],xmm2
   1400015b3:	f3 0f 10 45 30       	movss  xmm0,DWORD PTR [rbp+0x30]
   1400015b8:	f3 0f 11 45 fc       	movss  DWORD PTR [rbp-0x4],xmm0
   1400015bd:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   1400015c0:	c1 e8 1f             	shr    eax,0x1f
   1400015c3:	89 03                	mov    DWORD PTR [rbx],eax
   1400015c5:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   1400015c8:	c1 e8 17             	shr    eax,0x17
   1400015cb:	0f b6 c0             	movzx  eax,al
   1400015ce:	89 43 04             	mov    DWORD PTR [rbx+0x4],eax
   1400015d1:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   1400015d4:	25 ff ff 7f 00       	and    eax,0x7fffff
   1400015d9:	89 43 08             	mov    DWORD PTR [rbx+0x8],eax
   1400015dc:	48 8b 45 20          	mov    rax,QWORD PTR [rbp+0x20]
   1400015e0:	48 8b 13             	mov    rdx,QWORD PTR [rbx]
   1400015e3:	48 89 10             	mov    QWORD PTR [rax],rdx
   1400015e6:	8b 53 08             	mov    edx,DWORD PTR [rbx+0x8]
   1400015e9:	89 50 08             	mov    DWORD PTR [rax+0x8],edx
   1400015ec:	48 8b 45 20          	mov    rax,QWORD PTR [rbp+0x20]
   1400015f0:	48 83 c4 18          	add    rsp,0x18
   1400015f4:	5b                   	pop    rbx
   1400015f5:	5d                   	pop    rbp
   1400015f6:	c3                   	ret

00000001400015f7 <IEEE754Binary32Get>:
   1400015f7:	55                   	push   rbp
   1400015f8:	53                   	push   rbx
   1400015f9:	48 83 ec 18          	sub    rsp,0x18
   1400015fd:	48 8d 6c 24 10       	lea    rbp,[rsp+0x10]
   140001602:	48 89 cb             	mov    rbx,rcx
   140001605:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
   14000160c:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   14000160f:	8b 03                	mov    eax,DWORD PTR [rbx]
   140001611:	c1 e0 1f             	shl    eax,0x1f
   140001614:	01 d0                	add    eax,edx
   140001616:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
   140001619:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   14000161c:	8b 43 04             	mov    eax,DWORD PTR [rbx+0x4]
   14000161f:	c1 e0 17             	shl    eax,0x17
   140001622:	01 d0                	add    eax,edx
   140001624:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
   140001627:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   14000162a:	8b 43 08             	mov    eax,DWORD PTR [rbx+0x8]
   14000162d:	01 d0                	add    eax,edx
   14000162f:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
   140001632:	f3 0f 10 45 fc       	movss  xmm0,DWORD PTR [rbp-0x4]
   140001637:	48 83 c4 18          	add    rsp,0x18
   14000163b:	5b                   	pop    rbx
   14000163c:	5d                   	pop    rbp
   14000163d:	c3                   	ret

000000014000163e <IEEE754Binary32FtoI>:
   14000163e:	55                   	push   rbp
   14000163f:	48 89 e5             	mov    rbp,rsp
   140001642:	48 83 ec 10          	sub    rsp,0x10
   140001646:	48 89 4d 10          	mov    QWORD PTR [rbp+0x10],rcx
   14000164a:	f3 0f 11 4d 18       	movss  DWORD PTR [rbp+0x18],xmm1
   14000164f:	f3 0f 10 45 18       	movss  xmm0,DWORD PTR [rbp+0x18]
   140001654:	f3 0f 11 45 f0       	movss  DWORD PTR [rbp-0x10],xmm0
   140001659:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   14000165c:	c1 e8 1f             	shr    eax,0x1f
   14000165f:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   140001662:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   140001665:	c1 e8 17             	shr    eax,0x17
   140001668:	0f b6 c0             	movzx  eax,al
   14000166b:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
   14000166e:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
   140001671:	25 ff ff 7f 00       	and    eax,0x7fffff
   140001676:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
   140001679:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
   14000167d:	48 8b 55 f4          	mov    rdx,QWORD PTR [rbp-0xc]
   140001681:	48 89 10             	mov    QWORD PTR [rax],rdx
   140001684:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   140001687:	89 50 08             	mov    DWORD PTR [rax+0x8],edx
   14000168a:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
   14000168e:	48 83 c4 10          	add    rsp,0x10
   140001692:	5d                   	pop    rbp
   140001693:	c3                   	ret

0000000140001694 <IEEE754Binary32ItoF>:
   140001694:	55                   	push   rbp
   140001695:	53                   	push   rbx
   140001696:	48 83 ec 18          	sub    rsp,0x18
   14000169a:	48 8d 6c 24 10       	lea    rbp,[rsp+0x10]
   14000169f:	48 89 cb             	mov    rbx,rcx
   1400016a2:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
   1400016a9:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   1400016ac:	8b 03                	mov    eax,DWORD PTR [rbx]
   1400016ae:	c1 e0 1f             	shl    eax,0x1f
   1400016b1:	01 d0                	add    eax,edx
   1400016b3:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
   1400016b6:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   1400016b9:	8b 43 04             	mov    eax,DWORD PTR [rbx+0x4]
   1400016bc:	c1 e0 17             	shl    eax,0x17
   1400016bf:	01 d0                	add    eax,edx
   1400016c1:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
   1400016c4:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
   1400016c7:	8b 43 08             	mov    eax,DWORD PTR [rbx+0x8]
   1400016ca:	01 d0                	add    eax,edx
   1400016cc:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
   1400016cf:	f3 0f 10 45 fc       	movss  xmm0,DWORD PTR [rbp-0x4]
   1400016d4:	48 83 c4 18          	add    rsp,0x18
   1400016d8:	5b                   	pop    rbx
   1400016d9:	5d                   	pop    rbp
   1400016da:	c3                   	ret

00000001400016db <IEEE754Binary64Create>:
   1400016db:	55                   	push   rbp
   1400016dc:	48 89 e5             	mov    rbp,rsp
   1400016df:	48 83 ec 10          	sub    rsp,0x10
   1400016e3:	48 89 4d 10          	mov    QWORD PTR [rbp+0x10],rcx
   1400016e7:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [rbp-0x10],0x0
   1400016ee:	c7 45 f4 00 04 00 00 	mov    DWORD PTR [rbp-0xc],0x400
   1400016f5:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
   1400016fc:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
   140001703:	48 8b 4d 10          	mov    rcx,QWORD PTR [rbp+0x10]
   140001707:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   14000170b:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   14000170f:	48 89 01             	mov    QWORD PTR [rcx],rax
   140001712:	48 89 51 08          	mov    QWORD PTR [rcx+0x8],rdx
   140001716:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
   14000171a:	48 83 c4 10          	add    rsp,0x10
   14000171e:	5d                   	pop    rbp
   14000171f:	c3                   	ret

0000000140001720 <IEEE754Binary64Set>:
   140001720:	55                   	push   rbp
   140001721:	53                   	push   rbx
   140001722:	48 83 ec 28          	sub    rsp,0x28
   140001726:	48 8d 6c 24 20       	lea    rbp,[rsp+0x20]
   14000172b:	48 89 4d 20          	mov    QWORD PTR [rbp+0x20],rcx
   14000172f:	48 89 d3             	mov    rbx,rdx
   140001732:	48 8b 03             	mov    rax,QWORD PTR [rbx]
   140001735:	48 8b 53 08          	mov    rdx,QWORD PTR [rbx+0x8]
   140001739:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
   14000173d:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
   140001741:	f2 0f 11 55 30       	movsd  QWORD PTR [rbp+0x30],xmm2
   140001746:	f2 0f 10 45 30       	movsd  xmm0,QWORD PTR [rbp+0x30]
   14000174b:	f2 0f 11 45 f8       	movsd  QWORD PTR [rbp-0x8],xmm0
   140001750:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   140001754:	48 c1 e8 3f          	shr    rax,0x3f
   140001758:	89 45 e0             	mov    DWORD PTR [rbp-0x20],eax
   14000175b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   14000175f:	48 c1 e8 34          	shr    rax,0x34
   140001763:	25 ff 07 00 00       	and    eax,0x7ff
   140001768:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
   14000176b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   14000176f:	48 c1 e8 20          	shr    rax,0x20
   140001773:	25 ff ff 0f 00       	and    eax,0xfffff
   140001778:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
   14000177b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   14000177f:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
   140001782:	48 8b 4d 20          	mov    rcx,QWORD PTR [rbp+0x20]
   140001786:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
   14000178a:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   14000178e:	48 89 01             	mov    QWORD PTR [rcx],rax
   140001791:	48 89 51 08          	mov    QWORD PTR [rcx+0x8],rdx
   140001795:	48 8b 45 20          	mov    rax,QWORD PTR [rbp+0x20]
   140001799:	48 83 c4 28          	add    rsp,0x28
   14000179d:	5b                   	pop    rbx
   14000179e:	5d                   	pop    rbp
   14000179f:	c3                   	ret

00000001400017a0 <IEEE754Binary64Get>:
   1400017a0:	55                   	push   rbp
   1400017a1:	53                   	push   rbx
   1400017a2:	48 83 ec 28          	sub    rsp,0x28
   1400017a6:	48 8d 6c 24 20       	lea    rbp,[rsp+0x20]
   1400017ab:	48 89 cb             	mov    rbx,rcx
   1400017ae:	48 8b 03             	mov    rax,QWORD PTR [rbx]
   1400017b1:	48 8b 53 08          	mov    rdx,QWORD PTR [rbx+0x8]
   1400017b5:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
   1400017b9:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
   1400017bd:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
   1400017c4:	00 
   1400017c5:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   1400017c9:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   1400017cc:	89 c0                	mov    eax,eax
   1400017ce:	48 c1 e0 3f          	shl    rax,0x3f
   1400017d2:	48 01 d0             	add    rax,rdx
   1400017d5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   1400017d9:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   1400017dd:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   1400017e0:	89 c0                	mov    eax,eax
   1400017e2:	48 c1 e0 34          	shl    rax,0x34
   1400017e6:	48 01 d0             	add    rax,rdx
   1400017e9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   1400017ed:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   1400017f1:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
   1400017f4:	89 c0                	mov    eax,eax
   1400017f6:	48 c1 e0 20          	shl    rax,0x20
   1400017fa:	48 01 d0             	add    rax,rdx
   1400017fd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   140001801:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   140001805:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
   140001808:	89 d2                	mov    edx,edx
   14000180a:	48 01 d0             	add    rax,rdx
   14000180d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   140001811:	f2 0f 10 45 f8       	movsd  xmm0,QWORD PTR [rbp-0x8]
   140001816:	66 48 0f 7e c0       	movq   rax,xmm0
   14000181b:	66 48 0f 6e c0       	movq   xmm0,rax
   140001820:	48 83 c4 28          	add    rsp,0x28
   140001824:	5b                   	pop    rbx
   140001825:	5d                   	pop    rbp
   140001826:	c3                   	ret

0000000140001827 <IEEE754Binary64FtoI>:
   140001827:	55                   	push   rbp
   140001828:	48 89 e5             	mov    rbp,rsp
   14000182b:	48 83 ec 20          	sub    rsp,0x20
   14000182f:	48 89 4d 10          	mov    QWORD PTR [rbp+0x10],rcx
   140001833:	f2 0f 11 4d 18       	movsd  QWORD PTR [rbp+0x18],xmm1
   140001838:	f2 0f 10 45 18       	movsd  xmm0,QWORD PTR [rbp+0x18]
   14000183d:	f2 0f 11 45 e8       	movsd  QWORD PTR [rbp-0x18],xmm0
   140001842:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   140001846:	48 c1 e8 3f          	shr    rax,0x3f
   14000184a:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
   14000184d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   140001851:	48 c1 e8 34          	shr    rax,0x34
   140001855:	25 ff 07 00 00       	and    eax,0x7ff
   14000185a:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
   14000185d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   140001861:	48 c1 e8 20          	shr    rax,0x20
   140001865:	25 ff ff 0f 00       	and    eax,0xfffff
   14000186a:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
   14000186d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
   140001871:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
   140001874:	48 8b 4d 10          	mov    rcx,QWORD PTR [rbp+0x10]
   140001878:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   14000187c:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   140001880:	48 89 01             	mov    QWORD PTR [rcx],rax
   140001883:	48 89 51 08          	mov    QWORD PTR [rcx+0x8],rdx
   140001887:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
   14000188b:	48 83 c4 20          	add    rsp,0x20
   14000188f:	5d                   	pop    rbp
   140001890:	c3                   	ret

0000000140001891 <IEEE754Binary64ItoF>:
   140001891:	55                   	push   rbp
   140001892:	53                   	push   rbx
   140001893:	48 83 ec 28          	sub    rsp,0x28
   140001897:	48 8d 6c 24 20       	lea    rbp,[rsp+0x20]
   14000189c:	48 89 cb             	mov    rbx,rcx
   14000189f:	48 8b 03             	mov    rax,QWORD PTR [rbx]
   1400018a2:	48 8b 53 08          	mov    rdx,QWORD PTR [rbx+0x8]
   1400018a6:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
   1400018aa:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
   1400018ae:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
   1400018b5:	00 
   1400018b6:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   1400018ba:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
   1400018bd:	89 c0                	mov    eax,eax
   1400018bf:	48 c1 e0 3f          	shl    rax,0x3f
   1400018c3:	48 01 d0             	add    rax,rdx
   1400018c6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   1400018ca:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   1400018ce:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
   1400018d1:	89 c0                	mov    eax,eax
   1400018d3:	48 c1 e0 34          	shl    rax,0x34
   1400018d7:	48 01 d0             	add    rax,rdx
   1400018da:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   1400018de:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   1400018e2:	8b 55 e8             	mov    edx,DWORD PTR [rbp-0x18]
   1400018e5:	89 d2                	mov    edx,edx
   1400018e7:	48 01 d0             	add    rax,rdx
   1400018ea:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   1400018ee:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   1400018f2:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
   1400018f5:	89 d2                	mov    edx,edx
   1400018f7:	48 01 d0             	add    rax,rdx
   1400018fa:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   1400018fe:	f2 0f 10 45 f8       	movsd  xmm0,QWORD PTR [rbp-0x8]
   140001903:	66 48 0f 7e c0       	movq   rax,xmm0
   140001908:	66 48 0f 6e c0       	movq   xmm0,rax
   14000190d:	48 83 c4 28          	add    rsp,0x28
   140001911:	5b                   	pop    rbx
   140001912:	5d                   	pop    rbp
   140001913:	c3                   	ret

0000000140001914 <IEEE754Binary128Create>:
   140001914:	55                   	push   rbp
   140001915:	48 89 e5             	mov    rbp,rsp
   140001918:	48 83 ec 20          	sub    rsp,0x20
   14000191c:	48 89 4d 10          	mov    QWORD PTR [rbp+0x10],rcx
   140001920:	c7 45 e0 00 00 00 00 	mov    DWORD PTR [rbp-0x20],0x0
   140001927:	c7 45 e4 00 40 00 00 	mov    DWORD PTR [rbp-0x1c],0x4000
   14000192e:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
   140001935:	00 
   140001936:	48 c7 45 f0 00 00 00 	mov    QWORD PTR [rbp-0x10],0x0
   14000193d:	00 
   14000193e:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
   140001942:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
   140001946:	48 89 10             	mov    QWORD PTR [rax],rdx
   140001949:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   14000194d:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
   140001951:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
   140001955:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
   140001959:	48 8b 45 10          	mov    rax,QWORD PTR [rbp+0x10]
   14000195d:	48 83 c4 20          	add    rsp,0x20
   140001961:	5d                   	pop    rbp
   140001962:	c3                   	ret

0000000140001963 <IEEE754Binary128Set>:
   140001963:	55                   	push   rbp
   140001964:	56                   	push   rsi
   140001965:	53                   	push   rbx
   140001966:	48 83 ec 20          	sub    rsp,0x20
   14000196a:	48 8d 6c 24 20       	lea    rbp,[rsp+0x20]
   14000196f:	48 89 4d 20          	mov    QWORD PTR [rbp+0x20],rcx
   140001973:	48 89 d3             	mov    rbx,rdx
   140001976:	4c 89 c6             	mov    rsi,r8
   140001979:	db 2e                	fld    TBYTE PTR [rsi]
   14000197b:	db 7d e0             	fstp   TBYTE PTR [rbp-0x20]
   14000197e:	db 6d e0             	fld    TBYTE PTR [rbp-0x20]
   140001981:	db 7d f0             	fstp   TBYTE PTR [rbp-0x10]
   140001984:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   140001988:	48 c1 e8 3f          	shr    rax,0x3f
   14000198c:	89 03                	mov    DWORD PTR [rbx],eax
   14000198e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
   140001992:	48 c1 e8 30          	shr    rax,0x30
   140001996:	25 ff 7f 00 00       	and    eax,0x7fff
   14000199b:	89 43 04             	mov    DWORD PTR [rbx+0x4],eax
   14000199e:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
   1400019a2:	48 b8 ff ff ff ff ff 	movabs rax,0xffffffffffff
   1400019a9:	ff 00 00 
   1400019ac:	48 21 d0             	and    rax,rdx
   1400019af:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
   1400019b3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   1400019b7:	48 89 43 10          	mov    QWORD PTR [rbx+0x10],rax
   1400019bb:	48 8b 45 20          	mov    rax,QWORD PTR [rbp+0x20]
   1400019bf:	48 8b 13             	mov    rdx,QWORD PTR [rbx]
   1400019c2:	48 89 10             	mov    QWORD PTR [rax],rdx
   1400019c5:	48 8b 53 08          	mov    rdx,QWORD PTR [rbx+0x8]
   1400019c9:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
   1400019cd:	48 8b 53 10          	mov    rdx,QWORD PTR [rbx+0x10]
   1400019d1:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
   1400019d5:	48 8b 45 20          	mov    rax,QWORD PTR [rbp+0x20]
   1400019d9:	48 83 c4 20          	add    rsp,0x20
   1400019dd:	5b                   	pop    rbx
   1400019de:	5e                   	pop    rsi
   1400019df:	5d                   	pop    rbp
   1400019e0:	c3                   	ret

00000001400019e1 <IEEE754Binary128Get>:
   1400019e1:	55                   	push   rbp
   1400019e2:	53                   	push   rbx
   1400019e3:	48 83 ec 18          	sub    rsp,0x18
   1400019e7:	48 8d 6c 24 10       	lea    rbp,[rsp+0x10]
   1400019ec:	48 89 4d 20          	mov    QWORD PTR [rbp+0x20],rcx
   1400019f0:	48 89 d3             	mov    rbx,rdx
   1400019f3:	48 c7 45 f0 00 00 00 	mov    QWORD PTR [rbp-0x10],0x0
   1400019fa:	00 
   1400019fb:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
   140001a02:	00 
   140001a03:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
   140001a07:	8b 03                	mov    eax,DWORD PTR [rbx]
   140001a09:	89 c0                	mov    eax,eax
   140001a0b:	48 c1 e0 3f          	shl    rax,0x3f
   140001a0f:	48 01 d0             	add    rax,rdx
   140001a12:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   140001a16:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
   140001a1a:	8b 43 04             	mov    eax,DWORD PTR [rbx+0x4]
   140001a1d:	89 c0                	mov    eax,eax
   140001a1f:	48 c1 e0 30          	shl    rax,0x30
   140001a23:	48 01 d0             	add    rax,rdx
   140001a26:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   140001a2a:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
   140001a2e:	48 8b 43 08          	mov    rax,QWORD PTR [rbx+0x8]
   140001a32:	48 01 d0             	add    rax,rdx
   140001a35:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   140001a39:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   140001a3d:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
   140001a41:	48 01 d0             	add    rax,rdx
   140001a44:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   140001a48:	db 6d f0             	fld    TBYTE PTR [rbp-0x10]
   140001a4b:	48 8b 45 20          	mov    rax,QWORD PTR [rbp+0x20]
   140001a4f:	db 38                	fstp   TBYTE PTR [rax]
   140001a51:	48 8b 45 20          	mov    rax,QWORD PTR [rbp+0x20]
   140001a55:	48 83 c4 18          	add    rsp,0x18
   140001a59:	5b                   	pop    rbx
   140001a5a:	5d                   	pop    rbp
   140001a5b:	c3                   	ret

0000000140001a5c <IEEE754Binary128FtoI>:
   140001a5c:	55                   	push   rbp
   140001a5d:	53                   	push   rbx
   140001a5e:	48 83 ec 48          	sub    rsp,0x48
   140001a62:	48 8d 6c 24 40       	lea    rbp,[rsp+0x40]
   140001a67:	48 89 4d 20          	mov    QWORD PTR [rbp+0x20],rcx
   140001a6b:	48 89 d3             	mov    rbx,rdx
   140001a6e:	db 2b                	fld    TBYTE PTR [rbx]
   140001a70:	db 7d c0             	fstp   TBYTE PTR [rbp-0x40]
   140001a73:	db 6d c0             	fld    TBYTE PTR [rbp-0x40]
   140001a76:	db 7d d0             	fstp   TBYTE PTR [rbp-0x30]
   140001a79:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   140001a7d:	48 c1 e8 3f          	shr    rax,0x3f
   140001a81:	89 45 e0             	mov    DWORD PTR [rbp-0x20],eax
   140001a84:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
   140001a88:	48 c1 e8 30          	shr    rax,0x30
   140001a8c:	25 ff 7f 00 00       	and    eax,0x7fff
   140001a91:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
   140001a94:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
   140001a98:	48 b8 ff ff ff ff ff 	movabs rax,0xffffffffffff
   140001a9f:	ff 00 00 
   140001aa2:	48 21 d0             	and    rax,rdx
   140001aa5:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
   140001aa9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
   140001aad:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   140001ab1:	48 8b 45 20          	mov    rax,QWORD PTR [rbp+0x20]
   140001ab5:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
   140001ab9:	48 89 10             	mov    QWORD PTR [rax],rdx
   140001abc:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
   140001ac0:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
   140001ac4:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
   140001ac8:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
   140001acc:	48 8b 45 20          	mov    rax,QWORD PTR [rbp+0x20]
   140001ad0:	48 83 c4 48          	add    rsp,0x48
   140001ad4:	5b                   	pop    rbx
   140001ad5:	5d                   	pop    rbp
   140001ad6:	c3                   	ret

0000000140001ad7 <IEEE754Binary128ItoF>:
   140001ad7:	55                   	push   rbp
   140001ad8:	53                   	push   rbx
   140001ad9:	48 83 ec 18          	sub    rsp,0x18
   140001add:	48 8d 6c 24 10       	lea    rbp,[rsp+0x10]
   140001ae2:	48 89 4d 20          	mov    QWORD PTR [rbp+0x20],rcx
   140001ae6:	48 89 d3             	mov    rbx,rdx
   140001ae9:	48 c7 45 f0 00 00 00 	mov    QWORD PTR [rbp-0x10],0x0
   140001af0:	00 
   140001af1:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
   140001af8:	00 
   140001af9:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
   140001afd:	8b 03                	mov    eax,DWORD PTR [rbx]
   140001aff:	89 c0                	mov    eax,eax
   140001b01:	48 c1 e0 3f          	shl    rax,0x3f
   140001b05:	48 01 d0             	add    rax,rdx
   140001b08:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   140001b0c:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
   140001b10:	8b 43 04             	mov    eax,DWORD PTR [rbx+0x4]
   140001b13:	89 c0                	mov    eax,eax
   140001b15:	48 c1 e0 30          	shl    rax,0x30
   140001b19:	48 01 d0             	add    rax,rdx
   140001b1c:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   140001b20:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
   140001b24:	48 8b 43 08          	mov    rax,QWORD PTR [rbx+0x8]
   140001b28:	48 01 d0             	add    rax,rdx
   140001b2b:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
   140001b2f:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
   140001b33:	48 8b 43 10          	mov    rax,QWORD PTR [rbx+0x10]
   140001b37:	48 01 d0             	add    rax,rdx
   140001b3a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   140001b3e:	db 6d f0             	fld    TBYTE PTR [rbp-0x10]
   140001b41:	48 8b 45 20          	mov    rax,QWORD PTR [rbp+0x20]
   140001b45:	db 38                	fstp   TBYTE PTR [rax]
   140001b47:	48 8b 45 20          	mov    rax,QWORD PTR [rbp+0x20]
   140001b4b:	48 83 c4 18          	add    rsp,0x18
   140001b4f:	5b                   	pop    rbx
   140001b50:	5d                   	pop    rbp
   140001b51:	c3                   	ret
   140001b52:	90                   	nop
   140001b53:	90                   	nop
   140001b54:	90                   	nop
   140001b55:	90                   	nop
   140001b56:	90                   	nop
   140001b57:	90                   	nop
   140001b58:	90                   	nop
   140001b59:	90                   	nop
   140001b5a:	90                   	nop
   140001b5b:	90                   	nop
   140001b5c:	90                   	nop
   140001b5d:	90                   	nop
   140001b5e:	90                   	nop
   140001b5f:	90                   	nop

0000000140001b60 <__do_global_dtors>:
   140001b60:	48 83 ec 28          	sub    rsp,0x28
   140001b64:	48 8b 05 95 24 00 00 	mov    rax,QWORD PTR [rip+0x2495]        # 140004000 <__data_start__>
   140001b6b:	48 8b 00             	mov    rax,QWORD PTR [rax]
   140001b6e:	48 85 c0             	test   rax,rax
   140001b71:	74 22                	je     140001b95 <__do_global_dtors+0x35>
   140001b73:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140001b78:	ff d0                	call   rax
   140001b7a:	48 8b 05 7f 24 00 00 	mov    rax,QWORD PTR [rip+0x247f]        # 140004000 <__data_start__>
   140001b81:	48 8d 50 08          	lea    rdx,[rax+0x8]
   140001b85:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
   140001b89:	48 89 15 70 24 00 00 	mov    QWORD PTR [rip+0x2470],rdx        # 140004000 <__data_start__>
   140001b90:	48 85 c0             	test   rax,rax
   140001b93:	75 e3                	jne    140001b78 <__do_global_dtors+0x18>
   140001b95:	48 83 c4 28          	add    rsp,0x28
   140001b99:	c3                   	ret
   140001b9a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000140001ba0 <__do_global_ctors>:
   140001ba0:	56                   	push   rsi
   140001ba1:	53                   	push   rbx
   140001ba2:	48 83 ec 28          	sub    rsp,0x28
   140001ba6:	48 8b 15 03 38 00 00 	mov    rdx,QWORD PTR [rip+0x3803]        # 1400053b0 <.refptr.__CTOR_LIST__>
   140001bad:	48 8b 02             	mov    rax,QWORD PTR [rdx]
   140001bb0:	83 f8 ff             	cmp    eax,0xffffffff
   140001bb3:	89 c1                	mov    ecx,eax
   140001bb5:	74 39                	je     140001bf0 <__do_global_ctors+0x50>
   140001bb7:	85 c9                	test   ecx,ecx
   140001bb9:	74 20                	je     140001bdb <__do_global_ctors+0x3b>
   140001bbb:	89 c8                	mov    eax,ecx
   140001bbd:	83 e9 01             	sub    ecx,0x1
   140001bc0:	48 8d 1c c2          	lea    rbx,[rdx+rax*8]
   140001bc4:	48 29 c8             	sub    rax,rcx
   140001bc7:	48 8d 74 c2 f8       	lea    rsi,[rdx+rax*8-0x8]
   140001bcc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140001bd0:	ff 13                	call   QWORD PTR [rbx]
   140001bd2:	48 83 eb 08          	sub    rbx,0x8
   140001bd6:	48 39 f3             	cmp    rbx,rsi
   140001bd9:	75 f5                	jne    140001bd0 <__do_global_ctors+0x30>
   140001bdb:	48 8d 0d 7e ff ff ff 	lea    rcx,[rip+0xffffffffffffff7e]        # 140001b60 <__do_global_dtors>
   140001be2:	48 83 c4 28          	add    rsp,0x28
   140001be6:	5b                   	pop    rbx
   140001be7:	5e                   	pop    rsi
   140001be8:	e9 23 f8 ff ff       	jmp    140001410 <atexit>
   140001bed:	0f 1f 00             	nop    DWORD PTR [rax]
   140001bf0:	31 c0                	xor    eax,eax
   140001bf2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   140001bf8:	44 8d 40 01          	lea    r8d,[rax+0x1]
   140001bfc:	89 c1                	mov    ecx,eax
   140001bfe:	4a 83 3c c2 00       	cmp    QWORD PTR [rdx+r8*8],0x0
   140001c03:	4c 89 c0             	mov    rax,r8
   140001c06:	75 f0                	jne    140001bf8 <__do_global_ctors+0x58>
   140001c08:	eb ad                	jmp    140001bb7 <__do_global_ctors+0x17>
   140001c0a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000140001c10 <__main>:
   140001c10:	8b 05 1a 64 00 00    	mov    eax,DWORD PTR [rip+0x641a]        # 140008030 <initialized>
   140001c16:	85 c0                	test   eax,eax
   140001c18:	74 06                	je     140001c20 <__main+0x10>
   140001c1a:	c3                   	ret
   140001c1b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140001c20:	c7 05 06 64 00 00 01 	mov    DWORD PTR [rip+0x6406],0x1        # 140008030 <initialized>
   140001c27:	00 00 00 
   140001c2a:	e9 71 ff ff ff       	jmp    140001ba0 <__do_global_ctors>
   140001c2f:	90                   	nop

0000000140001c30 <_setargv>:
   140001c30:	31 c0                	xor    eax,eax
   140001c32:	c3                   	ret
   140001c33:	90                   	nop
   140001c34:	90                   	nop
   140001c35:	90                   	nop
   140001c36:	90                   	nop
   140001c37:	90                   	nop
   140001c38:	90                   	nop
   140001c39:	90                   	nop
   140001c3a:	90                   	nop
   140001c3b:	90                   	nop
   140001c3c:	90                   	nop
   140001c3d:	90                   	nop
   140001c3e:	90                   	nop
   140001c3f:	90                   	nop

0000000140001c40 <__dyn_tls_dtor>:
   140001c40:	48 83 ec 28          	sub    rsp,0x28
   140001c44:	83 fa 03             	cmp    edx,0x3
   140001c47:	74 17                	je     140001c60 <__dyn_tls_dtor+0x20>
   140001c49:	85 d2                	test   edx,edx
   140001c4b:	74 13                	je     140001c60 <__dyn_tls_dtor+0x20>
   140001c4d:	b8 01 00 00 00       	mov    eax,0x1
   140001c52:	48 83 c4 28          	add    rsp,0x28
   140001c56:	c3                   	ret
   140001c57:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   140001c5e:	00 00 
   140001c60:	e8 5b 0a 00 00       	call   1400026c0 <__mingw_TLScallback>
   140001c65:	b8 01 00 00 00       	mov    eax,0x1
   140001c6a:	48 83 c4 28          	add    rsp,0x28
   140001c6e:	c3                   	ret
   140001c6f:	90                   	nop

0000000140001c70 <__dyn_tls_init>:
   140001c70:	56                   	push   rsi
   140001c71:	53                   	push   rbx
   140001c72:	48 83 ec 28          	sub    rsp,0x28
   140001c76:	48 8b 05 13 37 00 00 	mov    rax,QWORD PTR [rip+0x3713]        # 140005390 <.refptr._CRT_MT>
   140001c7d:	83 38 02             	cmp    DWORD PTR [rax],0x2
   140001c80:	74 06                	je     140001c88 <__dyn_tls_init+0x18>
   140001c82:	c7 00 02 00 00 00    	mov    DWORD PTR [rax],0x2
   140001c88:	83 fa 02             	cmp    edx,0x2
   140001c8b:	74 13                	je     140001ca0 <__dyn_tls_init+0x30>
   140001c8d:	83 fa 01             	cmp    edx,0x1
   140001c90:	74 4e                	je     140001ce0 <__dyn_tls_init+0x70>
   140001c92:	b8 01 00 00 00       	mov    eax,0x1
   140001c97:	48 83 c4 28          	add    rsp,0x28
   140001c9b:	5b                   	pop    rbx
   140001c9c:	5e                   	pop    rsi
   140001c9d:	c3                   	ret
   140001c9e:	66 90                	xchg   ax,ax
   140001ca0:	48 8d 1d b1 83 00 00 	lea    rbx,[rip+0x83b1]        # 14000a058 <__xd_z>
   140001ca7:	48 8d 35 aa 83 00 00 	lea    rsi,[rip+0x83aa]        # 14000a058 <__xd_z>
   140001cae:	48 39 de             	cmp    rsi,rbx
   140001cb1:	74 df                	je     140001c92 <__dyn_tls_init+0x22>
   140001cb3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140001cb8:	48 8b 03             	mov    rax,QWORD PTR [rbx]
   140001cbb:	48 85 c0             	test   rax,rax
   140001cbe:	74 02                	je     140001cc2 <__dyn_tls_init+0x52>
   140001cc0:	ff d0                	call   rax
   140001cc2:	48 83 c3 08          	add    rbx,0x8
   140001cc6:	48 39 de             	cmp    rsi,rbx
   140001cc9:	75 ed                	jne    140001cb8 <__dyn_tls_init+0x48>
   140001ccb:	b8 01 00 00 00       	mov    eax,0x1
   140001cd0:	48 83 c4 28          	add    rsp,0x28
   140001cd4:	5b                   	pop    rbx
   140001cd5:	5e                   	pop    rsi
   140001cd6:	c3                   	ret
   140001cd7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   140001cde:	00 00 
   140001ce0:	e8 db 09 00 00       	call   1400026c0 <__mingw_TLScallback>
   140001ce5:	b8 01 00 00 00       	mov    eax,0x1
   140001cea:	48 83 c4 28          	add    rsp,0x28
   140001cee:	5b                   	pop    rbx
   140001cef:	5e                   	pop    rsi
   140001cf0:	c3                   	ret
   140001cf1:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   140001cf8:	00 00 00 00 
   140001cfc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000140001d00 <__tlregdtor>:
   140001d00:	31 c0                	xor    eax,eax
   140001d02:	c3                   	ret
   140001d03:	90                   	nop
   140001d04:	90                   	nop
   140001d05:	90                   	nop
   140001d06:	90                   	nop
   140001d07:	90                   	nop
   140001d08:	90                   	nop
   140001d09:	90                   	nop
   140001d0a:	90                   	nop
   140001d0b:	90                   	nop
   140001d0c:	90                   	nop
   140001d0d:	90                   	nop
   140001d0e:	90                   	nop
   140001d0f:	90                   	nop

0000000140001d10 <_matherr>:
   140001d10:	56                   	push   rsi
   140001d11:	53                   	push   rbx
   140001d12:	48 83 ec 78          	sub    rsp,0x78
   140001d16:	0f 29 74 24 40       	movaps XMMWORD PTR [rsp+0x40],xmm6
   140001d1b:	0f 29 7c 24 50       	movaps XMMWORD PTR [rsp+0x50],xmm7
   140001d20:	44 0f 29 44 24 60    	movaps XMMWORD PTR [rsp+0x60],xmm8
   140001d26:	83 39 06             	cmp    DWORD PTR [rcx],0x6
   140001d29:	0f 87 cd 00 00 00    	ja     140001dfc <_matherr+0xec>
   140001d2f:	8b 01                	mov    eax,DWORD PTR [rcx]
   140001d31:	48 8d 15 8c 34 00 00 	lea    rdx,[rip+0x348c]        # 1400051c4 <.rdata+0x124>
   140001d38:	48 63 04 82          	movsxd rax,DWORD PTR [rdx+rax*4]
   140001d3c:	48 01 d0             	add    rax,rdx
   140001d3f:	ff e0                	jmp    rax
   140001d41:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   140001d48:	48 8d 1d 70 33 00 00 	lea    rbx,[rip+0x3370]        # 1400050bf <.rdata+0x1f>
   140001d4f:	48 8b 71 08          	mov    rsi,QWORD PTR [rcx+0x8]
   140001d53:	f2 44 0f 10 41 20    	movsd  xmm8,QWORD PTR [rcx+0x20]
   140001d59:	f2 0f 10 79 18       	movsd  xmm7,QWORD PTR [rcx+0x18]
   140001d5e:	f2 0f 10 71 10       	movsd  xmm6,QWORD PTR [rcx+0x10]
   140001d63:	b9 02 00 00 00       	mov    ecx,0x2
   140001d68:	e8 c3 11 00 00       	call   140002f30 <__acrt_iob_func>
   140001d6d:	f2 44 0f 11 44 24 30 	movsd  QWORD PTR [rsp+0x30],xmm8
   140001d74:	49 89 f1             	mov    r9,rsi
   140001d77:	49 89 d8             	mov    r8,rbx
   140001d7a:	f2 0f 11 7c 24 28    	movsd  QWORD PTR [rsp+0x28],xmm7
   140001d80:	48 89 c1             	mov    rcx,rax
   140001d83:	f2 0f 11 74 24 20    	movsd  QWORD PTR [rsp+0x20],xmm6
   140001d89:	48 8d 15 08 34 00 00 	lea    rdx,[rip+0x3408]        # 140005198 <.rdata+0xf8>
   140001d90:	e8 fb 0e 00 00       	call   140002c90 <fprintf>
   140001d95:	90                   	nop
   140001d96:	0f 28 74 24 40       	movaps xmm6,XMMWORD PTR [rsp+0x40]
   140001d9b:	31 c0                	xor    eax,eax
   140001d9d:	0f 28 7c 24 50       	movaps xmm7,XMMWORD PTR [rsp+0x50]
   140001da2:	44 0f 28 44 24 60    	movaps xmm8,XMMWORD PTR [rsp+0x60]
   140001da8:	48 83 c4 78          	add    rsp,0x78
   140001dac:	5b                   	pop    rbx
   140001dad:	5e                   	pop    rsi
   140001dae:	c3                   	ret
   140001daf:	90                   	nop
   140001db0:	48 8d 1d e9 32 00 00 	lea    rbx,[rip+0x32e9]        # 1400050a0 <.rdata>
   140001db7:	eb 96                	jmp    140001d4f <_matherr+0x3f>
   140001db9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   140001dc0:	48 8d 1d 39 33 00 00 	lea    rbx,[rip+0x3339]        # 140005100 <.rdata+0x60>
   140001dc7:	eb 86                	jmp    140001d4f <_matherr+0x3f>
   140001dc9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   140001dd0:	48 8d 1d 09 33 00 00 	lea    rbx,[rip+0x3309]        # 1400050e0 <.rdata+0x40>
   140001dd7:	e9 73 ff ff ff       	jmp    140001d4f <_matherr+0x3f>
   140001ddc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140001de0:	48 8d 1d 69 33 00 00 	lea    rbx,[rip+0x3369]        # 140005150 <.rdata+0xb0>
   140001de7:	e9 63 ff ff ff       	jmp    140001d4f <_matherr+0x3f>
   140001dec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140001df0:	48 8d 1d 31 33 00 00 	lea    rbx,[rip+0x3331]        # 140005128 <.rdata+0x88>
   140001df7:	e9 53 ff ff ff       	jmp    140001d4f <_matherr+0x3f>
   140001dfc:	48 8d 1d 83 33 00 00 	lea    rbx,[rip+0x3383]        # 140005186 <.rdata+0xe6>
   140001e03:	e9 47 ff ff ff       	jmp    140001d4f <_matherr+0x3f>
   140001e08:	90                   	nop
   140001e09:	90                   	nop
   140001e0a:	90                   	nop
   140001e0b:	90                   	nop
   140001e0c:	90                   	nop
   140001e0d:	90                   	nop
   140001e0e:	90                   	nop
   140001e0f:	90                   	nop

0000000140001e10 <_fpreset>:
   140001e10:	db e3                	fninit
   140001e12:	c3                   	ret
   140001e13:	90                   	nop
   140001e14:	90                   	nop
   140001e15:	90                   	nop
   140001e16:	90                   	nop
   140001e17:	90                   	nop
   140001e18:	90                   	nop
   140001e19:	90                   	nop
   140001e1a:	90                   	nop
   140001e1b:	90                   	nop
   140001e1c:	90                   	nop
   140001e1d:	90                   	nop
   140001e1e:	90                   	nop
   140001e1f:	90                   	nop

0000000140001e20 <__report_error>:
   140001e20:	56                   	push   rsi
   140001e21:	53                   	push   rbx
   140001e22:	48 83 ec 38          	sub    rsp,0x38
   140001e26:	48 8d 44 24 58       	lea    rax,[rsp+0x58]
   140001e2b:	48 89 cb             	mov    rbx,rcx
   140001e2e:	b9 02 00 00 00       	mov    ecx,0x2
   140001e33:	48 89 54 24 58       	mov    QWORD PTR [rsp+0x58],rdx
   140001e38:	4c 89 44 24 60       	mov    QWORD PTR [rsp+0x60],r8
   140001e3d:	4c 89 4c 24 68       	mov    QWORD PTR [rsp+0x68],r9
   140001e42:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
   140001e47:	e8 e4 10 00 00       	call   140002f30 <__acrt_iob_func>
   140001e4c:	41 b8 1b 00 00 00    	mov    r8d,0x1b
   140001e52:	ba 01 00 00 00       	mov    edx,0x1
   140001e57:	48 8d 0d 82 33 00 00 	lea    rcx,[rip+0x3382]        # 1400051e0 <.rdata>
   140001e5e:	49 89 c1             	mov    r9,rax
   140001e61:	e8 f2 10 00 00       	call   140002f58 <fwrite>
   140001e66:	48 8b 74 24 28       	mov    rsi,QWORD PTR [rsp+0x28]
   140001e6b:	b9 02 00 00 00       	mov    ecx,0x2
   140001e70:	e8 bb 10 00 00       	call   140002f30 <__acrt_iob_func>
   140001e75:	48 89 da             	mov    rdx,rbx
   140001e78:	48 89 c1             	mov    rcx,rax
   140001e7b:	49 89 f0             	mov    r8,rsi
   140001e7e:	e8 9d 0d 00 00       	call   140002c20 <vfprintf>
   140001e83:	e8 40 11 00 00       	call   140002fc8 <abort>
   140001e88:	90                   	nop
   140001e89:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000140001e90 <mark_section_writable>:
   140001e90:	57                   	push   rdi
   140001e91:	56                   	push   rsi
   140001e92:	53                   	push   rbx
   140001e93:	48 83 ec 50          	sub    rsp,0x50
   140001e97:	48 63 35 f6 61 00 00 	movsxd rsi,DWORD PTR [rip+0x61f6]        # 140008094 <maxSections>
   140001e9e:	85 f6                	test   esi,esi
   140001ea0:	48 89 cb             	mov    rbx,rcx
   140001ea3:	0f 8e 17 01 00 00    	jle    140001fc0 <mark_section_writable+0x130>
   140001ea9:	48 8b 05 e8 61 00 00 	mov    rax,QWORD PTR [rip+0x61e8]        # 140008098 <the_secs>
   140001eb0:	45 31 c9             	xor    r9d,r9d
   140001eb3:	48 83 c0 18          	add    rax,0x18
   140001eb7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   140001ebe:	00 00 
   140001ec0:	4c 8b 00             	mov    r8,QWORD PTR [rax]
   140001ec3:	4c 39 c3             	cmp    rbx,r8
   140001ec6:	72 13                	jb     140001edb <mark_section_writable+0x4b>
   140001ec8:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
   140001ecc:	8b 52 08             	mov    edx,DWORD PTR [rdx+0x8]
   140001ecf:	49 01 d0             	add    r8,rdx
   140001ed2:	4c 39 c3             	cmp    rbx,r8
   140001ed5:	0f 82 8a 00 00 00    	jb     140001f65 <mark_section_writable+0xd5>
   140001edb:	41 83 c1 01          	add    r9d,0x1
   140001edf:	48 83 c0 28          	add    rax,0x28
   140001ee3:	41 39 f1             	cmp    r9d,esi
   140001ee6:	75 d8                	jne    140001ec0 <mark_section_writable+0x30>
   140001ee8:	48 89 d9             	mov    rcx,rbx
   140001eeb:	e8 10 0a 00 00       	call   140002900 <__mingw_GetSectionForAddress>
   140001ef0:	48 85 c0             	test   rax,rax
   140001ef3:	48 89 c7             	mov    rdi,rax
   140001ef6:	0f 84 e6 00 00 00    	je     140001fe2 <mark_section_writable+0x152>
   140001efc:	48 8b 05 95 61 00 00 	mov    rax,QWORD PTR [rip+0x6195]        # 140008098 <the_secs>
   140001f03:	48 8d 1c b6          	lea    rbx,[rsi+rsi*4]
   140001f07:	48 c1 e3 03          	shl    rbx,0x3
   140001f0b:	48 01 d8             	add    rax,rbx
   140001f0e:	48 89 78 20          	mov    QWORD PTR [rax+0x20],rdi
   140001f12:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
   140001f18:	e8 23 0b 00 00       	call   140002a40 <_GetPEImageBase>
   140001f1d:	8b 57 0c             	mov    edx,DWORD PTR [rdi+0xc]
   140001f20:	41 b8 30 00 00 00    	mov    r8d,0x30
   140001f26:	48 8d 0c 10          	lea    rcx,[rax+rdx*1]
   140001f2a:	48 8b 05 67 61 00 00 	mov    rax,QWORD PTR [rip+0x6167]        # 140008098 <the_secs>
   140001f31:	48 8d 54 24 20       	lea    rdx,[rsp+0x20]
   140001f36:	48 89 4c 18 18       	mov    QWORD PTR [rax+rbx*1+0x18],rcx
   140001f3b:	ff 15 97 73 00 00    	call   QWORD PTR [rip+0x7397]        # 1400092d8 <__imp_VirtualQuery>
   140001f41:	48 85 c0             	test   rax,rax
   140001f44:	0f 84 7d 00 00 00    	je     140001fc7 <mark_section_writable+0x137>
   140001f4a:	8b 44 24 44          	mov    eax,DWORD PTR [rsp+0x44]
   140001f4e:	8d 50 c0             	lea    edx,[rax-0x40]
   140001f51:	83 e2 bf             	and    edx,0xffffffbf
   140001f54:	74 08                	je     140001f5e <mark_section_writable+0xce>
   140001f56:	8d 50 fc             	lea    edx,[rax-0x4]
   140001f59:	83 e2 fb             	and    edx,0xfffffffb
   140001f5c:	75 12                	jne    140001f70 <mark_section_writable+0xe0>
   140001f5e:	83 05 2f 61 00 00 01 	add    DWORD PTR [rip+0x612f],0x1        # 140008094 <maxSections>
   140001f65:	48 83 c4 50          	add    rsp,0x50
   140001f69:	5b                   	pop    rbx
   140001f6a:	5e                   	pop    rsi
   140001f6b:	5f                   	pop    rdi
   140001f6c:	c3                   	ret
   140001f6d:	0f 1f 00             	nop    DWORD PTR [rax]
   140001f70:	83 f8 02             	cmp    eax,0x2
   140001f73:	41 b8 40 00 00 00    	mov    r8d,0x40
   140001f79:	b8 04 00 00 00       	mov    eax,0x4
   140001f7e:	48 8b 4c 24 20       	mov    rcx,QWORD PTR [rsp+0x20]
   140001f83:	44 0f 44 c0          	cmove  r8d,eax
   140001f87:	48 8b 54 24 38       	mov    rdx,QWORD PTR [rsp+0x38]
   140001f8c:	48 03 1d 05 61 00 00 	add    rbx,QWORD PTR [rip+0x6105]        # 140008098 <the_secs>
   140001f93:	49 89 d9             	mov    r9,rbx
   140001f96:	48 89 4b 08          	mov    QWORD PTR [rbx+0x8],rcx
   140001f9a:	48 89 53 10          	mov    QWORD PTR [rbx+0x10],rdx
   140001f9e:	ff 15 2c 73 00 00    	call   QWORD PTR [rip+0x732c]        # 1400092d0 <__imp_VirtualProtect>
   140001fa4:	85 c0                	test   eax,eax
   140001fa6:	75 b6                	jne    140001f5e <mark_section_writable+0xce>
   140001fa8:	ff 15 f2 72 00 00    	call   QWORD PTR [rip+0x72f2]        # 1400092a0 <__imp_GetLastError>
   140001fae:	48 8d 0d a3 32 00 00 	lea    rcx,[rip+0x32a3]        # 140005258 <.rdata+0x78>
   140001fb5:	89 c2                	mov    edx,eax
   140001fb7:	e8 64 fe ff ff       	call   140001e20 <__report_error>
   140001fbc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140001fc0:	31 f6                	xor    esi,esi
   140001fc2:	e9 21 ff ff ff       	jmp    140001ee8 <mark_section_writable+0x58>
   140001fc7:	48 8b 05 ca 60 00 00 	mov    rax,QWORD PTR [rip+0x60ca]        # 140008098 <the_secs>
   140001fce:	48 8d 0d 4b 32 00 00 	lea    rcx,[rip+0x324b]        # 140005220 <.rdata+0x40>
   140001fd5:	8b 57 08             	mov    edx,DWORD PTR [rdi+0x8]
   140001fd8:	4c 8b 44 18 18       	mov    r8,QWORD PTR [rax+rbx*1+0x18]
   140001fdd:	e8 3e fe ff ff       	call   140001e20 <__report_error>
   140001fe2:	48 8d 0d 17 32 00 00 	lea    rcx,[rip+0x3217]        # 140005200 <.rdata+0x20>
   140001fe9:	48 89 da             	mov    rdx,rbx
   140001fec:	e8 2f fe ff ff       	call   140001e20 <__report_error>
   140001ff1:	90                   	nop
   140001ff2:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   140001ff9:	00 00 00 00 
   140001ffd:	0f 1f 00             	nop    DWORD PTR [rax]

0000000140002000 <_pei386_runtime_relocator>:
   140002000:	55                   	push   rbp
   140002001:	41 57                	push   r15
   140002003:	41 56                	push   r14
   140002005:	41 55                	push   r13
   140002007:	41 54                	push   r12
   140002009:	57                   	push   rdi
   14000200a:	56                   	push   rsi
   14000200b:	53                   	push   rbx
   14000200c:	48 83 ec 48          	sub    rsp,0x48
   140002010:	48 8d 6c 24 40       	lea    rbp,[rsp+0x40]
   140002015:	8b 3d 75 60 00 00    	mov    edi,DWORD PTR [rip+0x6075]        # 140008090 <was_init.0>
   14000201b:	85 ff                	test   edi,edi
   14000201d:	74 11                	je     140002030 <_pei386_runtime_relocator+0x30>
   14000201f:	48 8d 65 08          	lea    rsp,[rbp+0x8]
   140002023:	5b                   	pop    rbx
   140002024:	5e                   	pop    rsi
   140002025:	5f                   	pop    rdi
   140002026:	41 5c                	pop    r12
   140002028:	41 5d                	pop    r13
   14000202a:	41 5e                	pop    r14
   14000202c:	41 5f                	pop    r15
   14000202e:	5d                   	pop    rbp
   14000202f:	c3                   	ret
   140002030:	c7 05 56 60 00 00 01 	mov    DWORD PTR [rip+0x6056],0x1        # 140008090 <was_init.0>
   140002037:	00 00 00 
   14000203a:	e8 41 09 00 00       	call   140002980 <__mingw_GetSectionCount>
   14000203f:	48 98                	cdqe
   140002041:	48 8d 04 80          	lea    rax,[rax+rax*4]
   140002045:	48 8d 04 c5 0f 00 00 	lea    rax,[rax*8+0xf]
   14000204c:	00 
   14000204d:	48 83 e0 f0          	and    rax,0xfffffffffffffff0
   140002051:	e8 8a 0b 00 00       	call   140002be0 <___chkstk_ms>
   140002056:	4c 8b 2d 63 33 00 00 	mov    r13,QWORD PTR [rip+0x3363]        # 1400053c0 <.refptr.__RUNTIME_PSEUDO_RELOC_LIST_END__>
   14000205d:	c7 05 2d 60 00 00 00 	mov    DWORD PTR [rip+0x602d],0x0        # 140008094 <maxSections>
   140002064:	00 00 00 
   140002067:	48 8b 1d 62 33 00 00 	mov    rbx,QWORD PTR [rip+0x3362]        # 1400053d0 <.refptr.__RUNTIME_PSEUDO_RELOC_LIST__>
   14000206e:	48 29 c4             	sub    rsp,rax
   140002071:	48 8d 44 24 30       	lea    rax,[rsp+0x30]
   140002076:	48 89 05 1b 60 00 00 	mov    QWORD PTR [rip+0x601b],rax        # 140008098 <the_secs>
   14000207d:	4c 89 e8             	mov    rax,r13
   140002080:	48 29 d8             	sub    rax,rbx
   140002083:	48 83 f8 07          	cmp    rax,0x7
   140002087:	7e 96                	jle    14000201f <_pei386_runtime_relocator+0x1f>
   140002089:	48 83 f8 0b          	cmp    rax,0xb
   14000208d:	8b 13                	mov    edx,DWORD PTR [rbx]
   14000208f:	0f 8f 83 01 00 00    	jg     140002218 <_pei386_runtime_relocator+0x218>
   140002095:	8b 03                	mov    eax,DWORD PTR [rbx]
   140002097:	85 c0                	test   eax,eax
   140002099:	0f 85 71 02 00 00    	jne    140002310 <_pei386_runtime_relocator+0x310>
   14000209f:	8b 43 04             	mov    eax,DWORD PTR [rbx+0x4]
   1400020a2:	85 c0                	test   eax,eax
   1400020a4:	0f 85 66 02 00 00    	jne    140002310 <_pei386_runtime_relocator+0x310>
   1400020aa:	8b 53 08             	mov    edx,DWORD PTR [rbx+0x8]
   1400020ad:	83 fa 01             	cmp    edx,0x1
   1400020b0:	0f 85 9c 02 00 00    	jne    140002352 <_pei386_runtime_relocator+0x352>
   1400020b6:	48 83 c3 0c          	add    rbx,0xc
   1400020ba:	4c 39 eb             	cmp    rbx,r13
   1400020bd:	0f 83 5c ff ff ff    	jae    14000201f <_pei386_runtime_relocator+0x1f>
   1400020c3:	4c 8b 25 26 33 00 00 	mov    r12,QWORD PTR [rip+0x3326]        # 1400053f0 <.refptr.__image_base__>
   1400020ca:	49 bf ff ff ff 7f ff 	movabs r15,0xffffffff7fffffff
   1400020d1:	ff ff ff 
   1400020d4:	eb 5d                	jmp    140002133 <_pei386_runtime_relocator+0x133>
   1400020d6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   1400020dd:	00 00 00 
   1400020e0:	41 0f b6 36          	movzx  esi,BYTE PTR [r14]
   1400020e4:	81 e1 c0 00 00 00    	and    ecx,0xc0
   1400020ea:	40 84 f6             	test   sil,sil
   1400020ed:	0f 89 05 02 00 00    	jns    1400022f8 <_pei386_runtime_relocator+0x2f8>
   1400020f3:	48 81 ce 00 ff ff ff 	or     rsi,0xffffffffffffff00
   1400020fa:	48 29 c6             	sub    rsi,rax
   1400020fd:	4c 01 ce             	add    rsi,r9
   140002100:	85 c9                	test   ecx,ecx
   140002102:	75 17                	jne    14000211b <_pei386_runtime_relocator+0x11b>
   140002104:	48 81 fe ff 00 00 00 	cmp    rsi,0xff
   14000210b:	0f 8f 4e 01 00 00    	jg     14000225f <_pei386_runtime_relocator+0x25f>
   140002111:	48 83 fe 80          	cmp    rsi,0xffffffffffffff80
   140002115:	0f 8c 44 01 00 00    	jl     14000225f <_pei386_runtime_relocator+0x25f>
   14000211b:	4c 89 f1             	mov    rcx,r14
   14000211e:	e8 6d fd ff ff       	call   140001e90 <mark_section_writable>
   140002123:	41 88 36             	mov    BYTE PTR [r14],sil
   140002126:	48 83 c3 0c          	add    rbx,0xc
   14000212a:	4c 39 eb             	cmp    rbx,r13
   14000212d:	0f 83 8d 00 00 00    	jae    1400021c0 <_pei386_runtime_relocator+0x1c0>
   140002133:	8b 4b 08             	mov    ecx,DWORD PTR [rbx+0x8]
   140002136:	8b 03                	mov    eax,DWORD PTR [rbx]
   140002138:	44 8b 43 04          	mov    r8d,DWORD PTR [rbx+0x4]
   14000213c:	0f b6 d1             	movzx  edx,cl
   14000213f:	4c 01 e0             	add    rax,r12
   140002142:	83 fa 20             	cmp    edx,0x20
   140002145:	4c 8b 08             	mov    r9,QWORD PTR [rax]
   140002148:	4f 8d 34 20          	lea    r14,[r8+r12*1]
   14000214c:	0f 84 26 01 00 00    	je     140002278 <_pei386_runtime_relocator+0x278>
   140002152:	0f 87 e8 00 00 00    	ja     140002240 <_pei386_runtime_relocator+0x240>
   140002158:	83 fa 08             	cmp    edx,0x8
   14000215b:	74 83                	je     1400020e0 <_pei386_runtime_relocator+0xe0>
   14000215d:	83 fa 10             	cmp    edx,0x10
   140002160:	0f 85 e0 01 00 00    	jne    140002346 <_pei386_runtime_relocator+0x346>
   140002166:	41 0f b7 36          	movzx  esi,WORD PTR [r14]
   14000216a:	81 e1 c0 00 00 00    	and    ecx,0xc0
   140002170:	66 85 f6             	test   si,si
   140002173:	0f 89 67 01 00 00    	jns    1400022e0 <_pei386_runtime_relocator+0x2e0>
   140002179:	48 81 ce 00 00 ff ff 	or     rsi,0xffffffffffff0000
   140002180:	48 29 c6             	sub    rsi,rax
   140002183:	4c 01 ce             	add    rsi,r9
   140002186:	85 c9                	test   ecx,ecx
   140002188:	75 1a                	jne    1400021a4 <_pei386_runtime_relocator+0x1a4>
   14000218a:	48 81 fe 00 80 ff ff 	cmp    rsi,0xffffffffffff8000
   140002191:	0f 8c c8 00 00 00    	jl     14000225f <_pei386_runtime_relocator+0x25f>
   140002197:	48 81 fe ff ff 00 00 	cmp    rsi,0xffff
   14000219e:	0f 8f bb 00 00 00    	jg     14000225f <_pei386_runtime_relocator+0x25f>
   1400021a4:	4c 89 f1             	mov    rcx,r14
   1400021a7:	48 83 c3 0c          	add    rbx,0xc
   1400021ab:	e8 e0 fc ff ff       	call   140001e90 <mark_section_writable>
   1400021b0:	4c 39 eb             	cmp    rbx,r13
   1400021b3:	66 41 89 36          	mov    WORD PTR [r14],si
   1400021b7:	0f 82 76 ff ff ff    	jb     140002133 <_pei386_runtime_relocator+0x133>
   1400021bd:	0f 1f 00             	nop    DWORD PTR [rax]
   1400021c0:	8b 15 ce 5e 00 00    	mov    edx,DWORD PTR [rip+0x5ece]        # 140008094 <maxSections>
   1400021c6:	85 d2                	test   edx,edx
   1400021c8:	0f 8e 51 fe ff ff    	jle    14000201f <_pei386_runtime_relocator+0x1f>
   1400021ce:	48 8b 35 fb 70 00 00 	mov    rsi,QWORD PTR [rip+0x70fb]        # 1400092d0 <__imp_VirtualProtect>
   1400021d5:	4c 8d 65 fc          	lea    r12,[rbp-0x4]
   1400021d9:	31 db                	xor    ebx,ebx
   1400021db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   1400021e0:	48 8b 05 b1 5e 00 00 	mov    rax,QWORD PTR [rip+0x5eb1]        # 140008098 <the_secs>
   1400021e7:	48 01 d8             	add    rax,rbx
   1400021ea:	44 8b 00             	mov    r8d,DWORD PTR [rax]
   1400021ed:	45 85 c0             	test   r8d,r8d
   1400021f0:	74 0d                	je     1400021ff <_pei386_runtime_relocator+0x1ff>
   1400021f2:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
   1400021f6:	4d 89 e1             	mov    r9,r12
   1400021f9:	48 8b 48 08          	mov    rcx,QWORD PTR [rax+0x8]
   1400021fd:	ff d6                	call   rsi
   1400021ff:	83 c7 01             	add    edi,0x1
   140002202:	48 83 c3 28          	add    rbx,0x28
   140002206:	3b 3d 88 5e 00 00    	cmp    edi,DWORD PTR [rip+0x5e88]        # 140008094 <maxSections>
   14000220c:	7c d2                	jl     1400021e0 <_pei386_runtime_relocator+0x1e0>
   14000220e:	e9 0c fe ff ff       	jmp    14000201f <_pei386_runtime_relocator+0x1f>
   140002213:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140002218:	85 d2                	test   edx,edx
   14000221a:	0f 85 f0 00 00 00    	jne    140002310 <_pei386_runtime_relocator+0x310>
   140002220:	8b 43 04             	mov    eax,DWORD PTR [rbx+0x4]
   140002223:	89 c2                	mov    edx,eax
   140002225:	0b 53 08             	or     edx,DWORD PTR [rbx+0x8]
   140002228:	0f 85 74 fe ff ff    	jne    1400020a2 <_pei386_runtime_relocator+0xa2>
   14000222e:	48 83 c3 0c          	add    rbx,0xc
   140002232:	e9 5e fe ff ff       	jmp    140002095 <_pei386_runtime_relocator+0x95>
   140002237:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   14000223e:	00 00 
   140002240:	83 fa 40             	cmp    edx,0x40
   140002243:	0f 85 fd 00 00 00    	jne    140002346 <_pei386_runtime_relocator+0x346>
   140002249:	49 8b 36             	mov    rsi,QWORD PTR [r14]
   14000224c:	48 29 c6             	sub    rsi,rax
   14000224f:	4c 01 ce             	add    rsi,r9
   140002252:	81 e1 c0 00 00 00    	and    ecx,0xc0
   140002258:	75 66                	jne    1400022c0 <_pei386_runtime_relocator+0x2c0>
   14000225a:	48 85 f6             	test   rsi,rsi
   14000225d:	78 61                	js     1400022c0 <_pei386_runtime_relocator+0x2c0>
   14000225f:	48 89 74 24 20       	mov    QWORD PTR [rsp+0x20],rsi
   140002264:	48 8d 0d 7d 30 00 00 	lea    rcx,[rip+0x307d]        # 1400052e8 <.rdata+0x108>
   14000226b:	4d 89 f0             	mov    r8,r14
   14000226e:	e8 ad fb ff ff       	call   140001e20 <__report_error>
   140002273:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140002278:	41 8b 36             	mov    esi,DWORD PTR [r14]
   14000227b:	81 e1 c0 00 00 00    	and    ecx,0xc0
   140002281:	85 f6                	test   esi,esi
   140002283:	79 4b                	jns    1400022d0 <_pei386_runtime_relocator+0x2d0>
   140002285:	49 bb 00 00 00 00 ff 	movabs r11,0xffffffff00000000
   14000228c:	ff ff ff 
   14000228f:	4c 09 de             	or     rsi,r11
   140002292:	48 29 c6             	sub    rsi,rax
   140002295:	4c 01 ce             	add    rsi,r9
   140002298:	85 c9                	test   ecx,ecx
   14000229a:	75 0f                	jne    1400022ab <_pei386_runtime_relocator+0x2ab>
   14000229c:	4c 39 fe             	cmp    rsi,r15
   14000229f:	7e be                	jle    14000225f <_pei386_runtime_relocator+0x25f>
   1400022a1:	b8 ff ff ff ff       	mov    eax,0xffffffff
   1400022a6:	48 39 c6             	cmp    rsi,rax
   1400022a9:	7f b4                	jg     14000225f <_pei386_runtime_relocator+0x25f>
   1400022ab:	4c 89 f1             	mov    rcx,r14
   1400022ae:	e8 dd fb ff ff       	call   140001e90 <mark_section_writable>
   1400022b3:	41 89 36             	mov    DWORD PTR [r14],esi
   1400022b6:	e9 6b fe ff ff       	jmp    140002126 <_pei386_runtime_relocator+0x126>
   1400022bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   1400022c0:	4c 89 f1             	mov    rcx,r14
   1400022c3:	e8 c8 fb ff ff       	call   140001e90 <mark_section_writable>
   1400022c8:	49 89 36             	mov    QWORD PTR [r14],rsi
   1400022cb:	e9 56 fe ff ff       	jmp    140002126 <_pei386_runtime_relocator+0x126>
   1400022d0:	48 29 c6             	sub    rsi,rax
   1400022d3:	4c 01 ce             	add    rsi,r9
   1400022d6:	85 c9                	test   ecx,ecx
   1400022d8:	74 c2                	je     14000229c <_pei386_runtime_relocator+0x29c>
   1400022da:	eb cf                	jmp    1400022ab <_pei386_runtime_relocator+0x2ab>
   1400022dc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   1400022e0:	48 29 c6             	sub    rsi,rax
   1400022e3:	4c 01 ce             	add    rsi,r9
   1400022e6:	85 c9                	test   ecx,ecx
   1400022e8:	0f 84 9c fe ff ff    	je     14000218a <_pei386_runtime_relocator+0x18a>
   1400022ee:	e9 b1 fe ff ff       	jmp    1400021a4 <_pei386_runtime_relocator+0x1a4>
   1400022f3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   1400022f8:	48 29 c6             	sub    rsi,rax
   1400022fb:	4c 01 ce             	add    rsi,r9
   1400022fe:	85 c9                	test   ecx,ecx
   140002300:	0f 84 fe fd ff ff    	je     140002104 <_pei386_runtime_relocator+0x104>
   140002306:	e9 10 fe ff ff       	jmp    14000211b <_pei386_runtime_relocator+0x11b>
   14000230b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140002310:	4c 39 eb             	cmp    rbx,r13
   140002313:	0f 83 06 fd ff ff    	jae    14000201f <_pei386_runtime_relocator+0x1f>
   140002319:	4c 8b 35 d0 30 00 00 	mov    r14,QWORD PTR [rip+0x30d0]        # 1400053f0 <.refptr.__image_base__>
   140002320:	8b 73 04             	mov    esi,DWORD PTR [rbx+0x4]
   140002323:	48 83 c3 08          	add    rbx,0x8
   140002327:	44 8b 63 f8          	mov    r12d,DWORD PTR [rbx-0x8]
   14000232b:	4c 01 f6             	add    rsi,r14
   14000232e:	44 03 26             	add    r12d,DWORD PTR [rsi]
   140002331:	48 89 f1             	mov    rcx,rsi
   140002334:	e8 57 fb ff ff       	call   140001e90 <mark_section_writable>
   140002339:	4c 39 eb             	cmp    rbx,r13
   14000233c:	44 89 26             	mov    DWORD PTR [rsi],r12d
   14000233f:	72 df                	jb     140002320 <_pei386_runtime_relocator+0x320>
   140002341:	e9 7a fe ff ff       	jmp    1400021c0 <_pei386_runtime_relocator+0x1c0>
   140002346:	48 8d 0d 6b 2f 00 00 	lea    rcx,[rip+0x2f6b]        # 1400052b8 <.rdata+0xd8>
   14000234d:	e8 ce fa ff ff       	call   140001e20 <__report_error>
   140002352:	48 8d 0d 27 2f 00 00 	lea    rcx,[rip+0x2f27]        # 140005280 <.rdata+0xa0>
   140002359:	e8 c2 fa ff ff       	call   140001e20 <__report_error>
   14000235e:	90                   	nop
   14000235f:	90                   	nop

0000000140002360 <__mingw_raise_matherr>:
   140002360:	48 83 ec 58          	sub    rsp,0x58
   140002364:	48 8b 05 35 5d 00 00 	mov    rax,QWORD PTR [rip+0x5d35]        # 1400080a0 <stUserMathErr>
   14000236b:	48 85 c0             	test   rax,rax
   14000236e:	66 0f 14 d3          	unpcklpd xmm2,xmm3
   140002372:	74 25                	je     140002399 <__mingw_raise_matherr+0x39>
   140002374:	f2 0f 10 84 24 80 00 	movsd  xmm0,QWORD PTR [rsp+0x80]
   14000237b:	00 00 
   14000237d:	89 4c 24 20          	mov    DWORD PTR [rsp+0x20],ecx
   140002381:	48 8d 4c 24 20       	lea    rcx,[rsp+0x20]
   140002386:	48 89 54 24 28       	mov    QWORD PTR [rsp+0x28],rdx
   14000238b:	0f 29 54 24 30       	movaps XMMWORD PTR [rsp+0x30],xmm2
   140002390:	f2 0f 11 44 24 40    	movsd  QWORD PTR [rsp+0x40],xmm0
   140002396:	ff d0                	call   rax
   140002398:	90                   	nop
   140002399:	48 83 c4 58          	add    rsp,0x58
   14000239d:	c3                   	ret
   14000239e:	66 90                	xchg   ax,ax

00000001400023a0 <__mingw_setusermatherr>:
   1400023a0:	48 89 0d f9 5c 00 00 	mov    QWORD PTR [rip+0x5cf9],rcx        # 1400080a0 <stUserMathErr>
   1400023a7:	e9 44 0c 00 00       	jmp    140002ff0 <__setusermatherr>
   1400023ac:	90                   	nop
   1400023ad:	90                   	nop
   1400023ae:	90                   	nop
   1400023af:	90                   	nop

00000001400023b0 <_gnu_exception_handler>:
   1400023b0:	53                   	push   rbx
   1400023b1:	48 83 ec 20          	sub    rsp,0x20
   1400023b5:	48 8b 11             	mov    rdx,QWORD PTR [rcx]
   1400023b8:	8b 02                	mov    eax,DWORD PTR [rdx]
   1400023ba:	48 89 cb             	mov    rbx,rcx
   1400023bd:	89 c1                	mov    ecx,eax
   1400023bf:	81 e1 ff ff ff 20    	and    ecx,0x20ffffff
   1400023c5:	81 f9 43 43 47 20    	cmp    ecx,0x20474343
   1400023cb:	0f 84 9f 00 00 00    	je     140002470 <_gnu_exception_handler+0xc0>
   1400023d1:	3d 96 00 00 c0       	cmp    eax,0xc0000096
   1400023d6:	77 77                	ja     14000244f <_gnu_exception_handler+0x9f>
   1400023d8:	3d 8b 00 00 c0       	cmp    eax,0xc000008b
   1400023dd:	76 21                	jbe    140002400 <_gnu_exception_handler+0x50>
   1400023df:	05 73 ff ff 3f       	add    eax,0x3fffff73
   1400023e4:	83 f8 09             	cmp    eax,0x9
   1400023e7:	77 54                	ja     14000243d <_gnu_exception_handler+0x8d>
   1400023e9:	48 8d 15 50 2f 00 00 	lea    rdx,[rip+0x2f50]        # 140005340 <.rdata>
   1400023f0:	48 63 04 82          	movsxd rax,DWORD PTR [rdx+rax*4]
   1400023f4:	48 01 d0             	add    rax,rdx
   1400023f7:	ff e0                	jmp    rax
   1400023f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   140002400:	3d 05 00 00 c0       	cmp    eax,0xc0000005
   140002405:	0f 84 d5 00 00 00    	je     1400024e0 <_gnu_exception_handler+0x130>
   14000240b:	76 3b                	jbe    140002448 <_gnu_exception_handler+0x98>
   14000240d:	3d 08 00 00 c0       	cmp    eax,0xc0000008
   140002412:	74 29                	je     14000243d <_gnu_exception_handler+0x8d>
   140002414:	3d 1d 00 00 c0       	cmp    eax,0xc000001d
   140002419:	75 34                	jne    14000244f <_gnu_exception_handler+0x9f>
   14000241b:	31 d2                	xor    edx,edx
   14000241d:	b9 04 00 00 00       	mov    ecx,0x4
   140002422:	e8 a9 0b 00 00       	call   140002fd0 <signal>
   140002427:	48 83 f8 01          	cmp    rax,0x1
   14000242b:	0f 84 d6 00 00 00    	je     140002507 <_gnu_exception_handler+0x157>
   140002431:	48 85 c0             	test   rax,rax
   140002434:	74 19                	je     14000244f <_gnu_exception_handler+0x9f>
   140002436:	b9 04 00 00 00       	mov    ecx,0x4
   14000243b:	ff d0                	call   rax
   14000243d:	b8 ff ff ff ff       	mov    eax,0xffffffff
   140002442:	48 83 c4 20          	add    rsp,0x20
   140002446:	5b                   	pop    rbx
   140002447:	c3                   	ret
   140002448:	3d 02 00 00 80       	cmp    eax,0x80000002
   14000244d:	74 ee                	je     14000243d <_gnu_exception_handler+0x8d>
   14000244f:	48 8b 05 6a 5c 00 00 	mov    rax,QWORD PTR [rip+0x5c6a]        # 1400080c0 <__mingw_oldexcpt_handler>
   140002456:	48 85 c0             	test   rax,rax
   140002459:	74 25                	je     140002480 <_gnu_exception_handler+0xd0>
   14000245b:	48 89 d9             	mov    rcx,rbx
   14000245e:	48 83 c4 20          	add    rsp,0x20
   140002462:	5b                   	pop    rbx
   140002463:	48 ff e0             	rex.W jmp rax
   140002466:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   14000246d:	00 00 00 
   140002470:	f6 42 04 01          	test   BYTE PTR [rdx+0x4],0x1
   140002474:	0f 85 57 ff ff ff    	jne    1400023d1 <_gnu_exception_handler+0x21>
   14000247a:	eb c1                	jmp    14000243d <_gnu_exception_handler+0x8d>
   14000247c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140002480:	31 c0                	xor    eax,eax
   140002482:	48 83 c4 20          	add    rsp,0x20
   140002486:	5b                   	pop    rbx
   140002487:	c3                   	ret
   140002488:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   14000248f:	00 
   140002490:	31 d2                	xor    edx,edx
   140002492:	b9 08 00 00 00       	mov    ecx,0x8
   140002497:	e8 34 0b 00 00       	call   140002fd0 <signal>
   14000249c:	48 83 f8 01          	cmp    rax,0x1
   1400024a0:	0f 84 89 00 00 00    	je     14000252f <_gnu_exception_handler+0x17f>
   1400024a6:	48 85 c0             	test   rax,rax
   1400024a9:	74 a4                	je     14000244f <_gnu_exception_handler+0x9f>
   1400024ab:	b9 08 00 00 00       	mov    ecx,0x8
   1400024b0:	ff d0                	call   rax
   1400024b2:	eb 89                	jmp    14000243d <_gnu_exception_handler+0x8d>
   1400024b4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   1400024b8:	31 d2                	xor    edx,edx
   1400024ba:	b9 08 00 00 00       	mov    ecx,0x8
   1400024bf:	e8 0c 0b 00 00       	call   140002fd0 <signal>
   1400024c4:	48 83 f8 01          	cmp    rax,0x1
   1400024c8:	75 dc                	jne    1400024a6 <_gnu_exception_handler+0xf6>
   1400024ca:	ba 01 00 00 00       	mov    edx,0x1
   1400024cf:	b9 08 00 00 00       	mov    ecx,0x8
   1400024d4:	e8 f7 0a 00 00       	call   140002fd0 <signal>
   1400024d9:	e9 5f ff ff ff       	jmp    14000243d <_gnu_exception_handler+0x8d>
   1400024de:	66 90                	xchg   ax,ax
   1400024e0:	31 d2                	xor    edx,edx
   1400024e2:	b9 0b 00 00 00       	mov    ecx,0xb
   1400024e7:	e8 e4 0a 00 00       	call   140002fd0 <signal>
   1400024ec:	48 83 f8 01          	cmp    rax,0x1
   1400024f0:	74 29                	je     14000251b <_gnu_exception_handler+0x16b>
   1400024f2:	48 85 c0             	test   rax,rax
   1400024f5:	0f 84 54 ff ff ff    	je     14000244f <_gnu_exception_handler+0x9f>
   1400024fb:	b9 0b 00 00 00       	mov    ecx,0xb
   140002500:	ff d0                	call   rax
   140002502:	e9 36 ff ff ff       	jmp    14000243d <_gnu_exception_handler+0x8d>
   140002507:	ba 01 00 00 00       	mov    edx,0x1
   14000250c:	b9 04 00 00 00       	mov    ecx,0x4
   140002511:	e8 ba 0a 00 00       	call   140002fd0 <signal>
   140002516:	e9 22 ff ff ff       	jmp    14000243d <_gnu_exception_handler+0x8d>
   14000251b:	ba 01 00 00 00       	mov    edx,0x1
   140002520:	b9 0b 00 00 00       	mov    ecx,0xb
   140002525:	e8 a6 0a 00 00       	call   140002fd0 <signal>
   14000252a:	e9 0e ff ff ff       	jmp    14000243d <_gnu_exception_handler+0x8d>
   14000252f:	ba 01 00 00 00       	mov    edx,0x1
   140002534:	b9 08 00 00 00       	mov    ecx,0x8
   140002539:	e8 92 0a 00 00       	call   140002fd0 <signal>
   14000253e:	e8 cd f8 ff ff       	call   140001e10 <_fpreset>
   140002543:	e9 f5 fe ff ff       	jmp    14000243d <_gnu_exception_handler+0x8d>
   140002548:	90                   	nop
   140002549:	90                   	nop
   14000254a:	90                   	nop
   14000254b:	90                   	nop
   14000254c:	90                   	nop
   14000254d:	90                   	nop
   14000254e:	90                   	nop
   14000254f:	90                   	nop

0000000140002550 <__mingwthr_run_key_dtors.part.0>:
   140002550:	41 54                	push   r12
   140002552:	55                   	push   rbp
   140002553:	57                   	push   rdi
   140002554:	56                   	push   rsi
   140002555:	53                   	push   rbx
   140002556:	48 83 ec 20          	sub    rsp,0x20
   14000255a:	4c 8d 25 9f 5b 00 00 	lea    r12,[rip+0x5b9f]        # 140008100 <__mingwthr_cs>
   140002561:	4c 89 e1             	mov    rcx,r12
   140002564:	ff 15 2e 6d 00 00    	call   QWORD PTR [rip+0x6d2e]        # 140009298 <__imp_EnterCriticalSection>
   14000256a:	48 8b 1d 6f 5b 00 00 	mov    rbx,QWORD PTR [rip+0x5b6f]        # 1400080e0 <key_dtor_list>
   140002571:	48 85 db             	test   rbx,rbx
   140002574:	74 36                	je     1400025ac <__mingwthr_run_key_dtors.part.0+0x5c>
   140002576:	48 8b 2d 4b 6d 00 00 	mov    rbp,QWORD PTR [rip+0x6d4b]        # 1400092c8 <__imp_TlsGetValue>
   14000257d:	48 8b 3d 1c 6d 00 00 	mov    rdi,QWORD PTR [rip+0x6d1c]        # 1400092a0 <__imp_GetLastError>
   140002584:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140002588:	8b 0b                	mov    ecx,DWORD PTR [rbx]
   14000258a:	ff d5                	call   rbp
   14000258c:	48 89 c6             	mov    rsi,rax
   14000258f:	ff d7                	call   rdi
   140002591:	85 c0                	test   eax,eax
   140002593:	75 0e                	jne    1400025a3 <__mingwthr_run_key_dtors.part.0+0x53>
   140002595:	48 85 f6             	test   rsi,rsi
   140002598:	74 09                	je     1400025a3 <__mingwthr_run_key_dtors.part.0+0x53>
   14000259a:	48 8b 43 08          	mov    rax,QWORD PTR [rbx+0x8]
   14000259e:	48 89 f1             	mov    rcx,rsi
   1400025a1:	ff d0                	call   rax
   1400025a3:	48 8b 5b 10          	mov    rbx,QWORD PTR [rbx+0x10]
   1400025a7:	48 85 db             	test   rbx,rbx
   1400025aa:	75 dc                	jne    140002588 <__mingwthr_run_key_dtors.part.0+0x38>
   1400025ac:	4c 89 e1             	mov    rcx,r12
   1400025af:	48 83 c4 20          	add    rsp,0x20
   1400025b3:	5b                   	pop    rbx
   1400025b4:	5e                   	pop    rsi
   1400025b5:	5f                   	pop    rdi
   1400025b6:	5d                   	pop    rbp
   1400025b7:	41 5c                	pop    r12
   1400025b9:	48 ff 25 f0 6c 00 00 	rex.W jmp QWORD PTR [rip+0x6cf0]        # 1400092b0 <__imp_LeaveCriticalSection>

00000001400025c0 <___w64_mingwthr_add_key_dtor>:
   1400025c0:	57                   	push   rdi
   1400025c1:	56                   	push   rsi
   1400025c2:	53                   	push   rbx
   1400025c3:	48 83 ec 20          	sub    rsp,0x20
   1400025c7:	8b 05 1b 5b 00 00    	mov    eax,DWORD PTR [rip+0x5b1b]        # 1400080e8 <__mingwthr_cs_init>
   1400025cd:	85 c0                	test   eax,eax
   1400025cf:	89 cf                	mov    edi,ecx
   1400025d1:	48 89 d6             	mov    rsi,rdx
   1400025d4:	75 0a                	jne    1400025e0 <___w64_mingwthr_add_key_dtor+0x20>
   1400025d6:	31 c0                	xor    eax,eax
   1400025d8:	48 83 c4 20          	add    rsp,0x20
   1400025dc:	5b                   	pop    rbx
   1400025dd:	5e                   	pop    rsi
   1400025de:	5f                   	pop    rdi
   1400025df:	c3                   	ret
   1400025e0:	ba 18 00 00 00       	mov    edx,0x18
   1400025e5:	b9 01 00 00 00       	mov    ecx,0x1
   1400025ea:	e8 19 0a 00 00       	call   140003008 <calloc>
   1400025ef:	48 85 c0             	test   rax,rax
   1400025f2:	48 89 c3             	mov    rbx,rax
   1400025f5:	74 33                	je     14000262a <___w64_mingwthr_add_key_dtor+0x6a>
   1400025f7:	48 89 70 08          	mov    QWORD PTR [rax+0x8],rsi
   1400025fb:	48 8d 35 fe 5a 00 00 	lea    rsi,[rip+0x5afe]        # 140008100 <__mingwthr_cs>
   140002602:	89 38                	mov    DWORD PTR [rax],edi
   140002604:	48 89 f1             	mov    rcx,rsi
   140002607:	ff 15 8b 6c 00 00    	call   QWORD PTR [rip+0x6c8b]        # 140009298 <__imp_EnterCriticalSection>
   14000260d:	48 8b 05 cc 5a 00 00 	mov    rax,QWORD PTR [rip+0x5acc]        # 1400080e0 <key_dtor_list>
   140002614:	48 89 f1             	mov    rcx,rsi
   140002617:	48 89 1d c2 5a 00 00 	mov    QWORD PTR [rip+0x5ac2],rbx        # 1400080e0 <key_dtor_list>
   14000261e:	48 89 43 10          	mov    QWORD PTR [rbx+0x10],rax
   140002622:	ff 15 88 6c 00 00    	call   QWORD PTR [rip+0x6c88]        # 1400092b0 <__imp_LeaveCriticalSection>
   140002628:	eb ac                	jmp    1400025d6 <___w64_mingwthr_add_key_dtor+0x16>
   14000262a:	83 c8 ff             	or     eax,0xffffffff
   14000262d:	eb a9                	jmp    1400025d8 <___w64_mingwthr_add_key_dtor+0x18>
   14000262f:	90                   	nop

0000000140002630 <___w64_mingwthr_remove_key_dtor>:
   140002630:	56                   	push   rsi
   140002631:	53                   	push   rbx
   140002632:	48 83 ec 28          	sub    rsp,0x28
   140002636:	8b 05 ac 5a 00 00    	mov    eax,DWORD PTR [rip+0x5aac]        # 1400080e8 <__mingwthr_cs_init>
   14000263c:	85 c0                	test   eax,eax
   14000263e:	89 cb                	mov    ebx,ecx
   140002640:	75 0e                	jne    140002650 <___w64_mingwthr_remove_key_dtor+0x20>
   140002642:	31 c0                	xor    eax,eax
   140002644:	48 83 c4 28          	add    rsp,0x28
   140002648:	5b                   	pop    rbx
   140002649:	5e                   	pop    rsi
   14000264a:	c3                   	ret
   14000264b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140002650:	48 8d 35 a9 5a 00 00 	lea    rsi,[rip+0x5aa9]        # 140008100 <__mingwthr_cs>
   140002657:	48 89 f1             	mov    rcx,rsi
   14000265a:	ff 15 38 6c 00 00    	call   QWORD PTR [rip+0x6c38]        # 140009298 <__imp_EnterCriticalSection>
   140002660:	48 8b 0d 79 5a 00 00 	mov    rcx,QWORD PTR [rip+0x5a79]        # 1400080e0 <key_dtor_list>
   140002667:	48 85 c9             	test   rcx,rcx
   14000266a:	74 27                	je     140002693 <___w64_mingwthr_remove_key_dtor+0x63>
   14000266c:	31 d2                	xor    edx,edx
   14000266e:	eb 0b                	jmp    14000267b <___w64_mingwthr_remove_key_dtor+0x4b>
   140002670:	48 85 c0             	test   rax,rax
   140002673:	48 89 ca             	mov    rdx,rcx
   140002676:	74 1b                	je     140002693 <___w64_mingwthr_remove_key_dtor+0x63>
   140002678:	48 89 c1             	mov    rcx,rax
   14000267b:	8b 01                	mov    eax,DWORD PTR [rcx]
   14000267d:	39 d8                	cmp    eax,ebx
   14000267f:	48 8b 41 10          	mov    rax,QWORD PTR [rcx+0x10]
   140002683:	75 eb                	jne    140002670 <___w64_mingwthr_remove_key_dtor+0x40>
   140002685:	48 85 d2             	test   rdx,rdx
   140002688:	74 1e                	je     1400026a8 <___w64_mingwthr_remove_key_dtor+0x78>
   14000268a:	48 89 42 10          	mov    QWORD PTR [rdx+0x10],rax
   14000268e:	e8 7d 09 00 00       	call   140003010 <free>
   140002693:	48 89 f1             	mov    rcx,rsi
   140002696:	ff 15 14 6c 00 00    	call   QWORD PTR [rip+0x6c14]        # 1400092b0 <__imp_LeaveCriticalSection>
   14000269c:	31 c0                	xor    eax,eax
   14000269e:	48 83 c4 28          	add    rsp,0x28
   1400026a2:	5b                   	pop    rbx
   1400026a3:	5e                   	pop    rsi
   1400026a4:	c3                   	ret
   1400026a5:	0f 1f 00             	nop    DWORD PTR [rax]
   1400026a8:	48 89 05 31 5a 00 00 	mov    QWORD PTR [rip+0x5a31],rax        # 1400080e0 <key_dtor_list>
   1400026af:	eb dd                	jmp    14000268e <___w64_mingwthr_remove_key_dtor+0x5e>
   1400026b1:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1400026b8:	00 00 00 00 
   1400026bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000001400026c0 <__mingw_TLScallback>:
   1400026c0:	53                   	push   rbx
   1400026c1:	48 83 ec 20          	sub    rsp,0x20
   1400026c5:	83 fa 02             	cmp    edx,0x2
   1400026c8:	0f 84 b2 00 00 00    	je     140002780 <__mingw_TLScallback+0xc0>
   1400026ce:	77 30                	ja     140002700 <__mingw_TLScallback+0x40>
   1400026d0:	85 d2                	test   edx,edx
   1400026d2:	74 4c                	je     140002720 <__mingw_TLScallback+0x60>
   1400026d4:	8b 05 0e 5a 00 00    	mov    eax,DWORD PTR [rip+0x5a0e]        # 1400080e8 <__mingwthr_cs_init>
   1400026da:	85 c0                	test   eax,eax
   1400026dc:	0f 84 be 00 00 00    	je     1400027a0 <__mingw_TLScallback+0xe0>
   1400026e2:	c7 05 fc 59 00 00 01 	mov    DWORD PTR [rip+0x59fc],0x1        # 1400080e8 <__mingwthr_cs_init>
   1400026e9:	00 00 00 
   1400026ec:	b8 01 00 00 00       	mov    eax,0x1
   1400026f1:	48 83 c4 20          	add    rsp,0x20
   1400026f5:	5b                   	pop    rbx
   1400026f6:	c3                   	ret
   1400026f7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   1400026fe:	00 00 
   140002700:	83 fa 03             	cmp    edx,0x3
   140002703:	75 e7                	jne    1400026ec <__mingw_TLScallback+0x2c>
   140002705:	8b 05 dd 59 00 00    	mov    eax,DWORD PTR [rip+0x59dd]        # 1400080e8 <__mingwthr_cs_init>
   14000270b:	85 c0                	test   eax,eax
   14000270d:	74 dd                	je     1400026ec <__mingw_TLScallback+0x2c>
   14000270f:	e8 3c fe ff ff       	call   140002550 <__mingwthr_run_key_dtors.part.0>
   140002714:	eb d6                	jmp    1400026ec <__mingw_TLScallback+0x2c>
   140002716:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   14000271d:	00 00 00 
   140002720:	8b 05 c2 59 00 00    	mov    eax,DWORD PTR [rip+0x59c2]        # 1400080e8 <__mingwthr_cs_init>
   140002726:	85 c0                	test   eax,eax
   140002728:	75 66                	jne    140002790 <__mingw_TLScallback+0xd0>
   14000272a:	8b 05 b8 59 00 00    	mov    eax,DWORD PTR [rip+0x59b8]        # 1400080e8 <__mingwthr_cs_init>
   140002730:	83 f8 01             	cmp    eax,0x1
   140002733:	75 b7                	jne    1400026ec <__mingw_TLScallback+0x2c>
   140002735:	48 8b 1d a4 59 00 00 	mov    rbx,QWORD PTR [rip+0x59a4]        # 1400080e0 <key_dtor_list>
   14000273c:	48 85 db             	test   rbx,rbx
   14000273f:	74 18                	je     140002759 <__mingw_TLScallback+0x99>
   140002741:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   140002748:	48 89 d9             	mov    rcx,rbx
   14000274b:	48 8b 5b 10          	mov    rbx,QWORD PTR [rbx+0x10]
   14000274f:	e8 bc 08 00 00       	call   140003010 <free>
   140002754:	48 85 db             	test   rbx,rbx
   140002757:	75 ef                	jne    140002748 <__mingw_TLScallback+0x88>
   140002759:	48 8d 0d a0 59 00 00 	lea    rcx,[rip+0x59a0]        # 140008100 <__mingwthr_cs>
   140002760:	48 c7 05 75 59 00 00 	mov    QWORD PTR [rip+0x5975],0x0        # 1400080e0 <key_dtor_list>
   140002767:	00 00 00 00 
   14000276b:	c7 05 73 59 00 00 00 	mov    DWORD PTR [rip+0x5973],0x0        # 1400080e8 <__mingwthr_cs_init>
   140002772:	00 00 00 
   140002775:	ff 15 15 6b 00 00    	call   QWORD PTR [rip+0x6b15]        # 140009290 <__IAT_start__>
   14000277b:	e9 6c ff ff ff       	jmp    1400026ec <__mingw_TLScallback+0x2c>
   140002780:	e8 8b f6 ff ff       	call   140001e10 <_fpreset>
   140002785:	b8 01 00 00 00       	mov    eax,0x1
   14000278a:	48 83 c4 20          	add    rsp,0x20
   14000278e:	5b                   	pop    rbx
   14000278f:	c3                   	ret
   140002790:	e8 bb fd ff ff       	call   140002550 <__mingwthr_run_key_dtors.part.0>
   140002795:	eb 93                	jmp    14000272a <__mingw_TLScallback+0x6a>
   140002797:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   14000279e:	00 00 
   1400027a0:	48 8d 0d 59 59 00 00 	lea    rcx,[rip+0x5959]        # 140008100 <__mingwthr_cs>
   1400027a7:	ff 15 fb 6a 00 00    	call   QWORD PTR [rip+0x6afb]        # 1400092a8 <__imp_InitializeCriticalSection>
   1400027ad:	e9 30 ff ff ff       	jmp    1400026e2 <__mingw_TLScallback+0x22>
   1400027b2:	90                   	nop
   1400027b3:	90                   	nop
   1400027b4:	90                   	nop
   1400027b5:	90                   	nop
   1400027b6:	90                   	nop
   1400027b7:	90                   	nop
   1400027b8:	90                   	nop
   1400027b9:	90                   	nop
   1400027ba:	90                   	nop
   1400027bb:	90                   	nop
   1400027bc:	90                   	nop
   1400027bd:	90                   	nop
   1400027be:	90                   	nop
   1400027bf:	90                   	nop

00000001400027c0 <exit>:
   1400027c0:	48 83 ec 28          	sub    rsp,0x28
   1400027c4:	48 8b 05 65 2c 00 00 	mov    rax,QWORD PTR [rip+0x2c65]        # 140005430 <.refptr.__imp_exit>
   1400027cb:	ff 10                	call   QWORD PTR [rax]
   1400027cd:	90                   	nop
   1400027ce:	66 90                	xchg   ax,ax

00000001400027d0 <_exit>:
   1400027d0:	48 83 ec 28          	sub    rsp,0x28
   1400027d4:	48 8b 05 35 2c 00 00 	mov    rax,QWORD PTR [rip+0x2c35]        # 140005410 <.refptr.__imp__exit>
   1400027db:	ff 10                	call   QWORD PTR [rax]
   1400027dd:	90                   	nop
   1400027de:	90                   	nop
   1400027df:	90                   	nop

00000001400027e0 <_ValidateImageBase>:
   1400027e0:	31 c0                	xor    eax,eax
   1400027e2:	66 81 39 4d 5a       	cmp    WORD PTR [rcx],0x5a4d
   1400027e7:	75 0f                	jne    1400027f8 <_ValidateImageBase+0x18>
   1400027e9:	48 63 51 3c          	movsxd rdx,DWORD PTR [rcx+0x3c]
   1400027ed:	48 01 d1             	add    rcx,rdx
   1400027f0:	81 39 50 45 00 00    	cmp    DWORD PTR [rcx],0x4550
   1400027f6:	74 08                	je     140002800 <_ValidateImageBase+0x20>
   1400027f8:	c3                   	ret
   1400027f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   140002800:	31 c0                	xor    eax,eax
   140002802:	66 81 79 18 0b 02    	cmp    WORD PTR [rcx+0x18],0x20b
   140002808:	0f 94 c0             	sete   al
   14000280b:	c3                   	ret
   14000280c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000140002810 <_FindPESection>:
   140002810:	48 63 41 3c          	movsxd rax,DWORD PTR [rcx+0x3c]
   140002814:	48 01 c1             	add    rcx,rax
   140002817:	44 0f b7 41 06       	movzx  r8d,WORD PTR [rcx+0x6]
   14000281c:	0f b7 41 14          	movzx  eax,WORD PTR [rcx+0x14]
   140002820:	66 45 85 c0          	test   r8w,r8w
   140002824:	48 8d 44 01 18       	lea    rax,[rcx+rax*1+0x18]
   140002829:	74 32                	je     14000285d <_FindPESection+0x4d>
   14000282b:	41 8d 48 ff          	lea    ecx,[r8-0x1]
   14000282f:	48 8d 0c 89          	lea    rcx,[rcx+rcx*4]
   140002833:	4c 8d 4c c8 28       	lea    r9,[rax+rcx*8+0x28]
   140002838:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   14000283f:	00 
   140002840:	44 8b 40 0c          	mov    r8d,DWORD PTR [rax+0xc]
   140002844:	4c 39 c2             	cmp    rdx,r8
   140002847:	4c 89 c1             	mov    rcx,r8
   14000284a:	72 08                	jb     140002854 <_FindPESection+0x44>
   14000284c:	03 48 08             	add    ecx,DWORD PTR [rax+0x8]
   14000284f:	48 39 ca             	cmp    rdx,rcx
   140002852:	72 0b                	jb     14000285f <_FindPESection+0x4f>
   140002854:	48 83 c0 28          	add    rax,0x28
   140002858:	4c 39 c8             	cmp    rax,r9
   14000285b:	75 e3                	jne    140002840 <_FindPESection+0x30>
   14000285d:	31 c0                	xor    eax,eax
   14000285f:	c3                   	ret

0000000140002860 <_FindPESectionByName>:
   140002860:	57                   	push   rdi
   140002861:	56                   	push   rsi
   140002862:	53                   	push   rbx
   140002863:	48 83 ec 20          	sub    rsp,0x20
   140002867:	48 89 ce             	mov    rsi,rcx
   14000286a:	e8 b1 06 00 00       	call   140002f20 <strlen>
   14000286f:	48 83 f8 08          	cmp    rax,0x8
   140002873:	77 7b                	ja     1400028f0 <_FindPESectionByName+0x90>
   140002875:	48 8b 15 74 2b 00 00 	mov    rdx,QWORD PTR [rip+0x2b74]        # 1400053f0 <.refptr.__image_base__>
   14000287c:	31 db                	xor    ebx,ebx
   14000287e:	66 81 3a 4d 5a       	cmp    WORD PTR [rdx],0x5a4d
   140002883:	75 59                	jne    1400028de <_FindPESectionByName+0x7e>
   140002885:	48 63 42 3c          	movsxd rax,DWORD PTR [rdx+0x3c]
   140002889:	48 01 d0             	add    rax,rdx
   14000288c:	81 38 50 45 00 00    	cmp    DWORD PTR [rax],0x4550
   140002892:	75 4a                	jne    1400028de <_FindPESectionByName+0x7e>
   140002894:	66 81 78 18 0b 02    	cmp    WORD PTR [rax+0x18],0x20b
   14000289a:	75 42                	jne    1400028de <_FindPESectionByName+0x7e>
   14000289c:	0f b7 50 14          	movzx  edx,WORD PTR [rax+0x14]
   1400028a0:	48 8d 5c 10 18       	lea    rbx,[rax+rdx*1+0x18]
   1400028a5:	0f b7 50 06          	movzx  edx,WORD PTR [rax+0x6]
   1400028a9:	66 85 d2             	test   dx,dx
   1400028ac:	74 42                	je     1400028f0 <_FindPESectionByName+0x90>
   1400028ae:	8d 42 ff             	lea    eax,[rdx-0x1]
   1400028b1:	48 8d 04 80          	lea    rax,[rax+rax*4]
   1400028b5:	48 8d 7c c3 28       	lea    rdi,[rbx+rax*8+0x28]
   1400028ba:	eb 0d                	jmp    1400028c9 <_FindPESectionByName+0x69>
   1400028bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   1400028c0:	48 83 c3 28          	add    rbx,0x28
   1400028c4:	48 39 fb             	cmp    rbx,rdi
   1400028c7:	74 27                	je     1400028f0 <_FindPESectionByName+0x90>
   1400028c9:	41 b8 08 00 00 00    	mov    r8d,0x8
   1400028cf:	48 89 f2             	mov    rdx,rsi
   1400028d2:	48 89 d9             	mov    rcx,rbx
   1400028d5:	e8 4e 06 00 00       	call   140002f28 <strncmp>
   1400028da:	85 c0                	test   eax,eax
   1400028dc:	75 e2                	jne    1400028c0 <_FindPESectionByName+0x60>
   1400028de:	48 89 d8             	mov    rax,rbx
   1400028e1:	48 83 c4 20          	add    rsp,0x20
   1400028e5:	5b                   	pop    rbx
   1400028e6:	5e                   	pop    rsi
   1400028e7:	5f                   	pop    rdi
   1400028e8:	c3                   	ret
   1400028e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   1400028f0:	31 db                	xor    ebx,ebx
   1400028f2:	48 89 d8             	mov    rax,rbx
   1400028f5:	48 83 c4 20          	add    rsp,0x20
   1400028f9:	5b                   	pop    rbx
   1400028fa:	5e                   	pop    rsi
   1400028fb:	5f                   	pop    rdi
   1400028fc:	c3                   	ret
   1400028fd:	0f 1f 00             	nop    DWORD PTR [rax]

0000000140002900 <__mingw_GetSectionForAddress>:
   140002900:	48 8b 15 e9 2a 00 00 	mov    rdx,QWORD PTR [rip+0x2ae9]        # 1400053f0 <.refptr.__image_base__>
   140002907:	31 c0                	xor    eax,eax
   140002909:	66 81 3a 4d 5a       	cmp    WORD PTR [rdx],0x5a4d
   14000290e:	75 10                	jne    140002920 <__mingw_GetSectionForAddress+0x20>
   140002910:	4c 63 42 3c          	movsxd r8,DWORD PTR [rdx+0x3c]
   140002914:	49 01 d0             	add    r8,rdx
   140002917:	41 81 38 50 45 00 00 	cmp    DWORD PTR [r8],0x4550
   14000291e:	74 08                	je     140002928 <__mingw_GetSectionForAddress+0x28>
   140002920:	c3                   	ret
   140002921:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   140002928:	66 41 81 78 18 0b 02 	cmp    WORD PTR [r8+0x18],0x20b
   14000292f:	75 ef                	jne    140002920 <__mingw_GetSectionForAddress+0x20>
   140002931:	41 0f b7 40 14       	movzx  eax,WORD PTR [r8+0x14]
   140002936:	48 29 d1             	sub    rcx,rdx
   140002939:	49 8d 44 00 18       	lea    rax,[r8+rax*1+0x18]
   14000293e:	45 0f b7 40 06       	movzx  r8d,WORD PTR [r8+0x6]
   140002943:	66 45 85 c0          	test   r8w,r8w
   140002947:	74 34                	je     14000297d <__mingw_GetSectionForAddress+0x7d>
   140002949:	41 8d 50 ff          	lea    edx,[r8-0x1]
   14000294d:	48 8d 14 92          	lea    rdx,[rdx+rdx*4]
   140002951:	4c 8d 4c d0 28       	lea    r9,[rax+rdx*8+0x28]
   140002956:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   14000295d:	00 00 00 
   140002960:	44 8b 40 0c          	mov    r8d,DWORD PTR [rax+0xc]
   140002964:	4c 39 c1             	cmp    rcx,r8
   140002967:	4c 89 c2             	mov    rdx,r8
   14000296a:	72 08                	jb     140002974 <__mingw_GetSectionForAddress+0x74>
   14000296c:	03 50 08             	add    edx,DWORD PTR [rax+0x8]
   14000296f:	48 39 d1             	cmp    rcx,rdx
   140002972:	72 ac                	jb     140002920 <__mingw_GetSectionForAddress+0x20>
   140002974:	48 83 c0 28          	add    rax,0x28
   140002978:	4c 39 c8             	cmp    rax,r9
   14000297b:	75 e3                	jne    140002960 <__mingw_GetSectionForAddress+0x60>
   14000297d:	31 c0                	xor    eax,eax
   14000297f:	c3                   	ret

0000000140002980 <__mingw_GetSectionCount>:
   140002980:	48 8b 05 69 2a 00 00 	mov    rax,QWORD PTR [rip+0x2a69]        # 1400053f0 <.refptr.__image_base__>
   140002987:	31 c9                	xor    ecx,ecx
   140002989:	66 81 38 4d 5a       	cmp    WORD PTR [rax],0x5a4d
   14000298e:	75 0f                	jne    14000299f <__mingw_GetSectionCount+0x1f>
   140002990:	48 63 50 3c          	movsxd rdx,DWORD PTR [rax+0x3c]
   140002994:	48 01 d0             	add    rax,rdx
   140002997:	81 38 50 45 00 00    	cmp    DWORD PTR [rax],0x4550
   14000299d:	74 09                	je     1400029a8 <__mingw_GetSectionCount+0x28>
   14000299f:	89 c8                	mov    eax,ecx
   1400029a1:	c3                   	ret
   1400029a2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   1400029a8:	66 81 78 18 0b 02    	cmp    WORD PTR [rax+0x18],0x20b
   1400029ae:	75 ef                	jne    14000299f <__mingw_GetSectionCount+0x1f>
   1400029b0:	0f b7 48 06          	movzx  ecx,WORD PTR [rax+0x6]
   1400029b4:	89 c8                	mov    eax,ecx
   1400029b6:	c3                   	ret
   1400029b7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   1400029be:	00 00 

00000001400029c0 <_FindPESectionExec>:
   1400029c0:	4c 8b 05 29 2a 00 00 	mov    r8,QWORD PTR [rip+0x2a29]        # 1400053f0 <.refptr.__image_base__>
   1400029c7:	31 c0                	xor    eax,eax
   1400029c9:	66 41 81 38 4d 5a    	cmp    WORD PTR [r8],0x5a4d
   1400029cf:	75 0f                	jne    1400029e0 <_FindPESectionExec+0x20>
   1400029d1:	49 63 50 3c          	movsxd rdx,DWORD PTR [r8+0x3c]
   1400029d5:	4c 01 c2             	add    rdx,r8
   1400029d8:	81 3a 50 45 00 00    	cmp    DWORD PTR [rdx],0x4550
   1400029de:	74 08                	je     1400029e8 <_FindPESectionExec+0x28>
   1400029e0:	c3                   	ret
   1400029e1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   1400029e8:	66 81 7a 18 0b 02    	cmp    WORD PTR [rdx+0x18],0x20b
   1400029ee:	75 f0                	jne    1400029e0 <_FindPESectionExec+0x20>
   1400029f0:	44 0f b7 42 06       	movzx  r8d,WORD PTR [rdx+0x6]
   1400029f5:	0f b7 42 14          	movzx  eax,WORD PTR [rdx+0x14]
   1400029f9:	66 45 85 c0          	test   r8w,r8w
   1400029fd:	48 8d 44 02 18       	lea    rax,[rdx+rax*1+0x18]
   140002a02:	74 2c                	je     140002a30 <_FindPESectionExec+0x70>
   140002a04:	41 8d 50 ff          	lea    edx,[r8-0x1]
   140002a08:	48 8d 14 92          	lea    rdx,[rdx+rdx*4]
   140002a0c:	48 8d 54 d0 28       	lea    rdx,[rax+rdx*8+0x28]
   140002a11:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   140002a18:	f6 40 27 20          	test   BYTE PTR [rax+0x27],0x20
   140002a1c:	74 09                	je     140002a27 <_FindPESectionExec+0x67>
   140002a1e:	48 85 c9             	test   rcx,rcx
   140002a21:	74 bd                	je     1400029e0 <_FindPESectionExec+0x20>
   140002a23:	48 83 e9 01          	sub    rcx,0x1
   140002a27:	48 83 c0 28          	add    rax,0x28
   140002a2b:	48 39 d0             	cmp    rax,rdx
   140002a2e:	75 e8                	jne    140002a18 <_FindPESectionExec+0x58>
   140002a30:	31 c0                	xor    eax,eax
   140002a32:	c3                   	ret
   140002a33:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   140002a3a:	00 00 00 00 
   140002a3e:	66 90                	xchg   ax,ax

0000000140002a40 <_GetPEImageBase>:
   140002a40:	48 8b 05 a9 29 00 00 	mov    rax,QWORD PTR [rip+0x29a9]        # 1400053f0 <.refptr.__image_base__>
   140002a47:	31 d2                	xor    edx,edx
   140002a49:	66 81 38 4d 5a       	cmp    WORD PTR [rax],0x5a4d
   140002a4e:	75 0f                	jne    140002a5f <_GetPEImageBase+0x1f>
   140002a50:	48 63 48 3c          	movsxd rcx,DWORD PTR [rax+0x3c]
   140002a54:	48 01 c1             	add    rcx,rax
   140002a57:	81 39 50 45 00 00    	cmp    DWORD PTR [rcx],0x4550
   140002a5d:	74 09                	je     140002a68 <_GetPEImageBase+0x28>
   140002a5f:	48 89 d0             	mov    rax,rdx
   140002a62:	c3                   	ret
   140002a63:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140002a68:	66 81 79 18 0b 02    	cmp    WORD PTR [rcx+0x18],0x20b
   140002a6e:	48 0f 44 d0          	cmove  rdx,rax
   140002a72:	48 89 d0             	mov    rax,rdx
   140002a75:	c3                   	ret
   140002a76:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   140002a7d:	00 00 00 

0000000140002a80 <_IsNonwritableInCurrentImage>:
   140002a80:	48 8b 15 69 29 00 00 	mov    rdx,QWORD PTR [rip+0x2969]        # 1400053f0 <.refptr.__image_base__>
   140002a87:	31 c0                	xor    eax,eax
   140002a89:	66 81 3a 4d 5a       	cmp    WORD PTR [rdx],0x5a4d
   140002a8e:	75 10                	jne    140002aa0 <_IsNonwritableInCurrentImage+0x20>
   140002a90:	4c 63 42 3c          	movsxd r8,DWORD PTR [rdx+0x3c]
   140002a94:	49 01 d0             	add    r8,rdx
   140002a97:	41 81 38 50 45 00 00 	cmp    DWORD PTR [r8],0x4550
   140002a9e:	74 08                	je     140002aa8 <_IsNonwritableInCurrentImage+0x28>
   140002aa0:	c3                   	ret
   140002aa1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   140002aa8:	66 41 81 78 18 0b 02 	cmp    WORD PTR [r8+0x18],0x20b
   140002aaf:	75 ef                	jne    140002aa0 <_IsNonwritableInCurrentImage+0x20>
   140002ab1:	45 0f b7 48 06       	movzx  r9d,WORD PTR [r8+0x6]
   140002ab6:	48 29 d1             	sub    rcx,rdx
   140002ab9:	41 0f b7 50 14       	movzx  edx,WORD PTR [r8+0x14]
   140002abe:	66 45 85 c9          	test   r9w,r9w
   140002ac2:	49 8d 54 10 18       	lea    rdx,[r8+rdx*1+0x18]
   140002ac7:	74 d7                	je     140002aa0 <_IsNonwritableInCurrentImage+0x20>
   140002ac9:	41 8d 41 ff          	lea    eax,[r9-0x1]
   140002acd:	48 8d 04 80          	lea    rax,[rax+rax*4]
   140002ad1:	4c 8d 4c c2 28       	lea    r9,[rdx+rax*8+0x28]
   140002ad6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   140002add:	00 00 00 
   140002ae0:	44 8b 42 0c          	mov    r8d,DWORD PTR [rdx+0xc]
   140002ae4:	4c 39 c1             	cmp    rcx,r8
   140002ae7:	4c 89 c0             	mov    rax,r8
   140002aea:	72 08                	jb     140002af4 <_IsNonwritableInCurrentImage+0x74>
   140002aec:	03 42 08             	add    eax,DWORD PTR [rdx+0x8]
   140002aef:	48 39 c1             	cmp    rcx,rax
   140002af2:	72 0c                	jb     140002b00 <_IsNonwritableInCurrentImage+0x80>
   140002af4:	48 83 c2 28          	add    rdx,0x28
   140002af8:	49 39 d1             	cmp    r9,rdx
   140002afb:	75 e3                	jne    140002ae0 <_IsNonwritableInCurrentImage+0x60>
   140002afd:	31 c0                	xor    eax,eax
   140002aff:	c3                   	ret
   140002b00:	8b 42 24             	mov    eax,DWORD PTR [rdx+0x24]
   140002b03:	f7 d0                	not    eax
   140002b05:	c1 e8 1f             	shr    eax,0x1f
   140002b08:	c3                   	ret
   140002b09:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000140002b10 <__mingw_enum_import_library_names>:
   140002b10:	4c 8b 1d d9 28 00 00 	mov    r11,QWORD PTR [rip+0x28d9]        # 1400053f0 <.refptr.__image_base__>
   140002b17:	45 31 c9             	xor    r9d,r9d
   140002b1a:	66 41 81 3b 4d 5a    	cmp    WORD PTR [r11],0x5a4d
   140002b20:	75 10                	jne    140002b32 <__mingw_enum_import_library_names+0x22>
   140002b22:	4d 63 43 3c          	movsxd r8,DWORD PTR [r11+0x3c]
   140002b26:	4d 01 d8             	add    r8,r11
   140002b29:	41 81 38 50 45 00 00 	cmp    DWORD PTR [r8],0x4550
   140002b30:	74 0e                	je     140002b40 <__mingw_enum_import_library_names+0x30>
   140002b32:	4c 89 c8             	mov    rax,r9
   140002b35:	c3                   	ret
   140002b36:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   140002b3d:	00 00 00 
   140002b40:	66 41 81 78 18 0b 02 	cmp    WORD PTR [r8+0x18],0x20b
   140002b47:	75 e9                	jne    140002b32 <__mingw_enum_import_library_names+0x22>
   140002b49:	41 8b 80 90 00 00 00 	mov    eax,DWORD PTR [r8+0x90]
   140002b50:	85 c0                	test   eax,eax
   140002b52:	74 de                	je     140002b32 <__mingw_enum_import_library_names+0x22>
   140002b54:	45 0f b7 50 06       	movzx  r10d,WORD PTR [r8+0x6]
   140002b59:	41 0f b7 50 14       	movzx  edx,WORD PTR [r8+0x14]
   140002b5e:	66 45 85 d2          	test   r10w,r10w
   140002b62:	49 8d 54 10 18       	lea    rdx,[r8+rdx*1+0x18]
   140002b67:	74 c9                	je     140002b32 <__mingw_enum_import_library_names+0x22>
   140002b69:	45 8d 42 ff          	lea    r8d,[r10-0x1]
   140002b6d:	4f 8d 04 80          	lea    r8,[r8+r8*4]
   140002b71:	4e 8d 54 c2 28       	lea    r10,[rdx+r8*8+0x28]
   140002b76:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   140002b7d:	00 00 00 
   140002b80:	44 8b 4a 0c          	mov    r9d,DWORD PTR [rdx+0xc]
   140002b84:	4c 39 c8             	cmp    rax,r9
   140002b87:	4d 89 c8             	mov    r8,r9
   140002b8a:	72 09                	jb     140002b95 <__mingw_enum_import_library_names+0x85>
   140002b8c:	44 03 42 08          	add    r8d,DWORD PTR [rdx+0x8]
   140002b90:	4c 39 c0             	cmp    rax,r8
   140002b93:	72 13                	jb     140002ba8 <__mingw_enum_import_library_names+0x98>
   140002b95:	48 83 c2 28          	add    rdx,0x28
   140002b99:	4c 39 d2             	cmp    rdx,r10
   140002b9c:	75 e2                	jne    140002b80 <__mingw_enum_import_library_names+0x70>
   140002b9e:	45 31 c9             	xor    r9d,r9d
   140002ba1:	4c 89 c8             	mov    rax,r9
   140002ba4:	c3                   	ret
   140002ba5:	0f 1f 00             	nop    DWORD PTR [rax]
   140002ba8:	4c 01 d8             	add    rax,r11
   140002bab:	eb 0a                	jmp    140002bb7 <__mingw_enum_import_library_names+0xa7>
   140002bad:	0f 1f 00             	nop    DWORD PTR [rax]
   140002bb0:	83 e9 01             	sub    ecx,0x1
   140002bb3:	48 83 c0 14          	add    rax,0x14
   140002bb7:	44 8b 40 04          	mov    r8d,DWORD PTR [rax+0x4]
   140002bbb:	45 85 c0             	test   r8d,r8d
   140002bbe:	75 07                	jne    140002bc7 <__mingw_enum_import_library_names+0xb7>
   140002bc0:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
   140002bc3:	85 d2                	test   edx,edx
   140002bc5:	74 d7                	je     140002b9e <__mingw_enum_import_library_names+0x8e>
   140002bc7:	85 c9                	test   ecx,ecx
   140002bc9:	7f e5                	jg     140002bb0 <__mingw_enum_import_library_names+0xa0>
   140002bcb:	44 8b 48 0c          	mov    r9d,DWORD PTR [rax+0xc]
   140002bcf:	4d 01 d9             	add    r9,r11
   140002bd2:	4c 89 c8             	mov    rax,r9
   140002bd5:	c3                   	ret
   140002bd6:	90                   	nop
   140002bd7:	90                   	nop
   140002bd8:	90                   	nop
   140002bd9:	90                   	nop
   140002bda:	90                   	nop
   140002bdb:	90                   	nop
   140002bdc:	90                   	nop
   140002bdd:	90                   	nop
   140002bde:	90                   	nop
   140002bdf:	90                   	nop

0000000140002be0 <___chkstk_ms>:
   140002be0:	51                   	push   rcx
   140002be1:	50                   	push   rax
   140002be2:	48 3d 00 10 00 00    	cmp    rax,0x1000
   140002be8:	48 8d 4c 24 18       	lea    rcx,[rsp+0x18]
   140002bed:	72 19                	jb     140002c08 <___chkstk_ms+0x28>
   140002bef:	48 81 e9 00 10 00 00 	sub    rcx,0x1000
   140002bf6:	48 83 09 00          	or     QWORD PTR [rcx],0x0
   140002bfa:	48 2d 00 10 00 00    	sub    rax,0x1000
   140002c00:	48 3d 00 10 00 00    	cmp    rax,0x1000
   140002c06:	77 e7                	ja     140002bef <___chkstk_ms+0xf>
   140002c08:	48 29 c1             	sub    rcx,rax
   140002c0b:	48 83 09 00          	or     QWORD PTR [rcx],0x0
   140002c0f:	58                   	pop    rax
   140002c10:	59                   	pop    rcx
   140002c11:	c3                   	ret
   140002c12:	90                   	nop
   140002c13:	90                   	nop
   140002c14:	90                   	nop
   140002c15:	90                   	nop
   140002c16:	90                   	nop
   140002c17:	90                   	nop
   140002c18:	90                   	nop
   140002c19:	90                   	nop
   140002c1a:	90                   	nop
   140002c1b:	90                   	nop
   140002c1c:	90                   	nop
   140002c1d:	90                   	nop
   140002c1e:	90                   	nop
   140002c1f:	90                   	nop

0000000140002c20 <vfprintf>:
   140002c20:	48 83 ec 38          	sub    rsp,0x38
   140002c24:	45 31 c9             	xor    r9d,r9d
   140002c27:	4c 89 44 24 20       	mov    QWORD PTR [rsp+0x20],r8
   140002c2c:	49 89 d0             	mov    r8,rdx
   140002c2f:	48 89 ca             	mov    rdx,rcx
   140002c32:	31 c9                	xor    ecx,ecx
   140002c34:	e8 0f 03 00 00       	call   140002f48 <__stdio_common_vfprintf>
   140002c39:	48 83 c4 38          	add    rsp,0x38
   140002c3d:	c3                   	ret
   140002c3e:	90                   	nop
   140002c3f:	90                   	nop

0000000140002c40 <printf>:
   140002c40:	56                   	push   rsi
   140002c41:	53                   	push   rbx
   140002c42:	48 83 ec 48          	sub    rsp,0x48
   140002c46:	48 8d 74 24 68       	lea    rsi,[rsp+0x68]
   140002c4b:	48 89 cb             	mov    rbx,rcx
   140002c4e:	b9 01 00 00 00       	mov    ecx,0x1
   140002c53:	48 89 54 24 68       	mov    QWORD PTR [rsp+0x68],rdx
   140002c58:	4c 89 44 24 70       	mov    QWORD PTR [rsp+0x70],r8
   140002c5d:	4c 89 4c 24 78       	mov    QWORD PTR [rsp+0x78],r9
   140002c62:	48 89 74 24 38       	mov    QWORD PTR [rsp+0x38],rsi
   140002c67:	e8 c4 02 00 00       	call   140002f30 <__acrt_iob_func>
   140002c6c:	48 89 74 24 20       	mov    QWORD PTR [rsp+0x20],rsi
   140002c71:	45 31 c9             	xor    r9d,r9d
   140002c74:	49 89 d8             	mov    r8,rbx
   140002c77:	48 89 c2             	mov    rdx,rax
   140002c7a:	31 c9                	xor    ecx,ecx
   140002c7c:	e8 c7 02 00 00       	call   140002f48 <__stdio_common_vfprintf>
   140002c81:	48 83 c4 48          	add    rsp,0x48
   140002c85:	5b                   	pop    rbx
   140002c86:	5e                   	pop    rsi
   140002c87:	c3                   	ret
   140002c88:	90                   	nop
   140002c89:	90                   	nop
   140002c8a:	90                   	nop
   140002c8b:	90                   	nop
   140002c8c:	90                   	nop
   140002c8d:	90                   	nop
   140002c8e:	90                   	nop
   140002c8f:	90                   	nop

0000000140002c90 <fprintf>:
   140002c90:	48 83 ec 48          	sub    rsp,0x48
   140002c94:	48 8d 44 24 60       	lea    rax,[rsp+0x60]
   140002c99:	4c 89 44 24 60       	mov    QWORD PTR [rsp+0x60],r8
   140002c9e:	49 89 d0             	mov    r8,rdx
   140002ca1:	48 89 ca             	mov    rdx,rcx
   140002ca4:	4c 89 4c 24 68       	mov    QWORD PTR [rsp+0x68],r9
   140002ca9:	31 c9                	xor    ecx,ecx
   140002cab:	45 31 c9             	xor    r9d,r9d
   140002cae:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
   140002cb3:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
   140002cb8:	e8 8b 02 00 00       	call   140002f48 <__stdio_common_vfprintf>
   140002cbd:	48 83 c4 48          	add    rsp,0x48
   140002cc1:	c3                   	ret
   140002cc2:	90                   	nop
   140002cc3:	90                   	nop
   140002cc4:	90                   	nop
   140002cc5:	90                   	nop
   140002cc6:	90                   	nop
   140002cc7:	90                   	nop
   140002cc8:	90                   	nop
   140002cc9:	90                   	nop
   140002cca:	90                   	nop
   140002ccb:	90                   	nop
   140002ccc:	90                   	nop
   140002ccd:	90                   	nop
   140002cce:	90                   	nop
   140002ccf:	90                   	nop

0000000140002cd0 <_get_output_format>:
   140002cd0:	31 c0                	xor    eax,eax
   140002cd2:	c3                   	ret
   140002cd3:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   140002cda:	00 00 00 00 
   140002cde:	66 90                	xchg   ax,ax

0000000140002ce0 <__getmainargs>:
   140002ce0:	41 54                	push   r12
   140002ce2:	55                   	push   rbp
   140002ce3:	57                   	push   rdi
   140002ce4:	56                   	push   rsi
   140002ce5:	53                   	push   rbx
   140002ce6:	48 83 ec 20          	sub    rsp,0x20
   140002cea:	4c 8b 64 24 70       	mov    r12,QWORD PTR [rsp+0x70]
   140002cef:	44 89 cd             	mov    ebp,r9d
   140002cf2:	48 89 d6             	mov    rsi,rdx
   140002cf5:	4c 89 c3             	mov    rbx,r8
   140002cf8:	48 89 cf             	mov    rdi,rcx
   140002cfb:	e8 a0 02 00 00       	call   140002fa0 <_initialize_narrow_environment>
   140002d00:	83 fd 01             	cmp    ebp,0x1
   140002d03:	b9 01 00 00 00       	mov    ecx,0x1
   140002d08:	83 d9 ff             	sbb    ecx,0xffffffff
   140002d0b:	e8 70 02 00 00       	call   140002f80 <_configure_narrow_argv>
   140002d10:	e8 4b 02 00 00       	call   140002f60 <__p___argc>
   140002d15:	8b 00                	mov    eax,DWORD PTR [rax]
   140002d17:	89 07                	mov    DWORD PTR [rdi],eax
   140002d19:	e8 4a 02 00 00       	call   140002f68 <__p___argv>
   140002d1e:	48 8b 00             	mov    rax,QWORD PTR [rax]
   140002d21:	48 89 06             	mov    QWORD PTR [rsi],rax
   140002d24:	e8 f7 02 00 00       	call   140003020 <__p__environ>
   140002d29:	4d 85 e4             	test   r12,r12
   140002d2c:	48 8b 00             	mov    rax,QWORD PTR [rax]
   140002d2f:	48 89 03             	mov    QWORD PTR [rbx],rax
   140002d32:	74 09                	je     140002d3d <__getmainargs+0x5d>
   140002d34:	41 8b 0c 24          	mov    ecx,DWORD PTR [r12]
   140002d38:	e8 c3 02 00 00       	call   140003000 <_set_new_mode>
   140002d3d:	31 c0                	xor    eax,eax
   140002d3f:	48 83 c4 20          	add    rsp,0x20
   140002d43:	5b                   	pop    rbx
   140002d44:	5e                   	pop    rsi
   140002d45:	5f                   	pop    rdi
   140002d46:	5d                   	pop    rbp
   140002d47:	41 5c                	pop    r12
   140002d49:	c3                   	ret
   140002d4a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000140002d50 <__wgetmainargs>:
   140002d50:	41 54                	push   r12
   140002d52:	55                   	push   rbp
   140002d53:	57                   	push   rdi
   140002d54:	56                   	push   rsi
   140002d55:	53                   	push   rbx
   140002d56:	48 83 ec 20          	sub    rsp,0x20
   140002d5a:	4c 8b 64 24 70       	mov    r12,QWORD PTR [rsp+0x70]
   140002d5f:	44 89 cd             	mov    ebp,r9d
   140002d62:	48 89 d6             	mov    rsi,rdx
   140002d65:	4c 89 c3             	mov    rbx,r8
   140002d68:	48 89 cf             	mov    rdi,rcx
   140002d6b:	e8 38 02 00 00       	call   140002fa8 <_initialize_wide_environment>
   140002d70:	83 fd 01             	cmp    ebp,0x1
   140002d73:	b9 01 00 00 00       	mov    ecx,0x1
   140002d78:	83 d9 ff             	sbb    ecx,0xffffffff
   140002d7b:	e8 08 02 00 00       	call   140002f88 <_configure_wide_argv>
   140002d80:	e8 db 01 00 00       	call   140002f60 <__p___argc>
   140002d85:	8b 00                	mov    eax,DWORD PTR [rax]
   140002d87:	89 07                	mov    DWORD PTR [rdi],eax
   140002d89:	e8 e2 01 00 00       	call   140002f70 <__p___wargv>
   140002d8e:	48 8b 00             	mov    rax,QWORD PTR [rax]
   140002d91:	48 89 06             	mov    QWORD PTR [rsi],rax
   140002d94:	e8 8f 02 00 00       	call   140003028 <__p__wenviron>
   140002d99:	4d 85 e4             	test   r12,r12
   140002d9c:	48 8b 00             	mov    rax,QWORD PTR [rax]
   140002d9f:	48 89 03             	mov    QWORD PTR [rbx],rax
   140002da2:	74 09                	je     140002dad <__wgetmainargs+0x5d>
   140002da4:	41 8b 0c 24          	mov    ecx,DWORD PTR [r12]
   140002da8:	e8 53 02 00 00       	call   140003000 <_set_new_mode>
   140002dad:	31 c0                	xor    eax,eax
   140002daf:	48 83 c4 20          	add    rsp,0x20
   140002db3:	5b                   	pop    rbx
   140002db4:	5e                   	pop    rsi
   140002db5:	5f                   	pop    rdi
   140002db6:	5d                   	pop    rbp
   140002db7:	41 5c                	pop    r12
   140002db9:	c3                   	ret
   140002dba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000140002dc0 <_onexit>:
   140002dc0:	53                   	push   rbx
   140002dc1:	48 83 ec 20          	sub    rsp,0x20
   140002dc5:	48 89 cb             	mov    rbx,rcx
   140002dc8:	e8 cb 01 00 00       	call   140002f98 <_crt_atexit>
   140002dcd:	85 c0                	test   eax,eax
   140002dcf:	b8 00 00 00 00       	mov    eax,0x0
   140002dd4:	48 0f 44 c3          	cmove  rax,rbx
   140002dd8:	48 83 c4 20          	add    rsp,0x20
   140002ddc:	5b                   	pop    rbx
   140002ddd:	c3                   	ret
   140002dde:	66 90                	xchg   ax,ax

0000000140002de0 <at_quick_exit>:
   140002de0:	48 8b 05 99 26 00 00 	mov    rax,QWORD PTR [rip+0x2699]        # 140005480 <.refptr.__mingw_module_is_dll>
   140002de7:	80 38 00             	cmp    BYTE PTR [rax],0x0
   140002dea:	74 04                	je     140002df0 <at_quick_exit+0x10>
   140002dec:	31 c0                	xor    eax,eax
   140002dee:	c3                   	ret
   140002def:	90                   	nop
   140002df0:	e9 9b 01 00 00       	jmp    140002f90 <_crt_at_quick_exit>
   140002df5:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   140002dfc:	00 00 00 00 

0000000140002e00 <_amsg_exit>:
   140002e00:	53                   	push   rbx
   140002e01:	48 83 ec 20          	sub    rsp,0x20
   140002e05:	89 cb                	mov    ebx,ecx
   140002e07:	b9 02 00 00 00       	mov    ecx,0x2
   140002e0c:	e8 1f 01 00 00       	call   140002f30 <__acrt_iob_func>
   140002e11:	48 8d 15 58 25 00 00 	lea    rdx,[rip+0x2558]        # 140005370 <.rdata>
   140002e18:	41 89 d8             	mov    r8d,ebx
   140002e1b:	48 89 c1             	mov    rcx,rax
   140002e1e:	e8 6d fe ff ff       	call   140002c90 <fprintf>
   140002e23:	48 8b 05 e6 25 00 00 	mov    rax,QWORD PTR [rip+0x25e6]        # 140005410 <.refptr.__imp__exit>
   140002e2a:	b9 ff 00 00 00       	mov    ecx,0xff
   140002e2f:	ff 10                	call   QWORD PTR [rax]
   140002e31:	90                   	nop
   140002e32:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   140002e39:	00 00 00 00 
   140002e3d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000140002e40 <__ms_fwprintf>:
   140002e40:	48 83 ec 48          	sub    rsp,0x48
   140002e44:	48 8d 44 24 60       	lea    rax,[rsp+0x60]
   140002e49:	4c 89 44 24 60       	mov    QWORD PTR [rsp+0x60],r8
   140002e4e:	49 89 d0             	mov    r8,rdx
   140002e51:	48 89 ca             	mov    rdx,rcx
   140002e54:	4c 89 4c 24 68       	mov    QWORD PTR [rsp+0x68],r9
   140002e59:	b9 04 00 00 00       	mov    ecx,0x4
   140002e5e:	45 31 c9             	xor    r9d,r9d
   140002e61:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
   140002e66:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
   140002e6b:	e8 e0 00 00 00       	call   140002f50 <__stdio_common_vfwprintf>
   140002e70:	48 83 c4 48          	add    rsp,0x48
   140002e74:	c3                   	ret
   140002e75:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   140002e7c:	00 00 00 00 

0000000140002e80 <tzset>:
   140002e80:	48 83 ec 28          	sub    rsp,0x28
   140002e84:	48 8b 05 95 25 00 00 	mov    rax,QWORD PTR [rip+0x2595]        # 140005420 <.refptr.__imp__tzset>
   140002e8b:	ff 10                	call   QWORD PTR [rax]
   140002e8d:	e8 7e 00 00 00       	call   140002f10 <__tzname>
   140002e92:	48 89 05 37 12 00 00 	mov    QWORD PTR [rip+0x1237],rax        # 1400040d0 <__imp_tzname>
   140002e99:	e8 6a 00 00 00       	call   140002f08 <__timezone>
   140002e9e:	48 89 05 23 12 00 00 	mov    QWORD PTR [rip+0x1223],rax        # 1400040c8 <__imp_timezone>
   140002ea5:	e8 56 00 00 00       	call   140002f00 <__daylight>
   140002eaa:	48 89 05 0f 12 00 00 	mov    QWORD PTR [rip+0x120f],rax        # 1400040c0 <__imp_daylight>
   140002eb1:	48 83 c4 28          	add    rsp,0x28
   140002eb5:	c3                   	ret
   140002eb6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   140002ebd:	00 00 00 

0000000140002ec0 <_tzset>:
   140002ec0:	48 83 ec 28          	sub    rsp,0x28
   140002ec4:	48 8b 05 55 25 00 00 	mov    rax,QWORD PTR [rip+0x2555]        # 140005420 <.refptr.__imp__tzset>
   140002ecb:	ff 10                	call   QWORD PTR [rax]
   140002ecd:	e8 3e 00 00 00       	call   140002f10 <__tzname>
   140002ed2:	48 89 05 f7 11 00 00 	mov    QWORD PTR [rip+0x11f7],rax        # 1400040d0 <__imp_tzname>
   140002ed9:	e8 2a 00 00 00       	call   140002f08 <__timezone>
   140002ede:	48 89 05 e3 11 00 00 	mov    QWORD PTR [rip+0x11e3],rax        # 1400040c8 <__imp_timezone>
   140002ee5:	e8 16 00 00 00       	call   140002f00 <__daylight>
   140002eea:	48 89 05 cf 11 00 00 	mov    QWORD PTR [rip+0x11cf],rax        # 1400040c0 <__imp_daylight>
   140002ef1:	48 83 c4 28          	add    rsp,0x28
   140002ef5:	c3                   	ret
   140002ef6:	90                   	nop
   140002ef7:	90                   	nop
   140002ef8:	90                   	nop
   140002ef9:	90                   	nop
   140002efa:	90                   	nop
   140002efb:	90                   	nop
   140002efc:	90                   	nop
   140002efd:	90                   	nop
   140002efe:	90                   	nop
   140002eff:	90                   	nop

0000000140002f00 <__daylight>:
   140002f00:	ff 25 2a 65 00 00    	jmp    QWORD PTR [rip+0x652a]        # 140009430 <__imp___daylight>
   140002f06:	90                   	nop
   140002f07:	90                   	nop

0000000140002f08 <__timezone>:
   140002f08:	ff 25 2a 65 00 00    	jmp    QWORD PTR [rip+0x652a]        # 140009438 <__imp___timezone>
   140002f0e:	90                   	nop
   140002f0f:	90                   	nop

0000000140002f10 <__tzname>:
   140002f10:	ff 25 2a 65 00 00    	jmp    QWORD PTR [rip+0x652a]        # 140009440 <__imp___tzname>
   140002f16:	90                   	nop
   140002f17:	90                   	nop

0000000140002f18 <.text>:
   140002f18:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   140002f1f:	00 

0000000140002f20 <strlen>:
   140002f20:	ff 25 f2 64 00 00    	jmp    QWORD PTR [rip+0x64f2]        # 140009418 <__imp_strlen>
   140002f26:	90                   	nop
   140002f27:	90                   	nop

0000000140002f28 <strncmp>:
   140002f28:	ff 25 f2 64 00 00    	jmp    QWORD PTR [rip+0x64f2]        # 140009420 <__imp_strncmp>
   140002f2e:	90                   	nop
   140002f2f:	90                   	nop

0000000140002f30 <__acrt_iob_func>:
   140002f30:	ff 25 aa 64 00 00    	jmp    QWORD PTR [rip+0x64aa]        # 1400093e0 <__imp___acrt_iob_func>
   140002f36:	90                   	nop
   140002f37:	90                   	nop

0000000140002f38 <__p__commode>:
   140002f38:	ff 25 aa 64 00 00    	jmp    QWORD PTR [rip+0x64aa]        # 1400093e8 <__imp___p__commode>
   140002f3e:	90                   	nop
   140002f3f:	90                   	nop

0000000140002f40 <__p__fmode>:
   140002f40:	ff 25 aa 64 00 00    	jmp    QWORD PTR [rip+0x64aa]        # 1400093f0 <__imp___p__fmode>
   140002f46:	90                   	nop
   140002f47:	90                   	nop

0000000140002f48 <__stdio_common_vfprintf>:
   140002f48:	ff 25 aa 64 00 00    	jmp    QWORD PTR [rip+0x64aa]        # 1400093f8 <__imp___stdio_common_vfprintf>
   140002f4e:	90                   	nop
   140002f4f:	90                   	nop

0000000140002f50 <__stdio_common_vfwprintf>:
   140002f50:	ff 25 aa 64 00 00    	jmp    QWORD PTR [rip+0x64aa]        # 140009400 <__imp___stdio_common_vfwprintf>
   140002f56:	90                   	nop
   140002f57:	90                   	nop

0000000140002f58 <fwrite>:
   140002f58:	ff 25 aa 64 00 00    	jmp    QWORD PTR [rip+0x64aa]        # 140009408 <__imp_fwrite>
   140002f5e:	90                   	nop
   140002f5f:	90                   	nop

0000000140002f60 <__p___argc>:
   140002f60:	ff 25 ea 63 00 00    	jmp    QWORD PTR [rip+0x63ea]        # 140009350 <__imp___p___argc>
   140002f66:	90                   	nop
   140002f67:	90                   	nop

0000000140002f68 <__p___argv>:
   140002f68:	ff 25 ea 63 00 00    	jmp    QWORD PTR [rip+0x63ea]        # 140009358 <__imp___p___argv>
   140002f6e:	90                   	nop
   140002f6f:	90                   	nop

0000000140002f70 <__p___wargv>:
   140002f70:	ff 25 ea 63 00 00    	jmp    QWORD PTR [rip+0x63ea]        # 140009360 <__imp___p___wargv>
   140002f76:	90                   	nop
   140002f77:	90                   	nop

0000000140002f78 <_cexit>:
   140002f78:	ff 25 ea 63 00 00    	jmp    QWORD PTR [rip+0x63ea]        # 140009368 <__imp__cexit>
   140002f7e:	90                   	nop
   140002f7f:	90                   	nop

0000000140002f80 <_configure_narrow_argv>:
   140002f80:	ff 25 ea 63 00 00    	jmp    QWORD PTR [rip+0x63ea]        # 140009370 <__imp__configure_narrow_argv>
   140002f86:	90                   	nop
   140002f87:	90                   	nop

0000000140002f88 <_configure_wide_argv>:
   140002f88:	ff 25 ea 63 00 00    	jmp    QWORD PTR [rip+0x63ea]        # 140009378 <__imp__configure_wide_argv>
   140002f8e:	90                   	nop
   140002f8f:	90                   	nop

0000000140002f90 <_crt_at_quick_exit>:
   140002f90:	ff 25 ea 63 00 00    	jmp    QWORD PTR [rip+0x63ea]        # 140009380 <__imp__crt_at_quick_exit>
   140002f96:	90                   	nop
   140002f97:	90                   	nop

0000000140002f98 <_crt_atexit>:
   140002f98:	ff 25 ea 63 00 00    	jmp    QWORD PTR [rip+0x63ea]        # 140009388 <__imp__crt_atexit>
   140002f9e:	90                   	nop
   140002f9f:	90                   	nop

0000000140002fa0 <_initialize_narrow_environment>:
   140002fa0:	ff 25 f2 63 00 00    	jmp    QWORD PTR [rip+0x63f2]        # 140009398 <__imp__initialize_narrow_environment>
   140002fa6:	90                   	nop
   140002fa7:	90                   	nop

0000000140002fa8 <_initialize_wide_environment>:
   140002fa8:	ff 25 f2 63 00 00    	jmp    QWORD PTR [rip+0x63f2]        # 1400093a0 <__imp__initialize_wide_environment>
   140002fae:	90                   	nop
   140002faf:	90                   	nop

0000000140002fb0 <_initterm>:
   140002fb0:	ff 25 f2 63 00 00    	jmp    QWORD PTR [rip+0x63f2]        # 1400093a8 <__imp__initterm>
   140002fb6:	90                   	nop
   140002fb7:	90                   	nop

0000000140002fb8 <__set_app_type>:
   140002fb8:	ff 25 f2 63 00 00    	jmp    QWORD PTR [rip+0x63f2]        # 1400093b0 <__imp___set_app_type>
   140002fbe:	90                   	nop
   140002fbf:	90                   	nop

0000000140002fc0 <_set_invalid_parameter_handler>:
   140002fc0:	ff 25 f2 63 00 00    	jmp    QWORD PTR [rip+0x63f2]        # 1400093b8 <__imp__set_invalid_parameter_handler>
   140002fc6:	90                   	nop
   140002fc7:	90                   	nop

0000000140002fc8 <abort>:
   140002fc8:	ff 25 f2 63 00 00    	jmp    QWORD PTR [rip+0x63f2]        # 1400093c0 <__imp_abort>
   140002fce:	90                   	nop
   140002fcf:	90                   	nop

0000000140002fd0 <signal>:
   140002fd0:	ff 25 fa 63 00 00    	jmp    QWORD PTR [rip+0x63fa]        # 1400093d0 <__imp_signal>
   140002fd6:	90                   	nop
   140002fd7:	90                   	nop
   140002fd8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   140002fdf:	00 

0000000140002fe0 <__C_specific_handler>:
   140002fe0:	ff 25 52 63 00 00    	jmp    QWORD PTR [rip+0x6352]        # 140009338 <__imp___C_specific_handler>
   140002fe6:	90                   	nop
   140002fe7:	90                   	nop

0000000140002fe8 <memcpy>:
   140002fe8:	ff 25 52 63 00 00    	jmp    QWORD PTR [rip+0x6352]        # 140009340 <__imp_memcpy>
   140002fee:	90                   	nop
   140002fef:	90                   	nop

0000000140002ff0 <__setusermatherr>:
   140002ff0:	ff 25 32 63 00 00    	jmp    QWORD PTR [rip+0x6332]        # 140009328 <__imp___setusermatherr>
   140002ff6:	90                   	nop
   140002ff7:	90                   	nop
   140002ff8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   140002fff:	00 

0000000140003000 <_set_new_mode>:
   140003000:	ff 25 fa 62 00 00    	jmp    QWORD PTR [rip+0x62fa]        # 140009300 <__imp__set_new_mode>
   140003006:	90                   	nop
   140003007:	90                   	nop

0000000140003008 <calloc>:
   140003008:	ff 25 fa 62 00 00    	jmp    QWORD PTR [rip+0x62fa]        # 140009308 <__imp_calloc>
   14000300e:	90                   	nop
   14000300f:	90                   	nop

0000000140003010 <free>:
   140003010:	ff 25 fa 62 00 00    	jmp    QWORD PTR [rip+0x62fa]        # 140009310 <__imp_free>
   140003016:	90                   	nop
   140003017:	90                   	nop

0000000140003018 <malloc>:
   140003018:	ff 25 fa 62 00 00    	jmp    QWORD PTR [rip+0x62fa]        # 140009318 <__imp_malloc>
   14000301e:	90                   	nop
   14000301f:	90                   	nop

0000000140003020 <__p__environ>:
   140003020:	ff 25 c2 62 00 00    	jmp    QWORD PTR [rip+0x62c2]        # 1400092e8 <__imp___p__environ>
   140003026:	90                   	nop
   140003027:	90                   	nop

0000000140003028 <__p__wenviron>:
   140003028:	ff 25 c2 62 00 00    	jmp    QWORD PTR [rip+0x62c2]        # 1400092f0 <__imp___p__wenviron>
   14000302e:	90                   	nop
   14000302f:	90                   	nop

0000000140003030 <VirtualQuery>:
   140003030:	ff 25 a2 62 00 00    	jmp    QWORD PTR [rip+0x62a2]        # 1400092d8 <__imp_VirtualQuery>
   140003036:	90                   	nop
   140003037:	90                   	nop

0000000140003038 <VirtualProtect>:
   140003038:	ff 25 92 62 00 00    	jmp    QWORD PTR [rip+0x6292]        # 1400092d0 <__imp_VirtualProtect>
   14000303e:	90                   	nop
   14000303f:	90                   	nop

0000000140003040 <TlsGetValue>:
   140003040:	ff 25 82 62 00 00    	jmp    QWORD PTR [rip+0x6282]        # 1400092c8 <__imp_TlsGetValue>
   140003046:	90                   	nop
   140003047:	90                   	nop

0000000140003048 <Sleep>:
   140003048:	ff 25 72 62 00 00    	jmp    QWORD PTR [rip+0x6272]        # 1400092c0 <__imp_Sleep>
   14000304e:	90                   	nop
   14000304f:	90                   	nop

0000000140003050 <SetUnhandledExceptionFilter>:
   140003050:	ff 25 62 62 00 00    	jmp    QWORD PTR [rip+0x6262]        # 1400092b8 <__imp_SetUnhandledExceptionFilter>
   140003056:	90                   	nop
   140003057:	90                   	nop

0000000140003058 <LeaveCriticalSection>:
   140003058:	ff 25 52 62 00 00    	jmp    QWORD PTR [rip+0x6252]        # 1400092b0 <__imp_LeaveCriticalSection>
   14000305e:	90                   	nop
   14000305f:	90                   	nop

0000000140003060 <InitializeCriticalSection>:
   140003060:	ff 25 42 62 00 00    	jmp    QWORD PTR [rip+0x6242]        # 1400092a8 <__imp_InitializeCriticalSection>
   140003066:	90                   	nop
   140003067:	90                   	nop

0000000140003068 <GetLastError>:
   140003068:	ff 25 32 62 00 00    	jmp    QWORD PTR [rip+0x6232]        # 1400092a0 <__imp_GetLastError>
   14000306e:	90                   	nop
   14000306f:	90                   	nop

0000000140003070 <EnterCriticalSection>:
   140003070:	ff 25 22 62 00 00    	jmp    QWORD PTR [rip+0x6222]        # 140009298 <__imp_EnterCriticalSection>
   140003076:	90                   	nop
   140003077:	90                   	nop

0000000140003078 <DeleteCriticalSection>:
   140003078:	ff 25 12 62 00 00    	jmp    QWORD PTR [rip+0x6212]        # 140009290 <__IAT_start__>
   14000307e:	90                   	nop
   14000307f:	90                   	nop

0000000140003080 <register_frame_ctor>:
   140003080:	e9 ab e3 ff ff       	jmp    140001430 <__gcc_register_frame>
   140003085:	90                   	nop
   140003086:	90                   	nop
   140003087:	90                   	nop
   140003088:	90                   	nop
   140003089:	90                   	nop
   14000308a:	90                   	nop
   14000308b:	90                   	nop
   14000308c:	90                   	nop
   14000308d:	90                   	nop
   14000308e:	90                   	nop
   14000308f:	90                   	nop

0000000140003090 <__CTOR_LIST__>:
   140003090:	ff                   	(bad)
   140003091:	ff                   	(bad)
   140003092:	ff                   	(bad)
   140003093:	ff                   	(bad)
   140003094:	ff                   	(bad)
   140003095:	ff                   	(bad)
   140003096:	ff                   	(bad)
   140003097:	ff         	inc    DWORD PTR [rax+0x1400030]

0000000140003098 <.ctors.65535>:
   140003098:	80 30 00             	xor    BYTE PTR [rax],0x0
   14000309b:	40 01 00             	rex add DWORD PTR [rax],eax
	...

00000001400030a8 <__DTOR_LIST__>:
   1400030a8:	ff                   	(bad)
   1400030a9:	ff                   	(bad)
   1400030aa:	ff                   	(bad)
   1400030ab:	ff                   	(bad)
   1400030ac:	ff                   	(bad)
   1400030ad:	ff                   	(bad)
   1400030ae:	ff                   	(bad)
   1400030af:	ff 00                	inc    DWORD PTR [rax]
   1400030b1:	00 00                	add    BYTE PTR [rax],al
   1400030b3:	00 00                	add    BYTE PTR [rax],al
   1400030b5:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000140004000 <__data_start__>:
   140004000:	b0 30                	mov    al,0x30
   140004002:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

0000000140004010 <__native_vcclrit_reason>:
   140004010:	ff                   	(bad)
   140004011:	ff                   	(bad)
   140004012:	ff                   	(bad)
   140004013:	ff                   	(bad)

0000000140004014 <__native_dllmain_reason>:
   140004014:	ff                   	(bad)
   140004015:	ff                   	(bad)
   140004016:	ff                   	(bad)
   140004017:	ff 00                	inc    DWORD PTR [rax]
   140004019:	00 00                	add    BYTE PTR [rax],al
   14000401b:	00 00                	add    BYTE PTR [rax],al
   14000401d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140004020 <_dowildcard>:
   140004020:	ff                   	(bad)
   140004021:	ff                   	(bad)
   140004022:	ff                   	(bad)
   140004023:	ff 00                	inc    DWORD PTR [rax]
	...

0000000140004030 <_CRT_MT>:
   140004030:	02 00                	add    al,BYTE PTR [rax]
	...

0000000140004040 <_MINGW_INSTALL_DEBUG_MATHERR>:
   140004040:	ff                   	(bad)
   140004041:	ff                   	(bad)
   140004042:	ff                   	(bad)
   140004043:	ff 00                	inc    DWORD PTR [rax]
	...

0000000140004050 <__imp_vfprintf>:
   140004050:	20 2c 00             	and    BYTE PTR [rax+rax*1],ch
   140004053:	40 01 00             	rex add DWORD PTR [rax],eax
	...

0000000140004060 <__imp_printf>:
   140004060:	40 2c 00             	rex sub al,0x0
   140004063:	40 01 00             	rex add DWORD PTR [rax],eax
	...

0000000140004070 <__imp_fprintf>:
   140004070:	90                   	nop
   140004071:	2c 00                	sub    al,0x0
   140004073:	40 01 00             	rex add DWORD PTR [rax],eax
	...

0000000140004080 <__imp___winitenv>:
   140004080:	70 81                	jo     140004003 <__data_start__+0x3>
   140004082:	00 40 01             	add    BYTE PTR [rax+0x1],al
   140004085:	00 00                	add    BYTE PTR [rax],al
	...

0000000140004088 <__imp___initenv>:
   140004088:	78 81                	js     14000400b <__data_start__+0xb>
   14000408a:	00 40 01             	add    BYTE PTR [rax+0x1],al
   14000408d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140004090 <__imp___ms_fwprintf>:
   140004090:	40                   	rex
   140004091:	2e 00 40 01          	cs add BYTE PTR [rax+0x1],al
   140004095:	00 00                	add    BYTE PTR [rax],al
	...

0000000140004098 <__imp_tzset>:
   140004098:	80 2e 00             	sub    BYTE PTR [rsi],0x0
   14000409b:	40 01 00             	rex add DWORD PTR [rax],eax
	...

00000001400040a0 <__imp__get_output_format>:
   1400040a0:	d0 2c 00             	shr    BYTE PTR [rax+rax*1],1
   1400040a3:	40 01 00             	rex add DWORD PTR [rax],eax
	...

00000001400040a8 <__imp__amsg_exit>:
   1400040a8:	00 2e                	add    BYTE PTR [rsi],ch
   1400040aa:	00 40 01             	add    BYTE PTR [rax+0x1],al
   1400040ad:	00 00                	add    BYTE PTR [rax],al
	...

00000001400040b0 <__imp___wgetmainargs>:
   1400040b0:	50                   	push   rax
   1400040b1:	2d 00 40 01 00       	sub    eax,0x14000
	...

00000001400040b8 <__imp___getmainargs>:
   1400040b8:	e0 2c                	loopne 1400040e6 <initial_tznames+0x6>
   1400040ba:	00 40 01             	add    BYTE PTR [rax+0x1],al
   1400040bd:	00 00                	add    BYTE PTR [rax],al
	...

00000001400040c0 <__imp_daylight>:
   1400040c0:	d8 40 00             	fadd   DWORD PTR [rax+0x0]
   1400040c3:	40 01 00             	rex add DWORD PTR [rax],eax
	...

00000001400040c8 <__imp_timezone>:
   1400040c8:	dc 40 00             	fadd   QWORD PTR [rax+0x0]
   1400040cb:	40 01 00             	rex add DWORD PTR [rax],eax
	...

00000001400040d0 <__imp_tzname>:
   1400040d0:	e0 40                	loopne 140004112 <__data_end__+0x2>
   1400040d2:	00 40 01             	add    BYTE PTR [rax+0x1],al
   1400040d5:	00 00                	add    BYTE PTR [rax],al
	...

00000001400040d8 <initial_daylight>:
   1400040d8:	01 00                	add    DWORD PTR [rax],eax
	...

00000001400040dc <initial_timezone>:
   1400040dc:	80 70 00 00          	xor    BYTE PTR [rax+0x0],0x0

00000001400040e0 <initial_tznames>:
   1400040e0:	f4                   	hlt
   1400040e1:	40 00 40 01          	rex add BYTE PTR [rax+0x1],al
   1400040e5:	00 00                	add    BYTE PTR [rax],al
   1400040e7:	00 f0                	add    al,dh
   1400040e9:	40 00 40 01          	rex add BYTE PTR [rax+0x1],al
   1400040ed:	00 00                	add    BYTE PTR [rax],al
	...

00000001400040f0 <initial_tzname1>:
   1400040f0:	50                   	push   rax
   1400040f1:	44 54                	rex.R push rsp
	...

00000001400040f4 <initial_tzname0>:
   1400040f4:	50                   	push   rax
   1400040f5:	53                   	push   rbx
   1400040f6:	54                   	push   rsp
	...

00000001400040f8 <__imp_at_quick_exit>:
   1400040f8:	e0 2d                	loopne 140004127 <__data_end__+0x17>
   1400040fa:	00 40 01             	add    BYTE PTR [rax+0x1],al
   1400040fd:	00 00                	add    BYTE PTR [rax],al
	...

0000000140004100 <__imp__onexit>:
   140004100:	c0 2d 00 40 01 00 00 	shr    BYTE PTR [rip+0x14000],0x0        # 140018107 <.debug_line_str+0x5070>
	...

Disassembly of section .rdata:

0000000140005000 <.rdata>:
   140005000:	42 69 6e 61 72 79 33 	rex.X imul ebp,DWORD PTR [rsi+0x61],0x32337972
   140005007:	32 
   140005008:	20 3a                	and    BYTE PTR [rdx],bh
   14000500a:	25 66 0a 00 42       	and    eax,0x42000a66
   14000500f:	69 6e 61 72 79 36 34 	imul   ebp,DWORD PTR [rsi+0x61],0x34367972
   140005016:	20 3a                	and    BYTE PTR [rdx],bh
   140005018:	25 6c 66 0a 00       	and    eax,0xa666c
   14000501d:	42 69 6e 61 72 79 31 	rex.X imul ebp,DWORD PTR [rsi+0x61],0x32317972
   140005024:	32 
   140005025:	38 3a                	cmp    BYTE PTR [rdx],bh
   140005027:	25 6c 6c 66 0a       	and    eax,0xa666c6c
	...

0000000140005040 <__dyn_tls_init_callback>:
   140005040:	70 1c                	jo     14000505e <__dyn_tls_init_callback+0x1e>
   140005042:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

0000000140005060 <_tls_used>:
   140005060:	00 b0 00 40 01 00    	add    BYTE PTR [rax+0x14000],dh
   140005066:	00 00                	add    BYTE PTR [rax],al
   140005068:	08 b0 00 40 01 00    	or     BYTE PTR [rax+0x14000],dh
   14000506e:	00 00                	add    BYTE PTR [rax],al
   140005070:	6c                   	ins    BYTE PTR es:[rdi],dx
   140005071:	80 00 40             	add    BYTE PTR [rax],0x40
   140005074:	01 00                	add    DWORD PTR [rax],eax
   140005076:	00 00                	add    BYTE PTR [rax],al
   140005078:	38 a0 00 40 01 00    	cmp    BYTE PTR [rax+0x14000],ah
	...

00000001400050a0 <.rdata>:
   1400050a0:	41 72 67             	rex.B jb 14000510a <.rdata+0x6a>
   1400050a3:	75 6d                	jne    140005112 <.rdata+0x72>
   1400050a5:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   1400050a7:	74 20                	je     1400050c9 <.rdata+0x29>
   1400050a9:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
   1400050ab:	6d                   	ins    DWORD PTR es:[rdi],dx
   1400050ac:	61                   	(bad)
   1400050ad:	69 6e 20 65 72 72 6f 	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
   1400050b4:	72 20                	jb     1400050d6 <.rdata+0x36>
   1400050b6:	28 44 4f 4d          	sub    BYTE PTR [rdi+rcx*2+0x4d],al
   1400050ba:	41                   	rex.B
   1400050bb:	49                   	rex.WB
   1400050bc:	4e 29 00             	rex.WRX sub QWORD PTR [rax],r8
   1400050bf:	41 72 67             	rex.B jb 140005129 <.rdata+0x89>
   1400050c2:	75 6d                	jne    140005131 <.rdata+0x91>
   1400050c4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   1400050c6:	74 20                	je     1400050e8 <.rdata+0x48>
   1400050c8:	73 69                	jae    140005133 <.rdata+0x93>
   1400050ca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400050cb:	67 75 6c             	addr32 jne 14000513a <.rdata+0x9a>
   1400050ce:	61                   	(bad)
   1400050cf:	72 69                	jb     14000513a <.rdata+0x9a>
   1400050d1:	74 79                	je     14000514c <.rdata+0xac>
   1400050d3:	20 28                	and    BYTE PTR [rax],ch
   1400050d5:	53                   	push   rbx
   1400050d6:	49                   	rex.WB
   1400050d7:	47                   	rex.RXB
   1400050d8:	4e 29 00             	rex.WRX sub QWORD PTR [rax],r8
   1400050db:	00 00                	add    BYTE PTR [rax],al
   1400050dd:	00 00                	add    BYTE PTR [rax],al
   1400050df:	00 4f 76             	add    BYTE PTR [rdi+0x76],cl
   1400050e2:	65 72 66             	gs jb  14000514b <.rdata+0xab>
   1400050e5:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400050e6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400050e7:	77 20                	ja     140005109 <.rdata+0x69>
   1400050e9:	72 61                	jb     14000514c <.rdata+0xac>
   1400050eb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400050ec:	67 65 20 65 72       	and    BYTE PTR gs:[ebp+0x72],ah
   1400050f1:	72 6f                	jb     140005162 <.rdata+0xc2>
   1400050f3:	72 20                	jb     140005115 <.rdata+0x75>
   1400050f5:	28 4f 56             	sub    BYTE PTR [rdi+0x56],cl
   1400050f8:	45 52                	rex.RB push r10
   1400050fa:	46                   	rex.RX
   1400050fb:	4c                   	rex.WR
   1400050fc:	4f 57                	rex.WRXB push r15
   1400050fe:	29 00                	sub    DWORD PTR [rax],eax
   140005100:	50                   	push   rax
   140005101:	61                   	(bad)
   140005102:	72 74                	jb     140005178 <.rdata+0xd8>
   140005104:	69 61 6c 20 6c 6f 73 	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
   14000510b:	73 20                	jae    14000512d <.rdata+0x8d>
   14000510d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000510e:	66 20 73 69          	data16 and BYTE PTR [rbx+0x69],dh
   140005112:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   140005114:	69 66 69 63 61 6e 63 	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
   14000511b:	65 20 28             	and    BYTE PTR gs:[rax],ch
   14000511e:	50                   	push   rax
   14000511f:	4c                   	rex.WR
   140005120:	4f 53                	rex.WRXB push r11
   140005122:	53                   	push   rbx
   140005123:	29 00                	sub    DWORD PTR [rax],eax
   140005125:	00 00                	add    BYTE PTR [rax],al
   140005127:	00 54 6f 74          	add    BYTE PTR [rdi+rbp*2+0x74],dl
   14000512b:	61                   	(bad)
   14000512c:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000512d:	20 6c 6f 73          	and    BYTE PTR [rdi+rbp*2+0x73],ch
   140005131:	73 20                	jae    140005153 <.rdata+0xb3>
   140005133:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140005134:	66 20 73 69          	data16 and BYTE PTR [rbx+0x69],dh
   140005138:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000513a:	69 66 69 63 61 6e 63 	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
   140005141:	65 20 28             	and    BYTE PTR gs:[rax],ch
   140005144:	54                   	push   rsp
   140005145:	4c                   	rex.WR
   140005146:	4f 53                	rex.WRXB push r11
   140005148:	53                   	push   rbx
   140005149:	29 00                	sub    DWORD PTR [rax],eax
   14000514b:	00 00                	add    BYTE PTR [rax],al
   14000514d:	00 00                	add    BYTE PTR [rax],al
   14000514f:	00 54 68 65          	add    BYTE PTR [rax+rbp*2+0x65],dl
   140005153:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
   140005156:	73 75                	jae    1400051cd <.rdata+0x12d>
   140005158:	6c                   	ins    BYTE PTR es:[rdi],dx
   140005159:	74 20                	je     14000517b <.rdata+0xdb>
   14000515b:	69 73 20 74 6f 6f 20 	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
   140005162:	73 6d                	jae    1400051d1 <.rdata+0x131>
   140005164:	61                   	(bad)
   140005165:	6c                   	ins    BYTE PTR es:[rdi],dx
   140005166:	6c                   	ins    BYTE PTR es:[rdi],dx
   140005167:	20 74 6f 20          	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14000516b:	62 65                	(bad)
   14000516d:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
   140005170:	70 72                	jo     1400051e4 <.rdata+0x4>
   140005172:	65 73 65             	gs jae 1400051da <.rdata+0x13a>
   140005175:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140005176:	74 65                	je     1400051dd <.rdata+0x13d>
   140005178:	64 20 28             	and    BYTE PTR fs:[rax],ch
   14000517b:	55                   	push   rbp
   14000517c:	4e                   	rex.WRX
   14000517d:	44                   	rex.R
   14000517e:	45 52                	rex.RB push r10
   140005180:	46                   	rex.RX
   140005181:	4c                   	rex.WR
   140005182:	4f 57                	rex.WRXB push r15
   140005184:	29 00                	sub    DWORD PTR [rax],eax
   140005186:	55                   	push   rbp
   140005187:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140005188:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14000518c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000518d:	20 65 72             	and    BYTE PTR [rbp+0x72],ah
   140005190:	72 6f                	jb     140005201 <.rdata+0x21>
   140005192:	72 00                	jb     140005194 <.rdata+0xf4>
   140005194:	00 00                	add    BYTE PTR [rax],al
   140005196:	00 00                	add    BYTE PTR [rax],al
   140005198:	5f                   	pop    rdi
   140005199:	6d                   	ins    DWORD PTR es:[rdi],dx
   14000519a:	61                   	(bad)
   14000519b:	74 68                	je     140005205 <.rdata+0x25>
   14000519d:	65 72 72             	gs jb  140005212 <.rdata+0x32>
   1400051a0:	28 29                	sub    BYTE PTR [rcx],ch
   1400051a2:	3a 20                	cmp    ah,BYTE PTR [rax]
   1400051a4:	25 73 20 69 6e       	and    eax,0x6e692073
   1400051a9:	20 25 73 28 25 67    	and    BYTE PTR [rip+0x67252873],ah        # 1a7257a22 <.debug_line_str+0x6724498b>
   1400051af:	2c 20                	sub    al,0x20
   1400051b1:	25 67 29 20 20       	and    eax,0x20202967
   1400051b6:	28 72 65             	sub    BYTE PTR [rdx+0x65],dh
   1400051b9:	74 76                	je     140005231 <.rdata+0x51>
   1400051bb:	61                   	(bad)
   1400051bc:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400051bd:	3d 25 67 29 0a       	cmp    eax,0xa296725
   1400051c2:	00 00                	add    BYTE PTR [rax],al
   1400051c4:	38 cc                	cmp    ah,cl
   1400051c6:	ff                   	(bad)
   1400051c7:	ff                   	(bad)
   1400051c8:	ec                   	in     al,dx
   1400051c9:	cb                   	retf
   1400051ca:	ff                   	(bad)
   1400051cb:	ff 84 cb ff ff 0c cc 	inc    DWORD PTR [rbx+rcx*8-0x33f30001]
   1400051d2:	ff                   	(bad)
   1400051d3:	ff 1c cc             	call   FWORD PTR [rsp+rcx*8]
   1400051d6:	ff                   	(bad)
   1400051d7:	ff 2c cc             	jmp    FWORD PTR [rsp+rcx*8]
   1400051da:	ff                   	(bad)
   1400051db:	ff                   	(bad)
   1400051dc:	fc                   	cld
   1400051dd:	cb                   	retf
   1400051de:	ff                   	(bad)
   1400051df:	ff               	dec    DWORD PTR [rbp+0x69]

00000001400051e0 <.rdata>:
   1400051e0:	4d 69 6e 67 77 2d 77 	imul   r13,QWORD PTR [r14+0x67],0x36772d77
   1400051e7:	36 
   1400051e8:	34 20                	xor    al,0x20
   1400051ea:	72 75                	jb     140005261 <.rdata+0x81>
   1400051ec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400051ed:	74 69                	je     140005258 <.rdata+0x78>
   1400051ef:	6d                   	ins    DWORD PTR es:[rdi],dx
   1400051f0:	65 20 66 61          	and    BYTE PTR gs:[rsi+0x61],ah
   1400051f4:	69 6c 75 72 65 3a 0a 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
   1400051fb:	00 
   1400051fc:	00 00                	add    BYTE PTR [rax],al
   1400051fe:	00 00                	add    BYTE PTR [rax],al
   140005200:	41                   	rex.B
   140005201:	64 64 72 65          	fs fs jb 14000526a <.rdata+0x8a>
   140005205:	73 73                	jae    14000527a <.rdata+0x9a>
   140005207:	20 25 70 20 68 61    	and    BYTE PTR [rip+0x61682070],ah        # 1a168727d <.debug_line_str+0x616741e6>
   14000520d:	73 20                	jae    14000522f <.rdata+0x4f>
   14000520f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140005210:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140005211:	20 69 6d             	and    BYTE PTR [rcx+0x6d],ch
   140005214:	61                   	(bad)
   140005215:	67 65 2d 73 65 63 74 	addr32 gs sub eax,0x74636573
   14000521c:	69 6f 6e 00 20 20 56 	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
   140005223:	69 72 74 75 61 6c 51 	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
   14000522a:	75 65                	jne    140005291 <.rdata+0xb1>
   14000522c:	72 79                	jb     1400052a7 <.rdata+0xc7>
   14000522e:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
   140005231:	69 6c 65 64 20 66 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
   140005238:	72 
   140005239:	20 25 64 20 62 79    	and    BYTE PTR [rip+0x79622064],ah        # 1b96272a3 <.debug_line_str+0x7961420c>
   14000523f:	74 65                	je     1400052a6 <.rdata+0xc6>
   140005241:	73 20                	jae    140005263 <.rdata+0x83>
   140005243:	61                   	(bad)
   140005244:	74 20                	je     140005266 <.rdata+0x86>
   140005246:	61                   	(bad)
   140005247:	64 64 72 65          	fs fs jb 1400052b0 <.rdata+0xd0>
   14000524b:	73 73                	jae    1400052c0 <.rdata+0xe0>
   14000524d:	20 25 70 00 00 00    	and    BYTE PTR [rip+0x70],ah        # 1400052c3 <.rdata+0xe3>
   140005253:	00 00                	add    BYTE PTR [rax],al
   140005255:	00 00                	add    BYTE PTR [rax],al
   140005257:	00 20                	add    BYTE PTR [rax],ah
   140005259:	20 56 69             	and    BYTE PTR [rsi+0x69],dl
   14000525c:	72 74                	jb     1400052d2 <.rdata+0xf2>
   14000525e:	75 61                	jne    1400052c1 <.rdata+0xe1>
   140005260:	6c                   	ins    BYTE PTR es:[rdi],dx
   140005261:	50                   	push   rax
   140005262:	72 6f                	jb     1400052d3 <.rdata+0xf3>
   140005264:	74 65                	je     1400052cb <.rdata+0xeb>
   140005266:	63 74 20 66          	movsxd esi,DWORD PTR [rax+riz*1+0x66]
   14000526a:	61                   	(bad)
   14000526b:	69 6c 65 64 20 77 69 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
   140005272:	74 
   140005273:	68 20 63 6f 64       	push   0x646f6320
   140005278:	65 20 30             	and    BYTE PTR gs:[rax],dh
   14000527b:	78 25                	js     1400052a2 <.rdata+0xc2>
   14000527d:	78 00                	js     14000527f <.rdata+0x9f>
   14000527f:	00 20                	add    BYTE PTR [rax],ah
   140005281:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
   140005284:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   140005288:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140005289:	20 70 73             	and    BYTE PTR [rax+0x73],dh
   14000528c:	65 75 64             	gs jne 1400052f3 <.rdata+0x113>
   14000528f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140005290:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
   140005293:	6c                   	ins    BYTE PTR es:[rdi],dx
   140005294:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140005295:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
   140005298:	69 6f 6e 20 70 72 6f 	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
   14000529f:	74 6f                	je     140005310 <.rdata+0x130>
   1400052a1:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
   1400052a4:	20 76 65             	and    BYTE PTR [rsi+0x65],dh
   1400052a7:	72 73                	jb     14000531c <.rdata+0x13c>
   1400052a9:	69 6f 6e 20 25 64 2e 	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
   1400052b0:	0a 00                	or     al,BYTE PTR [rax]
   1400052b2:	00 00                	add    BYTE PTR [rax],al
   1400052b4:	00 00                	add    BYTE PTR [rax],al
   1400052b6:	00 00                	add    BYTE PTR [rax],al
   1400052b8:	20 20                	and    BYTE PTR [rax],ah
   1400052ba:	55                   	push   rbp
   1400052bb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400052bc:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   1400052c0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400052c1:	20 70 73             	and    BYTE PTR [rax+0x73],dh
   1400052c4:	65 75 64             	gs jne 14000532b <.rdata+0x14b>
   1400052c7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400052c8:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
   1400052cb:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400052cc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400052cd:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
   1400052d0:	69 6f 6e 20 62 69 74 	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
   1400052d7:	20 73 69             	and    BYTE PTR [rbx+0x69],dh
   1400052da:	7a 65                	jp     140005341 <.rdata+0x1>
   1400052dc:	20 25 64 2e 0a 00    	and    BYTE PTR [rip+0xa2e64],ah        # 1400a8146 <.debug_line_str+0x950af>
   1400052e2:	00 00                	add    BYTE PTR [rax],al
   1400052e4:	00 00                	add    BYTE PTR [rax],al
   1400052e6:	00 00                	add    BYTE PTR [rax],al
   1400052e8:	25 64 20 62 69       	and    eax,0x69622064
   1400052ed:	74 20                	je     14000530f <.rdata+0x12f>
   1400052ef:	70 73                	jo     140005364 <.rdata+0x24>
   1400052f1:	65 75 64             	gs jne 140005358 <.rdata+0x18>
   1400052f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400052f5:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
   1400052f8:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400052f9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400052fa:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
   1400052fd:	69 6f 6e 20 61 74 20 	imul   ebp,DWORD PTR [rdi+0x6e],0x20746120
   140005304:	25 70 20 6f 75       	and    eax,0x756f2070
   140005309:	74 20                	je     14000532b <.rdata+0x14b>
   14000530b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000530c:	66 20 72 61          	data16 and BYTE PTR [rdx+0x61],dh
   140005310:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140005311:	67 65 2c 20          	addr32 gs sub al,0x20
   140005315:	74 61                	je     140005378 <.rdata+0x8>
   140005317:	72 67                	jb     140005380 <.rdata+0x10>
   140005319:	65 74 69             	gs je  140005385 <.rdata+0x15>
   14000531c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000531d:	67 20 25 70 2c 20 79 	and    BYTE PTR [eip+0x79202c70],ah        # 1b9207f94 <.debug_line_str+0x791f4efd>
   140005324:	69 65 6c 64 69 6e 67 	imul   esp,DWORD PTR [rbp+0x6c],0x676e6964
   14000532b:	20 74 68 65          	and    BYTE PTR [rax+rbp*2+0x65],dh
   14000532f:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
   140005332:	6c                   	ins    BYTE PTR es:[rdi],dx
   140005333:	75 65                	jne    14000539a <.refptr._CRT_MT+0xa>
   140005335:	20 25 70 2e 0a 00    	and    BYTE PTR [rip+0xa2e70],ah        # 1400a81ab <.debug_line_str+0x95114>
   14000533b:	00 00                	add    BYTE PTR [rax],al
   14000533d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140005340 <.rdata>:
   140005340:	50                   	push   rax
   140005341:	d1 ff                	sar    edi,1
   140005343:	ff 50 d1             	call   QWORD PTR [rax-0x2f]
   140005346:	ff                   	(bad)
   140005347:	ff 50 d1             	call   QWORD PTR [rax-0x2f]
   14000534a:	ff                   	(bad)
   14000534b:	ff 50 d1             	call   QWORD PTR [rax-0x2f]
   14000534e:	ff                   	(bad)
   14000534f:	ff 50 d1             	call   QWORD PTR [rax-0x2f]
   140005352:	ff                   	(bad)
   140005353:	ff                   	(bad)
   140005354:	fd                   	std
   140005355:	d0 ff                	sar    bh,1
   140005357:	ff 50 d1             	call   QWORD PTR [rax-0x2f]
   14000535a:	ff                   	(bad)
   14000535b:	ff                   	(bad)
   14000535c:	78 d1                	js     14000532f <.rdata+0x14f>
   14000535e:	ff                   	(bad)
   14000535f:	ff                   	(bad)
   140005360:	fd                   	std
   140005361:	d0 ff                	sar    bh,1
   140005363:	ff                   	(bad)
   140005364:	db d0                	fcmovnbe st,st(0)
   140005366:	ff                   	(bad)
   140005367:	ff 00                	inc    DWORD PTR [rax]
   140005369:	00 00                	add    BYTE PTR [rax],al
   14000536b:	00 00                	add    BYTE PTR [rax],al
   14000536d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140005370 <.rdata>:
   140005370:	72 75                	jb     1400053e7 <.refptr.__dyn_tls_init_callback+0x7>
   140005372:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140005373:	74 69                	je     1400053de <.refptr.__RUNTIME_PSEUDO_RELOC_LIST__+0xe>
   140005375:	6d                   	ins    DWORD PTR es:[rdi],dx
   140005376:	65 20 65 72          	and    BYTE PTR gs:[rbp+0x72],ah
   14000537a:	72 6f                	jb     1400053eb <.refptr.__dyn_tls_init_callback+0xb>
   14000537c:	72 20                	jb     14000539e <.refptr._CRT_MT+0xe>
   14000537e:	25 64 0a 00 00       	and    eax,0xa64
	...

0000000140005390 <.refptr._CRT_MT>:
   140005390:	30 40 00             	xor    BYTE PTR [rax+0x0],al
   140005393:	40 01 00             	rex add DWORD PTR [rax],eax
	...

00000001400053a0 <.refptr._MINGW_INSTALL_DEBUG_MATHERR>:
   1400053a0:	40                   	rex
   1400053a1:	40 00 40 01          	rex add BYTE PTR [rax+0x1],al
	...

00000001400053b0 <.refptr.__CTOR_LIST__>:
   1400053b0:	90                   	nop
   1400053b1:	30 00                	xor    BYTE PTR [rax],al
   1400053b3:	40 01 00             	rex add DWORD PTR [rax],eax
	...

00000001400053c0 <.refptr.__RUNTIME_PSEUDO_RELOC_LIST_END__>:
   1400053c0:	00 56 00             	add    BYTE PTR [rsi+0x0],dl
   1400053c3:	40 01 00             	rex add DWORD PTR [rax],eax
	...

00000001400053d0 <.refptr.__RUNTIME_PSEUDO_RELOC_LIST__>:
   1400053d0:	00 56 00             	add    BYTE PTR [rsi+0x0],dl
   1400053d3:	40 01 00             	rex add DWORD PTR [rax],eax
	...

00000001400053e0 <.refptr.__dyn_tls_init_callback>:
   1400053e0:	40 50                	rex push rax
   1400053e2:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

00000001400053f0 <.refptr.__image_base__>:
   1400053f0:	00 00                	add    BYTE PTR [rax],al
   1400053f2:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

0000000140005400 <.refptr.__imp___initenv>:
   140005400:	88 40 00             	mov    BYTE PTR [rax+0x0],al
   140005403:	40 01 00             	rex add DWORD PTR [rax],eax
	...

0000000140005410 <.refptr.__imp__exit>:
   140005410:	90                   	nop
   140005411:	93                   	xchg   ebx,eax
   140005412:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

0000000140005420 <.refptr.__imp__tzset>:
   140005420:	48 94                	xchg   rsp,rax
   140005422:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

0000000140005430 <.refptr.__imp_exit>:
   140005430:	c8 93 00 40          	enter  0x93,0x40
   140005434:	01 00                	add    DWORD PTR [rax],eax
	...

0000000140005440 <.refptr.__mingw_app_type>:
   140005440:	80 80 00 40 01 00 00 	add    BYTE PTR [rax+0x14000],0x0
	...

0000000140005450 <.refptr.__mingw_initltsdrot_force>:
   140005450:	68 80 00 40 01       	push   0x1400080
	...

0000000140005460 <.refptr.__mingw_initltsdyn_force>:
   140005460:	64 80 00 40          	add    BYTE PTR fs:[rax],0x40
   140005464:	01 00                	add    DWORD PTR [rax],eax
	...

0000000140005470 <.refptr.__mingw_initltssuo_force>:
   140005470:	60                   	(bad)
   140005471:	80 00 40             	add    BYTE PTR [rax],0x40
   140005474:	01 00                	add    DWORD PTR [rax],eax
	...

0000000140005480 <.refptr.__mingw_module_is_dll>:
   140005480:	00 80 00 40 01 00    	add    BYTE PTR [rax+0x14000],al
	...

0000000140005490 <.refptr.__mingw_oldexcpt_handler>:
   140005490:	c0 80 00 40 01 00 00 	rol    BYTE PTR [rax+0x14000],0x0
	...

00000001400054a0 <.refptr.__native_startup_lock>:
   1400054a0:	40 80 00 40          	rex add BYTE PTR [rax],0x40
   1400054a4:	01 00                	add    DWORD PTR [rax],eax
	...

00000001400054b0 <.refptr.__native_startup_state>:
   1400054b0:	48 80 00 40          	rex.W add BYTE PTR [rax],0x40
   1400054b4:	01 00                	add    DWORD PTR [rax],eax
	...

00000001400054c0 <.refptr.__xc_a>:
   1400054c0:	00 a0 00 40 01 00    	add    BYTE PTR [rax+0x14000],ah
	...

00000001400054d0 <.refptr.__xc_z>:
   1400054d0:	10 a0 00 40 01 00    	adc    BYTE PTR [rax+0x14000],ah
	...

00000001400054e0 <.refptr.__xi_a>:
   1400054e0:	18 a0 00 40 01 00    	sbb    BYTE PTR [rax+0x14000],ah
	...

00000001400054f0 <.refptr.__xi_z>:
   1400054f0:	28 a0 00 40 01 00    	sub    BYTE PTR [rax+0x14000],ah
	...

0000000140005500 <.refptr._commode>:
   140005500:	70 80                	jo     140005482 <.refptr.__mingw_module_is_dll+0x2>
   140005502:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

0000000140005510 <.refptr._dowildcard>:
   140005510:	20 40 00             	and    BYTE PTR [rax+0x0],al
   140005513:	40 01 00             	rex add DWORD PTR [rax],eax
	...

0000000140005520 <.refptr._fmode>:
   140005520:	b0 80                	mov    al,0x80
   140005522:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

0000000140005530 <.refptr._gnu_exception_handler>:
   140005530:	b0 23                	mov    al,0x23
   140005532:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

0000000140005540 <.refptr._matherr>:
   140005540:	10 1d 00 40 01 00    	adc    BYTE PTR [rip+0x14000],bl        # 140019546 <.debug_line_str+0x64af>
	...

0000000140005550 <.refptr._newmode>:
   140005550:	50                   	push   rax
   140005551:	80 00 40             	add    BYTE PTR [rax],0x40
   140005554:	01 00                	add    DWORD PTR [rax],eax
	...

0000000140005560 <.rdata$zzz>:
   140005560:	47                   	rex.RXB
   140005561:	43                   	rex.XB
   140005562:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   140005565:	28 78 38             	sub    BYTE PTR [rax+0x38],bh
   140005568:	36 5f                	ss pop rdi
   14000556a:	36 34 2d             	ss xor al,0x2d
   14000556d:	77 69                	ja     1400055d8 <.rdata$zzz+0x28>
   14000556f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140005570:	33 32                	xor    esi,DWORD PTR [rdx]
   140005572:	2d 73 65 68 2d       	sub    eax,0x2d686573
   140005577:	72 65                	jb     1400055de <.rdata$zzz+0x2e>
   140005579:	76 31                	jbe    1400055ac <.rdata$zzz+0x4c>
   14000557b:	2c 20                	sub    al,0x20
   14000557d:	42 75 69             	rex.X jne 1400055e9 <.rdata$zzz+0x39>
   140005580:	6c                   	ins    BYTE PTR es:[rdi],dx
   140005581:	74 20                	je     1400055a3 <.rdata$zzz+0x43>
   140005583:	62                   	(bad)
   140005584:	79 20                	jns    1400055a6 <.rdata$zzz+0x46>
   140005586:	4d 69 6e 47 57 2d 42 	imul   r13,QWORD PTR [r14+0x47],0x75422d57
   14000558d:	75 
   14000558e:	69 6c 64 73 20 70 72 	imul   ebp,DWORD PTR [rsp+riz*2+0x73],0x6f727020
   140005595:	6f 
   140005596:	6a 65                	push   0x65
   140005598:	63 74 29 20          	movsxd esi,DWORD PTR [rcx+rbp*1+0x20]
   14000559c:	31 33                	xor    DWORD PTR [rbx],esi
   14000559e:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   1400055a1:	30 00                	xor    BYTE PTR [rax],al
	...

00000001400055b0 <.rdata$zzz>:
   1400055b0:	47                   	rex.RXB
   1400055b1:	43                   	rex.XB
   1400055b2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   1400055b5:	28 78 38             	sub    BYTE PTR [rax+0x38],bh
   1400055b8:	36 5f                	ss pop rdi
   1400055ba:	36 34 2d             	ss xor al,0x2d
   1400055bd:	77 69                	ja     140005628 <__RUNTIME_PSEUDO_RELOC_LIST_END__+0x28>
   1400055bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400055c0:	33 32                	xor    esi,DWORD PTR [rdx]
   1400055c2:	2d 73 65 68 2d       	sub    eax,0x2d686573
   1400055c7:	72 65                	jb     14000562e <__RUNTIME_PSEUDO_RELOC_LIST_END__+0x2e>
   1400055c9:	76 31                	jbe    1400055fc <.rdata$zzz+0x4c>
   1400055cb:	2c 20                	sub    al,0x20
   1400055cd:	42 75 69             	rex.X jne 140005639 <__RUNTIME_PSEUDO_RELOC_LIST_END__+0x39>
   1400055d0:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400055d1:	74 20                	je     1400055f3 <.rdata$zzz+0x43>
   1400055d3:	62                   	(bad)
   1400055d4:	79 20                	jns    1400055f6 <.rdata$zzz+0x46>
   1400055d6:	4d 69 6e 47 57 2d 42 	imul   r13,QWORD PTR [r14+0x47],0x75422d57
   1400055dd:	75 
   1400055de:	69 6c 64 73 20 70 72 	imul   ebp,DWORD PTR [rsp+riz*2+0x73],0x6f727020
   1400055e5:	6f 
   1400055e6:	6a 65                	push   0x65
   1400055e8:	63 74 29 20          	movsxd esi,DWORD PTR [rcx+rbp*1+0x20]
   1400055ec:	31 33                	xor    DWORD PTR [rbx],esi
   1400055ee:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   1400055f1:	30 00                	xor    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

0000000140006000 <.pdata>:
   140006000:	00 10                	add    BYTE PTR [rax],dl
   140006002:	00 00                	add    BYTE PTR [rax],al
   140006004:	01 10                	add    DWORD PTR [rax],edx
   140006006:	00 00                	add    BYTE PTR [rax],al
   140006008:	00 70 00             	add    BYTE PTR [rax+0x0],dh
   14000600b:	00 10                	add    BYTE PTR [rax],dl
   14000600d:	10 00                	adc    BYTE PTR [rax],al
   14000600f:	00 2e                	add    BYTE PTR [rsi],ch
   140006011:	11 00                	adc    DWORD PTR [rax],eax
   140006013:	00 04 70             	add    BYTE PTR [rax+rsi*2],al
   140006016:	00 00                	add    BYTE PTR [rax],al
   140006018:	30 11                	xor    BYTE PTR [rcx],dl
   14000601a:	00 00                	add    BYTE PTR [rax],al
   14000601c:	79 11                	jns    14000602f <.pdata+0x2f>
   14000601e:	00 00                	add    BYTE PTR [rax],al
   140006020:	0c 70                	or     al,0x70
   140006022:	00 00                	add    BYTE PTR [rax],al
   140006024:	80 11 00             	adc    BYTE PTR [rcx],0x0
   140006027:	00 d0                	add    al,dl
   140006029:	13 00                	adc    eax,DWORD PTR [rax]
   14000602b:	00 14 70             	add    BYTE PTR [rax+rsi*2],dl
   14000602e:	00 00                	add    BYTE PTR [rax],al
   140006030:	d0 13                	rcl    BYTE PTR [rbx],1
   140006032:	00 00                	add    BYTE PTR [rax],al
   140006034:	ed                   	in     eax,dx
   140006035:	13 00                	adc    eax,DWORD PTR [rax]
   140006037:	00 24 70             	add    BYTE PTR [rax+rsi*2],ah
   14000603a:	00 00                	add    BYTE PTR [rax],al
   14000603c:	f0 13 00             	lock adc eax,DWORD PTR [rax]
   14000603f:	00 0d 14 00 00 44    	add    BYTE PTR [rip+0x44000014],cl        # 184006059 <.debug_line_str+0x43ff2fc2>
   140006045:	70 00                	jo     140006047 <.pdata+0x47>
   140006047:	00 10                	add    BYTE PTR [rax],dl
   140006049:	14 00                	adc    al,0x0
   14000604b:	00 24 14             	add    BYTE PTR [rsp+rdx*1],ah
   14000604e:	00 00                	add    BYTE PTR [rax],al
   140006050:	64 70 00             	fs jo  140006053 <.pdata+0x53>
	...

0000000140006054 <.pdata>:
   140006054:	30 14 00             	xor    BYTE PTR [rax+rax*1],dl
   140006057:	00 3c 14             	add    BYTE PTR [rsp+rdx*1],bh
   14000605a:	00 00                	add    BYTE PTR [rax],al
   14000605c:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000605d:	70 00                	jo     14000605f <.pdata+0xb>
   14000605f:	00 40 14             	add    BYTE PTR [rax+0x14],al
   140006062:	00 00                	add    BYTE PTR [rax],al
   140006064:	41 14 00             	rex.B adc al,0x0
   140006067:	00 70 70             	add    BYTE PTR [rax+0x70],dh
	...

000000014000606c <.pdata>:
   14000606c:	50                   	push   rax
   14000606d:	14 00                	adc    al,0x0
   14000606f:	00 5f 15             	add    BYTE PTR [rdi+0x15],bl
   140006072:	00 00                	add    BYTE PTR [rax],al
   140006074:	74 70                	je     1400060e6 <.pdata+0x6e>
	...

0000000140006078 <.pdata>:
   140006078:	60                   	(bad)
   140006079:	15 00 00 9c 15       	adc    eax,0x159c0000
   14000607e:	00 00                	add    BYTE PTR [rax],al
   140006080:	80 70 00 00          	xor    BYTE PTR [rax+0x0],0x0
   140006084:	9c                   	pushf
   140006085:	15 00 00 f7 15       	adc    eax,0x15f70000
   14000608a:	00 00                	add    BYTE PTR [rax],al
   14000608c:	8c 70 00             	mov    WORD PTR [rax+0x0],?
   14000608f:	00 f7                	add    bh,dh
   140006091:	15 00 00 3e 16       	adc    eax,0x163e0000
   140006096:	00 00                	add    BYTE PTR [rax],al
   140006098:	98                   	cwde
   140006099:	70 00                	jo     14000609b <.pdata+0x23>
   14000609b:	00 3e                	add    BYTE PTR [rsi],bh
   14000609d:	16                   	(bad)
   14000609e:	00 00                	add    BYTE PTR [rax],al
   1400060a0:	94                   	xchg   esp,eax
   1400060a1:	16                   	(bad)
   1400060a2:	00 00                	add    BYTE PTR [rax],al
   1400060a4:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400060a5:	70 00                	jo     1400060a7 <.pdata+0x2f>
   1400060a7:	00 94 16 00 00 db 16 	add    BYTE PTR [rsi+rdx*1+0x16db0000],dl
   1400060ae:	00 00                	add    BYTE PTR [rax],al
   1400060b0:	b0 70                	mov    al,0x70
   1400060b2:	00 00                	add    BYTE PTR [rax],al
   1400060b4:	db 16                	fist   DWORD PTR [rsi]
   1400060b6:	00 00                	add    BYTE PTR [rax],al
   1400060b8:	20 17                	and    BYTE PTR [rdi],dl
   1400060ba:	00 00                	add    BYTE PTR [rax],al
   1400060bc:	bc 70 00 00 20       	mov    esp,0x20000070
   1400060c1:	17                   	(bad)
   1400060c2:	00 00                	add    BYTE PTR [rax],al
   1400060c4:	a0 17 00 00 c8 70 00 	movabs al,ds:0xa0000070c8000017
   1400060cb:	00 a0 
   1400060cd:	17                   	(bad)
   1400060ce:	00 00                	add    BYTE PTR [rax],al
   1400060d0:	27                   	(bad)
   1400060d1:	18 00                	sbb    BYTE PTR [rax],al
   1400060d3:	00 d4                	add    ah,dl
   1400060d5:	70 00                	jo     1400060d7 <.pdata+0x5f>
   1400060d7:	00 27                	add    BYTE PTR [rdi],ah
   1400060d9:	18 00                	sbb    BYTE PTR [rax],al
   1400060db:	00 91 18 00 00 e0    	add    BYTE PTR [rcx-0x1fffffe8],dl
   1400060e1:	70 00                	jo     1400060e3 <.pdata+0x6b>
   1400060e3:	00 91 18 00 00 14    	add    BYTE PTR [rcx+0x14000018],dl
   1400060e9:	19 00                	sbb    DWORD PTR [rax],eax
   1400060eb:	00 ec                	add    ah,ch
   1400060ed:	70 00                	jo     1400060ef <.pdata+0x77>
   1400060ef:	00 14 19             	add    BYTE PTR [rcx+rbx*1],dl
   1400060f2:	00 00                	add    BYTE PTR [rax],al
   1400060f4:	63 19                	movsxd ebx,DWORD PTR [rcx]
   1400060f6:	00 00                	add    BYTE PTR [rax],al
   1400060f8:	f8                   	clc
   1400060f9:	70 00                	jo     1400060fb <.pdata+0x83>
   1400060fb:	00 63 19             	add    BYTE PTR [rbx+0x19],ah
   1400060fe:	00 00                	add    BYTE PTR [rax],al
   140006100:	e1 19                	loope  14000611b <.pdata+0xa3>
   140006102:	00 00                	add    BYTE PTR [rax],al
   140006104:	04 71                	add    al,0x71
   140006106:	00 00                	add    BYTE PTR [rax],al
   140006108:	e1 19                	loope  140006123 <.pdata+0xab>
   14000610a:	00 00                	add    BYTE PTR [rax],al
   14000610c:	5c                   	pop    rsp
   14000610d:	1a 00                	sbb    al,BYTE PTR [rax]
   14000610f:	00 14 71             	add    BYTE PTR [rcx+rsi*2],dl
   140006112:	00 00                	add    BYTE PTR [rax],al
   140006114:	5c                   	pop    rsp
   140006115:	1a 00                	sbb    al,BYTE PTR [rax]
   140006117:	00 d7                	add    bh,dl
   140006119:	1a 00                	sbb    al,BYTE PTR [rax]
   14000611b:	00 20                	add    BYTE PTR [rax],ah
   14000611d:	71 00                	jno    14000611f <.pdata+0xa7>
   14000611f:	00 d7                	add    bh,dl
   140006121:	1a 00                	sbb    al,BYTE PTR [rax]
   140006123:	00 52 1b             	add    BYTE PTR [rdx+0x1b],dl
   140006126:	00 00                	add    BYTE PTR [rax],al
   140006128:	2c 71                	sub    al,0x71
	...

000000014000612c <.pdata>:
   14000612c:	60                   	(bad)
   14000612d:	1b 00                	sbb    eax,DWORD PTR [rax]
   14000612f:	00 9a 1b 00 00 38    	add    BYTE PTR [rdx+0x3800001b],bl
   140006135:	71 00                	jno    140006137 <.pdata+0xb>
   140006137:	00 a0 1b 00 00 0a    	add    BYTE PTR [rax+0xa00001b],ah
   14000613d:	1c 00                	sbb    al,0x0
   14000613f:	00 40 71             	add    BYTE PTR [rax+0x71],al
   140006142:	00 00                	add    BYTE PTR [rax],al
   140006144:	10 1c 00             	adc    BYTE PTR [rax+rax*1],bl
   140006147:	00 2f                	add    BYTE PTR [rdi],ch
   140006149:	1c 00                	sbb    al,0x0
   14000614b:	00 4c 71 00          	add    BYTE PTR [rcx+rsi*2+0x0],cl
	...

0000000140006150 <.pdata>:
   140006150:	30 1c 00             	xor    BYTE PTR [rax+rax*1],bl
   140006153:	00 33                	add    BYTE PTR [rbx],dh
   140006155:	1c 00                	sbb    al,0x0
   140006157:	00 50 71             	add    BYTE PTR [rax+0x71],dl
	...

000000014000615c <.pdata>:
   14000615c:	40 1c 00             	rex sbb al,0x0
   14000615f:	00 6f 1c             	add    BYTE PTR [rdi+0x1c],ch
   140006162:	00 00                	add    BYTE PTR [rax],al
   140006164:	54                   	push   rsp
   140006165:	71 00                	jno    140006167 <.pdata+0xb>
   140006167:	00 70 1c             	add    BYTE PTR [rax+0x1c],dh
   14000616a:	00 00                	add    BYTE PTR [rax],al
   14000616c:	f1                   	int1
   14000616d:	1c 00                	sbb    al,0x0
   14000616f:	00 5c 71 00          	add    BYTE PTR [rcx+rsi*2+0x0],bl
   140006173:	00 00                	add    BYTE PTR [rax],al
   140006175:	1d 00 00 03 1d       	sbb    eax,0x1d030000
   14000617a:	00 00                	add    BYTE PTR [rax],al
   14000617c:	68 71 00 00        	push   0x10000071

0000000140006180 <.pdata>:
   140006180:	10 1d 00 00 08 1e    	adc    BYTE PTR [rip+0x1e080000],bl        # 15e086186 <.debug_line_str+0x1e0730ef>
   140006186:	00 00                	add    BYTE PTR [rax],al
   140006188:	6c                   	ins    BYTE PTR es:[rdi],dx
   140006189:	71 00                	jno    14000618b <.pdata+0xb>
	...

000000014000618c <.pdata>:
   14000618c:	10 1e                	adc    BYTE PTR [rsi],bl
   14000618e:	00 00                	add    BYTE PTR [rax],al
   140006190:	13 1e                	adc    ebx,DWORD PTR [rsi]
   140006192:	00 00                	add    BYTE PTR [rax],al
   140006194:	84 71 00             	test   BYTE PTR [rcx+0x0],dh
	...

0000000140006198 <.pdata>:
   140006198:	20 1e                	and    BYTE PTR [rsi],bl
   14000619a:	00 00                	add    BYTE PTR [rax],al
   14000619c:	89 1e                	mov    DWORD PTR [rsi],ebx
   14000619e:	00 00                	add    BYTE PTR [rax],al
   1400061a0:	88 71 00             	mov    BYTE PTR [rcx+0x0],dh
   1400061a3:	00 90 1e 00 00 f2    	add    BYTE PTR [rax-0xdffffe2],dl
   1400061a9:	1f                   	(bad)
   1400061aa:	00 00                	add    BYTE PTR [rax],al
   1400061ac:	94                   	xchg   esp,eax
   1400061ad:	71 00                	jno    1400061af <.pdata+0x17>
   1400061af:	00 00                	add    BYTE PTR [rax],al
   1400061b1:	20 00                	and    BYTE PTR [rax],al
   1400061b3:	00 5f 23             	add    BYTE PTR [rdi+0x23],bl
   1400061b6:	00 00                	add    BYTE PTR [rax],al
   1400061b8:	a0 71 00 00    	movabs al,ds:0x9e00002360000071
   1400061bf:	  

00000001400061bc <.pdata>:
   1400061bc:	60                   	(bad)
   1400061bd:	23 00                	and    eax,DWORD PTR [rax]
   1400061bf:	00 9e 23 00 00 b8    	add    BYTE PTR [rsi-0x47ffffdd],bl
   1400061c5:	71 00                	jno    1400061c7 <.pdata+0xb>
   1400061c7:	00 a0 23 00 00 ac    	add    BYTE PTR [rax-0x53ffffdd],ah
   1400061cd:	23 00                	and    eax,DWORD PTR [rax]
   1400061cf:	00 c0                	add    al,al
   1400061d1:	71 00                	jno    1400061d3 <.pdata+0x17>
	...

00000001400061d4 <.pdata>:
   1400061d4:	b0 23                	mov    al,0x23
   1400061d6:	00 00                	add    BYTE PTR [rax],al
   1400061d8:	48 25 00 00 c4 71    	and    rax,0x71c40000
	...

00000001400061e0 <.pdata>:
   1400061e0:	50                   	push   rax
   1400061e1:	25 00 00 c0 25       	and    eax,0x25c00000
   1400061e6:	00 00                	add    BYTE PTR [rax],al
   1400061e8:	cc                   	int3
   1400061e9:	71 00                	jno    1400061eb <.pdata+0xb>
   1400061eb:	00 c0                	add    al,al
   1400061ed:	25 00 00 2f 26       	and    eax,0x262f0000
   1400061f2:	00 00                	add    BYTE PTR [rax],al
   1400061f4:	dc 71 00             	fdiv   QWORD PTR [rcx+0x0]
   1400061f7:	00 30                	add    BYTE PTR [rax],dh
   1400061f9:	26 00 00             	es add BYTE PTR [rax],al
   1400061fc:	b1 26                	mov    cl,0x26
   1400061fe:	00 00                	add    BYTE PTR [rax],al
   140006200:	e8 71 00 00 c0       	call   100006276 <__size_of_stack_reserve__+0xffe06276>
   140006205:	26 00 00             	es add BYTE PTR [rax],al
   140006208:	b2 27                	mov    dl,0x27
   14000620a:	00 00                	add    BYTE PTR [rax],al
   14000620c:	f4                   	hlt
   14000620d:	71 00                	jno    14000620f <.pdata+0x2f>
	...

0000000140006210 <.pdata>:
   140006210:	c0 27 00             	shl    BYTE PTR [rdi],0x0
   140006213:	00 ce                	add    dh,cl
   140006215:	27                   	(bad)
   140006216:	00 00                	add    BYTE PTR [rax],al
   140006218:	fc                   	cld
   140006219:	71 00                	jno    14000621b <.pdata+0xb>
   14000621b:	00 d0                	add    al,dl
   14000621d:	27                   	(bad)
   14000621e:	00 00                	add    BYTE PTR [rax],al
   140006220:	de 27                	fisub  WORD PTR [rdi]
   140006222:	00 00                	add    BYTE PTR [rax],al
   140006224:	04 72                	add    al,0x72
	...

0000000140006228 <.pdata>:
   140006228:	e0 27                	loopne 140006251 <.pdata+0x29>
   14000622a:	00 00                	add    BYTE PTR [rax],al
   14000622c:	0c 28                	or     al,0x28
   14000622e:	00 00                	add    BYTE PTR [rax],al
   140006230:	0c 72                	or     al,0x72
   140006232:	00 00                	add    BYTE PTR [rax],al
   140006234:	10 28                	adc    BYTE PTR [rax],ch
   140006236:	00 00                	add    BYTE PTR [rax],al
   140006238:	60                   	(bad)
   140006239:	28 00                	sub    BYTE PTR [rax],al
   14000623b:	00 10                	add    BYTE PTR [rax],dl
   14000623d:	72 00                	jb     14000623f <.pdata+0x17>
   14000623f:	00 60 28             	add    BYTE PTR [rax+0x28],ah
   140006242:	00 00                	add    BYTE PTR [rax],al
   140006244:	fd                   	std
   140006245:	28 00                	sub    BYTE PTR [rax],al
   140006247:	00 14 72             	add    BYTE PTR [rdx+rsi*2],dl
   14000624a:	00 00                	add    BYTE PTR [rax],al
   14000624c:	00 29                	add    BYTE PTR [rcx],ch
   14000624e:	00 00                	add    BYTE PTR [rax],al
   140006250:	80 29 00             	sub    BYTE PTR [rcx],0x0
   140006253:	00 20                	add    BYTE PTR [rax],ah
   140006255:	72 00                	jb     140006257 <.pdata+0x2f>
   140006257:	00 80 29 00 00 b7    	add    BYTE PTR [rax-0x48ffffd7],al
   14000625d:	29 00                	sub    DWORD PTR [rax],eax
   14000625f:	00 24 72             	add    BYTE PTR [rdx+rsi*2],ah
   140006262:	00 00                	add    BYTE PTR [rax],al
   140006264:	c0 29 00             	shr    BYTE PTR [rcx],0x0
   140006267:	00 33                	add    BYTE PTR [rbx],dh
   140006269:	2a 00                	sub    al,BYTE PTR [rax]
   14000626b:	00 28                	add    BYTE PTR [rax],ch
   14000626d:	72 00                	jb     14000626f <.pdata+0x47>
   14000626f:	00 40 2a             	add    BYTE PTR [rax+0x2a],al
   140006272:	00 00                	add    BYTE PTR [rax],al
   140006274:	76 2a                	jbe    1400062a0 <.pdata>
   140006276:	00 00                	add    BYTE PTR [rax],al
   140006278:	2c 72                	sub    al,0x72
   14000627a:	00 00                	add    BYTE PTR [rax],al
   14000627c:	80 2a 00             	sub    BYTE PTR [rdx],0x0
   14000627f:	00 09                	add    BYTE PTR [rcx],cl
   140006281:	2b 00                	sub    eax,DWORD PTR [rax]
   140006283:	00 30                	add    BYTE PTR [rax],dh
   140006285:	72 00                	jb     140006287 <.pdata+0x5f>
   140006287:	00 10                	add    BYTE PTR [rax],dl
   140006289:	2b 00                	sub    eax,DWORD PTR [rax]
   14000628b:	00 d6                	add    dh,dl
   14000628d:	2b 00                	sub    eax,DWORD PTR [rax]
   14000628f:	00 34 72             	add    BYTE PTR [rdx+rsi*2],dh
	...

0000000140006294 <.pdata>:
   140006294:	20 2c 00             	and    BYTE PTR [rax+rax*1],ch
   140006297:	00 3e                	add    BYTE PTR [rsi],bh
   140006299:	2c 00                	sub    al,0x0
   14000629b:	00 38                	add    BYTE PTR [rax],bh
   14000629d:	72 00                	jb     14000629f <.pdata+0xb>
	...

00000001400062a0 <.pdata>:
   1400062a0:	40 2c 00             	rex sub al,0x0
   1400062a3:	00 88 2c 00 00 40    	add    BYTE PTR [rax+0x4000002c],cl
   1400062a9:	72 00                	jb     1400062ab <.pdata+0xb>
	...

00000001400062ac <.pdata>:
   1400062ac:	90                   	nop
   1400062ad:	2c 00                	sub    al,0x0
   1400062af:	00 c2                	add    dl,al
   1400062b1:	2c 00                	sub    al,0x0
   1400062b3:	00 4c 72 00          	add    BYTE PTR [rdx+rsi*2+0x0],cl
	...

00000001400062b8 <.pdata>:
   1400062b8:	d0 2c 00             	shr    BYTE PTR [rax+rax*1],1
   1400062bb:	00 d3                	add    bl,dl
   1400062bd:	2c 00                	sub    al,0x0
   1400062bf:	00 54 72 00          	add    BYTE PTR [rdx+rsi*2+0x0],dl
   1400062c3:	00 e0                	add    al,ah
   1400062c5:	2c 00                	sub    al,0x0
   1400062c7:	00 4a 2d             	add    BYTE PTR [rdx+0x2d],cl
   1400062ca:	00 00                	add    BYTE PTR [rax],al
   1400062cc:	58                   	pop    rax
   1400062cd:	72 00                	jb     1400062cf <.pdata+0x17>
   1400062cf:	00 50 2d             	add    BYTE PTR [rax+0x2d],dl
   1400062d2:	00 00                	add    BYTE PTR [rax],al
   1400062d4:	ba 2d 00 00 68       	mov    edx,0x6800002d
   1400062d9:	72 00                	jb     1400062db <.pdata+0x23>
   1400062db:	00 c0                	add    al,al
   1400062dd:	2d 00 00 de 2d       	sub    eax,0x2dde0000
   1400062e2:	00 00                	add    BYTE PTR [rax],al
   1400062e4:	78 72                	js     140006358 <.pdata.startup+0x34>
   1400062e6:	00 00                	add    BYTE PTR [rax],al
   1400062e8:	e0 2d                	loopne 140006317 <.pdata+0x5f>
   1400062ea:	00 00                	add    BYTE PTR [rax],al
   1400062ec:	f5                   	cmc
   1400062ed:	2d 00 00 80 72       	sub    eax,0x72800000
   1400062f2:	00 00                	add    BYTE PTR [rax],al
   1400062f4:	00 2e                	add    BYTE PTR [rsi],ch
   1400062f6:	00 00                	add    BYTE PTR [rax],al
   1400062f8:	32 2e                	xor    ch,BYTE PTR [rsi]
   1400062fa:	00 00                	add    BYTE PTR [rax],al
   1400062fc:	84 72 00             	test   BYTE PTR [rdx+0x0],dh
   1400062ff:	00 40 2e             	add    BYTE PTR [rax+0x2e],al
   140006302:	00 00                	add    BYTE PTR [rax],al
   140006304:	75 2e                	jne    140006334 <.pdata.startup+0x10>
   140006306:	00 00                	add    BYTE PTR [rax],al
   140006308:	8c 72 00             	mov    WORD PTR [rdx+0x0],?
   14000630b:	00 80 2e 00 00 b6    	add    BYTE PTR [rax-0x49ffffd2],al
   140006311:	2e 00 00             	cs add BYTE PTR [rax],al
   140006314:	94                   	xchg   esp,eax
   140006315:	72 00                	jb     140006317 <.pdata+0x5f>
   140006317:	00 c0                	add    al,al
   140006319:	2e 00 00             	cs add BYTE PTR [rax],al
   14000631c:	f6 2e                	imul   BYTE PTR [rsi]
   14000631e:	00 00                	add    BYTE PTR [rax],al
   140006320:	9c                   	pushf
   140006321:	72 00                	jb     140006323 <.pdata+0x6b>
	...

0000000140006324 <.pdata.startup>:
   140006324:	80 30 00             	xor    BYTE PTR [rax],0x0
   140006327:	00 85 30 00 00 a4    	add    BYTE PTR [rbp-0x5bffffd0],al
   14000632d:	72 00                	jb     14000632f <.pdata.startup+0xb>
	...

Disassembly of section .xdata:

0000000140007000 <.xdata>:
   140007000:	01 00                	add    DWORD PTR [rax],eax
   140007002:	00 00                	add    BYTE PTR [rax],al
   140007004:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   140007007:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
   14000700a:	00 00                	add    BYTE PTR [rax],al
   14000700c:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   14000700f:	00 04 62             	add    BYTE PTR [rdx+riz*2],al
   140007012:	00 00                	add    BYTE PTR [rax],al
   140007014:	01 0a                	add    DWORD PTR [rdx],ecx
   140007016:	06                   	(bad)
   140007017:	00 0a                	add    BYTE PTR [rdx],cl
   140007019:	32 06                	xor    al,BYTE PTR [rsi]
   14000701b:	30 05 60 04 70 03    	xor    BYTE PTR [rip+0x3700460],al        # 143707481 <.debug_line_str+0x36f43ea>
   140007021:	50                   	push   rax
   140007022:	02 c0                	add    al,al
   140007024:	09 04 01             	or     DWORD PTR [rcx+rax*1],eax
   140007027:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
   14000702a:	00 00                	add    BYTE PTR [rax],al
   14000702c:	e0 2f                	loopne 14000705d <.xdata+0x5d>
   14000702e:	00 00                	add    BYTE PTR [rax],al
   140007030:	01 00                	add    DWORD PTR [rax],eax
   140007032:	00 00                	add    BYTE PTR [rax],al
   140007034:	d4                   	(bad)
   140007035:	13 00                	adc    eax,DWORD PTR [rax]
   140007037:	00 e7                	add    bh,ah
   140007039:	13 00                	adc    eax,DWORD PTR [rax]
   14000703b:	00 b0 23 00 00 e7    	add    BYTE PTR [rax-0x18ffffdd],dh
   140007041:	13 00                	adc    eax,DWORD PTR [rax]
   140007043:	00 09                	add    BYTE PTR [rcx],cl
   140007045:	04 01                	add    al,0x1
   140007047:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
   14000704a:	00 00                	add    BYTE PTR [rax],al
   14000704c:	e0 2f                	loopne 14000707d <.xdata+0x9>
   14000704e:	00 00                	add    BYTE PTR [rax],al
   140007050:	01 00                	add    DWORD PTR [rax],eax
   140007052:	00 00                	add    BYTE PTR [rax],al
   140007054:	f4                   	hlt
   140007055:	13 00                	adc    eax,DWORD PTR [rax]
   140007057:	00 07                	add    BYTE PTR [rdi],al
   140007059:	14 00                	adc    al,0x0
   14000705b:	00 b0 23 00 00 07    	add    BYTE PTR [rax+0x7000023],dh
   140007061:	14 00                	adc    al,0x0
   140007063:	00 01                	add    BYTE PTR [rcx],al
   140007065:	04 01                	add    al,0x1
   140007067:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
	...

000000014000706c <.xdata>:
   14000706c:	01 00                	add    DWORD PTR [rax],eax
   14000706e:	00 00                	add    BYTE PTR [rax],al
   140007070:	01 00                	add    DWORD PTR [rax],eax
	...

0000000140007074 <.xdata>:
   140007074:	01 0b                	add    DWORD PTR [rbx],ecx
   140007076:	04 05                	add    al,0x5
   140007078:	0b 01                	or     eax,DWORD PTR [rcx]
   14000707a:	16                   	(bad)
   14000707b:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
   14000707e:	01 50              	add    DWORD PTR [rax+0x1],edx

0000000140007080 <.xdata>:
   140007080:	01 08                	add    DWORD PTR [rax],ecx
   140007082:	03 05 08 12 04 03    	add    eax,DWORD PTR [rip+0x3041208]        # 143048290 <.debug_line_str+0x30351f9>
   140007088:	01 50 00             	add    DWORD PTR [rax+0x0],edx
   14000708b:	00 01                	add    BYTE PTR [rcx],al
   14000708d:	0b 04 15 0b 03 06 22 	or     eax,DWORD PTR [rdx*1+0x2206030b]
   140007094:	02 30                	add    dh,BYTE PTR [rax]
   140007096:	01 50 01             	add    DWORD PTR [rax+0x1],edx
   140007099:	0b 04 15 0b 03 06 22 	or     eax,DWORD PTR [rdx*1+0x2206030b]
   1400070a0:	02 30                	add    dh,BYTE PTR [rax]
   1400070a2:	01 50 01             	add    DWORD PTR [rax+0x1],edx
   1400070a5:	08 03                	or     BYTE PTR [rbx],al
   1400070a7:	05 08 12 04 03       	add    eax,0x3041208
   1400070ac:	01 50 00             	add    DWORD PTR [rax+0x0],edx
   1400070af:	00 01                	add    BYTE PTR [rcx],al
   1400070b1:	0b 04 15 0b 03 06 22 	or     eax,DWORD PTR [rdx*1+0x2206030b]
   1400070b8:	02 30                	add    dh,BYTE PTR [rax]
   1400070ba:	01 50 01             	add    DWORD PTR [rax+0x1],edx
   1400070bd:	08 03                	or     BYTE PTR [rbx],al
   1400070bf:	05 08 12 04 03       	add    eax,0x3041208
   1400070c4:	01 50 00             	add    DWORD PTR [rax+0x0],edx
   1400070c7:	00 01                	add    BYTE PTR [rcx],al
   1400070c9:	0b 04 25 0b 03 06 42 	or     eax,DWORD PTR ds:0x4206030b
   1400070d0:	02 30                	add    dh,BYTE PTR [rax]
   1400070d2:	01 50 01             	add    DWORD PTR [rax+0x1],edx
   1400070d5:	0b 04 25 0b 03 06 42 	or     eax,DWORD PTR ds:0x4206030b
   1400070dc:	02 30                	add    dh,BYTE PTR [rax]
   1400070de:	01 50 01             	add    DWORD PTR [rax+0x1],edx
   1400070e1:	08 03                	or     BYTE PTR [rbx],al
   1400070e3:	05 08 32 04 03       	add    eax,0x3043208
   1400070e8:	01 50 00             	add    DWORD PTR [rax+0x0],edx
   1400070eb:	00 01                	add    BYTE PTR [rcx],al
   1400070ed:	0b 04 25 0b 03 06 42 	or     eax,DWORD PTR ds:0x4206030b
   1400070f4:	02 30                	add    dh,BYTE PTR [rax]
   1400070f6:	01 50 01             	add    DWORD PTR [rax+0x1],edx
   1400070f9:	08 03                	or     BYTE PTR [rbx],al
   1400070fb:	05 08 32 04 03       	add    eax,0x3043208
   140007100:	01 50 00             	add    DWORD PTR [rax+0x0],edx
   140007103:	00 01                	add    BYTE PTR [rcx],al
   140007105:	0c 05                	or     al,0x5
   140007107:	25 0c 03 07 32       	and    eax,0x3207030c
   14000710c:	03 30                	add    esi,DWORD PTR [rax]
   14000710e:	02 60 01             	add    ah,BYTE PTR [rax+0x1]
   140007111:	50                   	push   rax
   140007112:	00 00                	add    BYTE PTR [rax],al
   140007114:	01 0b                	add    DWORD PTR [rbx],ecx
   140007116:	04 15                	add    al,0x15
   140007118:	0b 03                	or     eax,DWORD PTR [rbx]
   14000711a:	06                   	(bad)
   14000711b:	22 02                	and    al,BYTE PTR [rdx]
   14000711d:	30 01                	xor    BYTE PTR [rcx],al
   14000711f:	50                   	push   rax
   140007120:	01 0b                	add    DWORD PTR [rbx],ecx
   140007122:	04 45                	add    al,0x45
   140007124:	0b 03                	or     eax,DWORD PTR [rbx]
   140007126:	06                   	(bad)
   140007127:	82                   	(bad)
   140007128:	02 30                	add    dh,BYTE PTR [rax]
   14000712a:	01 50 01             	add    DWORD PTR [rax+0x1],edx
   14000712d:	0b 04 15 0b 03 06 22 	or     eax,DWORD PTR [rdx*1+0x2206030b]
   140007134:	02 30                	add    dh,BYTE PTR [rax]
   140007136:	01 50              	add    DWORD PTR [rax+0x1],edx

0000000140007138 <.xdata>:
   140007138:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   14000713b:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
   14000713e:	00 00                	add    BYTE PTR [rax],al
   140007140:	01 06                	add    DWORD PTR [rsi],eax
   140007142:	03 00                	add    eax,DWORD PTR [rax]
   140007144:	06                   	(bad)
   140007145:	42 02 30             	rex.X add sil,BYTE PTR [rax]
   140007148:	01 60 00             	add    DWORD PTR [rax+0x0],esp
   14000714b:	00 01                	add    BYTE PTR [rcx],al
   14000714d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140007150 <.xdata>:
   140007150:	01 00                	add    DWORD PTR [rax],eax
	...

0000000140007154 <.xdata>:
   140007154:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   140007157:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
   14000715a:	00 00                	add    BYTE PTR [rax],al
   14000715c:	01 06                	add    DWORD PTR [rsi],eax
   14000715e:	03 00                	add    eax,DWORD PTR [rax]
   140007160:	06                   	(bad)
   140007161:	42 02 30             	rex.X add sil,BYTE PTR [rax]
   140007164:	01 60 00             	add    DWORD PTR [rax+0x0],esp
   140007167:	00 01                	add    BYTE PTR [rcx],al
   140007169:	00 00                	add    BYTE PTR [rax],al
	...

000000014000716c <.xdata>:
   14000716c:	01 16                	add    DWORD PTR [rsi],edx
   14000716e:	09 00                	or     DWORD PTR [rax],eax
   140007170:	16                   	(bad)
   140007171:	88 06                	mov    BYTE PTR [rsi],al
   140007173:	00 10                	add    BYTE PTR [rax],dl
   140007175:	78 05                	js     14000717c <.xdata+0x10>
   140007177:	00 0b                	add    BYTE PTR [rbx],cl
   140007179:	68 04 00 06 e2       	push   0xffffffffe2060004
   14000717e:	02 30                	add    dh,BYTE PTR [rax]
   140007180:	01 60 00             	add    DWORD PTR [rax+0x0],esp
	...

0000000140007184 <.xdata>:
   140007184:	01 00                	add    DWORD PTR [rax],eax
	...

0000000140007188 <.xdata>:
   140007188:	01 06                	add    DWORD PTR [rsi],eax
   14000718a:	03 00                	add    eax,DWORD PTR [rax]
   14000718c:	06                   	(bad)
   14000718d:	62 02                	(bad)
   14000718f:	30 01                	xor    BYTE PTR [rcx],al
   140007191:	60                   	(bad)
   140007192:	00 00                	add    BYTE PTR [rax],al
   140007194:	01 07                	add    DWORD PTR [rdi],eax
   140007196:	04 00                	add    al,0x0
   140007198:	07                   	(bad)
   140007199:	92                   	xchg   edx,eax
   14000719a:	03 30                	add    esi,DWORD PTR [rax]
   14000719c:	02 60 01             	add    ah,BYTE PTR [rax+0x1]
   14000719f:	70 01                	jo     1400071a2 <.xdata+0x1a>
   1400071a1:	15 0a 45 15 03       	adc    eax,0x315450a
   1400071a6:	10 82 0c 30 0b 60    	adc    BYTE PTR [rdx+0x600b300c],al
   1400071ac:	0a 70 09             	or     dh,BYTE PTR [rax+0x9]
   1400071af:	c0 07 d0             	rol    BYTE PTR [rdi],0xd0
   1400071b2:	05 e0 03 f0 01       	add    eax,0x1f003e0
   1400071b7:	50                   	push   rax

00000001400071b8 <.xdata>:
   1400071b8:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   1400071bb:	00 04 a2             	add    BYTE PTR [rdx+riz*4],al
   1400071be:	00 00                	add    BYTE PTR [rax],al
   1400071c0:	01 00                	add    DWORD PTR [rax],eax
	...

00000001400071c4 <.xdata>:
   1400071c4:	01 05 02 00 05 32    	add    DWORD PTR [rip+0x32050002],eax        # 1720571cc <.debug_line_str+0x32044135>
   1400071ca:	01 30                	add    DWORD PTR [rax],esi

00000001400071cc <.xdata>:
   1400071cc:	01 0a                	add    DWORD PTR [rdx],ecx
   1400071ce:	06                   	(bad)
   1400071cf:	00 0a                	add    BYTE PTR [rdx],cl
   1400071d1:	32 06                	xor    al,BYTE PTR [rsi]
   1400071d3:	30 05 60 04 70 03    	xor    BYTE PTR [rip+0x3700460],al        # 143707639 <.debug_line_str+0x36f45a2>
   1400071d9:	50                   	push   rax
   1400071da:	02 c0                	add    al,al
   1400071dc:	01 07                	add    DWORD PTR [rdi],eax
   1400071de:	04 00                	add    al,0x0
   1400071e0:	07                   	(bad)
   1400071e1:	32 03                	xor    al,BYTE PTR [rbx]
   1400071e3:	30 02                	xor    BYTE PTR [rdx],al
   1400071e5:	60                   	(bad)
   1400071e6:	01 70 01             	add    DWORD PTR [rax+0x1],esi
   1400071e9:	06                   	(bad)
   1400071ea:	03 00                	add    eax,DWORD PTR [rax]
   1400071ec:	06                   	(bad)
   1400071ed:	42 02 30             	rex.X add sil,BYTE PTR [rax]
   1400071f0:	01 60 00             	add    DWORD PTR [rax+0x0],esp
   1400071f3:	00 01                	add    BYTE PTR [rcx],al
   1400071f5:	05 02 00 05 32       	add    eax,0x32050002
   1400071fa:	01 30                	add    DWORD PTR [rax],esi

00000001400071fc <.xdata>:
   1400071fc:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   1400071ff:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
   140007202:	00 00                	add    BYTE PTR [rax],al
   140007204:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   140007207:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
	...

000000014000720c <.xdata>:
   14000720c:	01 00                	add    DWORD PTR [rax],eax
   14000720e:	00 00                	add    BYTE PTR [rax],al
   140007210:	01 00                	add    DWORD PTR [rax],eax
   140007212:	00 00                	add    BYTE PTR [rax],al
   140007214:	01 07                	add    DWORD PTR [rdi],eax
   140007216:	04 00                	add    al,0x0
   140007218:	07                   	(bad)
   140007219:	32 03                	xor    al,BYTE PTR [rbx]
   14000721b:	30 02                	xor    BYTE PTR [rdx],al
   14000721d:	60                   	(bad)
   14000721e:	01 70 01             	add    DWORD PTR [rax+0x1],esi
   140007221:	00 00                	add    BYTE PTR [rax],al
   140007223:	00 01                	add    BYTE PTR [rcx],al
   140007225:	00 00                	add    BYTE PTR [rax],al
   140007227:	00 01                	add    BYTE PTR [rcx],al
   140007229:	00 00                	add    BYTE PTR [rax],al
   14000722b:	00 01                	add    BYTE PTR [rcx],al
   14000722d:	00 00                	add    BYTE PTR [rax],al
   14000722f:	00 01                	add    BYTE PTR [rcx],al
   140007231:	00 00                	add    BYTE PTR [rax],al
   140007233:	00 01                	add    BYTE PTR [rcx],al
   140007235:	00 00                	add    BYTE PTR [rax],al
	...

0000000140007238 <.xdata>:
   140007238:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   14000723b:	00 04 62             	add    BYTE PTR [rdx+riz*2],al
	...

0000000140007240 <.xdata>:
   140007240:	01 06                	add    DWORD PTR [rsi],eax
   140007242:	03 00                	add    eax,DWORD PTR [rax]
   140007244:	06                   	(bad)
   140007245:	82                   	(bad)
   140007246:	02 30                	add    dh,BYTE PTR [rax]
   140007248:	01 60 00             	add    DWORD PTR [rax+0x0],esp
	...

000000014000724c <.xdata>:
   14000724c:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   14000724f:	00 04 82             	add    BYTE PTR [rdx+rax*4],al
	...

0000000140007254 <.xdata>:
   140007254:	01 00                	add    DWORD PTR [rax],eax
   140007256:	00 00                	add    BYTE PTR [rax],al
   140007258:	01 0a                	add    DWORD PTR [rdx],ecx
   14000725a:	06                   	(bad)
   14000725b:	00 0a                	add    BYTE PTR [rdx],cl
   14000725d:	32 06                	xor    al,BYTE PTR [rsi]
   14000725f:	30 05 60 04 70 03    	xor    BYTE PTR [rip+0x3700460],al        # 1437076c5 <.debug_line_str+0x36f462e>
   140007265:	50                   	push   rax
   140007266:	02 c0                	add    al,al
   140007268:	01 0a                	add    DWORD PTR [rdx],ecx
   14000726a:	06                   	(bad)
   14000726b:	00 0a                	add    BYTE PTR [rdx],cl
   14000726d:	32 06                	xor    al,BYTE PTR [rsi]
   14000726f:	30 05 60 04 70 03    	xor    BYTE PTR [rip+0x3700460],al        # 1437076d5 <.debug_line_str+0x36f463e>
   140007275:	50                   	push   rax
   140007276:	02 c0                	add    al,al
   140007278:	01 05 02 00 05 32    	add    DWORD PTR [rip+0x32050002],eax        # 172057280 <.debug_line_str+0x320441e9>
   14000727e:	01 30                	add    DWORD PTR [rax],esi
   140007280:	01 00                	add    DWORD PTR [rax],eax
   140007282:	00 00                	add    BYTE PTR [rax],al
   140007284:	01 05 02 00 05 32    	add    DWORD PTR [rip+0x32050002],eax        # 17205728c <.debug_line_str+0x320441f5>
   14000728a:	01 30                	add    DWORD PTR [rax],esi
   14000728c:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   14000728f:	00 04 82             	add    BYTE PTR [rdx+rax*4],al
   140007292:	00 00                	add    BYTE PTR [rax],al
   140007294:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   140007297:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
   14000729a:	00 00                	add    BYTE PTR [rax],al
   14000729c:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   14000729f:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
	...

00000001400072a4 <.xdata.startup>:
   1400072a4:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000140008000 <__bss_start__>:
   140008000:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008004 <startinfo>:
   140008004:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008008 <has_cctor>:
   140008008:	00 00                	add    BYTE PTR [rax],al
	...

000000014000800c <managedapp>:
   14000800c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008010 <mainret>:
	...

0000000140008018 <envp>:
	...

0000000140008020 <argv>:
	...

0000000140008028 <argc>:
	...

0000000140008030 <initialized>:
	...

0000000140008040 <__native_startup_lock>:
	...

0000000140008048 <__native_startup_state>:
	...

0000000140008050 <_newmode>:
	...

0000000140008060 <__mingw_initltssuo_force>:
   140008060:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008064 <__mingw_initltsdyn_force>:
   140008064:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008068 <__mingw_initltsdrot_force>:
   140008068:	00 00                	add    BYTE PTR [rax],al
	...

000000014000806c <_tls_index>:
   14000806c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008070 <_commode>:
	...

0000000140008080 <__mingw_app_type>:
	...

0000000140008090 <was_init.0>:
   140008090:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008094 <maxSections>:
   140008094:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008098 <the_secs>:
	...

00000001400080a0 <stUserMathErr>:
	...

00000001400080b0 <_fmode>:
	...

00000001400080c0 <__mingw_oldexcpt_handler>:
	...

00000001400080e0 <key_dtor_list>:
	...

00000001400080e8 <__mingwthr_cs_init>:
	...

0000000140008100 <__mingwthr_cs>:
	...

0000000140008140 <.bss>:
	...

0000000140008150 <.bss>:
	...

0000000140008170 <local__winitenv>:
	...

0000000140008178 <local__initenv>:
	...

Disassembly of section .idata:

0000000140009000 <_head_lib64_libkernel32_a>:
   140009000:	c8 90 00 00          	enter  0x90,0x0
	...
   14000900c:	b0 97                	mov    al,0x97
   14000900e:	00 00                	add    BYTE PTR [rax],al
   140009010:	90                   	nop
   140009011:	92                   	xchg   edx,eax
	...

0000000140009014 <_head_lib64_libapi_ms_win_crt_environment_l1_1_0_a>:
   140009014:	20 91 00 00 00 00    	and    BYTE PTR [rcx+0x0],dl
   14000901a:	00 00                	add    BYTE PTR [rax],al
   14000901c:	00 00                	add    BYTE PTR [rax],al
   14000901e:	00 00                	add    BYTE PTR [rax],al
   140009020:	c8 97 00 00          	enter  0x97,0x0
   140009024:	e8 92 00 00        	call   1780090bb <.debug_line_str+0x37ff6024>

0000000140009028 <_head_lib64_libapi_ms_win_crt_heap_l1_1_0_a>:
   140009028:	38 91 00 00 00 00    	cmp    BYTE PTR [rcx+0x0],dl
   14000902e:	00 00                	add    BYTE PTR [rax],al
   140009030:	00 00                	add    BYTE PTR [rax],al
   140009032:	00 00                	add    BYTE PTR [rax],al
   140009034:	00 98 00 00 00 93    	add    BYTE PTR [rax-0x6d000000],bl
	...

000000014000903c <_head_lib64_libapi_ms_win_crt_math_l1_1_0_a>:
   14000903c:	60                   	(bad)
   14000903d:	91                   	xchg   ecx,eax
	...
   140009046:	00 00                	add    BYTE PTR [rax],al
   140009048:	24 98                	and    al,0x98
   14000904a:	00 00                	add    BYTE PTR [rax],al
   14000904c:	28 93 00 00      	sub    BYTE PTR [rbx-0x6e900000],dl

0000000140009050 <_head_lib64_libapi_ms_win_crt_private_l1_1_0_a>:
   140009050:	70 91                	jo     140008fe3 <__bss_end__+0xe63>
	...
   14000905a:	00 00                	add    BYTE PTR [rax],al
   14000905c:	4c 98                	rex.WR cdqe
   14000905e:	00 00                	add    BYTE PTR [rax],al
   140009060:	38 93 00 00      	cmp    BYTE PTR [rbx-0x6e780000],dl

0000000140009064 <_head_lib64_libapi_ms_win_crt_runtime_l1_1_0_a>:
   140009064:	88 91 00 00 00 00    	mov    BYTE PTR [rcx+0x0],dl
   14000906a:	00 00                	add    BYTE PTR [rax],al
   14000906c:	00 00                	add    BYTE PTR [rax],al
   14000906e:	00 00                	add    BYTE PTR [rax],al
   140009070:	b4 98                	mov    ah,0x98
   140009072:	00 00                	add    BYTE PTR [rax],al
   140009074:	50                   	push   rax
   140009075:	93                   	xchg   ebx,eax
	...

0000000140009078 <_head_lib64_libapi_ms_win_crt_stdio_l1_1_0_a>:
   140009078:	18 92 00 00 00 00    	sbb    BYTE PTR [rdx+0x0],dl
   14000907e:	00 00                	add    BYTE PTR [rax],al
   140009080:	00 00                	add    BYTE PTR [rax],al
   140009082:	00 00                	add    BYTE PTR [rax],al
   140009084:	f0 98                	lock cwde
   140009086:	00 00                	add    BYTE PTR [rax],al
   140009088:	e0 93                	loopne 14000901d <_head_lib64_libapi_ms_win_crt_environment_l1_1_0_a+0x9>
	...

000000014000908c <_head_lib64_libapi_ms_win_crt_string_l1_1_0_a>:
   14000908c:	50                   	push   rax
   14000908d:	92                   	xchg   edx,eax
	...
   140009096:	00 00                	add    BYTE PTR [rax],al
   140009098:	18 99 00 00 18 94    	sbb    BYTE PTR [rcx-0x6be80000],bl
	...

00000001400090a0 <_head_lib64_libapi_ms_win_crt_time_l1_1_0_a>:
   1400090a0:	68 92 00 00 00       	push   0x92
   1400090a5:	00 00                	add    BYTE PTR [rax],al
   1400090a7:	00 00                	add    BYTE PTR [rax],al
   1400090a9:	00 00                	add    BYTE PTR [rax],al
   1400090ab:	00 4c 99 00          	add    BYTE PTR [rcx+rbx*4+0x0],cl
   1400090af:	00 30                	add    BYTE PTR [rax],dh
   1400090b1:	94                   	xchg   esp,eax
	...

00000001400090c8 <hname>:
   1400090c8:	58                   	pop    rax
   1400090c9:	94                   	xchg   esp,eax
   1400090ca:	00 00                	add    BYTE PTR [rax],al
   1400090cc:	00 00                	add    BYTE PTR [rax],al
	...

00000001400090d0 <.idata$4>:
   1400090d0:	70 94                	jo     140009066 <_head_lib64_libapi_ms_win_crt_runtime_l1_1_0_a+0x2>
   1400090d2:	00 00                	add    BYTE PTR [rax],al
   1400090d4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400090d8 <.idata$4>:
   1400090d8:	88 94 00 00 00 00 00 	mov    BYTE PTR [rax+rax*1+0x0],dl
	...

00000001400090e0 <.idata$4>:
   1400090e0:	98                   	cwde
   1400090e1:	94                   	xchg   esp,eax
   1400090e2:	00 00                	add    BYTE PTR [rax],al
   1400090e4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400090e8 <.idata$4>:
   1400090e8:	b4 94                	mov    ah,0x94
   1400090ea:	00 00                	add    BYTE PTR [rax],al
   1400090ec:	00 00                	add    BYTE PTR [rax],al
	...

00000001400090f0 <.idata$4>:
   1400090f0:	cc                   	int3
   1400090f1:	94                   	xchg   esp,eax
   1400090f2:	00 00                	add    BYTE PTR [rax],al
   1400090f4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400090f8 <.idata$4>:
   1400090f8:	ea                   	(bad)
   1400090f9:	94                   	xchg   esp,eax
   1400090fa:	00 00                	add    BYTE PTR [rax],al
   1400090fc:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009100 <.idata$4>:
   140009100:	f2 94                	repnz xchg esp,eax
   140009102:	00 00                	add    BYTE PTR [rax],al
   140009104:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009108 <.idata$4>:
   140009108:	00 95 00 00 00 00    	add    BYTE PTR [rbp+0x0],dl
	...

0000000140009110 <.idata$4>:
   140009110:	12 95 00 00 00 00    	adc    dl,BYTE PTR [rbp+0x0]
	...

0000000140009118 <.idata$4>:
	...

0000000140009120 <hname>:
   140009120:	22 95 00 00 00 00    	and    dl,BYTE PTR [rbp+0x0]
	...

0000000140009128 <.idata$4>:
   140009128:	32 95 00 00 00 00    	xor    dl,BYTE PTR [rbp+0x0]
	...

0000000140009130 <.idata$4>:
	...

0000000140009138 <hname>:
   140009138:	42 95                	rex.X xchg ebp,eax
   14000913a:	00 00                	add    BYTE PTR [rax],al
   14000913c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009140 <.idata$4>:
   140009140:	52                   	push   rdx
   140009141:	95                   	xchg   ebp,eax
   140009142:	00 00                	add    BYTE PTR [rax],al
   140009144:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009148 <.idata$4>:
   140009148:	5c                   	pop    rsp
   140009149:	95                   	xchg   ebp,eax
   14000914a:	00 00                	add    BYTE PTR [rax],al
   14000914c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009150 <.idata$4>:
   140009150:	64 95                	fs xchg ebp,eax
   140009152:	00 00                	add    BYTE PTR [rax],al
   140009154:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009158 <.idata$4>:
	...

0000000140009160 <hname>:
   140009160:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140009161:	95                   	xchg   ebp,eax
   140009162:	00 00                	add    BYTE PTR [rax],al
   140009164:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009168 <.idata$4>:
	...

0000000140009170 <hname>:
   140009170:	82                   	(bad)
   140009171:	95                   	xchg   ebp,eax
   140009172:	00 00                	add    BYTE PTR [rax],al
   140009174:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009178 <.idata$4>:
   140009178:	9a                   	(bad)
   140009179:	95                   	xchg   ebp,eax
   14000917a:	00 00                	add    BYTE PTR [rax],al
   14000917c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009180 <.idata$4>:
	...

0000000140009188 <hname>:
   140009188:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009189:	95                   	xchg   ebp,eax
   14000918a:	00 00                	add    BYTE PTR [rax],al
   14000918c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009190 <.idata$4>:
   140009190:	b2 95                	mov    dl,0x95
   140009192:	00 00                	add    BYTE PTR [rax],al
   140009194:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009198 <.idata$4>:
   140009198:	c0 95 00 00 00 00 00 	rcl    BYTE PTR [rbp+0x0],0x0
	...

00000001400091a0 <.idata$4>:
   1400091a0:	ce                   	(bad)
   1400091a1:	95                   	xchg   ebp,eax
   1400091a2:	00 00                	add    BYTE PTR [rax],al
   1400091a4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400091a8 <.idata$4>:
   1400091a8:	d8 95 00 00 00 00    	fcom   DWORD PTR [rbp+0x0]
	...

00000001400091b0 <.idata$4>:
   1400091b0:	f2 95                	repnz xchg ebp,eax
   1400091b2:	00 00                	add    BYTE PTR [rax],al
   1400091b4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400091b8 <.idata$4>:
   1400091b8:	0a 96 00 00 00 00    	or     dl,BYTE PTR [rsi+0x0]
	...

00000001400091c0 <.idata$4>:
   1400091c0:	20 96 00 00 00 00    	and    BYTE PTR [rsi+0x0],dl
	...

00000001400091c8 <.idata$4>:
   1400091c8:	2e 96                	cs xchg esi,eax
   1400091ca:	00 00                	add    BYTE PTR [rax],al
   1400091cc:	00 00                	add    BYTE PTR [rax],al
	...

00000001400091d0 <.idata$4>:
   1400091d0:	36 96                	ss xchg esi,eax
   1400091d2:	00 00                	add    BYTE PTR [rax],al
   1400091d4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400091d8 <.idata$4>:
   1400091d8:	58                   	pop    rax
   1400091d9:	96                   	xchg   esi,eax
   1400091da:	00 00                	add    BYTE PTR [rax],al
   1400091dc:	00 00                	add    BYTE PTR [rax],al
	...

00000001400091e0 <.idata$4>:
   1400091e0:	78 96                	js     140009178 <.idata$4>
   1400091e2:	00 00                	add    BYTE PTR [rax],al
   1400091e4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400091e8 <.idata$4>:
   1400091e8:	84 96 00 00 00 00    	test   BYTE PTR [rsi+0x0],dl
	...

00000001400091f0 <.idata$4>:
   1400091f0:	94                   	xchg   esp,eax
   1400091f1:	96                   	xchg   esi,eax
   1400091f2:	00 00                	add    BYTE PTR [rax],al
   1400091f4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400091f8 <.idata$4>:
   1400091f8:	b6 96                	mov    dh,0x96
   1400091fa:	00 00                	add    BYTE PTR [rax],al
   1400091fc:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009200 <.idata$4>:
   140009200:	be 96 00 00 00       	mov    esi,0x96
   140009205:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009208 <.idata$4>:
   140009208:	c6                   	(bad)
   140009209:	96                   	xchg   esi,eax
   14000920a:	00 00                	add    BYTE PTR [rax],al
   14000920c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009210 <.idata$4>:
	...

0000000140009218 <hname>:
   140009218:	d0 96 00 00 00 00    	rcl    BYTE PTR [rsi+0x0],1
	...

0000000140009220 <.idata$4>:
   140009220:	e2 96                	loop   1400091b8 <.idata$4>
   140009222:	00 00                	add    BYTE PTR [rax],al
   140009224:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009228 <.idata$4>:
   140009228:	f2 96                	repnz xchg esi,eax
   14000922a:	00 00                	add    BYTE PTR [rax],al
   14000922c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009230 <.idata$4>:
   140009230:	00 97 00 00 00 00    	add    BYTE PTR [rdi+0x0],dl
	...

0000000140009238 <.idata$4>:
   140009238:	1a 97 00 00 00 00    	sbb    dl,BYTE PTR [rdi+0x0]
	...

0000000140009240 <.idata$4>:
   140009240:	36 97                	ss xchg edi,eax
   140009242:	00 00                	add    BYTE PTR [rax],al
   140009244:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009248 <.idata$4>:
	...

0000000140009250 <hname>:
   140009250:	40 97                	rex xchg edi,eax
   140009252:	00 00                	add    BYTE PTR [rax],al
   140009254:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009258 <.idata$4>:
   140009258:	4a 97                	rex.WX xchg rdi,rax
   14000925a:	00 00                	add    BYTE PTR [rax],al
   14000925c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009260 <.idata$4>:
	...

0000000140009268 <hname>:
   140009268:	54                   	push   rsp
   140009269:	97                   	xchg   edi,eax
   14000926a:	00 00                	add    BYTE PTR [rax],al
   14000926c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009270 <.idata$4>:
   140009270:	62                   	(bad)
   140009271:	97                   	xchg   edi,eax
   140009272:	00 00                	add    BYTE PTR [rax],al
   140009274:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009278 <.idata$4>:
   140009278:	70 97                	jo     140009211 <.idata$4+0x1>
   14000927a:	00 00                	add    BYTE PTR [rax],al
   14000927c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009280 <.idata$4>:
   140009280:	7c 97                	jl     140009219 <hname+0x1>
   140009282:	00 00                	add    BYTE PTR [rax],al
   140009284:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009288 <.idata$4>:
	...

0000000140009290 <__IAT_start__>:
   140009290:	58                   	pop    rax
   140009291:	94                   	xchg   esp,eax
   140009292:	00 00                	add    BYTE PTR [rax],al
   140009294:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009298 <__imp_EnterCriticalSection>:
   140009298:	70 94                	jo     14000922e <.idata$4+0x6>
   14000929a:	00 00                	add    BYTE PTR [rax],al
   14000929c:	00 00                	add    BYTE PTR [rax],al
	...

00000001400092a0 <__imp_GetLastError>:
   1400092a0:	88 94 00 00 00 00 00 	mov    BYTE PTR [rax+rax*1+0x0],dl
	...

00000001400092a8 <__imp_InitializeCriticalSection>:
   1400092a8:	98                   	cwde
   1400092a9:	94                   	xchg   esp,eax
   1400092aa:	00 00                	add    BYTE PTR [rax],al
   1400092ac:	00 00                	add    BYTE PTR [rax],al
	...

00000001400092b0 <__imp_LeaveCriticalSection>:
   1400092b0:	b4 94                	mov    ah,0x94
   1400092b2:	00 00                	add    BYTE PTR [rax],al
   1400092b4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400092b8 <__imp_SetUnhandledExceptionFilter>:
   1400092b8:	cc                   	int3
   1400092b9:	94                   	xchg   esp,eax
   1400092ba:	00 00                	add    BYTE PTR [rax],al
   1400092bc:	00 00                	add    BYTE PTR [rax],al
	...

00000001400092c0 <__imp_Sleep>:
   1400092c0:	ea                   	(bad)
   1400092c1:	94                   	xchg   esp,eax
   1400092c2:	00 00                	add    BYTE PTR [rax],al
   1400092c4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400092c8 <__imp_TlsGetValue>:
   1400092c8:	f2 94                	repnz xchg esp,eax
   1400092ca:	00 00                	add    BYTE PTR [rax],al
   1400092cc:	00 00                	add    BYTE PTR [rax],al
	...

00000001400092d0 <__imp_VirtualProtect>:
   1400092d0:	00 95 00 00 00 00    	add    BYTE PTR [rbp+0x0],dl
	...

00000001400092d8 <__imp_VirtualQuery>:
   1400092d8:	12 95 00 00 00 00    	adc    dl,BYTE PTR [rbp+0x0]
	...

00000001400092e0 <.idata$5>:
	...

00000001400092e8 <__imp___p__environ>:
   1400092e8:	22 95 00 00 00 00    	and    dl,BYTE PTR [rbp+0x0]
	...

00000001400092f0 <__imp___p__wenviron>:
   1400092f0:	32 95 00 00 00 00    	xor    dl,BYTE PTR [rbp+0x0]
	...

00000001400092f8 <.idata$5>:
	...

0000000140009300 <__imp__set_new_mode>:
   140009300:	42 95                	rex.X xchg ebp,eax
   140009302:	00 00                	add    BYTE PTR [rax],al
   140009304:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009308 <__imp_calloc>:
   140009308:	52                   	push   rdx
   140009309:	95                   	xchg   ebp,eax
   14000930a:	00 00                	add    BYTE PTR [rax],al
   14000930c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009310 <__imp_free>:
   140009310:	5c                   	pop    rsp
   140009311:	95                   	xchg   ebp,eax
   140009312:	00 00                	add    BYTE PTR [rax],al
   140009314:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009318 <__imp_malloc>:
   140009318:	64 95                	fs xchg ebp,eax
   14000931a:	00 00                	add    BYTE PTR [rax],al
   14000931c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009320 <.idata$5>:
	...

0000000140009328 <__imp___setusermatherr>:
   140009328:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140009329:	95                   	xchg   ebp,eax
   14000932a:	00 00                	add    BYTE PTR [rax],al
   14000932c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009330 <.idata$5>:
	...

0000000140009338 <__imp___C_specific_handler>:
   140009338:	82                   	(bad)
   140009339:	95                   	xchg   ebp,eax
   14000933a:	00 00                	add    BYTE PTR [rax],al
   14000933c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009340 <__imp_memcpy>:
   140009340:	9a                   	(bad)
   140009341:	95                   	xchg   ebp,eax
   140009342:	00 00                	add    BYTE PTR [rax],al
   140009344:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009348 <.idata$5>:
	...

0000000140009350 <__imp___p___argc>:
   140009350:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140009351:	95                   	xchg   ebp,eax
   140009352:	00 00                	add    BYTE PTR [rax],al
   140009354:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009358 <__imp___p___argv>:
   140009358:	b2 95                	mov    dl,0x95
   14000935a:	00 00                	add    BYTE PTR [rax],al
   14000935c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009360 <__imp___p___wargv>:
   140009360:	c0 95 00 00 00 00 00 	rcl    BYTE PTR [rbp+0x0],0x0
	...

0000000140009368 <__imp__cexit>:
   140009368:	ce                   	(bad)
   140009369:	95                   	xchg   ebp,eax
   14000936a:	00 00                	add    BYTE PTR [rax],al
   14000936c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009370 <__imp__configure_narrow_argv>:
   140009370:	d8 95 00 00 00 00    	fcom   DWORD PTR [rbp+0x0]
	...

0000000140009378 <__imp__configure_wide_argv>:
   140009378:	f2 95                	repnz xchg ebp,eax
   14000937a:	00 00                	add    BYTE PTR [rax],al
   14000937c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009380 <__imp__crt_at_quick_exit>:
   140009380:	0a 96 00 00 00 00    	or     dl,BYTE PTR [rsi+0x0]
	...

0000000140009388 <__imp__crt_atexit>:
   140009388:	20 96 00 00 00 00    	and    BYTE PTR [rsi+0x0],dl
	...

0000000140009390 <__imp__exit>:
   140009390:	2e 96                	cs xchg esi,eax
   140009392:	00 00                	add    BYTE PTR [rax],al
   140009394:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009398 <__imp__initialize_narrow_environment>:
   140009398:	36 96                	ss xchg esi,eax
   14000939a:	00 00                	add    BYTE PTR [rax],al
   14000939c:	00 00                	add    BYTE PTR [rax],al
	...

00000001400093a0 <__imp__initialize_wide_environment>:
   1400093a0:	58                   	pop    rax
   1400093a1:	96                   	xchg   esi,eax
   1400093a2:	00 00                	add    BYTE PTR [rax],al
   1400093a4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400093a8 <__imp__initterm>:
   1400093a8:	78 96                	js     140009340 <__imp_memcpy>
   1400093aa:	00 00                	add    BYTE PTR [rax],al
   1400093ac:	00 00                	add    BYTE PTR [rax],al
	...

00000001400093b0 <__imp___set_app_type>:
   1400093b0:	84 96 00 00 00 00    	test   BYTE PTR [rsi+0x0],dl
	...

00000001400093b8 <__imp__set_invalid_parameter_handler>:
   1400093b8:	94                   	xchg   esp,eax
   1400093b9:	96                   	xchg   esi,eax
   1400093ba:	00 00                	add    BYTE PTR [rax],al
   1400093bc:	00 00                	add    BYTE PTR [rax],al
	...

00000001400093c0 <__imp_abort>:
   1400093c0:	b6 96                	mov    dh,0x96
   1400093c2:	00 00                	add    BYTE PTR [rax],al
   1400093c4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400093c8 <__imp_exit>:
   1400093c8:	be 96 00 00 00       	mov    esi,0x96
   1400093cd:	00 00                	add    BYTE PTR [rax],al
	...

00000001400093d0 <__imp_signal>:
   1400093d0:	c6                   	(bad)
   1400093d1:	96                   	xchg   esi,eax
   1400093d2:	00 00                	add    BYTE PTR [rax],al
   1400093d4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400093d8 <.idata$5>:
	...

00000001400093e0 <__imp___acrt_iob_func>:
   1400093e0:	d0 96 00 00 00 00    	rcl    BYTE PTR [rsi+0x0],1
	...

00000001400093e8 <__imp___p__commode>:
   1400093e8:	e2 96                	loop   140009380 <__imp__crt_at_quick_exit>
   1400093ea:	00 00                	add    BYTE PTR [rax],al
   1400093ec:	00 00                	add    BYTE PTR [rax],al
	...

00000001400093f0 <__imp___p__fmode>:
   1400093f0:	f2 96                	repnz xchg esi,eax
   1400093f2:	00 00                	add    BYTE PTR [rax],al
   1400093f4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400093f8 <__imp___stdio_common_vfprintf>:
   1400093f8:	00 97 00 00 00 00    	add    BYTE PTR [rdi+0x0],dl
	...

0000000140009400 <__imp___stdio_common_vfwprintf>:
   140009400:	1a 97 00 00 00 00    	sbb    dl,BYTE PTR [rdi+0x0]
	...

0000000140009408 <__imp_fwrite>:
   140009408:	36 97                	ss xchg edi,eax
   14000940a:	00 00                	add    BYTE PTR [rax],al
   14000940c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009410 <.idata$5>:
	...

0000000140009418 <__imp_strlen>:
   140009418:	40 97                	rex xchg edi,eax
   14000941a:	00 00                	add    BYTE PTR [rax],al
   14000941c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009420 <__imp_strncmp>:
   140009420:	4a 97                	rex.WX xchg rdi,rax
   140009422:	00 00                	add    BYTE PTR [rax],al
   140009424:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009428 <.idata$5>:
	...

0000000140009430 <__imp___daylight>:
   140009430:	54                   	push   rsp
   140009431:	97                   	xchg   edi,eax
   140009432:	00 00                	add    BYTE PTR [rax],al
   140009434:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009438 <__imp___timezone>:
   140009438:	62                   	(bad)
   140009439:	97                   	xchg   edi,eax
   14000943a:	00 00                	add    BYTE PTR [rax],al
   14000943c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009440 <__imp___tzname>:
   140009440:	70 97                	jo     1400093d9 <.idata$5+0x1>
   140009442:	00 00                	add    BYTE PTR [rax],al
   140009444:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009448 <__imp__tzset>:
   140009448:	7c 97                	jl     1400093e1 <__imp___acrt_iob_func+0x1>
   14000944a:	00 00                	add    BYTE PTR [rax],al
   14000944c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009450 <.idata$5>:
	...

0000000140009458 <__IAT_end__>:
   140009458:	19 01                	sbb    DWORD PTR [rcx],eax
   14000945a:	44                   	rex.R
   14000945b:	65 6c                	gs ins BYTE PTR es:[rdi],dx
   14000945d:	65 74 65             	gs je  1400094c5 <.idata$6+0x11>
   140009460:	43 72 69             	rex.XB jb 1400094cc <.idata$6>
   140009463:	74 69                	je     1400094ce <.idata$6+0x2>
   140009465:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
   140009468:	53                   	push   rbx
   140009469:	65 63 74 69 6f       	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000946e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
	...

0000000140009470 <.idata$6>:
   140009470:	3d 01 45 6e 74       	cmp    eax,0x746e4501
   140009475:	65 72 43             	gs jb  1400094bb <.idata$6+0x7>
   140009478:	72 69                	jb     1400094e3 <.idata$6+0x17>
   14000947a:	74 69                	je     1400094e5 <.idata$6+0x19>
   14000947c:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
   14000947f:	53                   	push   rbx
   140009480:	65 63 74 69 6f       	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140009485:	6e                   	outs   dx,BYTE PTR ds:[rsi]
	...

0000000140009488 <.idata$6>:
   140009488:	74 02                	je     14000948c <.idata$6+0x4>
   14000948a:	47                   	rex.RXB
   14000948b:	65 74 4c             	gs je  1400094da <.idata$6+0xe>
   14000948e:	61                   	(bad)
   14000948f:	73 74                	jae    140009505 <.idata$6+0x5>
   140009491:	45 72 72             	rex.RB jb 140009506 <.idata$6+0x6>
   140009494:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140009495:	72 00                	jb     140009497 <.idata$6+0xf>
	...

0000000140009498 <.idata$6>:
   140009498:	7a 03                	jp     14000949d <.idata$6+0x5>
   14000949a:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000949c:	69 74 69 61 6c 69 7a 	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400094a3:	65 
   1400094a4:	43 72 69             	rex.XB jb 140009510 <.idata$6+0x10>
   1400094a7:	74 69                	je     140009512 <.idata$6>
   1400094a9:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
   1400094ac:	53                   	push   rbx
   1400094ad:	65 63 74 69 6f       	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400094b2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
	...

00000001400094b4 <.idata$6>:
   1400094b4:	d6                   	(bad)
   1400094b5:	03 4c 65 61          	add    ecx,DWORD PTR [rbp+riz*2+0x61]
   1400094b9:	76 65                	jbe    140009520 <.idata$6+0xe>
   1400094bb:	43 72 69             	rex.XB jb 140009527 <.idata$6+0x5>
   1400094be:	74 69                	je     140009529 <.idata$6+0x7>
   1400094c0:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
   1400094c3:	53                   	push   rbx
   1400094c4:	65 63 74 69 6f       	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400094c9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
	...

00000001400094cc <.idata$6>:
   1400094cc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400094cd:	05 53 65 74 55       	add    eax,0x55746553
   1400094d2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400094d3:	68 61 6e 64 6c       	push   0x6c646e61
   1400094d8:	65 64 45 78 63       	gs fs rex.RB js 140009540 <.idata$6+0xe>
   1400094dd:	65 70 74             	gs jo  140009554 <.idata$6+0x2>
   1400094e0:	69 6f 6e 46 69 6c 74 	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400094e7:	65 72 00             	gs jb  1400094ea <.idata$6>

00000001400094ea <.idata$6>:
   1400094ea:	7f 05                	jg     1400094f1 <.idata$6+0x7>
   1400094ec:	53                   	push   rbx
   1400094ed:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400094ee:	65 65 70 00          	gs gs jo 1400094f2 <.idata$6>

00000001400094f2 <.idata$6>:
   1400094f2:	a2 05 54 6c 73 47 65 	movabs ds:0x56746547736c5405,al
   1400094f9:	74 56 
   1400094fb:	61                   	(bad)
   1400094fc:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400094fd:	75 65                	jne    140009564 <.idata$6>
	...

0000000140009500 <.idata$6>:
   140009500:	d1 05 56 69 72 74    	rol    DWORD PTR [rip+0x74726956],1        # 1b472fe5c <.debug_line_str+0x7471cdc5>
   140009506:	75 61                	jne    140009569 <.idata$6+0x5>
   140009508:	6c                   	ins    BYTE PTR es:[rdi],dx
   140009509:	50                   	push   rax
   14000950a:	72 6f                	jb     14000957b <.idata$6+0xd>
   14000950c:	74 65                	je     140009573 <.idata$6+0x5>
   14000950e:	63 74 00 00          	movsxd esi,DWORD PTR [rax+rax*1+0x0]

0000000140009512 <.idata$6>:
   140009512:	d3 05 56 69 72 74    	rol    DWORD PTR [rip+0x74726956],cl        # 1b472fe6e <.debug_line_str+0x7471cdd7>
   140009518:	75 61                	jne    14000957b <.idata$6+0xd>
   14000951a:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000951b:	51                   	push   rcx
   14000951c:	75 65                	jne    140009583 <.idata$6+0x1>
   14000951e:	72 79                	jb     140009599 <.idata$6+0x17>
	...

0000000140009522 <.idata$6>:
   140009522:	01 00                	add    DWORD PTR [rax],eax
   140009524:	5f                   	pop    rdi
   140009525:	5f                   	pop    rdi
   140009526:	70 5f                	jo     140009587 <.idata$6+0x5>
   140009528:	5f                   	pop    rdi
   140009529:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   14000952b:	76 69                	jbe    140009596 <.idata$6+0x14>
   14000952d:	72 6f                	jb     14000959e <.idata$6+0x4>
   14000952f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
	...

0000000140009532 <.idata$6>:
   140009532:	02 00                	add    al,BYTE PTR [rax]
   140009534:	5f                   	pop    rdi
   140009535:	5f                   	pop    rdi
   140009536:	70 5f                	jo     140009597 <.idata$6+0x15>
   140009538:	5f                   	pop    rdi
   140009539:	77 65                	ja     1400095a0 <.idata$6+0x6>
   14000953b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000953c:	76 69                	jbe    1400095a7 <.idata$6+0x3>
   14000953e:	72 6f                	jb     1400095af <.idata$6+0xb>
   140009540:	6e                   	outs   dx,BYTE PTR ds:[rsi]
	...

0000000140009542 <.idata$6>:
   140009542:	18 00                	sbb    BYTE PTR [rax],al
   140009544:	5f                   	pop    rdi
   140009545:	73 65                	jae    1400095ac <.idata$6+0x8>
   140009547:	74 5f                	je     1400095a8 <.idata$6+0x4>
   140009549:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000954a:	65 77 5f             	gs ja  1400095ac <.idata$6+0x8>
   14000954d:	6d                   	ins    DWORD PTR es:[rdi],dx
   14000954e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000954f:	64 65 00           	fs add BYTE PTR gs:[rcx],bl

0000000140009552 <.idata$6>:
   140009552:	19 00                	sbb    DWORD PTR [rax],eax
   140009554:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
   140009557:	6c                   	ins    BYTE PTR es:[rdi],dx
   140009558:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140009559:	63 00                	movsxd eax,DWORD PTR [rax]
	...

000000014000955c <.idata$6>:
   14000955c:	1a 00                	sbb    al,BYTE PTR [rax]
   14000955e:	66 72 65             	data16 jb 1400095c6 <.idata$6+0x6>
   140009561:	65 00 00             	add    BYTE PTR gs:[rax],al

0000000140009564 <.idata$6>:
   140009564:	1b 00                	sbb    eax,DWORD PTR [rax]
   140009566:	6d                   	ins    DWORD PTR es:[rdi],dx
   140009567:	61                   	(bad)
   140009568:	6c                   	ins    BYTE PTR es:[rdi],dx
   140009569:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000956a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000956b:	63 00                	movsxd eax,DWORD PTR [rax]
	...

000000014000956e <.idata$6>:
   14000956e:	0a 00                	or     al,BYTE PTR [rax]
   140009570:	5f                   	pop    rdi
   140009571:	5f                   	pop    rdi
   140009572:	73 65                	jae    1400095d9 <.idata$6+0x1>
   140009574:	74 75                	je     1400095eb <.idata$6+0x13>
   140009576:	73 65                	jae    1400095dd <.idata$6+0x5>
   140009578:	72 6d                	jb     1400095e7 <.idata$6+0xf>
   14000957a:	61                   	(bad)
   14000957b:	74 68                	je     1400095e5 <.idata$6+0xd>
   14000957d:	65 72 72             	gs jb  1400095f2 <.idata$6>
	...

0000000140009582 <.idata$6>:
   140009582:	10 00                	adc    BYTE PTR [rax],al
   140009584:	5f                   	pop    rdi
   140009585:	5f                   	pop    rdi
   140009586:	43 5f                	rex.XB pop r15
   140009588:	73 70                	jae    1400095fa <.idata$6+0x8>
   14000958a:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000958e:	69 63 5f 68 61 6e 64 	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140009595:	6c                   	ins    BYTE PTR es:[rdi],dx
   140009596:	65 72 00             	gs jb  140009599 <.idata$6+0x17>
	...

000000014000959a <.idata$6>:
   14000959a:	78 04                	js     1400095a0 <.idata$6+0x6>
   14000959c:	6d                   	ins    DWORD PTR es:[rdi],dx
   14000959d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
   14000959f:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
	...

00000001400095a4 <.idata$6>:
   1400095a4:	05 00 5f 5f 70       	add    eax,0x705f5f00
   1400095a9:	5f                   	pop    rdi
   1400095aa:	5f                   	pop    rdi
   1400095ab:	5f                   	pop    rdi
   1400095ac:	61                   	(bad)
   1400095ad:	72 67                	jb     140009616 <.idata$6+0xc>
   1400095af:	63 00                	movsxd eax,DWORD PTR [rax]
	...

00000001400095b2 <.idata$6>:
   1400095b2:	06                   	(bad)
   1400095b3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
   1400095b6:	70 5f                	jo     140009617 <.idata$6+0xd>
   1400095b8:	5f                   	pop    rdi
   1400095b9:	5f                   	pop    rdi
   1400095ba:	61                   	(bad)
   1400095bb:	72 67                	jb     140009624 <.idata$6+0x4>
   1400095bd:	76 00                	jbe    1400095bf <.idata$6+0xd>
	...

00000001400095c0 <.idata$6>:
   1400095c0:	07                   	(bad)
   1400095c1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
   1400095c4:	70 5f                	jo     140009625 <.idata$6+0x5>
   1400095c6:	5f                   	pop    rdi
   1400095c7:	5f                   	pop    rdi
   1400095c8:	77 61                	ja     14000962b <.idata$6+0xb>
   1400095ca:	72 67                	jb     140009633 <.idata$6+0x5>
   1400095cc:	76 00                	jbe    1400095ce <.idata$6>

00000001400095ce <.idata$6>:
   1400095ce:	17                   	(bad)
   1400095cf:	00 5f 63             	add    BYTE PTR [rdi+0x63],bl
   1400095d2:	65 78 69             	gs js  14000963e <.idata$6+0x8>
   1400095d5:	74 00                	je     1400095d7 <.idata$6+0x9>
	...

00000001400095d8 <.idata$6>:
   1400095d8:	19 00                	sbb    DWORD PTR [rax],eax
   1400095da:	5f                   	pop    rdi
   1400095db:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400095de:	66 69 67 75 72 65    	imul   sp,WORD PTR [rdi+0x75],0x6572
   1400095e4:	5f                   	pop    rdi
   1400095e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400095e6:	61                   	(bad)
   1400095e7:	72 72                	jb     14000965b <.idata$6+0x3>
   1400095e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400095ea:	77 5f                	ja     14000964b <.idata$6+0x15>
   1400095ec:	61                   	(bad)
   1400095ed:	72 67                	jb     140009656 <.idata$6+0x20>
   1400095ef:	76 00                	jbe    1400095f1 <.idata$6+0x19>
	...

00000001400095f2 <.idata$6>:
   1400095f2:	1a 00                	sbb    al,BYTE PTR [rax]
   1400095f4:	5f                   	pop    rdi
   1400095f5:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400095f8:	66 69 67 75 72 65    	imul   sp,WORD PTR [rdi+0x75],0x6572
   1400095fe:	5f                   	pop    rdi
   1400095ff:	77 69                	ja     14000966a <.idata$6+0x12>
   140009601:	64 65 5f             	fs gs pop rdi
   140009604:	61                   	(bad)
   140009605:	72 67                	jb     14000966e <.idata$6+0x16>
   140009607:	76 00                	jbe    140009609 <.idata$6+0x17>
	...

000000014000960a <.idata$6>:
   14000960a:	1e                   	(bad)
   14000960b:	00 5f 63             	add    BYTE PTR [rdi+0x63],bl
   14000960e:	72 74                	jb     140009684 <.idata$6>
   140009610:	5f                   	pop    rdi
   140009611:	61                   	(bad)
   140009612:	74 5f                	je     140009673 <.idata$6+0x1b>
   140009614:	71 75                	jno    14000968b <.idata$6+0x7>
   140009616:	69 63 6b 5f 65 78 69 	imul   esp,DWORD PTR [rbx+0x6b],0x6978655f
   14000961d:	74 00                	je     14000961f <.idata$6+0x15>
	...

0000000140009620 <.idata$6>:
   140009620:	1f                   	(bad)
   140009621:	00 5f 63             	add    BYTE PTR [rdi+0x63],bl
   140009624:	72 74                	jb     14000969a <.idata$6+0x6>
   140009626:	5f                   	pop    rdi
   140009627:	61                   	(bad)
   140009628:	74 65                	je     14000968f <.idata$6+0xb>
   14000962a:	78 69                	js     140009695 <.idata$6+0x1>
   14000962c:	74 00                	je     14000962e <.idata$6>

000000014000962e <.idata$6>:
   14000962e:	25 00 5f 65 78       	and    eax,0x78655f00
   140009633:	69 74 00     	imul   esi,DWORD PTR [rax+rax*1+0x36],0x6e695f00
   14000963a:	 

0000000140009636 <.idata$6>:
   140009636:	36 00 5f 69          	ss add BYTE PTR [rdi+0x69],bl
   14000963a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000963b:	69 74 69 61 6c 69 7a 	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140009642:	65 
   140009643:	5f                   	pop    rdi
   140009644:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140009645:	61                   	(bad)
   140009646:	72 72                	jb     1400096ba <.idata$6+0x4>
   140009648:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140009649:	77 5f                	ja     1400096aa <.idata$6+0x16>
   14000964b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   14000964d:	76 69                	jbe    1400096b8 <.idata$6+0x2>
   14000964f:	72 6f                	jb     1400096c0 <.idata$6+0x2>
   140009651:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140009652:	6d                   	ins    DWORD PTR es:[rdi],dx
   140009653:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   140009655:	74 00                	je     140009657 <.idata$6+0x21>
	...

0000000140009658 <.idata$6>:
   140009658:	38 00                	cmp    BYTE PTR [rax],al
   14000965a:	5f                   	pop    rdi
   14000965b:	69 6e 69 74 69 61 6c 	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140009662:	69 7a 65 5f 77 69 64 	imul   edi,DWORD PTR [rdx+0x65],0x6469775f
   140009669:	65 5f                	gs pop rdi
   14000966b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   14000966d:	76 69                	jbe    1400096d8 <.idata$6+0x8>
   14000966f:	72 6f                	jb     1400096e0 <.idata$6+0x10>
   140009671:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140009672:	6d                   	ins    DWORD PTR es:[rdi],dx
   140009673:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   140009675:	74 00                	je     140009677 <.idata$6+0x1f>
	...

0000000140009678 <.idata$6>:
   140009678:	39 00                	cmp    DWORD PTR [rax],eax
   14000967a:	5f                   	pop    rdi
   14000967b:	69 6e 69 74 74 65 72 	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140009682:	6d                   	ins    DWORD PTR es:[rdi],dx
	...

0000000140009684 <.idata$6>:
   140009684:	45 00 5f 73          	add    BYTE PTR [r15+0x73],r11b
   140009688:	65 74 5f             	gs je  1400096ea <.idata$6+0x8>
   14000968b:	61                   	(bad)
   14000968c:	70 70                	jo     1400096fe <.idata$6+0xc>
   14000968e:	5f                   	pop    rdi
   14000968f:	74 79                	je     14000970a <.idata$6+0xa>
   140009691:	70 65                	jo     1400096f8 <.idata$6+0x6>
	...

0000000140009694 <.idata$6>:
   140009694:	4b 00 5f 73          	rex.WXB add BYTE PTR [r15+0x73],bl
   140009698:	65 74 5f             	gs je  1400096fa <.idata$6+0x8>
   14000969b:	69 6e 76 61 6c 69 64 	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   1400096a2:	5f                   	pop    rdi
   1400096a3:	70 61                	jo     140009706 <.idata$6+0x6>
   1400096a5:	72 61                	jb     140009708 <.idata$6+0x8>
   1400096a7:	6d                   	ins    DWORD PTR es:[rdi],dx
   1400096a8:	65 74 65             	gs je  140009710 <.idata$6+0x10>
   1400096ab:	72 5f                	jb     14000970c <.idata$6+0xc>
   1400096ad:	68 61 6e 64 6c       	push   0x6c646e61
   1400096b2:	65 72 00             	gs jb  1400096b5 <.idata$6+0x21>
	...

00000001400096b6 <.idata$6>:
   1400096b6:	58                   	pop    rax
   1400096b7:	00 61 62             	add    BYTE PTR [rcx+0x62],ah
   1400096ba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400096bb:	72 74                	jb     140009731 <.idata$6+0x17>
	...

00000001400096be <.idata$6>:
   1400096be:	59                   	pop    rcx
   1400096bf:	00 65 78             	add    BYTE PTR [rbp+0x78],ah
   1400096c2:	69 74 00 00    	imul   esi,DWORD PTR [rax+rax*1+0x0],0x69730067
   1400096c9:	 

00000001400096c6 <.idata$6>:
   1400096c6:	67 00 73 69          	add    BYTE PTR [ebx+0x69],dh
   1400096ca:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   1400096cc:	61                   	(bad)
   1400096cd:	6c                   	ins    BYTE PTR es:[rdi],dx
	...

00000001400096d0 <.idata$6>:
   1400096d0:	01 00                	add    DWORD PTR [rax],eax
   1400096d2:	5f                   	pop    rdi
   1400096d3:	5f                   	pop    rdi
   1400096d4:	61                   	(bad)
   1400096d5:	63 72 74             	movsxd esi,DWORD PTR [rdx+0x74]
   1400096d8:	5f                   	pop    rdi
   1400096d9:	69 6f 62 5f 66 75 6e 	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
   1400096e0:	63 00                	movsxd eax,DWORD PTR [rax]

00000001400096e2 <.idata$6>:
   1400096e2:	02 00                	add    al,BYTE PTR [rax]
   1400096e4:	5f                   	pop    rdi
   1400096e5:	5f                   	pop    rdi
   1400096e6:	70 5f                	jo     140009747 <.idata$6+0x7>
   1400096e8:	5f                   	pop    rdi
   1400096e9:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400096ec:	6d                   	ins    DWORD PTR es:[rdi],dx
   1400096ed:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400096ee:	64 65 00 00          	fs add BYTE PTR gs:[rax],al

00000001400096f2 <.idata$6>:
   1400096f2:	03 00                	add    eax,DWORD PTR [rax]
   1400096f4:	5f                   	pop    rdi
   1400096f5:	5f                   	pop    rdi
   1400096f6:	70 5f                	jo     140009757 <.idata$6+0x3>
   1400096f8:	5f                   	pop    rdi
   1400096f9:	66 6d                	ins    WORD PTR es:[rdi],dx
   1400096fb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400096fc:	64 65 00 00          	fs add BYTE PTR gs:[rax],al

0000000140009700 <.idata$6>:
   140009700:	04 00                	add    al,0x0
   140009702:	5f                   	pop    rdi
   140009703:	5f                   	pop    rdi
   140009704:	73 74                	jae    14000977a <.idata$6+0xa>
   140009706:	64 69 6f 5f 63 6f 6d 	imul   ebp,DWORD PTR fs:[rdi+0x5f],0x6d6d6f63
   14000970d:	6d 
   14000970e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000970f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140009710:	5f                   	pop    rdi
   140009711:	76 66                	jbe    140009779 <.idata$6+0x9>
   140009713:	70 72                	jo     140009787 <.idata$6+0xb>
   140009715:	69 6e 74 66 00   	imul   ebp,DWORD PTR [rsi+0x74],0x80066

000000014000971a <.idata$6>:
   14000971a:	08 00                	or     BYTE PTR [rax],al
   14000971c:	5f                   	pop    rdi
   14000971d:	5f                   	pop    rdi
   14000971e:	73 74                	jae    140009794 <.idata$7>
   140009720:	64 69 6f 5f 63 6f 6d 	imul   ebp,DWORD PTR fs:[rdi+0x5f],0x6d6d6f63
   140009727:	6d 
   140009728:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140009729:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000972a:	5f                   	pop    rdi
   14000972b:	76 66                	jbe    140009793 <.idata$7+0x3>
   14000972d:	77 70                	ja     14000979f <.idata$7+0x3>
   14000972f:	72 69                	jb     14000979a <.idata$7+0x2>
   140009731:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140009732:	74 66                	je     14000979a <.idata$7+0x2>
	...

0000000140009736 <.idata$6>:
   140009736:	a9 00 66 77 72       	test   eax,0x72776600
   14000973b:	69 74 65 00 00   	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x7300a800
   140009742:	 

0000000140009740 <.idata$6>:
   140009740:	a8 00                	test   al,0x0
   140009742:	73 74                	jae    1400097b8 <__lib64_libkernel32_a_iname+0x8>
   140009744:	72 6c                	jb     1400097b2 <__lib64_libkernel32_a_iname+0x2>
   140009746:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
	...

000000014000974a <.idata$6>:
   14000974a:	ab                   	stos   DWORD PTR es:[rdi],eax
   14000974b:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
   14000974e:	72 6e                	jb     1400097be <__lib64_libkernel32_a_iname+0xe>
   140009750:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
	...

0000000140009754 <.idata$6>:
   140009754:	09 00                	or     DWORD PTR [rax],eax
   140009756:	5f                   	pop    rdi
   140009757:	5f                   	pop    rdi
   140009758:	64 61                	fs (bad)
   14000975a:	79 6c                	jns    1400097c8 <__lib64_libapi_ms_win_crt_environment_l1_1_0_a_iname>
   14000975c:	69 67 68 74 00 00  	imul   esp,DWORD PTR [rdi+0x68],0xb000074

0000000140009762 <.idata$6>:
   140009762:	0b 00                	or     eax,DWORD PTR [rax]
   140009764:	5f                   	pop    rdi
   140009765:	5f                   	pop    rdi
   140009766:	74 69                	je     1400097d1 <__lib64_libapi_ms_win_crt_environment_l1_1_0_a_iname+0x9>
   140009768:	6d                   	ins    DWORD PTR es:[rdi],dx
   140009769:	65 7a 6f             	gs jp  1400097db <__lib64_libapi_ms_win_crt_environment_l1_1_0_a_iname+0x13>
   14000976c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000976d:	65 00 00             	add    BYTE PTR gs:[rax],al

0000000140009770 <.idata$6>:
   140009770:	0c 00                	or     al,0x0
   140009772:	5f                   	pop    rdi
   140009773:	5f                   	pop    rdi
   140009774:	74 7a                	je     1400097f0 <.idata$7>
   140009776:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140009777:	61                   	(bad)
   140009778:	6d                   	ins    DWORD PTR es:[rdi],dx
   140009779:	65 00 00             	add    BYTE PTR gs:[rax],al

000000014000977c <.idata$6>:
   14000977c:	3c 00                	cmp    al,0x0
   14000977e:	5f                   	pop    rdi
   14000977f:	74 7a                	je     1400097fb <.idata$7+0x3>
   140009781:	73 65                	jae    1400097e8 <__lib64_libapi_ms_win_crt_environment_l1_1_0_a_iname+0x20>
   140009783:	74 00                	je     140009785 <.idata$6+0x9>
   140009785:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009788 <.idata$7>:
   140009788:	00 90 00 00      	add    BYTE PTR [rax-0x70000000],dl

000000014000978c <.idata$7>:
   14000978c:	00 90 00 00      	add    BYTE PTR [rax-0x70000000],dl

0000000140009790 <.idata$7>:
   140009790:	00 90 00 00      	add    BYTE PTR [rax-0x70000000],dl

0000000140009794 <.idata$7>:
   140009794:	00 90 00 00      	add    BYTE PTR [rax-0x70000000],dl

0000000140009798 <.idata$7>:
   140009798:	00 90 00 00      	add    BYTE PTR [rax-0x70000000],dl

000000014000979c <.idata$7>:
   14000979c:	00 90 00 00      	add    BYTE PTR [rax-0x70000000],dl

00000001400097a0 <.idata$7>:
   1400097a0:	00 90 00 00      	add    BYTE PTR [rax-0x70000000],dl

00000001400097a4 <.idata$7>:
   1400097a4:	00 90 00 00      	add    BYTE PTR [rax-0x70000000],dl

00000001400097a8 <.idata$7>:
   1400097a8:	00 90 00 00      	add    BYTE PTR [rax-0x70000000],dl

00000001400097ac <.idata$7>:
   1400097ac:	00 90 00 00      	add    BYTE PTR [rax+0x454b0000],dl

00000001400097b0 <__lib64_libkernel32_a_iname>:
   1400097b0:	4b                   	rex.WXB
   1400097b1:	45 52                	rex.RB push r10
   1400097b3:	4e                   	rex.WRX
   1400097b4:	45                   	rex.RB
   1400097b5:	4c 33 32             	xor    r14,QWORD PTR [rdx]
   1400097b8:	2e 64 6c             	cs fs ins BYTE PTR es:[rdi],dx
   1400097bb:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400097bc:	00 00                	add    BYTE PTR [rax],al
	...

00000001400097c0 <.idata$7>:
   1400097c0:	14 90                	adc    al,0x90
	...

00000001400097c4 <.idata$7>:
   1400097c4:	14 90                	adc    al,0x90
	...

00000001400097c8 <__lib64_libapi_ms_win_crt_environment_l1_1_0_a_iname>:
   1400097c8:	61                   	(bad)
   1400097c9:	70 69                	jo     140009834 <__lib64_libapi_ms_win_crt_math_l1_1_0_a_iname+0x10>
   1400097cb:	2d 6d 73 2d 77       	sub    eax,0x772d736d
   1400097d0:	69 6e 2d 63 72 74 2d 	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   1400097d7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   1400097d9:	76 69                	jbe    140009844 <.idata$7>
   1400097db:	72 6f                	jb     14000984c <__lib64_libapi_ms_win_crt_private_l1_1_0_a_iname>
   1400097dd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400097de:	6d                   	ins    DWORD PTR es:[rdi],dx
   1400097df:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   1400097e1:	74 2d                	je     140009810 <__lib64_libapi_ms_win_crt_heap_l1_1_0_a_iname+0x10>
   1400097e3:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400097e4:	31 2d 31 2d 30 2e    	xor    DWORD PTR [rip+0x2e302d31],ebp        # 16e30c51b <.debug_line_str+0x2e2f9484>
   1400097ea:	64 6c                	fs ins BYTE PTR es:[rdi],dx
   1400097ec:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400097ed:	00 00                	add    BYTE PTR [rax],al
	...

00000001400097f0 <.idata$7>:
   1400097f0:	28 90 00 00      	sub    BYTE PTR [rax-0x6fd80000],dl

00000001400097f4 <.idata$7>:
   1400097f4:	28 90 00 00      	sub    BYTE PTR [rax-0x6fd80000],dl

00000001400097f8 <.idata$7>:
   1400097f8:	28 90 00 00      	sub    BYTE PTR [rax-0x6fd80000],dl

00000001400097fc <.idata$7>:
   1400097fc:	28 90 00 00      	sub    BYTE PTR [rax+0x70610000],dl

0000000140009800 <__lib64_libapi_ms_win_crt_heap_l1_1_0_a_iname>:
   140009800:	61                   	(bad)
   140009801:	70 69                	jo     14000986c <__lib64_libapi_ms_win_crt_private_l1_1_0_a_iname+0x20>
   140009803:	2d 6d 73 2d 77       	sub    eax,0x772d736d
   140009808:	69 6e 2d 63 72 74 2d 	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   14000980f:	68 65 61 70 2d       	push   0x2d706165
   140009814:	6c                   	ins    BYTE PTR es:[rdi],dx
   140009815:	31 2d 31 2d 30 2e    	xor    DWORD PTR [rip+0x2e302d31],ebp        # 16e30c54c <.debug_line_str+0x2e2f94b5>
   14000981b:	64 6c                	fs ins BYTE PTR es:[rdi],dx
   14000981d:	6c                   	ins    BYTE PTR es:[rdi],dx
	...

0000000140009820 <.idata$7>:
   140009820:	3c 90                	cmp    al,0x90
	...

0000000140009824 <__lib64_libapi_ms_win_crt_math_l1_1_0_a_iname>:
   140009824:	61                   	(bad)
   140009825:	70 69                	jo     140009890 <.idata$7>
   140009827:	2d 6d 73 2d 77       	sub    eax,0x772d736d
   14000982c:	69 6e 2d 63 72 74 2d 	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   140009833:	6d                   	ins    DWORD PTR es:[rdi],dx
   140009834:	61                   	(bad)
   140009835:	74 68                	je     14000989f <.idata$7+0x3>
   140009837:	2d 6c 31 2d 31       	sub    eax,0x312d316c
   14000983c:	2d 30 2e 64 6c       	sub    eax,0x6c642e30
   140009841:	6c                   	ins    BYTE PTR es:[rdi],dx
	...

0000000140009844 <.idata$7>:
   140009844:	50                   	push   rax
   140009845:	90                   	nop
	...

0000000140009848 <.idata$7>:
   140009848:	50                   	push   rax
   140009849:	90                   	nop
	...

000000014000984c <__lib64_libapi_ms_win_crt_private_l1_1_0_a_iname>:
   14000984c:	61                   	(bad)
   14000984d:	70 69                	jo     1400098b8 <__lib64_libapi_ms_win_crt_runtime_l1_1_0_a_iname+0x4>
   14000984f:	2d 6d 73 2d 77       	sub    eax,0x772d736d
   140009854:	69 6e 2d 63 72 74 2d 	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   14000985b:	70 72                	jo     1400098cf <__lib64_libapi_ms_win_crt_runtime_l1_1_0_a_iname+0x1b>
   14000985d:	69 76 61 74 65 2d 6c 	imul   esi,DWORD PTR [rsi+0x61],0x6c2d6574
   140009864:	31 2d 31 2d 30 2e    	xor    DWORD PTR [rip+0x2e302d31],ebp        # 16e30c59b <.debug_line_str+0x2e2f9504>
   14000986a:	64 6c                	fs ins BYTE PTR es:[rdi],dx
   14000986c:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000986d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009870 <.idata$7>:
   140009870:	64 90                	fs nop
	...

0000000140009874 <.idata$7>:
   140009874:	64 90                	fs nop
	...

0000000140009878 <.idata$7>:
   140009878:	64 90                	fs nop
	...

000000014000987c <.idata$7>:
   14000987c:	64 90                	fs nop
	...

0000000140009880 <.idata$7>:
   140009880:	64 90                	fs nop
	...

0000000140009884 <.idata$7>:
   140009884:	64 90                	fs nop
	...

0000000140009888 <.idata$7>:
   140009888:	64 90                	fs nop
	...

000000014000988c <.idata$7>:
   14000988c:	64 90                	fs nop
	...

0000000140009890 <.idata$7>:
   140009890:	64 90                	fs nop
	...

0000000140009894 <.idata$7>:
   140009894:	64 90                	fs nop
	...

0000000140009898 <.idata$7>:
   140009898:	64 90                	fs nop
	...

000000014000989c <.idata$7>:
   14000989c:	64 90                	fs nop
	...

00000001400098a0 <.idata$7>:
   1400098a0:	64 90                	fs nop
	...

00000001400098a4 <.idata$7>:
   1400098a4:	64 90                	fs nop
	...

00000001400098a8 <.idata$7>:
   1400098a8:	64 90                	fs nop
	...

00000001400098ac <.idata$7>:
   1400098ac:	64 90                	fs nop
	...

00000001400098b0 <.idata$7>:
   1400098b0:	64 90                	fs nop
	...

00000001400098b4 <__lib64_libapi_ms_win_crt_runtime_l1_1_0_a_iname>:
   1400098b4:	61                   	(bad)
   1400098b5:	70 69                	jo     140009920 <__lib64_libapi_ms_win_crt_string_l1_1_0_a_iname+0x8>
   1400098b7:	2d 6d 73 2d 77       	sub    eax,0x772d736d
   1400098bc:	69 6e 2d 63 72 74 2d 	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   1400098c3:	72 75                	jb     14000993a <__lib64_libapi_ms_win_crt_string_l1_1_0_a_iname+0x22>
   1400098c5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400098c6:	74 69                	je     140009931 <__lib64_libapi_ms_win_crt_string_l1_1_0_a_iname+0x19>
   1400098c8:	6d                   	ins    DWORD PTR es:[rdi],dx
   1400098c9:	65 2d 6c 31 2d 31    	gs sub eax,0x312d316c
   1400098cf:	2d 30 2e 64 6c       	sub    eax,0x6c642e30
   1400098d4:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400098d5:	00 00                	add    BYTE PTR [rax],al
	...

00000001400098d8 <.idata$7>:
   1400098d8:	78 90                	js     14000986a <__lib64_libapi_ms_win_crt_private_l1_1_0_a_iname+0x1e>
	...

00000001400098dc <.idata$7>:
   1400098dc:	78 90                	js     14000986e <__lib64_libapi_ms_win_crt_private_l1_1_0_a_iname+0x22>
	...

00000001400098e0 <.idata$7>:
   1400098e0:	78 90                	js     140009872 <.idata$7+0x2>
	...

00000001400098e4 <.idata$7>:
   1400098e4:	78 90                	js     140009876 <.idata$7+0x2>
	...

00000001400098e8 <.idata$7>:
   1400098e8:	78 90                	js     14000987a <.idata$7+0x2>
	...

00000001400098ec <.idata$7>:
   1400098ec:	78 90                	js     14000987e <.idata$7+0x2>
	...

00000001400098f0 <__lib64_libapi_ms_win_crt_stdio_l1_1_0_a_iname>:
   1400098f0:	61                   	(bad)
   1400098f1:	70 69                	jo     14000995c <__lib64_libapi_ms_win_crt_time_l1_1_0_a_iname+0x10>
   1400098f3:	2d 6d 73 2d 77       	sub    eax,0x772d736d
   1400098f8:	69 6e 2d 63 72 74 2d 	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   1400098ff:	73 74                	jae    140009975 <__lib64_libapi_ms_win_crt_time_l1_1_0_a_iname+0x29>
   140009901:	64 69 6f 2d 6c 31 2d 	imul   ebp,DWORD PTR fs:[rdi+0x2d],0x312d316c
   140009908:	31 
   140009909:	2d 30 2e 64 6c       	sub    eax,0x6c642e30
   14000990e:	6c                   	ins    BYTE PTR es:[rdi],dx
	...

0000000140009910 <.idata$7>:
   140009910:	8c 90 00 00      	mov    WORD PTR [rax-0x6f740000],ss

0000000140009914 <.idata$7>:
   140009914:	8c 90 00 00      	mov    WORD PTR [rax+0x70610000],ss

0000000140009918 <__lib64_libapi_ms_win_crt_string_l1_1_0_a_iname>:
   140009918:	61                   	(bad)
   140009919:	70 69                	jo     140009984 <__lib64_libapi_ms_win_crt_time_l1_1_0_a_iname+0x38>
   14000991b:	2d 6d 73 2d 77       	sub    eax,0x772d736d
   140009920:	69 6e 2d 63 72 74 2d 	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   140009927:	73 74                	jae    14000999d <__lib64_libapi_ms_win_crt_time_l1_1_0_a_iname+0x51>
   140009929:	72 69                	jb     140009994 <__lib64_libapi_ms_win_crt_time_l1_1_0_a_iname+0x48>
   14000992b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000992c:	67 2d 6c 31 2d 31    	addr32 sub eax,0x312d316c
   140009932:	2d 30 2e 64 6c       	sub    eax,0x6c642e30
   140009937:	6c                   	ins    BYTE PTR es:[rdi],dx
   140009938:	00 00                	add    BYTE PTR [rax],al
	...

000000014000993c <.idata$7>:
   14000993c:	a0 90 00 00    	movabs al,ds:0xa0000090a0000090
   140009943:	  

0000000140009940 <.idata$7>:
   140009940:	a0 90 00 00    	movabs al,ds:0xa0000090a0000090
   140009947:	  

0000000140009944 <.idata$7>:
   140009944:	a0 90 00 00    	movabs al,ds:0x61000090a0000090
   14000994b:	  

0000000140009948 <.idata$7>:
   140009948:	a0 90 00 00    	movabs al,ds:0x6d2d697061000090
   14000994f:	  

000000014000994c <__lib64_libapi_ms_win_crt_time_l1_1_0_a_iname>:
   14000994c:	61                   	(bad)
   14000994d:	70 69                	jo     1400099b8 <__lib64_libapi_ms_win_crt_time_l1_1_0_a_iname+0x6c>
   14000994f:	2d 6d 73 2d 77       	sub    eax,0x772d736d
   140009954:	69 6e 2d 63 72 74 2d 	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   14000995b:	74 69                	je     1400099c6 <__lib64_libapi_ms_win_crt_time_l1_1_0_a_iname+0x7a>
   14000995d:	6d                   	ins    DWORD PTR es:[rdi],dx
   14000995e:	65 2d 6c 31 2d 31    	gs sub eax,0x312d316c
   140009964:	2d 30 2e 64 6c       	sub    eax,0x6c642e30
   140009969:	6c                   	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000014000a000 <___crt_xc_start__>:
	...

000000014000a008 <__mingw_pcppinit>:
   14000a008:	30 11                	xor    BYTE PTR [rcx],dl
   14000a00a:	00 40 01             	add    BYTE PTR [rax+0x1],al
   14000a00d:	00 00                	add    BYTE PTR [rax],al
	...

000000014000a010 <__xc_z>:
	...

000000014000a018 <___crt_xc_end__>:
	...

000000014000a020 <__mingw_pcinit>:
   14000a020:	10 10                	adc    BYTE PTR [rax],dl
   14000a022:	00 40 01             	add    BYTE PTR [rax+0x1],al
   14000a025:	00 00                	add    BYTE PTR [rax],al
	...

000000014000a028 <__xi_z>:
	...

000000014000a030 <___crt_xi_end__>:
	...

000000014000a038 <__xl_c>:
   14000a038:	70 1c                	jo     14000a056 <___crt_xp_end__+0x6>
   14000a03a:	00 40 01             	add    BYTE PTR [rax+0x1],al
   14000a03d:	00 00                	add    BYTE PTR [rax],al
	...

000000014000a040 <__xl_d>:
   14000a040:	40 1c 00             	rex sbb al,0x0
   14000a043:	40 01 00             	rex add DWORD PTR [rax],eax
	...

000000014000a048 <__xl_z>:
	...

000000014000a050 <___crt_xp_end__>:
	...

000000014000a058 <__xd_z>:
	...

Disassembly of section .tls:

000000014000b000 <___tls_start__>:
	...

000000014000b008 <_tls_end>:
	...

Disassembly of section .reloc:

000000014000c000 <.reloc>:
   14000c000:	00 30                	add    BYTE PTR [rax],dh
   14000c002:	00 00                	add    BYTE PTR [rax],al
   14000c004:	0c 00                	or     al,0x0
   14000c006:	00 00                	add    BYTE PTR [rax],al
   14000c008:	98                   	cwde
   14000c009:	a0 00 00 00 40 00 00 	movabs al,ds:0x30000040000000
   14000c010:	30 00 
   14000c012:	00 00                	add    BYTE PTR [rax],al
   14000c014:	00 a0 50 a0 60 a0    	add    BYTE PTR [rax-0x5f9f5fb0],ah
   14000c01a:	70 a0                	jo     14000bfbc <___tls_end__+0xfac>
   14000c01c:	80 a0 88 a0 90 a0 98 	and    BYTE PTR [rax-0x5f6f5f78],0x98
   14000c023:	a0 a0 a0 a8 a0 b0 a0 	movabs al,ds:0xa0b8a0b0a0a8a0a0
   14000c02a:	b8 a0 
   14000c02c:	c0 a0 c8 a0 d0 a0 e0 	shl    BYTE PTR [rax-0x5f2f5f38],0xe0
   14000c033:	a0 e8 a0 f8 a0 00 a1 	movabs al,ds:0xa100a0f8a0e8
   14000c03a:	00 00 
   14000c03c:	00 50 00             	add    BYTE PTR [rax+0x0],dl
   14000c03f:	00 4c 00 00          	add    BYTE PTR [rax+rax*1+0x0],cl
   14000c043:	00 40 a0             	add    BYTE PTR [rax-0x60],al
   14000c046:	60                   	(bad)
   14000c047:	a0 68 a0 70 a0 78 a0 	movabs al,ds:0xa390a078a070a068
   14000c04e:	90 a3 
   14000c050:	a0 a3 b0 a3 c0 a3 d0 	movabs al,ds:0xe0a3d0a3c0a3b0a3
   14000c057:	a3 e0 
   14000c059:	a3 f0 a3 00 a4 10 a4 	movabs ds:0xa420a410a400a3f0,eax
   14000c060:	20 a4 
   14000c062:	30 a4 40 a4 50 a4 60 	xor    BYTE PTR [rax+rax*2+0x60a450a4],ah
   14000c069:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c06a:	70 a4                	jo     14000c010 <.reloc+0x10>
   14000c06c:	80 a4 90 a4 a0 a4 b0 	and    BYTE PTR [rax+rdx*4-0x4f5b5f5c],0xa4
   14000c073:	a4 
   14000c074:	c0 a4 d0 a4 e0 a4 f0 	shl    BYTE PTR [rax+rdx*8-0xf5b1f5c],0xa4
   14000c07b:	a4 
   14000c07c:	00 a5 10 a5 20 a5    	add    BYTE PTR [rbp-0x5adf5af0],ah
   14000c082:	30 a5 40 a5 50 a5    	xor    BYTE PTR [rbp-0x5aaf5ac0],ah
   14000c088:	00 a0 00 00 10 00    	add    BYTE PTR [rax+0x100000],ah
   14000c08e:	00 00                	add    BYTE PTR [rax],al
   14000c090:	08 a0 20 a0 38 a0    	or     BYTE PTR [rax-0x5fc75fe0],ah
   14000c096:	40                   	rex
   14000c097:	a0                   	.byte 0xa0

Disassembly of section .debug_aranges:

000000014000d000 <.debug_aranges>:
   14000d000:	2c 00                	sub    al,0x0
   14000d002:	00 00                	add    BYTE PTR [rax],al
   14000d004:	02 00                	add    al,BYTE PTR [rax]
   14000d006:	00 00                	add    BYTE PTR [rax],al
   14000d008:	00 00                	add    BYTE PTR [rax],al
   14000d00a:	08 00                	or     BYTE PTR [rax],al
   14000d00c:	00 00                	add    BYTE PTR [rax],al
   14000d00e:	00 00                	add    BYTE PTR [rax],al
   14000d010:	e0 2b                	loopne 14000d03d <.debug_aranges+0xd>
   14000d012:	00 40 01             	add    BYTE PTR [rax+0x1],al
   14000d015:	00 00                	add    BYTE PTR [rax],al
   14000d017:	00 32                	add    BYTE PTR [rdx],dh
	...

000000014000d030 <.debug_aranges>:
   14000d030:	1c 00                	sbb    al,0x0
   14000d032:	00 00                	add    BYTE PTR [rax],al
   14000d034:	02 00                	add    al,BYTE PTR [rax]
   14000d036:	28 00                	sub    BYTE PTR [rax],al
   14000d038:	00 00                	add    BYTE PTR [rax],al
   14000d03a:	08 00                	or     BYTE PTR [rax],al
	...

Disassembly of section .debug_info:

000000014000e000 <.debug_info>:
   14000e000:	24 00                	and    al,0x0
   14000e002:	00 00                	add    BYTE PTR [rax],al
   14000e004:	05 00 01 08 00       	add    eax,0x80100
   14000e009:	00 00                	add    BYTE PTR [rax],al
   14000e00b:	00 01                	add    BYTE PTR [rcx],al
   14000e00d:	00 00                	add    BYTE PTR [rax],al
   14000e00f:	00 00                	add    BYTE PTR [rax],al
   14000e011:	e0 2b                	loopne 14000e03e <.debug_info+0x16>
   14000e013:	00 40 01             	add    BYTE PTR [rax+0x1],al
   14000e016:	00 00                	add    BYTE PTR [rax],al
   14000e018:	00 32                	add    BYTE PTR [rdx],dh
   14000e01a:	00 00                	add    BYTE PTR [rax],al
   14000e01c:	00 00                	add    BYTE PTR [rax],al
   14000e01e:	38 00                	cmp    BYTE PTR [rax],al
   14000e020:	00 00                	add    BYTE PTR [rax],al
   14000e022:	97                   	xchg   edi,eax
   14000e023:	00 00                	add    BYTE PTR [rax],al
   14000e025:	00 01                	add    BYTE PTR [rcx],al
   14000e027:	80       	xor    BYTE PTR [rcx+0x500000f],0x0

000000014000e028 <.debug_info>:
   14000e028:	b1 0f                	mov    cl,0xf
   14000e02a:	00 00                	add    BYTE PTR [rax],al
   14000e02c:	05 00 01 08 14       	add    eax,0x14080100
   14000e031:	00 00                	add    BYTE PTR [rax],al
   14000e033:	00 07                	add    BYTE PTR [rdi],al
   14000e035:	47                   	rex.RXB
   14000e036:	4e 55                	rex.WRX push rbp
   14000e038:	20 43 31             	and    BYTE PTR [rbx+0x31],al
   14000e03b:	37                   	(bad)
   14000e03c:	20 31                	and    BYTE PTR [rcx],dh
   14000e03e:	33 2e                	xor    ebp,DWORD PTR [rsi]
   14000e040:	32 2e                	xor    ch,BYTE PTR [rsi]
   14000e042:	30 20                	xor    BYTE PTR [rax],ah
   14000e044:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
   14000e049:	65 3d 63 6f 72 65    	gs cmp eax,0x65726f63
   14000e04f:	32 20                	xor    ah,BYTE PTR [rax]
   14000e051:	2d 6d 61 72 63       	sub    eax,0x6372616d
   14000e056:	68 3d 6e 6f 63       	push   0x636f6e3d
   14000e05b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000e05c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000e05d:	61                   	(bad)
   14000e05e:	20 2d 67 20 2d 67    	and    BYTE PTR [rip+0x672d2067],ch        # 1a72e00cb <.debug_line_str+0x672cd034>
   14000e064:	20 2d 67 20 2d 4f    	and    BYTE PTR [rip+0x4f2d2067],ch        # 18f2e00d1 <.debug_line_str+0x4f2cd03a>
   14000e06a:	32 20                	xor    ah,BYTE PTR [rax]
   14000e06c:	2d 4f 32 20 2d       	sub    eax,0x2d20324f
   14000e071:	4f 32 20             	rex.WRXB xor r12b,BYTE PTR [r8]
   14000e074:	2d 66 6e 6f 2d       	sub    eax,0x2d6f6e66
   14000e079:	69 64 65 6e 74 20 2d 	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x662d2074
   14000e080:	66 
   14000e081:	50                   	push   rax
   14000e082:	49                   	rex.WB
   14000e083:	43 20 2d 66 62 75 69 	rex.XB and BYTE PTR [rip+0x69756266],bpl        # 1a97642f0 <.debug_line_str+0x69751259>
   14000e08a:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000e08b:	64 69 6e 67 2d 6c 69 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x62696c2d
   14000e092:	62 
   14000e093:	67 63 63 20          	movsxd esp,DWORD PTR [ebx+0x20]
   14000e097:	2d 66 6e 6f 2d       	sub    eax,0x2d6f6e66
   14000e09c:	73 74                	jae    14000e112 <.debug_info+0xea>
   14000e09e:	61                   	(bad)
   14000e09f:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
   14000e0a2:	70 72                	jo     14000e116 <.debug_info+0xee>
   14000e0a4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000e0a5:	74 65                	je     14000e10c <.debug_info+0xe4>
   14000e0a7:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000e0ab:	00 1d 97 00 00 00    	add    BYTE PTR [rip+0x97],bl        # 14000e148 <.debug_info+0x120>
   14000e0b1:	c4                   	(bad)
   14000e0b2:	00 00                	add    BYTE PTR [rax],al
   14000e0b4:	00 5c 00 00          	add    BYTE PTR [rax+rax*1+0x0],bl
   14000e0b8:	00 02                	add    BYTE PTR [rdx],al
   14000e0ba:	01 06                	add    DWORD PTR [rsi],eax
   14000e0bc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
   14000e0bf:	72 00                	jb     14000e0c1 <.debug_info+0x99>
   14000e0c1:	02 08                	add    cl,BYTE PTR [rax]
   14000e0c3:	07                   	(bad)
   14000e0c4:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000e0c5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000e0c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000e0c7:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
   14000e0cc:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
   14000e0d0:	73 69                	jae    14000e13b <.debug_info+0x113>
   14000e0d2:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000e0d4:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
   14000e0d9:	74 00                	je     14000e0db <.debug_info+0xb3>
   14000e0db:	02 08                	add    cl,BYTE PTR [rax]
   14000e0dd:	05 6c 6f 6e 67       	add    eax,0x676e6f6c
   14000e0e2:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14000e0e6:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
   14000e0ea:	74 00                	je     14000e0ec <.debug_info+0xc4>
   14000e0ec:	02 02                	add    al,BYTE PTR [rdx]
   14000e0ee:	07                   	(bad)
   14000e0ef:	73 68                	jae    14000e159 <.debug_info+0x131>
   14000e0f1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000e0f2:	72 74                	jb     14000e168 <.debug_info+0x140>
   14000e0f4:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
   14000e0f7:	73 69                	jae    14000e162 <.debug_info+0x13a>
   14000e0f9:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000e0fb:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
   14000e100:	74 00                	je     14000e102 <.debug_info+0xda>
   14000e102:	02 04 05 69 6e 74 00 	add    al,BYTE PTR [rax*1+0x746e69]
   14000e109:	02 04 05 6c 6f 6e 67 	add    al,BYTE PTR [rax*1+0x676e6f6c]
   14000e110:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
   14000e113:	74 00                	je     14000e115 <.debug_info+0xed>
   14000e115:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
   14000e118:	75 6e                	jne    14000e188 <.debug_info+0x160>
   14000e11a:	73 69                	jae    14000e185 <.debug_info+0x15d>
   14000e11c:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000e11e:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
   14000e123:	74 00                	je     14000e125 <.debug_info+0xfd>
   14000e125:	02 10                	add    dl,BYTE PTR [rax]
   14000e127:	04 6c                	add    al,0x6c
   14000e129:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000e12a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000e12b:	67 20 64 6f 75       	and    BYTE PTR [edi+ebp*2+0x75],ah
   14000e130:	62                   	(bad)
   14000e131:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000e132:	65 00 02             	add    BYTE PTR gs:[rdx],al
   14000e135:	01 08                	add    DWORD PTR [rax],ecx
   14000e137:	75 6e                	jne    14000e1a7 <.debug_info+0x17f>
   14000e139:	73 69                	jae    14000e1a4 <.debug_info+0x17c>
   14000e13b:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000e13d:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
   14000e142:	61                   	(bad)
   14000e143:	72 00                	jb     14000e145 <.debug_info+0x11d>
   14000e145:	02 08                	add    cl,BYTE PTR [rax]
   14000e147:	04 64                	add    al,0x64
   14000e149:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000e14a:	75 62                	jne    14000e1ae <.debug_info+0x186>
   14000e14c:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000e14d:	65 00 02             	add    BYTE PTR gs:[rdx],al
   14000e150:	04 04                	add    al,0x4
   14000e152:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
   14000e154:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000e155:	61                   	(bad)
   14000e156:	74 00                	je     14000e158 <.debug_info+0x130>
   14000e158:	08 08                	or     BYTE PTR [rax],cl
   14000e15a:	36 01 00             	ss add DWORD PTR [rax],eax
   14000e15d:	00 09                	add    BYTE PTR [rcx],cl
   14000e15f:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
   14000e162:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000e163:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000e164:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000e165:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
   14000e169:	73 69                	jae    14000e1d4 <.debug_info+0x1ac>
   14000e16b:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000e16d:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
   14000e172:	74 00                	je     14000e174 <.debug_info+0x14c>
   14000e174:	02 02                	add    al,BYTE PTR [rdx]
   14000e176:	05 73 68 6f 72       	add    eax,0x726f6873
   14000e17b:	74 20                	je     14000e19d <.debug_info+0x175>
   14000e17d:	69 6e 74 00 03 69 78 	imul   ebp,DWORD PTR [rsi+0x74],0x78690300
   14000e184:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e186:	5f                   	pop    rdi
   14000e187:	74 75                	je     14000e1fe <.debug_info+0x1d6>
   14000e189:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000e18a:	65 5f                	gs pop rdi
   14000e18c:	69 6e 64 69 63 65 73 	imul   ebp,DWORD PTR [rsi+0x64],0x73656369
   14000e193:	00 ed                	add    ch,ch
   14000e195:	00 00                	add    BYTE PTR [rax],al
   14000e197:	00 21                	add    BYTE PTR [rcx],ah
   14000e199:	01 03                	add    DWORD PTR [rbx],eax
   14000e19b:	0e                   	(bad)
   14000e19c:	00 00                	add    BYTE PTR [rax],al
   14000e19e:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e1a1:	36 5f                	ss pop rdi
   14000e1a3:	54                   	push   rsp
   14000e1a4:	55                   	push   rbp
   14000e1a5:	4e                   	rex.WRX
   14000e1a6:	45 5f                	rex.RB pop r15
   14000e1a8:	53                   	push   rbx
   14000e1a9:	43                   	rex.XB
   14000e1aa:	48                   	rex.W
   14000e1ab:	45                   	rex.RB
   14000e1ac:	44 55                	rex.R push rbp
   14000e1ae:	4c                   	rex.WR
   14000e1af:	45 00 00             	add    BYTE PTR [r8],r8b
   14000e1b2:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e1b5:	36 5f                	ss pop rdi
   14000e1b7:	54                   	push   rsp
   14000e1b8:	55                   	push   rbp
   14000e1b9:	4e                   	rex.WRX
   14000e1ba:	45 5f                	rex.RB pop r15
   14000e1bc:	50                   	push   rax
   14000e1bd:	41 52                	push   r10
   14000e1bf:	54                   	push   rsp
   14000e1c0:	49                   	rex.WB
   14000e1c1:	41                   	rex.B
   14000e1c2:	4c 5f                	rex.WR pop rdi
   14000e1c4:	52                   	push   rdx
   14000e1c5:	45                   	rex.RB
   14000e1c6:	47 5f                	rex.RXB pop r15
   14000e1c8:	44                   	rex.R
   14000e1c9:	45 50                	rex.RB push r8
   14000e1cb:	45                   	rex.RB
   14000e1cc:	4e                   	rex.WRX
   14000e1cd:	44                   	rex.R
   14000e1ce:	45                   	rex.RB
   14000e1cf:	4e                   	rex.WRX
   14000e1d0:	43 59                	rex.XB pop r9
   14000e1d2:	00 01                	add    BYTE PTR [rcx],al
   14000e1d4:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e1d7:	36 5f                	ss pop rdi
   14000e1d9:	54                   	push   rsp
   14000e1da:	55                   	push   rbp
   14000e1db:	4e                   	rex.WRX
   14000e1dc:	45 5f                	rex.RB pop r15
   14000e1de:	53                   	push   rbx
   14000e1df:	53                   	push   rbx
   14000e1e0:	45 5f                	rex.RB pop r15
   14000e1e2:	50                   	push   rax
   14000e1e3:	41 52                	push   r10
   14000e1e5:	54                   	push   rsp
   14000e1e6:	49                   	rex.WB
   14000e1e7:	41                   	rex.B
   14000e1e8:	4c 5f                	rex.WR pop rdi
   14000e1ea:	52                   	push   rdx
   14000e1eb:	45                   	rex.RB
   14000e1ec:	47 5f                	rex.RXB pop r15
   14000e1ee:	44                   	rex.R
   14000e1ef:	45 50                	rex.RB push r8
   14000e1f1:	45                   	rex.RB
   14000e1f2:	4e                   	rex.WRX
   14000e1f3:	44                   	rex.R
   14000e1f4:	45                   	rex.RB
   14000e1f5:	4e                   	rex.WRX
   14000e1f6:	43 59                	rex.XB pop r9
   14000e1f8:	00 02                	add    BYTE PTR [rdx],al
   14000e1fa:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e1fd:	36 5f                	ss pop rdi
   14000e1ff:	54                   	push   rsp
   14000e200:	55                   	push   rbp
   14000e201:	4e                   	rex.WRX
   14000e202:	45 5f                	rex.RB pop r15
   14000e204:	53                   	push   rbx
   14000e205:	53                   	push   rbx
   14000e206:	45 5f                	rex.RB pop r15
   14000e208:	50                   	push   rax
   14000e209:	41 52                	push   r10
   14000e20b:	54                   	push   rsp
   14000e20c:	49                   	rex.WB
   14000e20d:	41                   	rex.B
   14000e20e:	4c 5f                	rex.WR pop rdi
   14000e210:	52                   	push   rdx
   14000e211:	45                   	rex.RB
   14000e212:	47 5f                	rex.RXB pop r15
   14000e214:	46 50                	rex.RX push rax
   14000e216:	5f                   	pop    rdi
   14000e217:	43                   	rex.XB
   14000e218:	4f                   	rex.WRXB
   14000e219:	4e 56                	rex.WRX push rsi
   14000e21b:	45 52                	rex.RB push r10
   14000e21d:	54                   	push   rsp
   14000e21e:	53                   	push   rbx
   14000e21f:	5f                   	pop    rdi
   14000e220:	44                   	rex.R
   14000e221:	45 50                	rex.RB push r8
   14000e223:	45                   	rex.RB
   14000e224:	4e                   	rex.WRX
   14000e225:	44                   	rex.R
   14000e226:	45                   	rex.RB
   14000e227:	4e                   	rex.WRX
   14000e228:	43 59                	rex.XB pop r9
   14000e22a:	00 03                	add    BYTE PTR [rbx],al
   14000e22c:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e22f:	36 5f                	ss pop rdi
   14000e231:	54                   	push   rsp
   14000e232:	55                   	push   rbp
   14000e233:	4e                   	rex.WRX
   14000e234:	45 5f                	rex.RB pop r15
   14000e236:	53                   	push   rbx
   14000e237:	53                   	push   rbx
   14000e238:	45 5f                	rex.RB pop r15
   14000e23a:	50                   	push   rax
   14000e23b:	41 52                	push   r10
   14000e23d:	54                   	push   rsp
   14000e23e:	49                   	rex.WB
   14000e23f:	41                   	rex.B
   14000e240:	4c 5f                	rex.WR pop rdi
   14000e242:	52                   	push   rdx
   14000e243:	45                   	rex.RB
   14000e244:	47 5f                	rex.RXB pop r15
   14000e246:	43                   	rex.XB
   14000e247:	4f                   	rex.WRXB
   14000e248:	4e 56                	rex.WRX push rsi
   14000e24a:	45 52                	rex.RB push r10
   14000e24c:	54                   	push   rsp
   14000e24d:	53                   	push   rbx
   14000e24e:	5f                   	pop    rdi
   14000e24f:	44                   	rex.R
   14000e250:	45 50                	rex.RB push r8
   14000e252:	45                   	rex.RB
   14000e253:	4e                   	rex.WRX
   14000e254:	44                   	rex.R
   14000e255:	45                   	rex.RB
   14000e256:	4e                   	rex.WRX
   14000e257:	43 59                	rex.XB pop r9
   14000e259:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
   14000e25c:	58                   	pop    rax
   14000e25d:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e25f:	5f                   	pop    rdi
   14000e260:	54                   	push   rsp
   14000e261:	55                   	push   rbp
   14000e262:	4e                   	rex.WRX
   14000e263:	45 5f                	rex.RB pop r15
   14000e265:	44                   	rex.R
   14000e266:	45 53                	rex.RB push r11
   14000e268:	54                   	push   rsp
   14000e269:	5f                   	pop    rdi
   14000e26a:	46                   	rex.RX
   14000e26b:	41                   	rex.B
   14000e26c:	4c 53                	rex.WR push rbx
   14000e26e:	45 5f                	rex.RB pop r15
   14000e270:	44                   	rex.R
   14000e271:	45 50                	rex.RB push r8
   14000e273:	5f                   	pop    rdi
   14000e274:	46                   	rex.RX
   14000e275:	4f 52                	rex.WRXB push r10
   14000e277:	5f                   	pop    rdi
   14000e278:	47                   	rex.RXB
   14000e279:	4c                   	rex.WR
   14000e27a:	43 00 05 01 58 38 36 	rex.XB add BYTE PTR [rip+0x36385801],al        # 176393a82 <.debug_line_str+0x363809eb>
   14000e281:	5f                   	pop    rdi
   14000e282:	54                   	push   rsp
   14000e283:	55                   	push   rbp
   14000e284:	4e                   	rex.WRX
   14000e285:	45 5f                	rex.RB pop r15
   14000e287:	53                   	push   rbx
   14000e288:	53                   	push   rbx
   14000e289:	45 5f                	rex.RB pop r15
   14000e28b:	53                   	push   rbx
   14000e28c:	50                   	push   rax
   14000e28d:	4c                   	rex.WR
   14000e28e:	49 54                	rex.WB push r12
   14000e290:	5f                   	pop    rdi
   14000e291:	52                   	push   rdx
   14000e292:	45                   	rex.RB
   14000e293:	47 53                	rex.RXB push r11
   14000e295:	00 06                	add    BYTE PTR [rsi],al
   14000e297:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e29a:	36 5f                	ss pop rdi
   14000e29c:	54                   	push   rsp
   14000e29d:	55                   	push   rbp
   14000e29e:	4e                   	rex.WRX
   14000e29f:	45 5f                	rex.RB pop r15
   14000e2a1:	50                   	push   rax
   14000e2a2:	41 52                	push   r10
   14000e2a4:	54                   	push   rsp
   14000e2a5:	49                   	rex.WB
   14000e2a6:	41                   	rex.B
   14000e2a7:	4c 5f                	rex.WR pop rdi
   14000e2a9:	46                   	rex.RX
   14000e2aa:	4c                   	rex.WR
   14000e2ab:	41                   	rex.B
   14000e2ac:	47 5f                	rex.RXB pop r15
   14000e2ae:	52                   	push   rdx
   14000e2af:	45                   	rex.RB
   14000e2b0:	47 5f                	rex.RXB pop r15
   14000e2b2:	53                   	push   rbx
   14000e2b3:	54                   	push   rsp
   14000e2b4:	41                   	rex.B
   14000e2b5:	4c                   	rex.WR
   14000e2b6:	4c 00 07             	rex.WR add BYTE PTR [rdi],r8b
   14000e2b9:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e2bc:	36 5f                	ss pop rdi
   14000e2be:	54                   	push   rsp
   14000e2bf:	55                   	push   rbp
   14000e2c0:	4e                   	rex.WRX
   14000e2c1:	45 5f                	rex.RB pop r15
   14000e2c3:	4d                   	rex.WRB
   14000e2c4:	4f 56                	rex.WRXB push r14
   14000e2c6:	58                   	pop    rax
   14000e2c7:	00 08                	add    BYTE PTR [rax],cl
   14000e2c9:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e2cc:	36 5f                	ss pop rdi
   14000e2ce:	54                   	push   rsp
   14000e2cf:	55                   	push   rbp
   14000e2d0:	4e                   	rex.WRX
   14000e2d1:	45 5f                	rex.RB pop r15
   14000e2d3:	4d                   	rex.WRB
   14000e2d4:	45                   	rex.RB
   14000e2d5:	4d                   	rex.WRB
   14000e2d6:	4f 52                	rex.WRXB push r10
   14000e2d8:	59                   	pop    rcx
   14000e2d9:	5f                   	pop    rdi
   14000e2da:	4d                   	rex.WRB
   14000e2db:	49 53                	rex.WB push r11
   14000e2dd:	4d                   	rex.WRB
   14000e2de:	41 54                	push   r12
   14000e2e0:	43                   	rex.XB
   14000e2e1:	48 5f                	rex.W pop rdi
   14000e2e3:	53                   	push   rbx
   14000e2e4:	54                   	push   rsp
   14000e2e5:	41                   	rex.B
   14000e2e6:	4c                   	rex.WR
   14000e2e7:	4c 00 09             	rex.WR add BYTE PTR [rcx],r9b
   14000e2ea:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e2ed:	36 5f                	ss pop rdi
   14000e2ef:	54                   	push   rsp
   14000e2f0:	55                   	push   rbp
   14000e2f1:	4e                   	rex.WRX
   14000e2f2:	45 5f                	rex.RB pop r15
   14000e2f4:	46 55                	rex.RX push rbp
   14000e2f6:	53                   	push   rbx
   14000e2f7:	45 5f                	rex.RB pop r15
   14000e2f9:	43                   	rex.XB
   14000e2fa:	4d 50                	rex.WRB push r8
   14000e2fc:	5f                   	pop    rdi
   14000e2fd:	41                   	rex.B
   14000e2fe:	4e                   	rex.WRX
   14000e2ff:	44 5f                	rex.R pop rdi
   14000e301:	42 52                	rex.X push rdx
   14000e303:	41                   	rex.B
   14000e304:	4e                   	rex.WRX
   14000e305:	43                   	rex.XB
   14000e306:	48 5f                	rex.W pop rdi
   14000e308:	33 32                	xor    esi,DWORD PTR [rdx]
   14000e30a:	00 0a                	add    BYTE PTR [rdx],cl
   14000e30c:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e30f:	36 5f                	ss pop rdi
   14000e311:	54                   	push   rsp
   14000e312:	55                   	push   rbp
   14000e313:	4e                   	rex.WRX
   14000e314:	45 5f                	rex.RB pop r15
   14000e316:	46 55                	rex.RX push rbp
   14000e318:	53                   	push   rbx
   14000e319:	45 5f                	rex.RB pop r15
   14000e31b:	43                   	rex.XB
   14000e31c:	4d 50                	rex.WRB push r8
   14000e31e:	5f                   	pop    rdi
   14000e31f:	41                   	rex.B
   14000e320:	4e                   	rex.WRX
   14000e321:	44 5f                	rex.R pop rdi
   14000e323:	42 52                	rex.X push rdx
   14000e325:	41                   	rex.B
   14000e326:	4e                   	rex.WRX
   14000e327:	43                   	rex.XB
   14000e328:	48 5f                	rex.W pop rdi
   14000e32a:	36 34 00             	ss xor al,0x0
   14000e32d:	0b 01                	or     eax,DWORD PTR [rcx]
   14000e32f:	58                   	pop    rax
   14000e330:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e332:	5f                   	pop    rdi
   14000e333:	54                   	push   rsp
   14000e334:	55                   	push   rbp
   14000e335:	4e                   	rex.WRX
   14000e336:	45 5f                	rex.RB pop r15
   14000e338:	46 55                	rex.RX push rbp
   14000e33a:	53                   	push   rbx
   14000e33b:	45 5f                	rex.RB pop r15
   14000e33d:	43                   	rex.XB
   14000e33e:	4d 50                	rex.WRB push r8
   14000e340:	5f                   	pop    rdi
   14000e341:	41                   	rex.B
   14000e342:	4e                   	rex.WRX
   14000e343:	44 5f                	rex.R pop rdi
   14000e345:	42 52                	rex.X push rdx
   14000e347:	41                   	rex.B
   14000e348:	4e                   	rex.WRX
   14000e349:	43                   	rex.XB
   14000e34a:	48 5f                	rex.W pop rdi
   14000e34c:	53                   	push   rbx
   14000e34d:	4f                   	rex.WRXB
   14000e34e:	46                   	rex.RX
   14000e34f:	4c                   	rex.WR
   14000e350:	41                   	rex.B
   14000e351:	47 53                	rex.RXB push r11
   14000e353:	00 0c 01             	add    BYTE PTR [rcx+rax*1],cl
   14000e356:	58                   	pop    rax
   14000e357:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e359:	5f                   	pop    rdi
   14000e35a:	54                   	push   rsp
   14000e35b:	55                   	push   rbp
   14000e35c:	4e                   	rex.WRX
   14000e35d:	45 5f                	rex.RB pop r15
   14000e35f:	46 55                	rex.RX push rbp
   14000e361:	53                   	push   rbx
   14000e362:	45 5f                	rex.RB pop r15
   14000e364:	41                   	rex.B
   14000e365:	4c 55                	rex.WR push rbp
   14000e367:	5f                   	pop    rdi
   14000e368:	41                   	rex.B
   14000e369:	4e                   	rex.WRX
   14000e36a:	44 5f                	rex.R pop rdi
   14000e36c:	42 52                	rex.X push rdx
   14000e36e:	41                   	rex.B
   14000e36f:	4e                   	rex.WRX
   14000e370:	43                   	rex.XB
   14000e371:	48 00 0d 01 58 38 36 	rex.W add BYTE PTR [rip+0x36385801],cl        # 176393b79 <.debug_line_str+0x36380ae2>
   14000e378:	5f                   	pop    rdi
   14000e379:	54                   	push   rsp
   14000e37a:	55                   	push   rbp
   14000e37b:	4e                   	rex.WRX
   14000e37c:	45 5f                	rex.RB pop r15
   14000e37e:	41                   	rex.B
   14000e37f:	43                   	rex.XB
   14000e380:	43 55                	rex.XB push r13
   14000e382:	4d 55                	rex.WRB push r13
   14000e384:	4c                   	rex.WR
   14000e385:	41 54                	push   r12
   14000e387:	45 5f                	rex.RB pop r15
   14000e389:	4f 55                	rex.WRXB push r13
   14000e38b:	54                   	push   rsp
   14000e38c:	47                   	rex.RXB
   14000e38d:	4f                   	rex.WRXB
   14000e38e:	49                   	rex.WB
   14000e38f:	4e                   	rex.WRX
   14000e390:	47 5f                	rex.RXB pop r15
   14000e392:	41 52                	push   r10
   14000e394:	47 53                	rex.RXB push r11
   14000e396:	00 0e                	add    BYTE PTR [rsi],cl
   14000e398:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e39b:	36 5f                	ss pop rdi
   14000e39d:	54                   	push   rsp
   14000e39e:	55                   	push   rbp
   14000e39f:	4e                   	rex.WRX
   14000e3a0:	45 5f                	rex.RB pop r15
   14000e3a2:	50                   	push   rax
   14000e3a3:	52                   	push   rdx
   14000e3a4:	4f                   	rex.WRXB
   14000e3a5:	4c                   	rex.WR
   14000e3a6:	4f                   	rex.WRXB
   14000e3a7:	47 55                	rex.RXB push r13
   14000e3a9:	45 5f                	rex.RB pop r15
   14000e3ab:	55                   	push   rbp
   14000e3ac:	53                   	push   rbx
   14000e3ad:	49                   	rex.WB
   14000e3ae:	4e                   	rex.WRX
   14000e3af:	47 5f                	rex.RXB pop r15
   14000e3b1:	4d                   	rex.WRB
   14000e3b2:	4f 56                	rex.WRXB push r14
   14000e3b4:	45 00 0f             	add    BYTE PTR [r15],r9b
   14000e3b7:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e3ba:	36 5f                	ss pop rdi
   14000e3bc:	54                   	push   rsp
   14000e3bd:	55                   	push   rbp
   14000e3be:	4e                   	rex.WRX
   14000e3bf:	45 5f                	rex.RB pop r15
   14000e3c1:	45 50                	rex.RB push r8
   14000e3c3:	49                   	rex.WB
   14000e3c4:	4c                   	rex.WR
   14000e3c5:	4f                   	rex.WRXB
   14000e3c6:	47 55                	rex.RXB push r13
   14000e3c8:	45 5f                	rex.RB pop r15
   14000e3ca:	55                   	push   rbp
   14000e3cb:	53                   	push   rbx
   14000e3cc:	49                   	rex.WB
   14000e3cd:	4e                   	rex.WRX
   14000e3ce:	47 5f                	rex.RXB pop r15
   14000e3d0:	4d                   	rex.WRB
   14000e3d1:	4f 56                	rex.WRXB push r14
   14000e3d3:	45 00 10             	add    BYTE PTR [r8],r10b
   14000e3d6:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e3d9:	36 5f                	ss pop rdi
   14000e3db:	54                   	push   rsp
   14000e3dc:	55                   	push   rbp
   14000e3dd:	4e                   	rex.WRX
   14000e3de:	45 5f                	rex.RB pop r15
   14000e3e0:	55                   	push   rbp
   14000e3e1:	53                   	push   rbx
   14000e3e2:	45 5f                	rex.RB pop r15
   14000e3e4:	4c                   	rex.WR
   14000e3e5:	45                   	rex.RB
   14000e3e6:	41 56                	push   r14
   14000e3e8:	45 00 11             	add    BYTE PTR [r9],r10b
   14000e3eb:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e3ee:	36 5f                	ss pop rdi
   14000e3f0:	54                   	push   rsp
   14000e3f1:	55                   	push   rbp
   14000e3f2:	4e                   	rex.WRX
   14000e3f3:	45 5f                	rex.RB pop r15
   14000e3f5:	50                   	push   rax
   14000e3f6:	55                   	push   rbp
   14000e3f7:	53                   	push   rbx
   14000e3f8:	48 5f                	rex.W pop rdi
   14000e3fa:	4d                   	rex.WRB
   14000e3fb:	45                   	rex.RB
   14000e3fc:	4d                   	rex.WRB
   14000e3fd:	4f 52                	rex.WRXB push r10
   14000e3ff:	59                   	pop    rcx
   14000e400:	00 12                	add    BYTE PTR [rdx],dl
   14000e402:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e405:	36 5f                	ss pop rdi
   14000e407:	54                   	push   rsp
   14000e408:	55                   	push   rbp
   14000e409:	4e                   	rex.WRX
   14000e40a:	45 5f                	rex.RB pop r15
   14000e40c:	53                   	push   rbx
   14000e40d:	49                   	rex.WB
   14000e40e:	4e                   	rex.WRX
   14000e40f:	47                   	rex.RXB
   14000e410:	4c                   	rex.WR
   14000e411:	45 5f                	rex.RB pop r15
   14000e413:	50                   	push   rax
   14000e414:	55                   	push   rbp
   14000e415:	53                   	push   rbx
   14000e416:	48 00 13             	rex.W add BYTE PTR [rbx],dl
   14000e419:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e41c:	36 5f                	ss pop rdi
   14000e41e:	54                   	push   rsp
   14000e41f:	55                   	push   rbp
   14000e420:	4e                   	rex.WRX
   14000e421:	45 5f                	rex.RB pop r15
   14000e423:	44                   	rex.R
   14000e424:	4f 55                	rex.WRXB push r13
   14000e426:	42                   	rex.X
   14000e427:	4c                   	rex.WR
   14000e428:	45 5f                	rex.RB pop r15
   14000e42a:	50                   	push   rax
   14000e42b:	55                   	push   rbp
   14000e42c:	53                   	push   rbx
   14000e42d:	48 00 14 01          	rex.W add BYTE PTR [rcx+rax*1],dl
   14000e431:	58                   	pop    rax
   14000e432:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e434:	5f                   	pop    rdi
   14000e435:	54                   	push   rsp
   14000e436:	55                   	push   rbp
   14000e437:	4e                   	rex.WRX
   14000e438:	45 5f                	rex.RB pop r15
   14000e43a:	53                   	push   rbx
   14000e43b:	49                   	rex.WB
   14000e43c:	4e                   	rex.WRX
   14000e43d:	47                   	rex.RXB
   14000e43e:	4c                   	rex.WR
   14000e43f:	45 5f                	rex.RB pop r15
   14000e441:	50                   	push   rax
   14000e442:	4f 50                	rex.WRXB push r8
   14000e444:	00 15 01 58 38 36    	add    BYTE PTR [rip+0x36385801],dl        # 176393c4b <.debug_line_str+0x36380bb4>
   14000e44a:	5f                   	pop    rdi
   14000e44b:	54                   	push   rsp
   14000e44c:	55                   	push   rbp
   14000e44d:	4e                   	rex.WRX
   14000e44e:	45 5f                	rex.RB pop r15
   14000e450:	44                   	rex.R
   14000e451:	4f 55                	rex.WRXB push r13
   14000e453:	42                   	rex.X
   14000e454:	4c                   	rex.WR
   14000e455:	45 5f                	rex.RB pop r15
   14000e457:	50                   	push   rax
   14000e458:	4f 50                	rex.WRXB push r8
   14000e45a:	00 16                	add    BYTE PTR [rsi],dl
   14000e45c:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e45f:	36 5f                	ss pop rdi
   14000e461:	54                   	push   rsp
   14000e462:	55                   	push   rbp
   14000e463:	4e                   	rex.WRX
   14000e464:	45 5f                	rex.RB pop r15
   14000e466:	50                   	push   rax
   14000e467:	41                   	rex.B
   14000e468:	44 5f                	rex.R pop rdi
   14000e46a:	53                   	push   rbx
   14000e46b:	48                   	rex.W
   14000e46c:	4f 52                	rex.WRXB push r10
   14000e46e:	54                   	push   rsp
   14000e46f:	5f                   	pop    rdi
   14000e470:	46 55                	rex.RX push rbp
   14000e472:	4e                   	rex.WRX
   14000e473:	43 54                	rex.XB push r12
   14000e475:	49                   	rex.WB
   14000e476:	4f                   	rex.WRXB
   14000e477:	4e 00 17             	rex.WRX add BYTE PTR [rdi],r10b
   14000e47a:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e47d:	36 5f                	ss pop rdi
   14000e47f:	54                   	push   rsp
   14000e480:	55                   	push   rbp
   14000e481:	4e                   	rex.WRX
   14000e482:	45 5f                	rex.RB pop r15
   14000e484:	50                   	push   rax
   14000e485:	41                   	rex.B
   14000e486:	44 5f                	rex.R pop rdi
   14000e488:	52                   	push   rdx
   14000e489:	45 54                	rex.RB push r12
   14000e48b:	55                   	push   rbp
   14000e48c:	52                   	push   rdx
   14000e48d:	4e 53                	rex.WRX push rbx
   14000e48f:	00 18                	add    BYTE PTR [rax],bl
   14000e491:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e494:	36 5f                	ss pop rdi
   14000e496:	54                   	push   rsp
   14000e497:	55                   	push   rbp
   14000e498:	4e                   	rex.WRX
   14000e499:	45 5f                	rex.RB pop r15
   14000e49b:	46                   	rex.RX
   14000e49c:	4f 55                	rex.WRXB push r13
   14000e49e:	52                   	push   rdx
   14000e49f:	5f                   	pop    rdi
   14000e4a0:	4a 55                	rex.WX push rbp
   14000e4a2:	4d 50                	rex.WRB push r8
   14000e4a4:	5f                   	pop    rdi
   14000e4a5:	4c                   	rex.WR
   14000e4a6:	49                   	rex.WB
   14000e4a7:	4d                   	rex.WRB
   14000e4a8:	49 54                	rex.WB push r12
   14000e4aa:	00 19                	add    BYTE PTR [rcx],bl
   14000e4ac:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e4af:	36 5f                	ss pop rdi
   14000e4b1:	54                   	push   rsp
   14000e4b2:	55                   	push   rbp
   14000e4b3:	4e                   	rex.WRX
   14000e4b4:	45 5f                	rex.RB pop r15
   14000e4b6:	53                   	push   rbx
   14000e4b7:	4f                   	rex.WRXB
   14000e4b8:	46 54                	rex.RX push rsp
   14000e4ba:	57                   	push   rdi
   14000e4bb:	41 52                	push   r10
   14000e4bd:	45 5f                	rex.RB pop r15
   14000e4bf:	50                   	push   rax
   14000e4c0:	52                   	push   rdx
   14000e4c1:	45                   	rex.RB
   14000e4c2:	46                   	rex.RX
   14000e4c3:	45 54                	rex.RB push r12
   14000e4c5:	43                   	rex.XB
   14000e4c6:	48                   	rex.W
   14000e4c7:	49                   	rex.WB
   14000e4c8:	4e                   	rex.WRX
   14000e4c9:	47 5f                	rex.RXB pop r15
   14000e4cb:	42                   	rex.X
   14000e4cc:	45                   	rex.RB
   14000e4cd:	4e                   	rex.WRX
   14000e4ce:	45                   	rex.RB
   14000e4cf:	46                   	rex.RX
   14000e4d0:	49                   	rex.WB
   14000e4d1:	43                   	rex.XB
   14000e4d2:	49                   	rex.WB
   14000e4d3:	41                   	rex.B
   14000e4d4:	4c 00 1a             	rex.WR add BYTE PTR [rdx],r11b
   14000e4d7:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e4da:	36 5f                	ss pop rdi
   14000e4dc:	54                   	push   rsp
   14000e4dd:	55                   	push   rbp
   14000e4de:	4e                   	rex.WRX
   14000e4df:	45 5f                	rex.RB pop r15
   14000e4e1:	4c                   	rex.WR
   14000e4e2:	43 50                	rex.XB push r8
   14000e4e4:	5f                   	pop    rdi
   14000e4e5:	53                   	push   rbx
   14000e4e6:	54                   	push   rsp
   14000e4e7:	41                   	rex.B
   14000e4e8:	4c                   	rex.WR
   14000e4e9:	4c 00 1b             	rex.WR add BYTE PTR [rbx],r11b
   14000e4ec:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e4ef:	36 5f                	ss pop rdi
   14000e4f1:	54                   	push   rsp
   14000e4f2:	55                   	push   rbp
   14000e4f3:	4e                   	rex.WRX
   14000e4f4:	45 5f                	rex.RB pop r15
   14000e4f6:	52                   	push   rdx
   14000e4f7:	45                   	rex.RB
   14000e4f8:	41                   	rex.B
   14000e4f9:	44 5f                	rex.R pop rdi
   14000e4fb:	4d                   	rex.WRB
   14000e4fc:	4f                   	rex.WRXB
   14000e4fd:	44                   	rex.R
   14000e4fe:	49                   	rex.WB
   14000e4ff:	46 59                	rex.RX pop rcx
   14000e501:	00 1c 01             	add    BYTE PTR [rcx+rax*1],bl
   14000e504:	58                   	pop    rax
   14000e505:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e507:	5f                   	pop    rdi
   14000e508:	54                   	push   rsp
   14000e509:	55                   	push   rbp
   14000e50a:	4e                   	rex.WRX
   14000e50b:	45 5f                	rex.RB pop r15
   14000e50d:	55                   	push   rbp
   14000e50e:	53                   	push   rbx
   14000e50f:	45 5f                	rex.RB pop r15
   14000e511:	49                   	rex.WB
   14000e512:	4e                   	rex.WRX
   14000e513:	43                   	rex.XB
   14000e514:	44                   	rex.R
   14000e515:	45                   	rex.RB
   14000e516:	43 00 1d 01 58 38 36 	rex.XB add BYTE PTR [rip+0x36385801],bl        # 176393d1e <.debug_line_str+0x36380c87>
   14000e51d:	5f                   	pop    rdi
   14000e51e:	54                   	push   rsp
   14000e51f:	55                   	push   rbp
   14000e520:	4e                   	rex.WRX
   14000e521:	45 5f                	rex.RB pop r15
   14000e523:	49                   	rex.WB
   14000e524:	4e 54                	rex.WRX push rsp
   14000e526:	45                   	rex.RB
   14000e527:	47                   	rex.RXB
   14000e528:	45 52                	rex.RB push r10
   14000e52a:	5f                   	pop    rdi
   14000e52b:	44                   	rex.R
   14000e52c:	46                   	rex.RX
   14000e52d:	4d                   	rex.WRB
   14000e52e:	4f                   	rex.WRXB
   14000e52f:	44                   	rex.R
   14000e530:	45 5f                	rex.RB pop r15
   14000e532:	4d                   	rex.WRB
   14000e533:	4f 56                	rex.WRXB push r14
   14000e535:	45 53                	rex.RB push r11
   14000e537:	00 1e                	add    BYTE PTR [rsi],bl
   14000e539:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e53c:	36 5f                	ss pop rdi
   14000e53e:	54                   	push   rsp
   14000e53f:	55                   	push   rbp
   14000e540:	4e                   	rex.WRX
   14000e541:	45 5f                	rex.RB pop r15
   14000e543:	4f 50                	rex.WRXB push r8
   14000e545:	54                   	push   rsp
   14000e546:	5f                   	pop    rdi
   14000e547:	41                   	rex.B
   14000e548:	47 55                	rex.RXB push r13
   14000e54a:	00 1f                	add    BYTE PTR [rdi],bl
   14000e54c:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e54f:	36 5f                	ss pop rdi
   14000e551:	54                   	push   rsp
   14000e552:	55                   	push   rbp
   14000e553:	4e                   	rex.WRX
   14000e554:	45 5f                	rex.RB pop r15
   14000e556:	41 56                	push   r14
   14000e558:	4f                   	rex.WRXB
   14000e559:	49                   	rex.WB
   14000e55a:	44 5f                	rex.R pop rdi
   14000e55c:	4c                   	rex.WR
   14000e55d:	45                   	rex.RB
   14000e55e:	41 5f                	pop    r15
   14000e560:	46                   	rex.RX
   14000e561:	4f 52                	rex.WRXB push r10
   14000e563:	5f                   	pop    rdi
   14000e564:	41                   	rex.B
   14000e565:	44                   	rex.R
   14000e566:	44 52                	rex.R push rdx
   14000e568:	00 20                	add    BYTE PTR [rax],ah
   14000e56a:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e56d:	36 5f                	ss pop rdi
   14000e56f:	54                   	push   rsp
   14000e570:	55                   	push   rbp
   14000e571:	4e                   	rex.WRX
   14000e572:	45 5f                	rex.RB pop r15
   14000e574:	53                   	push   rbx
   14000e575:	4c                   	rex.WR
   14000e576:	4f 57                	rex.WRXB push r15
   14000e578:	5f                   	pop    rdi
   14000e579:	49                   	rex.WB
   14000e57a:	4d 55                	rex.WRB push r13
   14000e57c:	4c 5f                	rex.WR pop rdi
   14000e57e:	49                   	rex.WB
   14000e57f:	4d                   	rex.WRB
   14000e580:	4d 33 32             	xor    r14,QWORD PTR [r10]
   14000e583:	5f                   	pop    rdi
   14000e584:	4d                   	rex.WRB
   14000e585:	45                   	rex.RB
   14000e586:	4d 00 21             	rex.WRB add BYTE PTR [r9],r12b
   14000e589:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e58c:	36 5f                	ss pop rdi
   14000e58e:	54                   	push   rsp
   14000e58f:	55                   	push   rbp
   14000e590:	4e                   	rex.WRX
   14000e591:	45 5f                	rex.RB pop r15
   14000e593:	53                   	push   rbx
   14000e594:	4c                   	rex.WR
   14000e595:	4f 57                	rex.WRXB push r15
   14000e597:	5f                   	pop    rdi
   14000e598:	49                   	rex.WB
   14000e599:	4d 55                	rex.WRB push r13
   14000e59b:	4c 5f                	rex.WR pop rdi
   14000e59d:	49                   	rex.WB
   14000e59e:	4d                   	rex.WRB
   14000e59f:	4d 38 00             	rex.WRB cmp BYTE PTR [r8],r8b
   14000e5a2:	22 01                	and    al,BYTE PTR [rcx]
   14000e5a4:	58                   	pop    rax
   14000e5a5:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e5a7:	5f                   	pop    rdi
   14000e5a8:	54                   	push   rsp
   14000e5a9:	55                   	push   rbp
   14000e5aa:	4e                   	rex.WRX
   14000e5ab:	45 5f                	rex.RB pop r15
   14000e5ad:	41 56                	push   r14
   14000e5af:	4f                   	rex.WRXB
   14000e5b0:	49                   	rex.WB
   14000e5b1:	44 5f                	rex.R pop rdi
   14000e5b3:	4d                   	rex.WRB
   14000e5b4:	45                   	rex.RB
   14000e5b5:	4d 5f                	rex.WRB pop r15
   14000e5b7:	4f 50                	rex.WRXB push r8
   14000e5b9:	4e                   	rex.WRX
   14000e5ba:	44 5f                	rex.R pop rdi
   14000e5bc:	46                   	rex.RX
   14000e5bd:	4f 52                	rex.WRXB push r10
   14000e5bf:	5f                   	pop    rdi
   14000e5c0:	43                   	rex.XB
   14000e5c1:	4d                   	rex.WRB
   14000e5c2:	4f 56                	rex.WRXB push r14
   14000e5c4:	45 00 23             	add    BYTE PTR [r11],r12b
   14000e5c7:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e5ca:	36 5f                	ss pop rdi
   14000e5cc:	54                   	push   rsp
   14000e5cd:	55                   	push   rbp
   14000e5ce:	4e                   	rex.WRX
   14000e5cf:	45 5f                	rex.RB pop r15
   14000e5d1:	53                   	push   rbx
   14000e5d2:	49                   	rex.WB
   14000e5d3:	4e                   	rex.WRX
   14000e5d4:	47                   	rex.RXB
   14000e5d5:	4c                   	rex.WR
   14000e5d6:	45 5f                	rex.RB pop r15
   14000e5d8:	53                   	push   rbx
   14000e5d9:	54                   	push   rsp
   14000e5da:	52                   	push   rdx
   14000e5db:	49                   	rex.WB
   14000e5dc:	4e                   	rex.WRX
   14000e5dd:	47                   	rex.RXB
   14000e5de:	4f 50                	rex.WRXB push r8
   14000e5e0:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
   14000e5e3:	58                   	pop    rax
   14000e5e4:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e5e6:	5f                   	pop    rdi
   14000e5e7:	54                   	push   rsp
   14000e5e8:	55                   	push   rbp
   14000e5e9:	4e                   	rex.WRX
   14000e5ea:	45 5f                	rex.RB pop r15
   14000e5ec:	50                   	push   rax
   14000e5ed:	52                   	push   rdx
   14000e5ee:	45                   	rex.RB
   14000e5ef:	46                   	rex.RX
   14000e5f0:	45 52                	rex.RB push r10
   14000e5f2:	5f                   	pop    rdi
   14000e5f3:	4b                   	rex.WXB
   14000e5f4:	4e                   	rex.WRX
   14000e5f5:	4f 57                	rex.WRXB push r15
   14000e5f7:	4e 5f                	rex.WRX pop rdi
   14000e5f9:	52                   	push   rdx
   14000e5fa:	45 50                	rex.RB push r8
   14000e5fc:	5f                   	pop    rdi
   14000e5fd:	4d                   	rex.WRB
   14000e5fe:	4f 56                	rex.WRXB push r14
   14000e600:	53                   	push   rbx
   14000e601:	42 5f                	rex.X pop rdi
   14000e603:	53                   	push   rbx
   14000e604:	54                   	push   rsp
   14000e605:	4f 53                	rex.WRXB push r11
   14000e607:	42 00 25 01 58 38 36 	rex.X add BYTE PTR [rip+0x36385801],spl        # 176393e0f <.debug_line_str+0x36380d78>
   14000e60e:	5f                   	pop    rdi
   14000e60f:	54                   	push   rsp
   14000e610:	55                   	push   rbp
   14000e611:	4e                   	rex.WRX
   14000e612:	45 5f                	rex.RB pop r15
   14000e614:	4d                   	rex.WRB
   14000e615:	49 53                	rex.WB push r11
   14000e617:	41                   	rex.B
   14000e618:	4c                   	rex.WR
   14000e619:	49                   	rex.WB
   14000e61a:	47                   	rex.RXB
   14000e61b:	4e                   	rex.WRX
   14000e61c:	45                   	rex.RB
   14000e61d:	44 5f                	rex.R pop rdi
   14000e61f:	4d                   	rex.WRB
   14000e620:	4f 56                	rex.WRXB push r14
   14000e622:	45 5f                	rex.RB pop r15
   14000e624:	53                   	push   rbx
   14000e625:	54                   	push   rsp
   14000e626:	52                   	push   rdx
   14000e627:	49                   	rex.WB
   14000e628:	4e                   	rex.WRX
   14000e629:	47 5f                	rex.RXB pop r15
   14000e62b:	50                   	push   rax
   14000e62c:	52                   	push   rdx
   14000e62d:	4f 5f                	rex.WRXB pop r15
   14000e62f:	45 50                	rex.RB push r8
   14000e631:	49                   	rex.WB
   14000e632:	4c                   	rex.WR
   14000e633:	4f                   	rex.WRXB
   14000e634:	47 55                	rex.RXB push r13
   14000e636:	45 53                	rex.RB push r11
   14000e638:	00 26                	add    BYTE PTR [rsi],ah
   14000e63a:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e63d:	36 5f                	ss pop rdi
   14000e63f:	54                   	push   rsp
   14000e640:	55                   	push   rbp
   14000e641:	4e                   	rex.WRX
   14000e642:	45 5f                	rex.RB pop r15
   14000e644:	55                   	push   rbp
   14000e645:	53                   	push   rbx
   14000e646:	45 5f                	rex.RB pop r15
   14000e648:	53                   	push   rbx
   14000e649:	41                   	rex.B
   14000e64a:	48                   	rex.W
   14000e64b:	46 00 27             	rex.RX add BYTE PTR [rdi],r12b
   14000e64e:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e651:	36 5f                	ss pop rdi
   14000e653:	54                   	push   rsp
   14000e654:	55                   	push   rbp
   14000e655:	4e                   	rex.WRX
   14000e656:	45 5f                	rex.RB pop r15
   14000e658:	55                   	push   rbp
   14000e659:	53                   	push   rbx
   14000e65a:	45 5f                	rex.RB pop r15
   14000e65c:	43                   	rex.XB
   14000e65d:	4c 54                	rex.WR push rsp
   14000e65f:	44 00 28             	add    BYTE PTR [rax],r13b
   14000e662:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e665:	36 5f                	ss pop rdi
   14000e667:	54                   	push   rsp
   14000e668:	55                   	push   rbp
   14000e669:	4e                   	rex.WRX
   14000e66a:	45 5f                	rex.RB pop r15
   14000e66c:	55                   	push   rbp
   14000e66d:	53                   	push   rbx
   14000e66e:	45 5f                	rex.RB pop r15
   14000e670:	42 54                	rex.X push rsp
   14000e672:	00 29                	add    BYTE PTR [rcx],ch
   14000e674:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e677:	36 5f                	ss pop rdi
   14000e679:	54                   	push   rsp
   14000e67a:	55                   	push   rbp
   14000e67b:	4e                   	rex.WRX
   14000e67c:	45 5f                	rex.RB pop r15
   14000e67e:	41 56                	push   r14
   14000e680:	4f                   	rex.WRXB
   14000e681:	49                   	rex.WB
   14000e682:	44 5f                	rex.R pop rdi
   14000e684:	46                   	rex.RX
   14000e685:	41                   	rex.B
   14000e686:	4c 53                	rex.WR push rbx
   14000e688:	45 5f                	rex.RB pop r15
   14000e68a:	44                   	rex.R
   14000e68b:	45 50                	rex.RB push r8
   14000e68d:	5f                   	pop    rdi
   14000e68e:	46                   	rex.RX
   14000e68f:	4f 52                	rex.WRXB push r10
   14000e691:	5f                   	pop    rdi
   14000e692:	42                   	rex.X
   14000e693:	4d                   	rex.WRB
   14000e694:	49 00 2a             	rex.WB add BYTE PTR [r10],bpl
   14000e697:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e69a:	36 5f                	ss pop rdi
   14000e69c:	54                   	push   rsp
   14000e69d:	55                   	push   rbp
   14000e69e:	4e                   	rex.WRX
   14000e69f:	45 5f                	rex.RB pop r15
   14000e6a1:	41                   	rex.B
   14000e6a2:	44                   	rex.R
   14000e6a3:	4a 55                	rex.WX push rbp
   14000e6a5:	53                   	push   rbx
   14000e6a6:	54                   	push   rsp
   14000e6a7:	5f                   	pop    rdi
   14000e6a8:	55                   	push   rbp
   14000e6a9:	4e 52                	rex.WRX push rdx
   14000e6ab:	4f                   	rex.WRXB
   14000e6ac:	4c                   	rex.WR
   14000e6ad:	4c 00 2b             	rex.WR add BYTE PTR [rbx],r13b
   14000e6b0:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e6b3:	36 5f                	ss pop rdi
   14000e6b5:	54                   	push   rsp
   14000e6b6:	55                   	push   rbp
   14000e6b7:	4e                   	rex.WRX
   14000e6b8:	45 5f                	rex.RB pop r15
   14000e6ba:	4f                   	rex.WRXB
   14000e6bb:	4e                   	rex.WRX
   14000e6bc:	45 5f                	rex.RB pop r15
   14000e6be:	49                   	rex.WB
   14000e6bf:	46 5f                	rex.RX pop rdi
   14000e6c1:	43                   	rex.XB
   14000e6c2:	4f                   	rex.WRXB
   14000e6c3:	4e 56                	rex.WRX push rsi
   14000e6c5:	5f                   	pop    rdi
   14000e6c6:	49                   	rex.WB
   14000e6c7:	4e 53                	rex.WRX push rbx
   14000e6c9:	4e 00 2c 01          	rex.WRX add BYTE PTR [rcx+r8*1],r13b
   14000e6cd:	58                   	pop    rax
   14000e6ce:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e6d0:	5f                   	pop    rdi
   14000e6d1:	54                   	push   rsp
   14000e6d2:	55                   	push   rbp
   14000e6d3:	4e                   	rex.WRX
   14000e6d4:	45 5f                	rex.RB pop r15
   14000e6d6:	41 56                	push   r14
   14000e6d8:	4f                   	rex.WRXB
   14000e6d9:	49                   	rex.WB
   14000e6da:	44 5f                	rex.R pop rdi
   14000e6dc:	4d                   	rex.WRB
   14000e6dd:	46                   	rex.RX
   14000e6de:	45                   	rex.RB
   14000e6df:	4e                   	rex.WRX
   14000e6e0:	43                   	rex.XB
   14000e6e1:	45 00 2d 01 58 38 36 	add    BYTE PTR [rip+0x36385801],r13b        # 176393ee9 <.debug_line_str+0x36380e52>
   14000e6e8:	5f                   	pop    rdi
   14000e6e9:	54                   	push   rsp
   14000e6ea:	55                   	push   rbp
   14000e6eb:	4e                   	rex.WRX
   14000e6ec:	45 5f                	rex.RB pop r15
   14000e6ee:	45 58                	rex.RB pop r8
   14000e6f0:	50                   	push   rax
   14000e6f1:	41                   	rex.B
   14000e6f2:	4e                   	rex.WRX
   14000e6f3:	44 5f                	rex.R pop rdi
   14000e6f5:	41                   	rex.B
   14000e6f6:	42 53                	rex.X push rbx
   14000e6f8:	00 2e                	add    BYTE PTR [rsi],ch
   14000e6fa:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e6fd:	36 5f                	ss pop rdi
   14000e6ff:	54                   	push   rsp
   14000e700:	55                   	push   rbp
   14000e701:	4e                   	rex.WRX
   14000e702:	45 5f                	rex.RB pop r15
   14000e704:	55                   	push   rbp
   14000e705:	53                   	push   rbx
   14000e706:	45 5f                	rex.RB pop r15
   14000e708:	48                   	rex.W
   14000e709:	49                   	rex.WB
   14000e70a:	4d                   	rex.WRB
   14000e70b:	4f                   	rex.WRXB
   14000e70c:	44                   	rex.R
   14000e70d:	45 5f                	rex.RB pop r15
   14000e70f:	46                   	rex.RX
   14000e710:	49                   	rex.WB
   14000e711:	4f 50                	rex.WRXB push r8
   14000e713:	00 2f                	add    BYTE PTR [rdi],ch
   14000e715:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e718:	36 5f                	ss pop rdi
   14000e71a:	54                   	push   rsp
   14000e71b:	55                   	push   rbp
   14000e71c:	4e                   	rex.WRX
   14000e71d:	45 5f                	rex.RB pop r15
   14000e71f:	55                   	push   rbp
   14000e720:	53                   	push   rbx
   14000e721:	45 5f                	rex.RB pop r15
   14000e723:	53                   	push   rbx
   14000e724:	49                   	rex.WB
   14000e725:	4d                   	rex.WRB
   14000e726:	4f                   	rex.WRXB
   14000e727:	44                   	rex.R
   14000e728:	45 5f                	rex.RB pop r15
   14000e72a:	46                   	rex.RX
   14000e72b:	49                   	rex.WB
   14000e72c:	4f 50                	rex.WRXB push r8
   14000e72e:	00 30                	add    BYTE PTR [rax],dh
   14000e730:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e733:	36 5f                	ss pop rdi
   14000e735:	54                   	push   rsp
   14000e736:	55                   	push   rbp
   14000e737:	4e                   	rex.WRX
   14000e738:	45 5f                	rex.RB pop r15
   14000e73a:	55                   	push   rbp
   14000e73b:	53                   	push   rbx
   14000e73c:	45 5f                	rex.RB pop r15
   14000e73e:	46                   	rex.RX
   14000e73f:	46 52                	rex.RX push rdx
   14000e741:	45                   	rex.RB
   14000e742:	45 50                	rex.RB push r8
   14000e744:	00 31                	add    BYTE PTR [rcx],dh
   14000e746:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e749:	36 5f                	ss pop rdi
   14000e74b:	54                   	push   rsp
   14000e74c:	55                   	push   rbp
   14000e74d:	4e                   	rex.WRX
   14000e74e:	45 5f                	rex.RB pop r15
   14000e750:	45 58                	rex.RB pop r8
   14000e752:	54                   	push   rsp
   14000e753:	5f                   	pop    rdi
   14000e754:	38 30                	cmp    BYTE PTR [rax],dh
   14000e756:	33 38                	xor    edi,DWORD PTR [rax]
   14000e758:	37                   	(bad)
   14000e759:	5f                   	pop    rdi
   14000e75a:	43                   	rex.XB
   14000e75b:	4f                   	rex.WRXB
   14000e75c:	4e 53                	rex.WRX push rbx
   14000e75e:	54                   	push   rsp
   14000e75f:	41                   	rex.B
   14000e760:	4e 54                	rex.WRX push rsp
   14000e762:	53                   	push   rbx
   14000e763:	00 32                	add    BYTE PTR [rdx],dh
   14000e765:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e768:	36 5f                	ss pop rdi
   14000e76a:	54                   	push   rsp
   14000e76b:	55                   	push   rbp
   14000e76c:	4e                   	rex.WRX
   14000e76d:	45 5f                	rex.RB pop r15
   14000e76f:	47                   	rex.RXB
   14000e770:	45                   	rex.RB
   14000e771:	4e                   	rex.WRX
   14000e772:	45 52                	rex.RB push r10
   14000e774:	41                   	rex.B
   14000e775:	4c 5f                	rex.WR pop rdi
   14000e777:	52                   	push   rdx
   14000e778:	45                   	rex.RB
   14000e779:	47 53                	rex.RXB push r11
   14000e77b:	5f                   	pop    rdi
   14000e77c:	53                   	push   rbx
   14000e77d:	53                   	push   rbx
   14000e77e:	45 5f                	rex.RB pop r15
   14000e780:	53                   	push   rbx
   14000e781:	50                   	push   rax
   14000e782:	49                   	rex.WB
   14000e783:	4c                   	rex.WR
   14000e784:	4c 00 33             	rex.WR add BYTE PTR [rbx],r14b
   14000e787:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e78a:	36 5f                	ss pop rdi
   14000e78c:	54                   	push   rsp
   14000e78d:	55                   	push   rbp
   14000e78e:	4e                   	rex.WRX
   14000e78f:	45 5f                	rex.RB pop r15
   14000e791:	53                   	push   rbx
   14000e792:	53                   	push   rbx
   14000e793:	45 5f                	rex.RB pop r15
   14000e795:	55                   	push   rbp
   14000e796:	4e                   	rex.WRX
   14000e797:	41                   	rex.B
   14000e798:	4c                   	rex.WR
   14000e799:	49                   	rex.WB
   14000e79a:	47                   	rex.RXB
   14000e79b:	4e                   	rex.WRX
   14000e79c:	45                   	rex.RB
   14000e79d:	44 5f                	rex.R pop rdi
   14000e79f:	4c                   	rex.WR
   14000e7a0:	4f                   	rex.WRXB
   14000e7a1:	41                   	rex.B
   14000e7a2:	44 5f                	rex.R pop rdi
   14000e7a4:	4f 50                	rex.WRXB push r8
   14000e7a6:	54                   	push   rsp
   14000e7a7:	49                   	rex.WB
   14000e7a8:	4d                   	rex.WRB
   14000e7a9:	41                   	rex.B
   14000e7aa:	4c 00 34 01          	rex.WR add BYTE PTR [rcx+rax*1],r14b
   14000e7ae:	58                   	pop    rax
   14000e7af:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e7b1:	5f                   	pop    rdi
   14000e7b2:	54                   	push   rsp
   14000e7b3:	55                   	push   rbp
   14000e7b4:	4e                   	rex.WRX
   14000e7b5:	45 5f                	rex.RB pop r15
   14000e7b7:	53                   	push   rbx
   14000e7b8:	53                   	push   rbx
   14000e7b9:	45 5f                	rex.RB pop r15
   14000e7bb:	55                   	push   rbp
   14000e7bc:	4e                   	rex.WRX
   14000e7bd:	41                   	rex.B
   14000e7be:	4c                   	rex.WR
   14000e7bf:	49                   	rex.WB
   14000e7c0:	47                   	rex.RXB
   14000e7c1:	4e                   	rex.WRX
   14000e7c2:	45                   	rex.RB
   14000e7c3:	44 5f                	rex.R pop rdi
   14000e7c5:	53                   	push   rbx
   14000e7c6:	54                   	push   rsp
   14000e7c7:	4f 52                	rex.WRXB push r10
   14000e7c9:	45 5f                	rex.RB pop r15
   14000e7cb:	4f 50                	rex.WRXB push r8
   14000e7cd:	54                   	push   rsp
   14000e7ce:	49                   	rex.WB
   14000e7cf:	4d                   	rex.WRB
   14000e7d0:	41                   	rex.B
   14000e7d1:	4c 00 35 01 58 38 36 	rex.WR add BYTE PTR [rip+0x36385801],r14b        # 176393fd9 <.debug_line_str+0x36380f42>
   14000e7d8:	5f                   	pop    rdi
   14000e7d9:	54                   	push   rsp
   14000e7da:	55                   	push   rbp
   14000e7db:	4e                   	rex.WRX
   14000e7dc:	45 5f                	rex.RB pop r15
   14000e7de:	53                   	push   rbx
   14000e7df:	53                   	push   rbx
   14000e7e0:	45 5f                	rex.RB pop r15
   14000e7e2:	50                   	push   rax
   14000e7e3:	41                   	rex.B
   14000e7e4:	43                   	rex.XB
   14000e7e5:	4b                   	rex.WXB
   14000e7e6:	45                   	rex.RB
   14000e7e7:	44 5f                	rex.R pop rdi
   14000e7e9:	53                   	push   rbx
   14000e7ea:	49                   	rex.WB
   14000e7eb:	4e                   	rex.WRX
   14000e7ec:	47                   	rex.RXB
   14000e7ed:	4c                   	rex.WR
   14000e7ee:	45 5f                	rex.RB pop r15
   14000e7f0:	49                   	rex.WB
   14000e7f1:	4e 53                	rex.WRX push rbx
   14000e7f3:	4e 5f                	rex.WRX pop rdi
   14000e7f5:	4f 50                	rex.WRXB push r8
   14000e7f7:	54                   	push   rsp
   14000e7f8:	49                   	rex.WB
   14000e7f9:	4d                   	rex.WRB
   14000e7fa:	41                   	rex.B
   14000e7fb:	4c 00 36             	rex.WR add BYTE PTR [rsi],r14b
   14000e7fe:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e801:	36 5f                	ss pop rdi
   14000e803:	54                   	push   rsp
   14000e804:	55                   	push   rbp
   14000e805:	4e                   	rex.WRX
   14000e806:	45 5f                	rex.RB pop r15
   14000e808:	53                   	push   rbx
   14000e809:	53                   	push   rbx
   14000e80a:	45 5f                	rex.RB pop r15
   14000e80c:	54                   	push   rsp
   14000e80d:	59                   	pop    rcx
   14000e80e:	50                   	push   rax
   14000e80f:	45                   	rex.RB
   14000e810:	4c                   	rex.WR
   14000e811:	45 53                	rex.RB push r11
   14000e813:	53                   	push   rbx
   14000e814:	5f                   	pop    rdi
   14000e815:	53                   	push   rbx
   14000e816:	54                   	push   rsp
   14000e817:	4f 52                	rex.WRXB push r10
   14000e819:	45 53                	rex.RB push r11
   14000e81b:	00 37                	add    BYTE PTR [rdi],dh
   14000e81d:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e820:	36 5f                	ss pop rdi
   14000e822:	54                   	push   rsp
   14000e823:	55                   	push   rbp
   14000e824:	4e                   	rex.WRX
   14000e825:	45 5f                	rex.RB pop r15
   14000e827:	53                   	push   rbx
   14000e828:	53                   	push   rbx
   14000e829:	45 5f                	rex.RB pop r15
   14000e82b:	4c                   	rex.WR
   14000e82c:	4f                   	rex.WRXB
   14000e82d:	41                   	rex.B
   14000e82e:	44 30 5f 42          	xor    BYTE PTR [rdi+0x42],r11b
   14000e832:	59                   	pop    rcx
   14000e833:	5f                   	pop    rdi
   14000e834:	50                   	push   rax
   14000e835:	58                   	pop    rax
   14000e836:	4f 52                	rex.WRXB push r10
   14000e838:	00 38                	add    BYTE PTR [rax],bh
   14000e83a:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e83d:	36 5f                	ss pop rdi
   14000e83f:	54                   	push   rsp
   14000e840:	55                   	push   rbp
   14000e841:	4e                   	rex.WRX
   14000e842:	45 5f                	rex.RB pop r15
   14000e844:	49                   	rex.WB
   14000e845:	4e 54                	rex.WRX push rsp
   14000e847:	45 52                	rex.RB push r10
   14000e849:	5f                   	pop    rdi
   14000e84a:	55                   	push   rbp
   14000e84b:	4e                   	rex.WRX
   14000e84c:	49 54                	rex.WB push r12
   14000e84e:	5f                   	pop    rdi
   14000e84f:	4d                   	rex.WRB
   14000e850:	4f 56                	rex.WRXB push r14
   14000e852:	45 53                	rex.RB push r11
   14000e854:	5f                   	pop    rdi
   14000e855:	54                   	push   rsp
   14000e856:	4f 5f                	rex.WRXB pop r15
   14000e858:	56                   	push   rsi
   14000e859:	45                   	rex.RB
   14000e85a:	43 00 39             	rex.XB add BYTE PTR [r9],dil
   14000e85d:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e860:	36 5f                	ss pop rdi
   14000e862:	54                   	push   rsp
   14000e863:	55                   	push   rbp
   14000e864:	4e                   	rex.WRX
   14000e865:	45 5f                	rex.RB pop r15
   14000e867:	49                   	rex.WB
   14000e868:	4e 54                	rex.WRX push rsp
   14000e86a:	45 52                	rex.RB push r10
   14000e86c:	5f                   	pop    rdi
   14000e86d:	55                   	push   rbp
   14000e86e:	4e                   	rex.WRX
   14000e86f:	49 54                	rex.WB push r12
   14000e871:	5f                   	pop    rdi
   14000e872:	4d                   	rex.WRB
   14000e873:	4f 56                	rex.WRXB push r14
   14000e875:	45 53                	rex.RB push r11
   14000e877:	5f                   	pop    rdi
   14000e878:	46 52                	rex.RX push rdx
   14000e87a:	4f                   	rex.WRXB
   14000e87b:	4d 5f                	rex.WRB pop r15
   14000e87d:	56                   	push   rsi
   14000e87e:	45                   	rex.RB
   14000e87f:	43 00 3a             	rex.XB add BYTE PTR [r10],dil
   14000e882:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e885:	36 5f                	ss pop rdi
   14000e887:	54                   	push   rsp
   14000e888:	55                   	push   rbp
   14000e889:	4e                   	rex.WRX
   14000e88a:	45 5f                	rex.RB pop r15
   14000e88c:	49                   	rex.WB
   14000e88d:	4e 54                	rex.WRX push rsp
   14000e88f:	45 52                	rex.RB push r10
   14000e891:	5f                   	pop    rdi
   14000e892:	55                   	push   rbp
   14000e893:	4e                   	rex.WRX
   14000e894:	49 54                	rex.WB push r12
   14000e896:	5f                   	pop    rdi
   14000e897:	43                   	rex.XB
   14000e898:	4f                   	rex.WRXB
   14000e899:	4e 56                	rex.WRX push rsi
   14000e89b:	45 52                	rex.RB push r10
   14000e89d:	53                   	push   rbx
   14000e89e:	49                   	rex.WB
   14000e89f:	4f                   	rex.WRXB
   14000e8a0:	4e 53                	rex.WRX push rbx
   14000e8a2:	00 3b                	add    BYTE PTR [rbx],bh
   14000e8a4:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e8a7:	36 5f                	ss pop rdi
   14000e8a9:	54                   	push   rsp
   14000e8aa:	55                   	push   rbp
   14000e8ab:	4e                   	rex.WRX
   14000e8ac:	45 5f                	rex.RB pop r15
   14000e8ae:	53                   	push   rbx
   14000e8af:	50                   	push   rax
   14000e8b0:	4c                   	rex.WR
   14000e8b1:	49 54                	rex.WB push r12
   14000e8b3:	5f                   	pop    rdi
   14000e8b4:	4d                   	rex.WRB
   14000e8b5:	45                   	rex.RB
   14000e8b6:	4d 5f                	rex.WRB pop r15
   14000e8b8:	4f 50                	rex.WRXB push r8
   14000e8ba:	4e                   	rex.WRX
   14000e8bb:	44 5f                	rex.R pop rdi
   14000e8bd:	46                   	rex.RX
   14000e8be:	4f 52                	rex.WRXB push r10
   14000e8c0:	5f                   	pop    rdi
   14000e8c1:	46 50                	rex.RX push rax
   14000e8c3:	5f                   	pop    rdi
   14000e8c4:	43                   	rex.XB
   14000e8c5:	4f                   	rex.WRXB
   14000e8c6:	4e 56                	rex.WRX push rsi
   14000e8c8:	45 52                	rex.RB push r10
   14000e8ca:	54                   	push   rsp
   14000e8cb:	53                   	push   rbx
   14000e8cc:	00 3c 01             	add    BYTE PTR [rcx+rax*1],bh
   14000e8cf:	58                   	pop    rax
   14000e8d0:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e8d2:	5f                   	pop    rdi
   14000e8d3:	54                   	push   rsp
   14000e8d4:	55                   	push   rbp
   14000e8d5:	4e                   	rex.WRX
   14000e8d6:	45 5f                	rex.RB pop r15
   14000e8d8:	55                   	push   rbp
   14000e8d9:	53                   	push   rbx
   14000e8da:	45 5f                	rex.RB pop r15
   14000e8dc:	56                   	push   rsi
   14000e8dd:	45                   	rex.RB
   14000e8de:	43 54                	rex.XB push r12
   14000e8e0:	4f 52                	rex.WRXB push r10
   14000e8e2:	5f                   	pop    rdi
   14000e8e3:	46 50                	rex.RX push rax
   14000e8e5:	5f                   	pop    rdi
   14000e8e6:	43                   	rex.XB
   14000e8e7:	4f                   	rex.WRXB
   14000e8e8:	4e 56                	rex.WRX push rsi
   14000e8ea:	45 52                	rex.RB push r10
   14000e8ec:	54                   	push   rsp
   14000e8ed:	53                   	push   rbx
   14000e8ee:	00 3d 01 58 38 36    	add    BYTE PTR [rip+0x36385801],bh        # 1763940f5 <.debug_line_str+0x3638105e>
   14000e8f4:	5f                   	pop    rdi
   14000e8f5:	54                   	push   rsp
   14000e8f6:	55                   	push   rbp
   14000e8f7:	4e                   	rex.WRX
   14000e8f8:	45 5f                	rex.RB pop r15
   14000e8fa:	55                   	push   rbp
   14000e8fb:	53                   	push   rbx
   14000e8fc:	45 5f                	rex.RB pop r15
   14000e8fe:	56                   	push   rsi
   14000e8ff:	45                   	rex.RB
   14000e900:	43 54                	rex.XB push r12
   14000e902:	4f 52                	rex.WRXB push r10
   14000e904:	5f                   	pop    rdi
   14000e905:	43                   	rex.XB
   14000e906:	4f                   	rex.WRXB
   14000e907:	4e 56                	rex.WRX push rsi
   14000e909:	45 52                	rex.RB push r10
   14000e90b:	54                   	push   rsp
   14000e90c:	53                   	push   rbx
   14000e90d:	00 3e                	add    BYTE PTR [rsi],bh
   14000e90f:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e912:	36 5f                	ss pop rdi
   14000e914:	54                   	push   rsp
   14000e915:	55                   	push   rbp
   14000e916:	4e                   	rex.WRX
   14000e917:	45 5f                	rex.RB pop r15
   14000e919:	53                   	push   rbx
   14000e91a:	4c                   	rex.WR
   14000e91b:	4f 57                	rex.WRXB push r15
   14000e91d:	5f                   	pop    rdi
   14000e91e:	50                   	push   rax
   14000e91f:	53                   	push   rbx
   14000e920:	48 55                	rex.W push rbp
   14000e922:	46                   	rex.RX
   14000e923:	42 00 3f             	rex.X add BYTE PTR [rdi],dil
   14000e926:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e929:	36 5f                	ss pop rdi
   14000e92b:	54                   	push   rsp
   14000e92c:	55                   	push   rbp
   14000e92d:	4e                   	rex.WRX
   14000e92e:	45 5f                	rex.RB pop r15
   14000e930:	41 56                	push   r14
   14000e932:	4f                   	rex.WRXB
   14000e933:	49                   	rex.WB
   14000e934:	44 5f                	rex.R pop rdi
   14000e936:	34 42                	xor    al,0x42
   14000e938:	59                   	pop    rcx
   14000e939:	54                   	push   rsp
   14000e93a:	45 5f                	rex.RB pop r15
   14000e93c:	50                   	push   rax
   14000e93d:	52                   	push   rdx
   14000e93e:	45                   	rex.RB
   14000e93f:	46                   	rex.RX
   14000e940:	49 58                	rex.WB pop r8
   14000e942:	45 53                	rex.RB push r11
   14000e944:	00 40 01             	add    BYTE PTR [rax+0x1],al
   14000e947:	58                   	pop    rax
   14000e948:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e94a:	5f                   	pop    rdi
   14000e94b:	54                   	push   rsp
   14000e94c:	55                   	push   rbp
   14000e94d:	4e                   	rex.WRX
   14000e94e:	45 5f                	rex.RB pop r15
   14000e950:	55                   	push   rbp
   14000e951:	53                   	push   rbx
   14000e952:	45 5f                	rex.RB pop r15
   14000e954:	47                   	rex.RXB
   14000e955:	41 54                	push   r12
   14000e957:	48                   	rex.W
   14000e958:	45 52                	rex.RB push r10
   14000e95a:	5f                   	pop    rdi
   14000e95b:	32 50 41             	xor    dl,BYTE PTR [rax+0x41]
   14000e95e:	52                   	push   rdx
   14000e95f:	54                   	push   rsp
   14000e960:	53                   	push   rbx
   14000e961:	00 41 01             	add    BYTE PTR [rcx+0x1],al
   14000e964:	58                   	pop    rax
   14000e965:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e967:	5f                   	pop    rdi
   14000e968:	54                   	push   rsp
   14000e969:	55                   	push   rbp
   14000e96a:	4e                   	rex.WRX
   14000e96b:	45 5f                	rex.RB pop r15
   14000e96d:	55                   	push   rbp
   14000e96e:	53                   	push   rbx
   14000e96f:	45 5f                	rex.RB pop r15
   14000e971:	53                   	push   rbx
   14000e972:	43                   	rex.XB
   14000e973:	41 54                	push   r12
   14000e975:	54                   	push   rsp
   14000e976:	45 52                	rex.RB push r10
   14000e978:	5f                   	pop    rdi
   14000e979:	32 50 41             	xor    dl,BYTE PTR [rax+0x41]
   14000e97c:	52                   	push   rdx
   14000e97d:	54                   	push   rsp
   14000e97e:	53                   	push   rbx
   14000e97f:	00 42 01             	add    BYTE PTR [rdx+0x1],al
   14000e982:	58                   	pop    rax
   14000e983:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e985:	5f                   	pop    rdi
   14000e986:	54                   	push   rsp
   14000e987:	55                   	push   rbp
   14000e988:	4e                   	rex.WRX
   14000e989:	45 5f                	rex.RB pop r15
   14000e98b:	55                   	push   rbp
   14000e98c:	53                   	push   rbx
   14000e98d:	45 5f                	rex.RB pop r15
   14000e98f:	47                   	rex.RXB
   14000e990:	41 54                	push   r12
   14000e992:	48                   	rex.W
   14000e993:	45 52                	rex.RB push r10
   14000e995:	5f                   	pop    rdi
   14000e996:	34 50                	xor    al,0x50
   14000e998:	41 52                	push   r10
   14000e99a:	54                   	push   rsp
   14000e99b:	53                   	push   rbx
   14000e99c:	00 43 01             	add    BYTE PTR [rbx+0x1],al
   14000e99f:	58                   	pop    rax
   14000e9a0:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e9a2:	5f                   	pop    rdi
   14000e9a3:	54                   	push   rsp
   14000e9a4:	55                   	push   rbp
   14000e9a5:	4e                   	rex.WRX
   14000e9a6:	45 5f                	rex.RB pop r15
   14000e9a8:	55                   	push   rbp
   14000e9a9:	53                   	push   rbx
   14000e9aa:	45 5f                	rex.RB pop r15
   14000e9ac:	53                   	push   rbx
   14000e9ad:	43                   	rex.XB
   14000e9ae:	41 54                	push   r12
   14000e9b0:	54                   	push   rsp
   14000e9b1:	45 52                	rex.RB push r10
   14000e9b3:	5f                   	pop    rdi
   14000e9b4:	34 50                	xor    al,0x50
   14000e9b6:	41 52                	push   r10
   14000e9b8:	54                   	push   rsp
   14000e9b9:	53                   	push   rbx
   14000e9ba:	00 44 01 58          	add    BYTE PTR [rcx+rax*1+0x58],al
   14000e9be:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e9c0:	5f                   	pop    rdi
   14000e9c1:	54                   	push   rsp
   14000e9c2:	55                   	push   rbp
   14000e9c3:	4e                   	rex.WRX
   14000e9c4:	45 5f                	rex.RB pop r15
   14000e9c6:	55                   	push   rbp
   14000e9c7:	53                   	push   rbx
   14000e9c8:	45 5f                	rex.RB pop r15
   14000e9ca:	47                   	rex.RXB
   14000e9cb:	41 54                	push   r12
   14000e9cd:	48                   	rex.W
   14000e9ce:	45 52                	rex.RB push r10
   14000e9d0:	00 45 01             	add    BYTE PTR [rbp+0x1],al
   14000e9d3:	58                   	pop    rax
   14000e9d4:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e9d6:	5f                   	pop    rdi
   14000e9d7:	54                   	push   rsp
   14000e9d8:	55                   	push   rbp
   14000e9d9:	4e                   	rex.WRX
   14000e9da:	45 5f                	rex.RB pop r15
   14000e9dc:	55                   	push   rbp
   14000e9dd:	53                   	push   rbx
   14000e9de:	45 5f                	rex.RB pop r15
   14000e9e0:	53                   	push   rbx
   14000e9e1:	43                   	rex.XB
   14000e9e2:	41 54                	push   r12
   14000e9e4:	54                   	push   rsp
   14000e9e5:	45 52                	rex.RB push r10
   14000e9e7:	00 46 01             	add    BYTE PTR [rsi+0x1],al
   14000e9ea:	58                   	pop    rax
   14000e9eb:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e9ed:	5f                   	pop    rdi
   14000e9ee:	54                   	push   rsp
   14000e9ef:	55                   	push   rbp
   14000e9f0:	4e                   	rex.WRX
   14000e9f1:	45 5f                	rex.RB pop r15
   14000e9f3:	41 56                	push   r14
   14000e9f5:	4f                   	rex.WRXB
   14000e9f6:	49                   	rex.WB
   14000e9f7:	44 5f                	rex.R pop rdi
   14000e9f9:	31 32                	xor    DWORD PTR [rdx],esi
   14000e9fb:	38 46 4d             	cmp    BYTE PTR [rsi+0x4d],al
   14000e9fe:	41 5f                	pop    r15
   14000ea00:	43                   	rex.XB
   14000ea01:	48                   	rex.W
   14000ea02:	41                   	rex.B
   14000ea03:	49                   	rex.WB
   14000ea04:	4e 53                	rex.WRX push rbx
   14000ea06:	00 47 01             	add    BYTE PTR [rdi+0x1],al
   14000ea09:	58                   	pop    rax
   14000ea0a:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ea0c:	5f                   	pop    rdi
   14000ea0d:	54                   	push   rsp
   14000ea0e:	55                   	push   rbp
   14000ea0f:	4e                   	rex.WRX
   14000ea10:	45 5f                	rex.RB pop r15
   14000ea12:	41 56                	push   r14
   14000ea14:	4f                   	rex.WRXB
   14000ea15:	49                   	rex.WB
   14000ea16:	44 5f                	rex.R pop rdi
   14000ea18:	32 35 36 46 4d 41    	xor    dh,BYTE PTR [rip+0x414d4636]        # 1814e3054 <.debug_line_str+0x414cffbd>
   14000ea1e:	5f                   	pop    rdi
   14000ea1f:	43                   	rex.XB
   14000ea20:	48                   	rex.W
   14000ea21:	41                   	rex.B
   14000ea22:	49                   	rex.WB
   14000ea23:	4e 53                	rex.WRX push rbx
   14000ea25:	00 48 01             	add    BYTE PTR [rax+0x1],cl
   14000ea28:	58                   	pop    rax
   14000ea29:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ea2b:	5f                   	pop    rdi
   14000ea2c:	54                   	push   rsp
   14000ea2d:	55                   	push   rbp
   14000ea2e:	4e                   	rex.WRX
   14000ea2f:	45 5f                	rex.RB pop r15
   14000ea31:	41 56                	push   r14
   14000ea33:	4f                   	rex.WRXB
   14000ea34:	49                   	rex.WB
   14000ea35:	44 5f                	rex.R pop rdi
   14000ea37:	35 31 32 46 4d       	xor    eax,0x4d463231
   14000ea3c:	41 5f                	pop    r15
   14000ea3e:	43                   	rex.XB
   14000ea3f:	48                   	rex.W
   14000ea40:	41                   	rex.B
   14000ea41:	49                   	rex.WB
   14000ea42:	4e 53                	rex.WRX push rbx
   14000ea44:	00 49 01             	add    BYTE PTR [rcx+0x1],cl
   14000ea47:	58                   	pop    rax
   14000ea48:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ea4a:	5f                   	pop    rdi
   14000ea4b:	54                   	push   rsp
   14000ea4c:	55                   	push   rbp
   14000ea4d:	4e                   	rex.WRX
   14000ea4e:	45 5f                	rex.RB pop r15
   14000ea50:	56                   	push   rsi
   14000ea51:	32 44 46 5f          	xor    al,BYTE PTR [rsi+rax*2+0x5f]
   14000ea55:	52                   	push   rdx
   14000ea56:	45                   	rex.RB
   14000ea57:	44 55                	rex.R push rbp
   14000ea59:	43 54                	rex.XB push r12
   14000ea5b:	49                   	rex.WB
   14000ea5c:	4f                   	rex.WRXB
   14000ea5d:	4e 5f                	rex.WRX pop rdi
   14000ea5f:	50                   	push   rax
   14000ea60:	52                   	push   rdx
   14000ea61:	45                   	rex.RB
   14000ea62:	46                   	rex.RX
   14000ea63:	45 52                	rex.RB push r10
   14000ea65:	5f                   	pop    rdi
   14000ea66:	48                   	rex.W
   14000ea67:	41                   	rex.B
   14000ea68:	44                   	rex.R
   14000ea69:	44 50                	rex.R push rax
   14000ea6b:	44 00 4a 01          	add    BYTE PTR [rdx+0x1],r9b
   14000ea6f:	58                   	pop    rax
   14000ea70:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ea72:	5f                   	pop    rdi
   14000ea73:	54                   	push   rsp
   14000ea74:	55                   	push   rbp
   14000ea75:	4e                   	rex.WRX
   14000ea76:	45 5f                	rex.RB pop r15
   14000ea78:	41 56                	push   r14
   14000ea7a:	58                   	pop    rax
   14000ea7b:	32 35 36 5f 55 4e    	xor    dh,BYTE PTR [rip+0x4e555f36]        # 18e5649b7 <.debug_line_str+0x4e551920>
   14000ea81:	41                   	rex.B
   14000ea82:	4c                   	rex.WR
   14000ea83:	49                   	rex.WB
   14000ea84:	47                   	rex.RXB
   14000ea85:	4e                   	rex.WRX
   14000ea86:	45                   	rex.RB
   14000ea87:	44 5f                	rex.R pop rdi
   14000ea89:	4c                   	rex.WR
   14000ea8a:	4f                   	rex.WRXB
   14000ea8b:	41                   	rex.B
   14000ea8c:	44 5f                	rex.R pop rdi
   14000ea8e:	4f 50                	rex.WRXB push r8
   14000ea90:	54                   	push   rsp
   14000ea91:	49                   	rex.WB
   14000ea92:	4d                   	rex.WRB
   14000ea93:	41                   	rex.B
   14000ea94:	4c 00 4b 01          	rex.WR add BYTE PTR [rbx+0x1],r9b
   14000ea98:	58                   	pop    rax
   14000ea99:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ea9b:	5f                   	pop    rdi
   14000ea9c:	54                   	push   rsp
   14000ea9d:	55                   	push   rbp
   14000ea9e:	4e                   	rex.WRX
   14000ea9f:	45 5f                	rex.RB pop r15
   14000eaa1:	41 56                	push   r14
   14000eaa3:	58                   	pop    rax
   14000eaa4:	32 35 36 5f 55 4e    	xor    dh,BYTE PTR [rip+0x4e555f36]        # 18e5649e0 <.debug_line_str+0x4e551949>
   14000eaaa:	41                   	rex.B
   14000eaab:	4c                   	rex.WR
   14000eaac:	49                   	rex.WB
   14000eaad:	47                   	rex.RXB
   14000eaae:	4e                   	rex.WRX
   14000eaaf:	45                   	rex.RB
   14000eab0:	44 5f                	rex.R pop rdi
   14000eab2:	53                   	push   rbx
   14000eab3:	54                   	push   rsp
   14000eab4:	4f 52                	rex.WRXB push r10
   14000eab6:	45 5f                	rex.RB pop r15
   14000eab8:	4f 50                	rex.WRXB push r8
   14000eaba:	54                   	push   rsp
   14000eabb:	49                   	rex.WB
   14000eabc:	4d                   	rex.WRB
   14000eabd:	41                   	rex.B
   14000eabe:	4c 00 4c 01 58       	rex.WR add BYTE PTR [rcx+rax*1+0x58],r9b
   14000eac3:	38 36                	cmp    BYTE PTR [rsi],dh
   14000eac5:	5f                   	pop    rdi
   14000eac6:	54                   	push   rsp
   14000eac7:	55                   	push   rbp
   14000eac8:	4e                   	rex.WRX
   14000eac9:	45 5f                	rex.RB pop r15
   14000eacb:	41 56                	push   r14
   14000eacd:	58                   	pop    rax
   14000eace:	32 35 36 5f 53 50    	xor    dh,BYTE PTR [rip+0x50535f36]        # 190544a0a <.debug_line_str+0x50531973>
   14000ead4:	4c                   	rex.WR
   14000ead5:	49 54                	rex.WB push r12
   14000ead7:	5f                   	pop    rdi
   14000ead8:	52                   	push   rdx
   14000ead9:	45                   	rex.RB
   14000eada:	47 53                	rex.RXB push r11
   14000eadc:	00 4d 01             	add    BYTE PTR [rbp+0x1],cl
   14000eadf:	58                   	pop    rax
   14000eae0:	38 36                	cmp    BYTE PTR [rsi],dh
   14000eae2:	5f                   	pop    rdi
   14000eae3:	54                   	push   rsp
   14000eae4:	55                   	push   rbp
   14000eae5:	4e                   	rex.WRX
   14000eae6:	45 5f                	rex.RB pop r15
   14000eae8:	41 56                	push   r14
   14000eaea:	58                   	pop    rax
   14000eaeb:	31 32                	xor    DWORD PTR [rdx],esi
   14000eaed:	38 5f 4f             	cmp    BYTE PTR [rdi+0x4f],bl
   14000eaf0:	50                   	push   rax
   14000eaf1:	54                   	push   rsp
   14000eaf2:	49                   	rex.WB
   14000eaf3:	4d                   	rex.WRB
   14000eaf4:	41                   	rex.B
   14000eaf5:	4c 00 4e 01          	rex.WR add BYTE PTR [rsi+0x1],r9b
   14000eaf9:	58                   	pop    rax
   14000eafa:	38 36                	cmp    BYTE PTR [rsi],dh
   14000eafc:	5f                   	pop    rdi
   14000eafd:	54                   	push   rsp
   14000eafe:	55                   	push   rbp
   14000eaff:	4e                   	rex.WRX
   14000eb00:	45 5f                	rex.RB pop r15
   14000eb02:	41 56                	push   r14
   14000eb04:	58                   	pop    rax
   14000eb05:	32 35 36 5f 4f 50    	xor    dh,BYTE PTR [rip+0x504f5f36]        # 190504a41 <.debug_line_str+0x504f19aa>
   14000eb0b:	54                   	push   rsp
   14000eb0c:	49                   	rex.WB
   14000eb0d:	4d                   	rex.WRB
   14000eb0e:	41                   	rex.B
   14000eb0f:	4c 00 4f 01          	rex.WR add BYTE PTR [rdi+0x1],r9b
   14000eb13:	58                   	pop    rax
   14000eb14:	38 36                	cmp    BYTE PTR [rsi],dh
   14000eb16:	5f                   	pop    rdi
   14000eb17:	54                   	push   rsp
   14000eb18:	55                   	push   rbp
   14000eb19:	4e                   	rex.WRX
   14000eb1a:	45 5f                	rex.RB pop r15
   14000eb1c:	41 56                	push   r14
   14000eb1e:	58                   	pop    rax
   14000eb1f:	35 31 32 5f 53       	xor    eax,0x535f3231
   14000eb24:	50                   	push   rax
   14000eb25:	4c                   	rex.WR
   14000eb26:	49 54                	rex.WB push r12
   14000eb28:	5f                   	pop    rdi
   14000eb29:	52                   	push   rdx
   14000eb2a:	45                   	rex.RB
   14000eb2b:	47 53                	rex.RXB push r11
   14000eb2d:	00 50 01             	add    BYTE PTR [rax+0x1],dl
   14000eb30:	58                   	pop    rax
   14000eb31:	38 36                	cmp    BYTE PTR [rsi],dh
   14000eb33:	5f                   	pop    rdi
   14000eb34:	54                   	push   rsp
   14000eb35:	55                   	push   rbp
   14000eb36:	4e                   	rex.WRX
   14000eb37:	45 5f                	rex.RB pop r15
   14000eb39:	41 56                	push   r14
   14000eb3b:	58                   	pop    rax
   14000eb3c:	32 35 36 5f 4d 4f    	xor    dh,BYTE PTR [rip+0x4f4d5f36]        # 18f4e4a78 <.debug_line_str+0x4f4d19e1>
   14000eb42:	56                   	push   rsi
   14000eb43:	45 5f                	rex.RB pop r15
   14000eb45:	42 59                	rex.X pop rcx
   14000eb47:	5f                   	pop    rdi
   14000eb48:	50                   	push   rax
   14000eb49:	49                   	rex.WB
   14000eb4a:	45                   	rex.RB
   14000eb4b:	43                   	rex.XB
   14000eb4c:	45 53                	rex.RB push r11
   14000eb4e:	00 51 01             	add    BYTE PTR [rcx+0x1],dl
   14000eb51:	58                   	pop    rax
   14000eb52:	38 36                	cmp    BYTE PTR [rsi],dh
   14000eb54:	5f                   	pop    rdi
   14000eb55:	54                   	push   rsp
   14000eb56:	55                   	push   rbp
   14000eb57:	4e                   	rex.WRX
   14000eb58:	45 5f                	rex.RB pop r15
   14000eb5a:	41 56                	push   r14
   14000eb5c:	58                   	pop    rax
   14000eb5d:	32 35 36 5f 53 54    	xor    dh,BYTE PTR [rip+0x54535f36]        # 194544a99 <.debug_line_str+0x54531a02>
   14000eb63:	4f 52                	rex.WRXB push r10
   14000eb65:	45 5f                	rex.RB pop r15
   14000eb67:	42 59                	rex.X pop rcx
   14000eb69:	5f                   	pop    rdi
   14000eb6a:	50                   	push   rax
   14000eb6b:	49                   	rex.WB
   14000eb6c:	45                   	rex.RB
   14000eb6d:	43                   	rex.XB
   14000eb6e:	45 53                	rex.RB push r11
   14000eb70:	00 52 01             	add    BYTE PTR [rdx+0x1],dl
   14000eb73:	58                   	pop    rax
   14000eb74:	38 36                	cmp    BYTE PTR [rsi],dh
   14000eb76:	5f                   	pop    rdi
   14000eb77:	54                   	push   rsp
   14000eb78:	55                   	push   rbp
   14000eb79:	4e                   	rex.WRX
   14000eb7a:	45 5f                	rex.RB pop r15
   14000eb7c:	41 56                	push   r14
   14000eb7e:	58                   	pop    rax
   14000eb7f:	35 31 32 5f 4d       	xor    eax,0x4d5f3231
   14000eb84:	4f 56                	rex.WRXB push r14
   14000eb86:	45 5f                	rex.RB pop r15
   14000eb88:	42 59                	rex.X pop rcx
   14000eb8a:	5f                   	pop    rdi
   14000eb8b:	50                   	push   rax
   14000eb8c:	49                   	rex.WB
   14000eb8d:	45                   	rex.RB
   14000eb8e:	43                   	rex.XB
   14000eb8f:	45 53                	rex.RB push r11
   14000eb91:	00 53 01             	add    BYTE PTR [rbx+0x1],dl
   14000eb94:	58                   	pop    rax
   14000eb95:	38 36                	cmp    BYTE PTR [rsi],dh
   14000eb97:	5f                   	pop    rdi
   14000eb98:	54                   	push   rsp
   14000eb99:	55                   	push   rbp
   14000eb9a:	4e                   	rex.WRX
   14000eb9b:	45 5f                	rex.RB pop r15
   14000eb9d:	41 56                	push   r14
   14000eb9f:	58                   	pop    rax
   14000eba0:	35 31 32 5f 53       	xor    eax,0x535f3231
   14000eba5:	54                   	push   rsp
   14000eba6:	4f 52                	rex.WRXB push r10
   14000eba8:	45 5f                	rex.RB pop r15
   14000ebaa:	42 59                	rex.X pop rcx
   14000ebac:	5f                   	pop    rdi
   14000ebad:	50                   	push   rax
   14000ebae:	49                   	rex.WB
   14000ebaf:	45                   	rex.RB
   14000ebb0:	43                   	rex.XB
   14000ebb1:	45 53                	rex.RB push r11
   14000ebb3:	00 54 01 58          	add    BYTE PTR [rcx+rax*1+0x58],dl
   14000ebb7:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ebb9:	5f                   	pop    rdi
   14000ebba:	54                   	push   rsp
   14000ebbb:	55                   	push   rbp
   14000ebbc:	4e                   	rex.WRX
   14000ebbd:	45 5f                	rex.RB pop r15
   14000ebbf:	44                   	rex.R
   14000ebc0:	4f 55                	rex.WRXB push r13
   14000ebc2:	42                   	rex.X
   14000ebc3:	4c                   	rex.WR
   14000ebc4:	45 5f                	rex.RB pop r15
   14000ebc6:	57                   	push   rdi
   14000ebc7:	49 54                	rex.WB push r12
   14000ebc9:	48 5f                	rex.W pop rdi
   14000ebcb:	41                   	rex.B
   14000ebcc:	44                   	rex.R
   14000ebcd:	44 00 55 01          	add    BYTE PTR [rbp+0x1],r10b
   14000ebd1:	58                   	pop    rax
   14000ebd2:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ebd4:	5f                   	pop    rdi
   14000ebd5:	54                   	push   rsp
   14000ebd6:	55                   	push   rbp
   14000ebd7:	4e                   	rex.WRX
   14000ebd8:	45 5f                	rex.RB pop r15
   14000ebda:	41                   	rex.B
   14000ebdb:	4c 57                	rex.WR push rdi
   14000ebdd:	41 59                	pop    r9
   14000ebdf:	53                   	push   rbx
   14000ebe0:	5f                   	pop    rdi
   14000ebe1:	46                   	rex.RX
   14000ebe2:	41                   	rex.B
   14000ebe3:	4e                   	rex.WRX
   14000ebe4:	43 59                	rex.XB pop r9
   14000ebe6:	5f                   	pop    rdi
   14000ebe7:	4d                   	rex.WRB
   14000ebe8:	41 54                	push   r12
   14000ebea:	48 5f                	rex.W pop rdi
   14000ebec:	33 38                	xor    edi,DWORD PTR [rax]
   14000ebee:	37                   	(bad)
   14000ebef:	00 56 01             	add    BYTE PTR [rsi+0x1],dl
   14000ebf2:	58                   	pop    rax
   14000ebf3:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ebf5:	5f                   	pop    rdi
   14000ebf6:	54                   	push   rsp
   14000ebf7:	55                   	push   rbp
   14000ebf8:	4e                   	rex.WRX
   14000ebf9:	45 5f                	rex.RB pop r15
   14000ebfb:	55                   	push   rbp
   14000ebfc:	4e 52                	rex.WRX push rdx
   14000ebfe:	4f                   	rex.WRXB
   14000ebff:	4c                   	rex.WR
   14000ec00:	4c 5f                	rex.WR pop rdi
   14000ec02:	53                   	push   rbx
   14000ec03:	54                   	push   rsp
   14000ec04:	52                   	push   rdx
   14000ec05:	4c                   	rex.WR
   14000ec06:	45                   	rex.RB
   14000ec07:	4e 00 57 01          	rex.WRX add BYTE PTR [rdi+0x1],r10b
   14000ec0b:	58                   	pop    rax
   14000ec0c:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ec0e:	5f                   	pop    rdi
   14000ec0f:	54                   	push   rsp
   14000ec10:	55                   	push   rbp
   14000ec11:	4e                   	rex.WRX
   14000ec12:	45 5f                	rex.RB pop r15
   14000ec14:	53                   	push   rbx
   14000ec15:	48                   	rex.W
   14000ec16:	49                   	rex.WB
   14000ec17:	46 54                	rex.RX push rsp
   14000ec19:	31 00                	xor    DWORD PTR [rax],eax
   14000ec1b:	58                   	pop    rax
   14000ec1c:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000ec1f:	36 5f                	ss pop rdi
   14000ec21:	54                   	push   rsp
   14000ec22:	55                   	push   rbp
   14000ec23:	4e                   	rex.WRX
   14000ec24:	45 5f                	rex.RB pop r15
   14000ec26:	5a                   	pop    rdx
   14000ec27:	45 52                	rex.RB push r10
   14000ec29:	4f 5f                	rex.WRXB pop r15
   14000ec2b:	45 58                	rex.RB pop r8
   14000ec2d:	54                   	push   rsp
   14000ec2e:	45                   	rex.RB
   14000ec2f:	4e                   	rex.WRX
   14000ec30:	44 5f                	rex.R pop rdi
   14000ec32:	57                   	push   rdi
   14000ec33:	49 54                	rex.WB push r12
   14000ec35:	48 5f                	rex.W pop rdi
   14000ec37:	41                   	rex.B
   14000ec38:	4e                   	rex.WRX
   14000ec39:	44 00 59 01          	add    BYTE PTR [rcx+0x1],r11b
   14000ec3d:	58                   	pop    rax
   14000ec3e:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ec40:	5f                   	pop    rdi
   14000ec41:	54                   	push   rsp
   14000ec42:	55                   	push   rbp
   14000ec43:	4e                   	rex.WRX
   14000ec44:	45 5f                	rex.RB pop r15
   14000ec46:	50                   	push   rax
   14000ec47:	52                   	push   rdx
   14000ec48:	4f                   	rex.WRXB
   14000ec49:	4d                   	rex.WRB
   14000ec4a:	4f 54                	rex.WRXB push r12
   14000ec4c:	45 5f                	rex.RB pop r15
   14000ec4e:	48                   	rex.W
   14000ec4f:	49                   	rex.WB
   14000ec50:	4d                   	rex.WRB
   14000ec51:	4f                   	rex.WRXB
   14000ec52:	44                   	rex.R
   14000ec53:	45 5f                	rex.RB pop r15
   14000ec55:	49                   	rex.WB
   14000ec56:	4d 55                	rex.WRB push r13
   14000ec58:	4c 00 5a 01          	rex.WR add BYTE PTR [rdx+0x1],r11b
   14000ec5c:	58                   	pop    rax
   14000ec5d:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ec5f:	5f                   	pop    rdi
   14000ec60:	54                   	push   rsp
   14000ec61:	55                   	push   rbp
   14000ec62:	4e                   	rex.WRX
   14000ec63:	45 5f                	rex.RB pop r15
   14000ec65:	46                   	rex.RX
   14000ec66:	41 53                	push   r11
   14000ec68:	54                   	push   rsp
   14000ec69:	5f                   	pop    rdi
   14000ec6a:	50                   	push   rax
   14000ec6b:	52                   	push   rdx
   14000ec6c:	45                   	rex.RB
   14000ec6d:	46                   	rex.RX
   14000ec6e:	49 58                	rex.WB pop r8
   14000ec70:	00 5b 01             	add    BYTE PTR [rbx+0x1],bl
   14000ec73:	58                   	pop    rax
   14000ec74:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ec76:	5f                   	pop    rdi
   14000ec77:	54                   	push   rsp
   14000ec78:	55                   	push   rbp
   14000ec79:	4e                   	rex.WRX
   14000ec7a:	45 5f                	rex.RB pop r15
   14000ec7c:	52                   	push   rdx
   14000ec7d:	45                   	rex.RB
   14000ec7e:	41                   	rex.B
   14000ec7f:	44 5f                	rex.R pop rdi
   14000ec81:	4d                   	rex.WRB
   14000ec82:	4f                   	rex.WRXB
   14000ec83:	44                   	rex.R
   14000ec84:	49                   	rex.WB
   14000ec85:	46 59                	rex.RX pop rcx
   14000ec87:	5f                   	pop    rdi
   14000ec88:	57                   	push   rdi
   14000ec89:	52                   	push   rdx
   14000ec8a:	49 54                	rex.WB push r12
   14000ec8c:	45 00 5c 01 58       	add    BYTE PTR [r9+rax*1+0x58],r11b
   14000ec91:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ec93:	5f                   	pop    rdi
   14000ec94:	54                   	push   rsp
   14000ec95:	55                   	push   rbp
   14000ec96:	4e                   	rex.WRX
   14000ec97:	45 5f                	rex.RB pop r15
   14000ec99:	4d                   	rex.WRB
   14000ec9a:	4f 56                	rex.WRXB push r14
   14000ec9c:	45 5f                	rex.RB pop r15
   14000ec9e:	4d 31 5f 56          	xor    QWORD PTR [r15+0x56],r11
   14000eca2:	49                   	rex.WB
   14000eca3:	41 5f                	pop    r15
   14000eca5:	4f 52                	rex.WRXB push r10
   14000eca7:	00 5d 01             	add    BYTE PTR [rbp+0x1],bl
   14000ecaa:	58                   	pop    rax
   14000ecab:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ecad:	5f                   	pop    rdi
   14000ecae:	54                   	push   rsp
   14000ecaf:	55                   	push   rbp
   14000ecb0:	4e                   	rex.WRX
   14000ecb1:	45 5f                	rex.RB pop r15
   14000ecb3:	4e                   	rex.WRX
   14000ecb4:	4f 54                	rex.WRXB push r12
   14000ecb6:	5f                   	pop    rdi
   14000ecb7:	55                   	push   rbp
   14000ecb8:	4e 50                	rex.WRX push rax
   14000ecba:	41                   	rex.B
   14000ecbb:	49 52                	rex.WB push r10
   14000ecbd:	41                   	rex.B
   14000ecbe:	42                   	rex.X
   14000ecbf:	4c                   	rex.WR
   14000ecc0:	45 00 5e 01          	add    BYTE PTR [r14+0x1],r11b
   14000ecc4:	58                   	pop    rax
   14000ecc5:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ecc7:	5f                   	pop    rdi
   14000ecc8:	54                   	push   rsp
   14000ecc9:	55                   	push   rbp
   14000ecca:	4e                   	rex.WRX
   14000eccb:	45 5f                	rex.RB pop r15
   14000eccd:	50                   	push   rax
   14000ecce:	41 52                	push   r10
   14000ecd0:	54                   	push   rsp
   14000ecd1:	49                   	rex.WB
   14000ecd2:	41                   	rex.B
   14000ecd3:	4c 5f                	rex.WR pop rdi
   14000ecd5:	52                   	push   rdx
   14000ecd6:	45                   	rex.RB
   14000ecd7:	47 5f                	rex.RXB pop r15
   14000ecd9:	53                   	push   rbx
   14000ecda:	54                   	push   rsp
   14000ecdb:	41                   	rex.B
   14000ecdc:	4c                   	rex.WR
   14000ecdd:	4c 00 5f 01          	rex.WR add BYTE PTR [rdi+0x1],r11b
   14000ece1:	58                   	pop    rax
   14000ece2:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ece4:	5f                   	pop    rdi
   14000ece5:	54                   	push   rsp
   14000ece6:	55                   	push   rbp
   14000ece7:	4e                   	rex.WRX
   14000ece8:	45 5f                	rex.RB pop r15
   14000ecea:	50                   	push   rax
   14000eceb:	52                   	push   rdx
   14000ecec:	4f                   	rex.WRXB
   14000eced:	4d                   	rex.WRB
   14000ecee:	4f 54                	rex.WRXB push r12
   14000ecf0:	45 5f                	rex.RB pop r15
   14000ecf2:	51                   	push   rcx
   14000ecf3:	49                   	rex.WB
   14000ecf4:	4d                   	rex.WRB
   14000ecf5:	4f                   	rex.WRXB
   14000ecf6:	44                   	rex.R
   14000ecf7:	45 00 60 01          	add    BYTE PTR [r8+0x1],r12b
   14000ecfb:	58                   	pop    rax
   14000ecfc:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ecfe:	5f                   	pop    rdi
   14000ecff:	54                   	push   rsp
   14000ed00:	55                   	push   rbp
   14000ed01:	4e                   	rex.WRX
   14000ed02:	45 5f                	rex.RB pop r15
   14000ed04:	50                   	push   rax
   14000ed05:	52                   	push   rdx
   14000ed06:	4f                   	rex.WRXB
   14000ed07:	4d                   	rex.WRB
   14000ed08:	4f 54                	rex.WRXB push r12
   14000ed0a:	45 5f                	rex.RB pop r15
   14000ed0c:	48                   	rex.W
   14000ed0d:	49 5f                	rex.WB pop r15
   14000ed0f:	52                   	push   rdx
   14000ed10:	45                   	rex.RB
   14000ed11:	47 53                	rex.RXB push r11
   14000ed13:	00 61 01             	add    BYTE PTR [rcx+0x1],ah
   14000ed16:	58                   	pop    rax
   14000ed17:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ed19:	5f                   	pop    rdi
   14000ed1a:	54                   	push   rsp
   14000ed1b:	55                   	push   rbp
   14000ed1c:	4e                   	rex.WRX
   14000ed1d:	45 5f                	rex.RB pop r15
   14000ed1f:	48                   	rex.W
   14000ed20:	49                   	rex.WB
   14000ed21:	4d                   	rex.WRB
   14000ed22:	4f                   	rex.WRXB
   14000ed23:	44                   	rex.R
   14000ed24:	45 5f                	rex.RB pop r15
   14000ed26:	4d                   	rex.WRB
   14000ed27:	41 54                	push   r12
   14000ed29:	48 00 62 01          	rex.W add BYTE PTR [rdx+0x1],spl
   14000ed2d:	58                   	pop    rax
   14000ed2e:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ed30:	5f                   	pop    rdi
   14000ed31:	54                   	push   rsp
   14000ed32:	55                   	push   rbp
   14000ed33:	4e                   	rex.WRX
   14000ed34:	45 5f                	rex.RB pop r15
   14000ed36:	53                   	push   rbx
   14000ed37:	50                   	push   rax
   14000ed38:	4c                   	rex.WR
   14000ed39:	49 54                	rex.WB push r12
   14000ed3b:	5f                   	pop    rdi
   14000ed3c:	4c                   	rex.WR
   14000ed3d:	4f                   	rex.WRXB
   14000ed3e:	4e                   	rex.WRX
   14000ed3f:	47 5f                	rex.RXB pop r15
   14000ed41:	4d                   	rex.WRB
   14000ed42:	4f 56                	rex.WRXB push r14
   14000ed44:	45 53                	rex.RB push r11
   14000ed46:	00 63 01             	add    BYTE PTR [rbx+0x1],ah
   14000ed49:	58                   	pop    rax
   14000ed4a:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ed4c:	5f                   	pop    rdi
   14000ed4d:	54                   	push   rsp
   14000ed4e:	55                   	push   rbp
   14000ed4f:	4e                   	rex.WRX
   14000ed50:	45 5f                	rex.RB pop r15
   14000ed52:	55                   	push   rbp
   14000ed53:	53                   	push   rbx
   14000ed54:	45 5f                	rex.RB pop r15
   14000ed56:	58                   	pop    rax
   14000ed57:	43                   	rex.XB
   14000ed58:	48                   	rex.W
   14000ed59:	47                   	rex.RXB
   14000ed5a:	42 00 64 01 58       	add    BYTE PTR [rcx+r8*1+0x58],spl
   14000ed5f:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ed61:	5f                   	pop    rdi
   14000ed62:	54                   	push   rsp
   14000ed63:	55                   	push   rbp
   14000ed64:	4e                   	rex.WRX
   14000ed65:	45 5f                	rex.RB pop r15
   14000ed67:	55                   	push   rbp
   14000ed68:	53                   	push   rbx
   14000ed69:	45 5f                	rex.RB pop r15
   14000ed6b:	4d                   	rex.WRB
   14000ed6c:	4f 56                	rex.WRXB push r14
   14000ed6e:	30 00                	xor    BYTE PTR [rax],al
   14000ed70:	65 01 58 38          	add    DWORD PTR gs:[rax+0x38],ebx
   14000ed74:	36 5f                	ss pop rdi
   14000ed76:	54                   	push   rsp
   14000ed77:	55                   	push   rbp
   14000ed78:	4e                   	rex.WRX
   14000ed79:	45 5f                	rex.RB pop r15
   14000ed7b:	4e                   	rex.WRX
   14000ed7c:	4f 54                	rex.WRXB push r12
   14000ed7e:	5f                   	pop    rdi
   14000ed7f:	56                   	push   rsi
   14000ed80:	45                   	rex.RB
   14000ed81:	43 54                	rex.XB push r12
   14000ed83:	4f 52                	rex.WRXB push r10
   14000ed85:	4d                   	rex.WRB
   14000ed86:	4f                   	rex.WRXB
   14000ed87:	44                   	rex.R
   14000ed88:	45 00 66 01          	add    BYTE PTR [r14+0x1],r12b
   14000ed8c:	58                   	pop    rax
   14000ed8d:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ed8f:	5f                   	pop    rdi
   14000ed90:	54                   	push   rsp
   14000ed91:	55                   	push   rbp
   14000ed92:	4e                   	rex.WRX
   14000ed93:	45 5f                	rex.RB pop r15
   14000ed95:	41 56                	push   r14
   14000ed97:	4f                   	rex.WRXB
   14000ed98:	49                   	rex.WB
   14000ed99:	44 5f                	rex.R pop rdi
   14000ed9b:	56                   	push   rsi
   14000ed9c:	45                   	rex.RB
   14000ed9d:	43 54                	rex.XB push r12
   14000ed9f:	4f 52                	rex.WRXB push r10
   14000eda1:	5f                   	pop    rdi
   14000eda2:	44                   	rex.R
   14000eda3:	45                   	rex.RB
   14000eda4:	43                   	rex.XB
   14000eda5:	4f                   	rex.WRXB
   14000eda6:	44                   	rex.R
   14000eda7:	45 00 67 01          	add    BYTE PTR [r15+0x1],r12b
   14000edab:	58                   	pop    rax
   14000edac:	38 36                	cmp    BYTE PTR [rsi],dh
   14000edae:	5f                   	pop    rdi
   14000edaf:	54                   	push   rsp
   14000edb0:	55                   	push   rbp
   14000edb1:	4e                   	rex.WRX
   14000edb2:	45 5f                	rex.RB pop r15
   14000edb4:	42 52                	rex.X push rdx
   14000edb6:	41                   	rex.B
   14000edb7:	4e                   	rex.WRX
   14000edb8:	43                   	rex.XB
   14000edb9:	48 5f                	rex.W pop rdi
   14000edbb:	50                   	push   rax
   14000edbc:	52                   	push   rdx
   14000edbd:	45                   	rex.RB
   14000edbe:	44                   	rex.R
   14000edbf:	49                   	rex.WB
   14000edc0:	43 54                	rex.XB push r12
   14000edc2:	49                   	rex.WB
   14000edc3:	4f                   	rex.WRXB
   14000edc4:	4e 5f                	rex.WRX pop rdi
   14000edc6:	48                   	rex.W
   14000edc7:	49                   	rex.WB
   14000edc8:	4e 54                	rex.WRX push rsp
   14000edca:	53                   	push   rbx
   14000edcb:	00 68 01             	add    BYTE PTR [rax+0x1],ch
   14000edce:	58                   	pop    rax
   14000edcf:	38 36                	cmp    BYTE PTR [rsi],dh
   14000edd1:	5f                   	pop    rdi
   14000edd2:	54                   	push   rsp
   14000edd3:	55                   	push   rbp
   14000edd4:	4e                   	rex.WRX
   14000edd5:	45 5f                	rex.RB pop r15
   14000edd7:	51                   	push   rcx
   14000edd8:	49                   	rex.WB
   14000edd9:	4d                   	rex.WRB
   14000edda:	4f                   	rex.WRXB
   14000eddb:	44                   	rex.R
   14000eddc:	45 5f                	rex.RB pop r15
   14000edde:	4d                   	rex.WRB
   14000eddf:	41 54                	push   r12
   14000ede1:	48 00 69 01          	rex.W add BYTE PTR [rcx+0x1],bpl
   14000ede5:	58                   	pop    rax
   14000ede6:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ede8:	5f                   	pop    rdi
   14000ede9:	54                   	push   rsp
   14000edea:	55                   	push   rbp
   14000edeb:	4e                   	rex.WRX
   14000edec:	45 5f                	rex.RB pop r15
   14000edee:	50                   	push   rax
   14000edef:	52                   	push   rdx
   14000edf0:	4f                   	rex.WRXB
   14000edf1:	4d                   	rex.WRB
   14000edf2:	4f 54                	rex.WRXB push r12
   14000edf4:	45 5f                	rex.RB pop r15
   14000edf6:	51                   	push   rcx
   14000edf7:	49 5f                	rex.WB pop r15
   14000edf9:	52                   	push   rdx
   14000edfa:	45                   	rex.RB
   14000edfb:	47 53                	rex.RXB push r11
   14000edfd:	00 6a 01             	add    BYTE PTR [rdx+0x1],ch
   14000ee00:	58                   	pop    rax
   14000ee01:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ee03:	5f                   	pop    rdi
   14000ee04:	54                   	push   rsp
   14000ee05:	55                   	push   rbp
   14000ee06:	4e                   	rex.WRX
   14000ee07:	45 5f                	rex.RB pop r15
   14000ee09:	45                   	rex.RB
   14000ee0a:	4d                   	rex.WRB
   14000ee0b:	49 54                	rex.WB push r12
   14000ee0d:	5f                   	pop    rdi
   14000ee0e:	56                   	push   rsi
   14000ee0f:	5a                   	pop    rdx
   14000ee10:	45 52                	rex.RB push r10
   14000ee12:	4f 55                	rex.WRXB push r13
   14000ee14:	50                   	push   rax
   14000ee15:	50                   	push   rax
   14000ee16:	45 52                	rex.RB push r10
   14000ee18:	00 6b 01             	add    BYTE PTR [rbx+0x1],ch
   14000ee1b:	58                   	pop    rax
   14000ee1c:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ee1e:	5f                   	pop    rdi
   14000ee1f:	54                   	push   rsp
   14000ee20:	55                   	push   rbp
   14000ee21:	4e                   	rex.WRX
   14000ee22:	45 5f                	rex.RB pop r15
   14000ee24:	4c                   	rex.WR
   14000ee25:	41 53                	push   r11
   14000ee27:	54                   	push   rsp
   14000ee28:	00 6c 00 03          	add    BYTE PTR [rax+rax*1+0x3],ch
   14000ee2c:	69 78 38 36 5f 61 72 	imul   edi,DWORD PTR [rax+0x38],0x72615f36
   14000ee33:	63 68 5f             	movsxd ebp,DWORD PTR [rax+0x5f]
   14000ee36:	69 6e 64 69 63 65 73 	imul   ebp,DWORD PTR [rsi+0x64],0x73656369
   14000ee3d:	00 ed                	add    ch,ch
   14000ee3f:	00 00                	add    BYTE PTR [rax],al
   14000ee41:	00 c5                	add    ch,al
   14000ee43:	01 8a 0e 00 00 01    	add    DWORD PTR [rdx+0x100000e],ecx
   14000ee49:	58                   	pop    rax
   14000ee4a:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ee4c:	5f                   	pop    rdi
   14000ee4d:	41 52                	push   r10
   14000ee4f:	43                   	rex.XB
   14000ee50:	48 5f                	rex.W pop rdi
   14000ee52:	43                   	rex.XB
   14000ee53:	4d                   	rex.WRB
   14000ee54:	4f 56                	rex.WRXB push r14
   14000ee56:	00 00                	add    BYTE PTR [rax],al
   14000ee58:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000ee5b:	36 5f                	ss pop rdi
   14000ee5d:	41 52                	push   r10
   14000ee5f:	43                   	rex.XB
   14000ee60:	48 5f                	rex.W pop rdi
   14000ee62:	43                   	rex.XB
   14000ee63:	4d 50                	rex.WRB push r8
   14000ee65:	58                   	pop    rax
   14000ee66:	43                   	rex.XB
   14000ee67:	48                   	rex.W
   14000ee68:	47 00 01             	rex.RXB add BYTE PTR [r9],r8b
   14000ee6b:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000ee6e:	36 5f                	ss pop rdi
   14000ee70:	41 52                	push   r10
   14000ee72:	43                   	rex.XB
   14000ee73:	48 5f                	rex.W pop rdi
   14000ee75:	43                   	rex.XB
   14000ee76:	4d 50                	rex.WRB push r8
   14000ee78:	58                   	pop    rax
   14000ee79:	43                   	rex.XB
   14000ee7a:	48                   	rex.W
   14000ee7b:	47 38 42 00          	rex.RXB cmp BYTE PTR [r10+0x0],r8b
   14000ee7f:	02 01                	add    al,BYTE PTR [rcx]
   14000ee81:	58                   	pop    rax
   14000ee82:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ee84:	5f                   	pop    rdi
   14000ee85:	41 52                	push   r10
   14000ee87:	43                   	rex.XB
   14000ee88:	48 5f                	rex.W pop rdi
   14000ee8a:	58                   	pop    rax
   14000ee8b:	41                   	rex.B
   14000ee8c:	44                   	rex.R
   14000ee8d:	44 00 03             	add    BYTE PTR [rbx],r8b
   14000ee90:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000ee93:	36 5f                	ss pop rdi
   14000ee95:	41 52                	push   r10
   14000ee97:	43                   	rex.XB
   14000ee98:	48 5f                	rex.W pop rdi
   14000ee9a:	42 53                	rex.X push rbx
   14000ee9c:	57                   	push   rdi
   14000ee9d:	41 50                	push   r8
   14000ee9f:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
   14000eea2:	58                   	pop    rax
   14000eea3:	38 36                	cmp    BYTE PTR [rsi],dh
   14000eea5:	5f                   	pop    rdi
   14000eea6:	41 52                	push   r10
   14000eea8:	43                   	rex.XB
   14000eea9:	48 5f                	rex.W pop rdi
   14000eeab:	4c                   	rex.WR
   14000eeac:	41 53                	push   r11
   14000eeae:	54                   	push   rsp
   14000eeaf:	00 05 00 02 01 06    	add    BYTE PTR [rip+0x6010200],al        # 14601f0b5 <.debug_line_str+0x600c01e>
   14000eeb5:	73 69                	jae    14000ef20 <.debug_info+0xef8>
   14000eeb7:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000eeb9:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
   14000eebe:	61                   	(bad)
   14000eebf:	72 00                	jb     14000eec1 <.debug_info+0xe99>
   14000eec1:	02 10                	add    dl,BYTE PTR [rax]
   14000eec3:	05 5f 5f 69 6e       	add    eax,0x6e695f5f
   14000eec8:	74 31                	je     14000eefb <.debug_info+0xed3>
   14000eeca:	32 38                	xor    bh,BYTE PTR [rax]
   14000eecc:	00 02                	add    BYTE PTR [rdx],al
   14000eece:	10 07                	adc    BYTE PTR [rdi],al
   14000eed0:	5f                   	pop    rdi
   14000eed1:	5f                   	pop    rdi
   14000eed2:	69 6e 74 31 32 38 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20383231
   14000eed9:	75 6e                	jne    14000ef49 <.debug_info+0xf21>
   14000eedb:	73 69                	jae    14000ef46 <.debug_info+0xf1e>
   14000eedd:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000eedf:	65 64 00 02          	gs add BYTE PTR fs:[rdx],al
   14000eee3:	02 04 5f             	add    al,BYTE PTR [rdi+rbx*2]
   14000eee6:	46 6c                	rex.RX ins BYTE PTR es:[rdi],dx
   14000eee8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000eee9:	61                   	(bad)
   14000eeea:	74 31                	je     14000ef1d <.debug_info+0xef5>
   14000eeec:	36 00 02             	ss add BYTE PTR [rdx],al
   14000eeef:	04 03                	add    al,0x3
   14000eef1:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000eef4:	70 6c                	jo     14000ef62 <.debug_info+0xf3a>
   14000eef6:	65 78 20             	gs js  14000ef19 <.debug_info+0xef1>
   14000eef9:	5f                   	pop    rdi
   14000eefa:	46 6c                	rex.RX ins BYTE PTR es:[rdi],dx
   14000eefc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000eefd:	61                   	(bad)
   14000eefe:	74 31                	je     14000ef31 <.debug_info+0xf09>
   14000ef00:	36 00 02             	ss add BYTE PTR [rdx],al
   14000ef03:	08 03                	or     BYTE PTR [rbx],al
   14000ef05:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000ef08:	70 6c                	jo     14000ef76 <.debug_info+0xf4e>
   14000ef0a:	65 78 20             	gs js  14000ef2d <.debug_info+0xf05>
   14000ef0d:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
   14000ef0f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000ef10:	61                   	(bad)
   14000ef11:	74 00                	je     14000ef13 <.debug_info+0xeeb>
   14000ef13:	02 10                	add    dl,BYTE PTR [rax]
   14000ef15:	03 63 6f             	add    esp,DWORD PTR [rbx+0x6f]
   14000ef18:	6d                   	ins    DWORD PTR es:[rdi],dx
   14000ef19:	70 6c                	jo     14000ef87 <.debug_info+0xf5f>
   14000ef1b:	65 78 20             	gs js  14000ef3e <.debug_info+0xf16>
   14000ef1e:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
   14000ef20:	75 62                	jne    14000ef84 <.debug_info+0xf5c>
   14000ef22:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000ef23:	65 00 02             	add    BYTE PTR gs:[rdx],al
   14000ef26:	20 03                	and    BYTE PTR [rbx],al
   14000ef28:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000ef2b:	70 6c                	jo     14000ef99 <.debug_info+0xf71>
   14000ef2d:	65 78 20             	gs js  14000ef50 <.debug_info+0xf28>
   14000ef30:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000ef31:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000ef32:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000ef33:	67 20 64 6f 75       	and    BYTE PTR [edi+ebp*2+0x75],ah
   14000ef38:	62                   	(bad)
   14000ef39:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000ef3a:	65 00 02             	add    BYTE PTR gs:[rdx],al
   14000ef3d:	10 04 5f             	adc    BYTE PTR [rdi+rbx*2],al
   14000ef40:	46 6c                	rex.RX ins BYTE PTR es:[rdi],dx
   14000ef42:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000ef43:	61                   	(bad)
   14000ef44:	74 31                	je     14000ef77 <.debug_info+0xf4f>
   14000ef46:	32 38                	xor    bh,BYTE PTR [rax]
   14000ef48:	00 02                	add    BYTE PTR [rdx],al
   14000ef4a:	20 03                	and    BYTE PTR [rbx],al
   14000ef4c:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000ef4f:	70 6c                	jo     14000efbd <.debug_info+0xf95>
   14000ef51:	65 78 20             	gs js  14000ef74 <.debug_info+0xf4c>
   14000ef54:	5f                   	pop    rdi
   14000ef55:	46 6c                	rex.RX ins BYTE PTR es:[rdi],dx
   14000ef57:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000ef58:	61                   	(bad)
   14000ef59:	74 31                	je     14000ef8c <.debug_info+0xf64>
   14000ef5b:	32 38                	xor    bh,BYTE PTR [rax]
   14000ef5d:	00 0a                	add    BYTE PTR [rdx],cl
   14000ef5f:	66 75 6e             	data16 jne 14000efd0 <.debug_info+0xfa8>
   14000ef62:	63 5f 70             	movsxd ebx,DWORD PTR [rdi+0x70]
   14000ef65:	74 72                	je     14000efd9 <.debug_info+0xfb1>
   14000ef67:	00 02                	add    BYTE PTR [rdx],al
   14000ef69:	2a 10                	sub    dl,BYTE PTR [rax]
   14000ef6b:	30 01                	xor    BYTE PTR [rcx],al
   14000ef6d:	00 00                	add    BYTE PTR [rax],al
   14000ef6f:	04 36                	add    al,0x36
   14000ef71:	0f 00 00             	sldt   WORD PTR [rax]
   14000ef74:	52                   	push   rdx
   14000ef75:	0f 00 00             	sldt   WORD PTR [rax]
   14000ef78:	0b 00                	or     eax,DWORD PTR [rax]
   14000ef7a:	05 5f 5f 43 54       	add    eax,0x54435f5f
   14000ef7f:	4f 52                	rex.WRXB push r10
   14000ef81:	5f                   	pop    rdi
   14000ef82:	4c                   	rex.WR
   14000ef83:	49 53                	rex.WB push r11
   14000ef85:	54                   	push   rsp
   14000ef86:	5f                   	pop    rdi
   14000ef87:	5f                   	pop    rdi
   14000ef88:	00 2f                	add    BYTE PTR [rdi],ch
   14000ef8a:	47 0f 00 00          	rex.RXB sldt WORD PTR [r8]
   14000ef8e:	05 5f 5f 44 54       	add    eax,0x54445f5f
   14000ef93:	4f 52                	rex.WRXB push r10
   14000ef95:	5f                   	pop    rdi
   14000ef96:	4c                   	rex.WR
   14000ef97:	49 53                	rex.WB push r11
   14000ef99:	54                   	push   rsp
   14000ef9a:	5f                   	pop    rdi
   14000ef9b:	5f                   	pop    rdi
   14000ef9c:	00 30                	add    BYTE PTR [rax],dh
   14000ef9e:	47 0f 00 00          	rex.RXB sldt WORD PTR [r8]
   14000efa2:	04 36                	add    al,0x36
   14000efa4:	0f 00 00             	sldt   WORD PTR [rax]
   14000efa7:	8a 0f                	mov    cl,BYTE PTR [rdi]
   14000efa9:	00 00                	add    BYTE PTR [rax],al
   14000efab:	0c 99                	or     al,0x99
   14000efad:	00 00                	add    BYTE PTR [rax],al
   14000efaf:	00 01                	add    BYTE PTR [rcx],al
   14000efb1:	00 06                	add    BYTE PTR [rsi],al
   14000efb3:	52                   	push   rdx
   14000efb4:	0f 00 00             	sldt   WORD PTR [rax]
   14000efb7:	94                   	xchg   esp,eax
   14000efb8:	09 7a 0f             	or     DWORD PTR [rdx+0xf],edi
   14000efbb:	00 00                	add    BYTE PTR [rax],al
   14000efbd:	09 03                	or     DWORD PTR [rbx],eax
   14000efbf:	60                   	(bad)
   14000efc0:	81 00 40 01 00 00    	add    DWORD PTR [rax],0x140
   14000efc6:	00 06                	add    BYTE PTR [rsi],al
   14000efc8:	66 0f 00 00          	data16 sldt WORD PTR [rax]
   14000efcc:	95                   	xchg   ebp,eax
   14000efcd:	09 7a 0f             	or     DWORD PTR [rdx+0xf],edi
   14000efd0:	00 00                	add    BYTE PTR [rax],al
   14000efd2:	09 03                	or     DWORD PTR [rbx],eax
   14000efd4:	50                   	push   rax
   14000efd5:	81 00 40 01 00 00    	add    DWORD PTR [rax],0x140
	...

Disassembly of section .debug_abbrev:

000000014000f000 <.debug_abbrev>:
   14000f000:	01 11                	add    DWORD PTR [rcx],edx
   14000f002:	00 10                	add    BYTE PTR [rax],dl
   14000f004:	17                   	(bad)
   14000f005:	11 01                	adc    DWORD PTR [rcx],eax
   14000f007:	12 0f                	adc    cl,BYTE PTR [rdi]
   14000f009:	03 0e                	add    ecx,DWORD PTR [rsi]
   14000f00b:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
   14000f00d:	25 0e 13 05 00       	and    eax,0x5130e
	...

000000014000f014 <.debug_abbrev>:
   14000f014:	01 28                	add    DWORD PTR [rax],ebp
   14000f016:	00 03                	add    BYTE PTR [rbx],al
   14000f018:	08 1c 0b             	or     BYTE PTR [rbx+rcx*1],bl
   14000f01b:	00 00                	add    BYTE PTR [rax],al
   14000f01d:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
   14000f020:	0b 0b                	or     ecx,DWORD PTR [rbx]
   14000f022:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
   14000f025:	08 00                	or     BYTE PTR [rax],al
   14000f027:	00 03                	add    BYTE PTR [rbx],al
   14000f029:	04 01                	add    al,0x1
   14000f02b:	03 08                	add    ecx,DWORD PTR [rax]
   14000f02d:	3e 21 07             	ds and DWORD PTR [rdi],eax
   14000f030:	0b 21                	or     esp,DWORD PTR [rcx]
   14000f032:	04 49                	add    al,0x49
   14000f034:	13 3a                	adc    edi,DWORD PTR [rdx]
   14000f036:	21 01                	and    DWORD PTR [rcx],eax
   14000f038:	3b 05 39 21 06 01    	cmp    eax,DWORD PTR [rip+0x1062139]        # 141071177 <.debug_line_str+0x105e0e0>
   14000f03e:	13 00                	adc    eax,DWORD PTR [rax]
   14000f040:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
   14000f043:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
   14000f046:	01 13                	add    DWORD PTR [rbx],edx
   14000f048:	00 00                	add    BYTE PTR [rax],al
   14000f04a:	05 34 00 03 08       	add    eax,0x8030034
   14000f04f:	3a 21                	cmp    ah,BYTE PTR [rcx]
   14000f051:	02 3b                	add    bh,BYTE PTR [rbx]
   14000f053:	0b 39                	or     edi,DWORD PTR [rcx]
   14000f055:	21 11                	and    DWORD PTR [rcx],edx
   14000f057:	49 13 3f             	adc    rdi,QWORD PTR [r15]
   14000f05a:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
   14000f05d:	00 00                	add    BYTE PTR [rax],al
   14000f05f:	06                   	(bad)
   14000f060:	34 00                	xor    al,0x0
   14000f062:	47 13 3a             	rex.RXB adc r15d,DWORD PTR [r10]
   14000f065:	21 03                	and    DWORD PTR [rbx],eax
   14000f067:	3b 05 39 21 0a 49    	cmp    eax,DWORD PTR [rip+0x490a2139]        # 1890b11a6 <.debug_line_str+0x4909e10f>
   14000f06d:	13 02                	adc    eax,DWORD PTR [rdx]
   14000f06f:	18 00                	sbb    BYTE PTR [rax],al
   14000f071:	00 07                	add    BYTE PTR [rdi],al
   14000f073:	11 01                	adc    DWORD PTR [rcx],eax
   14000f075:	25 08 13 0b 03       	and    eax,0x30b1308
   14000f07a:	1f                   	(bad)
   14000f07b:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
   14000f07d:	10 17                	adc    BYTE PTR [rdi],dl
   14000f07f:	00 00                	add    BYTE PTR [rax],al
   14000f081:	08 0f                	or     BYTE PTR [rdi],cl
   14000f083:	00 0b                	add    BYTE PTR [rbx],cl
   14000f085:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
   14000f088:	00 00                	add    BYTE PTR [rax],al
   14000f08a:	09 15 00 27 19 00    	or     DWORD PTR [rip+0x192700],edx        # 1401a1790 <.debug_line_str+0x18e6f9>
   14000f090:	00 0a                	add    BYTE PTR [rdx],cl
   14000f092:	16                   	(bad)
   14000f093:	00 03                	add    BYTE PTR [rbx],al
   14000f095:	08 3a                	or     BYTE PTR [rdx],bh
   14000f097:	0b 3b                	or     edi,DWORD PTR [rbx]
   14000f099:	0b 39                	or     edi,DWORD PTR [rcx]
   14000f09b:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
   14000f09e:	00 00                	add    BYTE PTR [rax],al
   14000f0a0:	0b 21                	or     esp,DWORD PTR [rcx]
   14000f0a2:	00 00                	add    BYTE PTR [rax],al
   14000f0a4:	00 0c 21             	add    BYTE PTR [rcx+riz*1],cl
   14000f0a7:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
   14000f0aa:	2f                   	(bad)
   14000f0ab:	0b 00                	or     eax,DWORD PTR [rax]
	...

Disassembly of section .debug_line:

0000000140010000 <.debug_line>:
   140010000:	58                   	pop    rax
   140010001:	00 00                	add    BYTE PTR [rax],al
   140010003:	00 05 00 08 00 2e    	add    BYTE PTR [rip+0x2e000800],al        # 16e010809 <.debug_line_str+0x2dffd772>
   140010009:	00 00                	add    BYTE PTR [rax],al
   14001000b:	00 01                	add    BYTE PTR [rcx],al
   14001000d:	01 01                	add    DWORD PTR [rcx],eax
   14001000f:	fb                   	sti
   140010010:	0e                   	(bad)
   140010011:	0d 00 01 01 01       	or     eax,0x1010100
   140010016:	01 00                	add    DWORD PTR [rax],eax
   140010018:	00 00                	add    BYTE PTR [rax],al
   14001001a:	01 00                	add    DWORD PTR [rax],eax
   14001001c:	00 01                	add    BYTE PTR [rcx],al
   14001001e:	01 01                	add    DWORD PTR [rcx],eax
   140010020:	1f                   	(bad)
   140010021:	02 00                	add    al,BYTE PTR [rax]
   140010023:	00 00                	add    BYTE PTR [rax],al
   140010025:	00 5f 00             	add    BYTE PTR [rdi+0x0],bl
   140010028:	00 00                	add    BYTE PTR [rax],al
   14001002a:	02 01                	add    al,BYTE PTR [rcx]
   14001002c:	1f                   	(bad)
   14001002d:	02 0f                	add    cl,BYTE PTR [rdi]
   14001002f:	02 8e 00 00 00 01    	add    cl,BYTE PTR [rsi+0x1000000]
   140010035:	8e 00                	mov    es,WORD PTR [rax]
   140010037:	00 00                	add    BYTE PTR [rax],al
   140010039:	01 00                	add    DWORD PTR [rax],eax
   14001003b:	09 02                	or     DWORD PTR [rdx],eax
   14001003d:	e0 2b                	loopne 14001006a <.debug_line+0xe>
   14001003f:	00 40 01             	add    BYTE PTR [rax+0x1],al
   140010042:	00 00                	add    BYTE PTR [rax],al
   140010044:	00 03                	add    BYTE PTR [rbx],al
   140010046:	f4                   	hlt
   140010047:	00 01                	add    BYTE PTR [rcx],al
   140010049:	22 22                	and    ah,BYTE PTR [rdx]
   14001004b:	67 59                	addr32 pop rcx
   14001004d:	30 75 4b             	xor    BYTE PTR [rbp+0x4b],dh
   140010050:	67 67 30 3d 4c 22 22 	addr32 xor BYTE PTR [eip+0x222224c],bh        # 1422322a4 <.debug_line_str+0x221f20d>
   140010057:	02 
   140010058:	01 00                	add    DWORD PTR [rax],eax
   14001005a:	01 01                	add    DWORD PTR [rcx],eax

000000014001005c <.debug_line>:
   14001005c:	44 00 00             	add    BYTE PTR [rax],r8b
   14001005f:	00 05 00 08 00 3c    	add    BYTE PTR [rip+0x3c000800],al        # 17c010865 <.debug_line_str+0x3bffd7ce>
   140010065:	00 00                	add    BYTE PTR [rax],al
   140010067:	00 01                	add    BYTE PTR [rcx],al
   140010069:	01 01                	add    DWORD PTR [rcx],eax
   14001006b:	fb                   	sti
   14001006c:	0e                   	(bad)
   14001006d:	0d 00 01 01 01       	or     eax,0x1010100
   140010072:	01 00                	add    DWORD PTR [rax],eax
   140010074:	00 00                	add    BYTE PTR [rax],al
   140010076:	01 00                	add    DWORD PTR [rax],eax
   140010078:	00 01                	add    BYTE PTR [rcx],al
   14001007a:	01 01                	add    DWORD PTR [rcx],eax
   14001007c:	1f                   	(bad)
   14001007d:	03 23                	add    esp,DWORD PTR [rbx]
   14001007f:	01 00                	add    DWORD PTR [rax],eax
   140010081:	00 82 01 00 00 a5    	add    BYTE PTR [rdx-0x5affffff],al
   140010087:	01 00                	add    DWORD PTR [rax],eax
   140010089:	00 02                	add    BYTE PTR [rdx],al
   14001008b:	01 1f                	add    DWORD PTR [rdi],ebx
   14001008d:	02 0f                	add    cl,BYTE PTR [rdi]
   14001008f:	04 d1                	add    al,0xd1
   140010091:	01 00                	add    DWORD PTR [rax],eax
   140010093:	00 01                	add    BYTE PTR [rcx],al
   140010095:	db 01                	fild   DWORD PTR [rcx]
   140010097:	00 00                	add    BYTE PTR [rax],al
   140010099:	02 e2                	add    ah,dl
   14001009b:	01 00                	add    DWORD PTR [rax],eax
   14001009d:	00 01                	add    BYTE PTR [rcx],al
   14001009f:	ee                   	out    dx,al
   1400100a0:	01 00                	add    DWORD PTR [rax],eax
   1400100a2:	00 01                	add    BYTE PTR [rcx],al

Disassembly of section .debug_frame:

0000000140011000 <.debug_frame>:
   140011000:	14 00                	adc    al,0x0
   140011002:	00 00                	add    BYTE PTR [rax],al
   140011004:	ff                   	(bad)
   140011005:	ff                   	(bad)
   140011006:	ff                   	(bad)
   140011007:	ff 01                	inc    DWORD PTR [rcx]
   140011009:	00 01                	add    BYTE PTR [rcx],al
   14001100b:	78 20                	js     14001102d <.debug_frame+0x2d>
   14001100d:	0c 07                	or     al,0x7
   14001100f:	08 a0 01 00 00 00    	or     BYTE PTR [rax+0x1],ah
   140011015:	00 00                	add    BYTE PTR [rax],al
   140011017:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
   14001101a:	00 00                	add    BYTE PTR [rax],al
   14001101c:	00 00                	add    BYTE PTR [rax],al
   14001101e:	00 00                	add    BYTE PTR [rax],al
   140011020:	e0 2b                	loopne 14001104d <.debug_frame+0x4d>
   140011022:	00 40 01             	add    BYTE PTR [rax+0x1],al
   140011025:	00 00                	add    BYTE PTR [rax],al
   140011027:	00 32                	add    BYTE PTR [rdx],dh
   140011029:	00 00                	add    BYTE PTR [rax],al
   14001102b:	00 00                	add    BYTE PTR [rax],al
   14001102d:	00 00                	add    BYTE PTR [rax],al
   14001102f:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
   140011032:	10 82 02 41 0e 18    	adc    BYTE PTR [rdx+0x180e4102],al
   140011038:	80 03 6e             	add    BYTE PTR [rbx],0x6e
   14001103b:	0e                   	(bad)
   14001103c:	10 c0                	adc    al,al
   14001103e:	41 0e                	rex.B (bad)
   140011040:	08 c2                	or     dl,al
   140011042:	00 00                	add    BYTE PTR [rax],al
   140011044:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_str:

0000000140012000 <.debug_str>:
   140012000:	43 3a 2f             	rex.XB cmp bpl,BYTE PTR [r15]
   140012003:	62 75                	(bad)
   140012005:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x2f746f6f
   14001200c:	2f 
   14001200d:	73 72                	jae    140012081 <.debug_str+0x81>
   14001200f:	63 2f                	movsxd ebp,DWORD PTR [rdi]
   140012011:	67 63 63 2d          	movsxd esp,DWORD PTR [ebx+0x2d]
   140012015:	31 33                	xor    DWORD PTR [rbx],esi
   140012017:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   14001201a:	30 2f                	xor    BYTE PTR [rdi],ch
   14001201c:	6c                   	ins    BYTE PTR es:[rdi],dx
   14001201d:	69 62 67 63 63 2f 63 	imul   esp,DWORD PTR [rdx+0x67],0x632f6363
   140012024:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140012025:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140012026:	66 69 67 2f 69 33    	imul   sp,WORD PTR [rdi+0x2f],0x3369
   14001202c:	38 36                	cmp    BYTE PTR [rsi],dh
   14001202e:	5c                   	pop    rsp
   14001202f:	63 79 67             	movsxd edi,DWORD PTR [rcx+0x67]
   140012032:	77 69                	ja     14001209d <.debug_str+0x9d>
   140012034:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140012035:	2e 53                	cs push rbx
   140012037:	00 43 3a             	add    BYTE PTR [rbx+0x3a],al
   14001203a:	5c                   	pop    rsp
   14001203b:	62 75                	(bad)
   14001203d:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x5c746f6f
   140012044:	5c 
   140012045:	78 38                	js     14001207f <.debug_str+0x7f>
   140012047:	36 5f                	ss pop rdi
   140012049:	36 34 2d             	ss xor al,0x2d
   14001204c:	31 33                	xor    DWORD PTR [rbx],esi
   14001204e:	32 30                	xor    dh,BYTE PTR [rax]
   140012050:	2d 77 69 6e 33       	sub    eax,0x336e6977
   140012055:	32 2d 73 65 68 2d    	xor    ch,BYTE PTR [rip+0x2d686573]        # 16d6985ce <.debug_line_str+0x2d685537>
   14001205b:	75 63                	jne    1400120c0 <.debug_str+0xc0>
   14001205d:	72 74                	jb     1400120d3 <.debug_str+0xd3>
   14001205f:	2d 72 74 5f 76       	sub    eax,0x765f7472
   140012064:	31 31                	xor    DWORD PTR [rcx],esi
   140012066:	2d 72 65 76 31       	sub    eax,0x31766572
   14001206b:	5c                   	pop    rsp
   14001206c:	62 75                	(bad)
   14001206e:	69 6c 64 5c 67 63 63 	imul   ebp,DWORD PTR [rsp+riz*2+0x5c],0x2d636367
   140012075:	2d 
   140012076:	31 33                	xor    DWORD PTR [rbx],esi
   140012078:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   14001207b:	30 5c 78 38          	xor    BYTE PTR [rax+rdi*2+0x38],bl
   14001207f:	36 5f                	ss pop rdi
   140012081:	36 34 2d             	ss xor al,0x2d
   140012084:	77 36                	ja     1400120bc <.debug_str+0xbc>
   140012086:	34 2d                	xor    al,0x2d
   140012088:	6d                   	ins    DWORD PTR es:[rdi],dx
   140012089:	69 6e 67 77 33 32 5c 	imul   ebp,DWORD PTR [rsi+0x67],0x5c323377
   140012090:	6c                   	ins    BYTE PTR es:[rdi],dx
   140012091:	69 62 67 63 63 00 47 	imul   esp,DWORD PTR [rdx+0x67],0x47006363
   140012098:	4e 55                	rex.WRX push rbp
   14001209a:	20 41 53             	and    BYTE PTR [rcx+0x53],al
   14001209d:	20 32                	and    BYTE PTR [rdx],dh
   14001209f:	2e 33 39             	cs xor edi,DWORD PTR [rcx]
	...

Disassembly of section .debug_line_str:

0000000140013000 <.debug_line_str>:
   140013000:	43 3a 5c 62 75       	cmp    bl,BYTE PTR [r10+r12*2+0x75]
   140013005:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x5c746f6f
   14001300c:	5c 
   14001300d:	78 38                	js     140013047 <.debug_line_str+0x47>
   14001300f:	36 5f                	ss pop rdi
   140013011:	36 34 2d             	ss xor al,0x2d
   140013014:	31 33                	xor    DWORD PTR [rbx],esi
   140013016:	32 30                	xor    dh,BYTE PTR [rax]
   140013018:	2d 77 69 6e 33       	sub    eax,0x336e6977
   14001301d:	32 2d 73 65 68 2d    	xor    ch,BYTE PTR [rip+0x2d686573]        # 16d699596 <.debug_line_str+0x2d6864ff>
   140013023:	75 63                	jne    140013088 <.debug_line_str+0x88>
   140013025:	72 74                	jb     14001309b <.debug_line_str+0x4>
   140013027:	2d 72 74 5f 76       	sub    eax,0x765f7472
   14001302c:	31 31                	xor    DWORD PTR [rcx],esi
   14001302e:	2d 72 65 76 31       	sub    eax,0x31766572
   140013033:	5c                   	pop    rsp
   140013034:	62 75                	(bad)
   140013036:	69 6c 64 5c 67 63 63 	imul   ebp,DWORD PTR [rsp+riz*2+0x5c],0x2d636367
   14001303d:	2d 
   14001303e:	31 33                	xor    DWORD PTR [rbx],esi
   140013040:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   140013043:	30 5c 78 38          	xor    BYTE PTR [rax+rdi*2+0x38],bl
   140013047:	36 5f                	ss pop rdi
   140013049:	36 34 2d             	ss xor al,0x2d
   14001304c:	77 36                	ja     140013084 <.debug_line_str+0x84>
   14001304e:	34 2d                	xor    al,0x2d
   140013050:	6d                   	ins    DWORD PTR es:[rdi],dx
   140013051:	69 6e 67 77 33 32 5c 	imul   ebp,DWORD PTR [rsi+0x67],0x5c323377
   140013058:	6c                   	ins    BYTE PTR es:[rdi],dx
   140013059:	69 62 67 63 63 00 43 	imul   esp,DWORD PTR [rdx+0x67],0x43006363
   140013060:	3a 2f                	cmp    ch,BYTE PTR [rdi]
   140013062:	62 75                	(bad)
   140013064:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x2f746f6f
   14001306b:	2f 
   14001306c:	73 72                	jae    1400130e0 <.debug_line_str+0x49>
   14001306e:	63 2f                	movsxd ebp,DWORD PTR [rdi]
   140013070:	67 63 63 2d          	movsxd esp,DWORD PTR [ebx+0x2d]
   140013074:	31 33                	xor    DWORD PTR [rbx],esi
   140013076:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   140013079:	30 2f                	xor    BYTE PTR [rdi],ch
   14001307b:	6c                   	ins    BYTE PTR es:[rdi],dx
   14001307c:	69 62 67 63 63 2f 63 	imul   esp,DWORD PTR [rdx+0x67],0x632f6363
   140013083:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140013084:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140013085:	66 69 67 2f 69 33    	imul   sp,WORD PTR [rdi+0x2f],0x3369
   14001308b:	38 36                	cmp    BYTE PTR [rsi],dh
   14001308d:	00 63 79             	add    BYTE PTR [rbx+0x79],ah
   140013090:	67 77 69             	addr32 ja 1400130fc <.debug_line_str+0x65>
   140013093:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140013094:	2e 53                	cs push rbx
	...

0000000140013097 <.debug_line_str>:
   140013097:	43 3a 2f             	rex.XB cmp bpl,BYTE PTR [r15]
   14001309a:	62 75                	(bad)
   14001309c:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x2f746f6f
   1400130a3:	2f 
   1400130a4:	73 72                	jae    140013118 <.debug_line_str+0x81>
   1400130a6:	63 2f                	movsxd ebp,DWORD PTR [rdi]
   1400130a8:	67 63 63 2d          	movsxd esp,DWORD PTR [ebx+0x2d]
   1400130ac:	31 33                	xor    DWORD PTR [rbx],esi
   1400130ae:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   1400130b1:	30 2f                	xor    BYTE PTR [rdi],ch
   1400130b3:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400130b4:	69 62 67 63 63 2f 6c 	imul   esp,DWORD PTR [rdx+0x67],0x6c2f6363
   1400130bb:	69 62 67 63 63 32 2e 	imul   esp,DWORD PTR [rdx+0x67],0x2e326363
   1400130c2:	63 00                	movsxd eax,DWORD PTR [rax]
   1400130c4:	43 3a 5c 62 75       	cmp    bl,BYTE PTR [r10+r12*2+0x75]
   1400130c9:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x5c746f6f
   1400130d0:	5c 
   1400130d1:	78 38                	js     14001310b <.debug_line_str+0x74>
   1400130d3:	36 5f                	ss pop rdi
   1400130d5:	36 34 2d             	ss xor al,0x2d
   1400130d8:	31 33                	xor    DWORD PTR [rbx],esi
   1400130da:	32 30                	xor    dh,BYTE PTR [rax]
   1400130dc:	2d 77 69 6e 33       	sub    eax,0x336e6977
   1400130e1:	32 2d 73 65 68 2d    	xor    ch,BYTE PTR [rip+0x2d686573]        # 16d69965a <.debug_line_str+0x2d6865c3>
   1400130e7:	75 63                	jne    14001314c <.debug_line_str+0xb5>
   1400130e9:	72 74                	jb     14001315f <.debug_line_str+0xc8>
   1400130eb:	2d 72 74 5f 76       	sub    eax,0x765f7472
   1400130f0:	31 31                	xor    DWORD PTR [rcx],esi
   1400130f2:	2d 72 65 76 31       	sub    eax,0x31766572
   1400130f7:	5c                   	pop    rsp
   1400130f8:	62 75                	(bad)
   1400130fa:	69 6c 64 5c 67 63 63 	imul   ebp,DWORD PTR [rsp+riz*2+0x5c],0x2d636367
   140013101:	2d 
   140013102:	31 33                	xor    DWORD PTR [rbx],esi
   140013104:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   140013107:	30 5c 78 38          	xor    BYTE PTR [rax+rdi*2+0x38],bl
   14001310b:	36 5f                	ss pop rdi
   14001310d:	36 34 2d             	ss xor al,0x2d
   140013110:	77 36                	ja     140013148 <.debug_line_str+0xb1>
   140013112:	34 2d                	xor    al,0x2d
   140013114:	6d                   	ins    DWORD PTR es:[rdi],dx
   140013115:	69 6e 67 77 33 32 5c 	imul   ebp,DWORD PTR [rsi+0x67],0x5c323377
   14001311c:	6c                   	ins    BYTE PTR es:[rdi],dx
   14001311d:	69 62 67 63 63 00 43 	imul   esp,DWORD PTR [rdx+0x67],0x43006363
   140013124:	3a 2f                	cmp    ch,BYTE PTR [rdi]
   140013126:	62 75                	(bad)
   140013128:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x2f746f6f
   14001312f:	2f 
   140013130:	78 38                	js     14001316a <.debug_line_str+0xd3>
   140013132:	36 5f                	ss pop rdi
   140013134:	36 34 2d             	ss xor al,0x2d
   140013137:	31 33                	xor    DWORD PTR [rbx],esi
   140013139:	32 30                	xor    dh,BYTE PTR [rax]
   14001313b:	2d 77 69 6e 33       	sub    eax,0x336e6977
   140013140:	32 2d 73 65 68 2d    	xor    ch,BYTE PTR [rip+0x2d686573]        # 16d6996b9 <.debug_line_str+0x2d686622>
   140013146:	75 63                	jne    1400131ab <.debug_line_str+0x114>
   140013148:	72 74                	jb     1400131be <.debug_line_str+0x127>
   14001314a:	2d 72 74 5f 76       	sub    eax,0x765f7472
   14001314f:	31 31                	xor    DWORD PTR [rcx],esi
   140013151:	2d 72 65 76 31       	sub    eax,0x31766572
   140013156:	2f                   	(bad)
   140013157:	62 75                	(bad)
   140013159:	69 6c 64 2f 67 63 63 	imul   ebp,DWORD PTR [rsp+riz*2+0x2f],0x2d636367
   140013160:	2d 
   140013161:	31 33                	xor    DWORD PTR [rbx],esi
   140013163:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   140013166:	30 2f                	xor    BYTE PTR [rdi],ch
   140013168:	78 38                	js     1400131a2 <.debug_line_str+0x10b>
   14001316a:	36 5f                	ss pop rdi
   14001316c:	36 34 2d             	ss xor al,0x2d
   14001316f:	77 36                	ja     1400131a7 <.debug_line_str+0x110>
   140013171:	34 2d                	xor    al,0x2d
   140013173:	6d                   	ins    DWORD PTR es:[rdi],dx
   140013174:	69 6e 67 77 33 32 2f 	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
   14001317b:	6c                   	ins    BYTE PTR es:[rdi],dx
   14001317c:	69 62 67 63 63 00 43 	imul   esp,DWORD PTR [rdx+0x67],0x43006363
   140013183:	3a 2f                	cmp    ch,BYTE PTR [rdi]
   140013185:	62 75                	(bad)
   140013187:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x2f746f6f
   14001318e:	2f 
   14001318f:	73 72                	jae    140013203 <.debug_line_str+0x16c>
   140013191:	63 2f                	movsxd ebp,DWORD PTR [rdi]
   140013193:	67 63 63 2d          	movsxd esp,DWORD PTR [ebx+0x2d]
   140013197:	31 33                	xor    DWORD PTR [rbx],esi
   140013199:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   14001319c:	30 2f                	xor    BYTE PTR [rdi],ch
   14001319e:	6c                   	ins    BYTE PTR es:[rdi],dx
   14001319f:	69 62 67 63 63 00 43 	imul   esp,DWORD PTR [rdx+0x67],0x43006363
   1400131a6:	3a 2f                	cmp    ch,BYTE PTR [rdi]
   1400131a8:	62 75                	(bad)
   1400131aa:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x2f746f6f
   1400131b1:	2f 
   1400131b2:	73 72                	jae    140013226 <.debug_line_str+0x18f>
   1400131b4:	63 2f                	movsxd ebp,DWORD PTR [rdi]
   1400131b6:	67 63 63 2d          	movsxd esp,DWORD PTR [ebx+0x2d]
   1400131ba:	31 33                	xor    DWORD PTR [rbx],esi
   1400131bc:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   1400131bf:	30 2f                	xor    BYTE PTR [rdi],ch
   1400131c1:	67 63 63 2f          	movsxd esp,DWORD PTR [ebx+0x2f]
   1400131c5:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400131c8:	66 69 67 2f 69 33    	imul   sp,WORD PTR [rdi+0x2f],0x3369
   1400131ce:	38 36                	cmp    BYTE PTR [rsi],dh
   1400131d0:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
   1400131d4:	67 63 63 32          	movsxd esp,DWORD PTR [ebx+0x32]
   1400131d8:	2e 63 00             	cs movsxd eax,DWORD PTR [rax]
   1400131db:	69 33 38 36 2e 68    	imul   esi,DWORD PTR [rbx],0x682e3638
   1400131e1:	00 67 62             	add    BYTE PTR [rdi+0x62],ah
   1400131e4:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400131e5:	2d 63 74 6f 72       	sub    eax,0x726f7463
   1400131ea:	73 2e                	jae    14001321a <.debug_line_str+0x183>
   1400131ec:	68 00 6c 69 62       	push   0x62696c00
   1400131f1:	67 63 63 32          	movsxd esp,DWORD PTR [ebx+0x32]
   1400131f5:	2e 63 00             	cs movsxd eax,DWORD PTR [rax]
