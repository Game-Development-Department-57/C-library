
test.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <__mingw_invalidParameterHandler>:
   140001000:	c3                   	ret
   140001001:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   140001008:	00 00 00 00 
   14000100c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000140001010 <pre_c_init>:
   140001010:	48 83 ec 28          	sub    rsp,0x28
   140001014:	48 8b 05 35 34 00 00 	mov    rax,QWORD PTR [rip+0x3435]        # 140004450 <.refptr.__mingw_initltsdrot_force>
   14000101b:	31 c9                	xor    ecx,ecx
   14000101d:	c7 00 01 00 00 00    	mov    DWORD PTR [rax],0x1
   140001023:	48 8b 05 36 34 00 00 	mov    rax,QWORD PTR [rip+0x3436]        # 140004460 <.refptr.__mingw_initltsdyn_force>
   14000102a:	c7 00 01 00 00 00    	mov    DWORD PTR [rax],0x1
   140001030:	48 8b 05 39 34 00 00 	mov    rax,QWORD PTR [rip+0x3439]        # 140004470 <.refptr.__mingw_initltssuo_force>
   140001037:	c7 00 01 00 00 00    	mov    DWORD PTR [rax],0x1
   14000103d:	48 8b 05 ac 33 00 00 	mov    rax,QWORD PTR [rip+0x33ac]        # 1400043f0 <.refptr.__image_base__>
   140001044:	66 81 38 4d 5a       	cmp    WORD PTR [rax],0x5a4d
   140001049:	75 0f                	jne    14000105a <pre_c_init+0x4a>
   14000104b:	48 63 50 3c          	movsxd rdx,DWORD PTR [rax+0x3c]
   14000104f:	48 01 d0             	add    rax,rdx
   140001052:	81 38 50 45 00 00    	cmp    DWORD PTR [rax],0x4550
   140001058:	74 66                	je     1400010c0 <pre_c_init+0xb0>
   14000105a:	48 8b 05 df 33 00 00 	mov    rax,QWORD PTR [rip+0x33df]        # 140004440 <.refptr.__mingw_app_type>
   140001061:	89 0d a5 5f 00 00    	mov    DWORD PTR [rip+0x5fa5],ecx        # 14000700c <managedapp>
   140001067:	8b 00                	mov    eax,DWORD PTR [rax]
   140001069:	85 c0                	test   eax,eax
   14000106b:	74 43                	je     1400010b0 <pre_c_init+0xa0>
   14000106d:	b9 02 00 00 00       	mov    ecx,0x2
   140001072:	e8 f1 18 00 00       	call   140002968 <__set_app_type>
   140001077:	e8 74 18 00 00       	call   1400028f0 <__p__fmode>
   14000107c:	48 8b 15 9d 34 00 00 	mov    rdx,QWORD PTR [rip+0x349d]        # 140004520 <.refptr._fmode>
   140001083:	8b 12                	mov    edx,DWORD PTR [rdx]
   140001085:	89 10                	mov    DWORD PTR [rax],edx
   140001087:	e8 5c 18 00 00       	call   1400028e8 <__p__commode>
   14000108c:	48 8b 15 6d 34 00 00 	mov    rdx,QWORD PTR [rip+0x346d]        # 140004500 <.refptr._commode>
   140001093:	8b 12                	mov    edx,DWORD PTR [rdx]
   140001095:	89 10                	mov    DWORD PTR [rax],edx
   140001097:	e8 44 05 00 00       	call   1400015e0 <_setargv>
   14000109c:	48 8b 05 fd 32 00 00 	mov    rax,QWORD PTR [rip+0x32fd]        # 1400043a0 <.refptr._MINGW_INSTALL_DEBUG_MATHERR>
   1400010a3:	83 38 01             	cmp    DWORD PTR [rax],0x1
   1400010a6:	74 50                	je     1400010f8 <pre_c_init+0xe8>
   1400010a8:	31 c0                	xor    eax,eax
   1400010aa:	48 83 c4 28          	add    rsp,0x28
   1400010ae:	c3                   	ret
   1400010af:	90                   	nop
   1400010b0:	b9 01 00 00 00       	mov    ecx,0x1
   1400010b5:	e8 ae 18 00 00       	call   140002968 <__set_app_type>
   1400010ba:	eb bb                	jmp    140001077 <pre_c_init+0x67>
   1400010bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   1400010c0:	0f b7 50 18          	movzx  edx,WORD PTR [rax+0x18]
   1400010c4:	66 81 fa 0b 01       	cmp    dx,0x10b
   1400010c9:	74 45                	je     140001110 <pre_c_init+0x100>
   1400010cb:	66 81 fa 0b 02       	cmp    dx,0x20b
   1400010d0:	75 88                	jne    14000105a <pre_c_init+0x4a>
   1400010d2:	83 b8 84 00 00 00 0e 	cmp    DWORD PTR [rax+0x84],0xe
   1400010d9:	0f 86 7b ff ff ff    	jbe    14000105a <pre_c_init+0x4a>
   1400010df:	8b 90 f8 00 00 00    	mov    edx,DWORD PTR [rax+0xf8]
   1400010e5:	31 c9                	xor    ecx,ecx
   1400010e7:	85 d2                	test   edx,edx
   1400010e9:	0f 95 c1             	setne  cl
   1400010ec:	e9 69 ff ff ff       	jmp    14000105a <pre_c_init+0x4a>
   1400010f1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   1400010f8:	48 8b 0d 41 34 00 00 	mov    rcx,QWORD PTR [rip+0x3441]        # 140004540 <.refptr._matherr>
   1400010ff:	e8 4c 0c 00 00       	call   140001d50 <__mingw_setusermatherr>
   140001104:	31 c0                	xor    eax,eax
   140001106:	48 83 c4 28          	add    rsp,0x28
   14000110a:	c3                   	ret
   14000110b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140001110:	83 78 74 0e          	cmp    DWORD PTR [rax+0x74],0xe
   140001114:	0f 86 40 ff ff ff    	jbe    14000105a <pre_c_init+0x4a>
   14000111a:	44 8b 80 e8 00 00 00 	mov    r8d,DWORD PTR [rax+0xe8]
   140001121:	31 c9                	xor    ecx,ecx
   140001123:	45 85 c0             	test   r8d,r8d
   140001126:	0f 95 c1             	setne  cl
   140001129:	e9 2c ff ff ff       	jmp    14000105a <pre_c_init+0x4a>
   14000112e:	66 90                	xchg   ax,ax

0000000140001130 <pre_cpp_init>:
   140001130:	48 83 ec 38          	sub    rsp,0x38
   140001134:	48 8b 05 15 34 00 00 	mov    rax,QWORD PTR [rip+0x3415]        # 140004550 <.refptr._newmode>
   14000113b:	4c 8d 05 d6 5e 00 00 	lea    r8,[rip+0x5ed6]        # 140007018 <envp>
   140001142:	48 8d 15 d7 5e 00 00 	lea    rdx,[rip+0x5ed7]        # 140007020 <argv>
   140001149:	48 8d 0d d8 5e 00 00 	lea    rcx,[rip+0x5ed8]        # 140007028 <argc>
   140001150:	8b 00                	mov    eax,DWORD PTR [rax]
   140001152:	89 05 ac 5e 00 00    	mov    DWORD PTR [rip+0x5eac],eax        # 140007004 <startinfo>
   140001158:	48 8b 05 b1 33 00 00 	mov    rax,QWORD PTR [rip+0x33b1]        # 140004510 <.refptr._dowildcard>
   14000115f:	44 8b 08             	mov    r9d,DWORD PTR [rax]
   140001162:	48 8d 05 9b 5e 00 00 	lea    rax,[rip+0x5e9b]        # 140007004 <startinfo>
   140001169:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
   14000116e:	e8 1d 15 00 00       	call   140002690 <__getmainargs>
   140001173:	90                   	nop
   140001174:	48 83 c4 38          	add    rsp,0x38
   140001178:	c3                   	ret
   140001179:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000140001180 <__tmainCRTStartup>:
   140001180:	41 54                	push   r12
   140001182:	55                   	push   rbp
   140001183:	57                   	push   rdi
   140001184:	56                   	push   rsi
   140001185:	53                   	push   rbx
   140001186:	48 83 ec 20          	sub    rsp,0x20
   14000118a:	48 8b 1d 0f 33 00 00 	mov    rbx,QWORD PTR [rip+0x330f]        # 1400044a0 <.refptr.__native_startup_lock>
   140001191:	31 ff                	xor    edi,edi
   140001193:	65 48 8b 04 25 30 00 	mov    rax,QWORD PTR gs:0x30
   14000119a:	00 00 
   14000119c:	48 8b 2d 1d 71 00 00 	mov    rbp,QWORD PTR [rip+0x711d]        # 1400082c0 <__imp_Sleep>
   1400011a3:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
   1400011a7:	eb 17                	jmp    1400011c0 <__tmainCRTStartup+0x40>
   1400011a9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   1400011b0:	48 39 c6             	cmp    rsi,rax
   1400011b3:	0f 84 67 01 00 00    	je     140001320 <__tmainCRTStartup+0x1a0>
   1400011b9:	b9 e8 03 00 00       	mov    ecx,0x3e8
   1400011be:	ff d5                	call   rbp
   1400011c0:	48 89 f8             	mov    rax,rdi
   1400011c3:	f0 48 0f b1 33       	lock cmpxchg QWORD PTR [rbx],rsi
   1400011c8:	48 85 c0             	test   rax,rax
   1400011cb:	75 e3                	jne    1400011b0 <__tmainCRTStartup+0x30>
   1400011cd:	48 8b 35 dc 32 00 00 	mov    rsi,QWORD PTR [rip+0x32dc]        # 1400044b0 <.refptr.__native_startup_state>
   1400011d4:	31 ff                	xor    edi,edi
   1400011d6:	8b 06                	mov    eax,DWORD PTR [rsi]
   1400011d8:	83 f8 01             	cmp    eax,0x1
   1400011db:	0f 84 56 01 00 00    	je     140001337 <__tmainCRTStartup+0x1b7>
   1400011e1:	8b 06                	mov    eax,DWORD PTR [rsi]
   1400011e3:	85 c0                	test   eax,eax
   1400011e5:	0f 84 b5 01 00 00    	je     1400013a0 <__tmainCRTStartup+0x220>
   1400011eb:	c7 05 13 5e 00 00 01 	mov    DWORD PTR [rip+0x5e13],0x1        # 140007008 <has_cctor>
   1400011f2:	00 00 00 
   1400011f5:	8b 06                	mov    eax,DWORD PTR [rsi]
   1400011f7:	83 f8 01             	cmp    eax,0x1
   1400011fa:	0f 84 4c 01 00 00    	je     14000134c <__tmainCRTStartup+0x1cc>
   140001200:	85 ff                	test   edi,edi
   140001202:	0f 84 65 01 00 00    	je     14000136d <__tmainCRTStartup+0x1ed>
   140001208:	48 8b 05 d1 31 00 00 	mov    rax,QWORD PTR [rip+0x31d1]        # 1400043e0 <.refptr.__dyn_tls_init_callback>
   14000120f:	48 8b 00             	mov    rax,QWORD PTR [rax]
   140001212:	48 85 c0             	test   rax,rax
   140001215:	74 0c                	je     140001223 <__tmainCRTStartup+0xa3>
   140001217:	45 31 c0             	xor    r8d,r8d
   14000121a:	ba 02 00 00 00       	mov    edx,0x2
   14000121f:	31 c9                	xor    ecx,ecx
   140001221:	ff d0                	call   rax
   140001223:	e8 88 07 00 00       	call   1400019b0 <_pei386_runtime_relocator>
   140001228:	48 8b 0d 01 33 00 00 	mov    rcx,QWORD PTR [rip+0x3301]        # 140004530 <.refptr._gnu_exception_handler>
   14000122f:	ff 15 83 70 00 00    	call   QWORD PTR [rip+0x7083]        # 1400082b8 <__imp_SetUnhandledExceptionFilter>
   140001235:	48 8b 15 54 32 00 00 	mov    rdx,QWORD PTR [rip+0x3254]        # 140004490 <.refptr.__mingw_oldexcpt_handler>
   14000123c:	48 8d 0d bd fd ff ff 	lea    rcx,[rip+0xfffffffffffffdbd]        # 140001000 <__mingw_invalidParameterHandler>
   140001243:	48 89 02             	mov    QWORD PTR [rdx],rax
   140001246:	e8 25 17 00 00       	call   140002970 <_set_invalid_parameter_handler>
   14000124b:	e8 70 05 00 00       	call   1400017c0 <_fpreset>
   140001250:	8b 1d d2 5d 00 00    	mov    ebx,DWORD PTR [rip+0x5dd2]        # 140007028 <argc>
   140001256:	8d 7b 01             	lea    edi,[rbx+0x1]
   140001259:	48 63 ff             	movsxd rdi,edi
   14000125c:	48 c1 e7 03          	shl    rdi,0x3
   140001260:	48 89 f9             	mov    rcx,rdi
   140001263:	e8 60 17 00 00       	call   1400029c8 <malloc>
   140001268:	85 db                	test   ebx,ebx
   14000126a:	48 8b 2d af 5d 00 00 	mov    rbp,QWORD PTR [rip+0x5daf]        # 140007020 <argv>
   140001271:	49 89 c4             	mov    r12,rax
   140001274:	0f 8e 46 01 00 00    	jle    1400013c0 <__tmainCRTStartup+0x240>
   14000127a:	48 83 ef 08          	sub    rdi,0x8
   14000127e:	31 db                	xor    ebx,ebx
   140001280:	48 8b 4c 1d 00       	mov    rcx,QWORD PTR [rbp+rbx*1+0x0]
   140001285:	e8 46 16 00 00       	call   1400028d0 <strlen>
   14000128a:	48 8d 70 01          	lea    rsi,[rax+0x1]
   14000128e:	48 89 f1             	mov    rcx,rsi
   140001291:	e8 32 17 00 00       	call   1400029c8 <malloc>
   140001296:	49 89 f0             	mov    r8,rsi
   140001299:	49 89 04 1c          	mov    QWORD PTR [r12+rbx*1],rax
   14000129d:	48 8b 54 1d 00       	mov    rdx,QWORD PTR [rbp+rbx*1+0x0]
   1400012a2:	48 89 c1             	mov    rcx,rax
   1400012a5:	48 83 c3 08          	add    rbx,0x8
   1400012a9:	e8 ea 16 00 00       	call   140002998 <memcpy>
   1400012ae:	48 39 df             	cmp    rdi,rbx
   1400012b1:	75 cd                	jne    140001280 <__tmainCRTStartup+0x100>
   1400012b3:	4c 01 e7             	add    rdi,r12
   1400012b6:	48 c7 07 00 00 00 00 	mov    QWORD PTR [rdi],0x0
   1400012bd:	4c 89 25 5c 5d 00 00 	mov    QWORD PTR [rip+0x5d5c],r12        # 140007020 <argv>
   1400012c4:	e8 f7 02 00 00       	call   1400015c0 <__main>
   1400012c9:	48 8b 05 30 31 00 00 	mov    rax,QWORD PTR [rip+0x3130]        # 140004400 <.refptr.__imp___initenv>
   1400012d0:	4c 8b 05 41 5d 00 00 	mov    r8,QWORD PTR [rip+0x5d41]        # 140007018 <envp>
   1400012d7:	8b 0d 4b 5d 00 00    	mov    ecx,DWORD PTR [rip+0x5d4b]        # 140007028 <argc>
   1400012dd:	48 8b 00             	mov    rax,QWORD PTR [rax]
   1400012e0:	4c 89 00             	mov    QWORD PTR [rax],r8
   1400012e3:	48 8b 15 36 5d 00 00 	mov    rdx,QWORD PTR [rip+0x5d36]        # 140007020 <argv>
   1400012ea:	e8 a7 01 00 00       	call   140001496 <main>
   1400012ef:	8b 0d 17 5d 00 00    	mov    ecx,DWORD PTR [rip+0x5d17]        # 14000700c <managedapp>
   1400012f5:	89 05 15 5d 00 00    	mov    DWORD PTR [rip+0x5d15],eax        # 140007010 <mainret>
   1400012fb:	85 c9                	test   ecx,ecx
   1400012fd:	0f 84 c5 00 00 00    	je     1400013c8 <__tmainCRTStartup+0x248>
   140001303:	8b 15 ff 5c 00 00    	mov    edx,DWORD PTR [rip+0x5cff]        # 140007008 <has_cctor>
   140001309:	85 d2                	test   edx,edx
   14000130b:	74 73                	je     140001380 <__tmainCRTStartup+0x200>
   14000130d:	48 83 c4 20          	add    rsp,0x20
   140001311:	5b                   	pop    rbx
   140001312:	5e                   	pop    rsi
   140001313:	5f                   	pop    rdi
   140001314:	5d                   	pop    rbp
   140001315:	41 5c                	pop    r12
   140001317:	c3                   	ret
   140001318:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   14000131f:	00 
   140001320:	48 8b 35 89 31 00 00 	mov    rsi,QWORD PTR [rip+0x3189]        # 1400044b0 <.refptr.__native_startup_state>
   140001327:	bf 01 00 00 00       	mov    edi,0x1
   14000132c:	8b 06                	mov    eax,DWORD PTR [rsi]
   14000132e:	83 f8 01             	cmp    eax,0x1
   140001331:	0f 85 aa fe ff ff    	jne    1400011e1 <__tmainCRTStartup+0x61>
   140001337:	b9 1f 00 00 00       	mov    ecx,0x1f
   14000133c:	e8 6f 14 00 00       	call   1400027b0 <_amsg_exit>
   140001341:	8b 06                	mov    eax,DWORD PTR [rsi]
   140001343:	83 f8 01             	cmp    eax,0x1
   140001346:	0f 85 b4 fe ff ff    	jne    140001200 <__tmainCRTStartup+0x80>
   14000134c:	48 8b 15 7d 31 00 00 	mov    rdx,QWORD PTR [rip+0x317d]        # 1400044d0 <.refptr.__xc_z>
   140001353:	48 8b 0d 66 31 00 00 	mov    rcx,QWORD PTR [rip+0x3166]        # 1400044c0 <.refptr.__xc_a>
   14000135a:	e8 01 16 00 00       	call   140002960 <_initterm>
   14000135f:	85 ff                	test   edi,edi
   140001361:	c7 06 02 00 00 00    	mov    DWORD PTR [rsi],0x2
   140001367:	0f 85 9b fe ff ff    	jne    140001208 <__tmainCRTStartup+0x88>
   14000136d:	31 c0                	xor    eax,eax
   14000136f:	48 87 03             	xchg   QWORD PTR [rbx],rax
   140001372:	e9 91 fe ff ff       	jmp    140001208 <__tmainCRTStartup+0x88>
   140001377:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   14000137e:	00 00 
   140001380:	e8 a3 15 00 00       	call   140002928 <_cexit>
   140001385:	8b 05 85 5c 00 00    	mov    eax,DWORD PTR [rip+0x5c85]        # 140007010 <mainret>
   14000138b:	48 83 c4 20          	add    rsp,0x20
   14000138f:	5b                   	pop    rbx
   140001390:	5e                   	pop    rsi
   140001391:	5f                   	pop    rdi
   140001392:	5d                   	pop    rbp
   140001393:	41 5c                	pop    r12
   140001395:	c3                   	ret
   140001396:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   14000139d:	00 00 00 
   1400013a0:	48 8b 15 49 31 00 00 	mov    rdx,QWORD PTR [rip+0x3149]        # 1400044f0 <.refptr.__xi_z>
   1400013a7:	c7 06 01 00 00 00    	mov    DWORD PTR [rsi],0x1
   1400013ad:	48 8b 0d 2c 31 00 00 	mov    rcx,QWORD PTR [rip+0x312c]        # 1400044e0 <.refptr.__xi_a>
   1400013b4:	e8 a7 15 00 00       	call   140002960 <_initterm>
   1400013b9:	e9 37 fe ff ff       	jmp    1400011f5 <__tmainCRTStartup+0x75>
   1400013be:	66 90                	xchg   ax,ax
   1400013c0:	48 89 c7             	mov    rdi,rax
   1400013c3:	e9 ee fe ff ff       	jmp    1400012b6 <__tmainCRTStartup+0x136>
   1400013c8:	89 c1                	mov    ecx,eax
   1400013ca:	e8 a1 0d 00 00       	call   140002170 <exit>
   1400013cf:	90                   	nop

00000001400013d0 <WinMainCRTStartup>:
   1400013d0:	48 83 ec 28          	sub    rsp,0x28

00000001400013d4 <.l_startw>:
   1400013d4:	48 8b 05 65 30 00 00 	mov    rax,QWORD PTR [rip+0x3065]        # 140004440 <.refptr.__mingw_app_type>
   1400013db:	c7 00 01 00 00 00    	mov    DWORD PTR [rax],0x1
   1400013e1:	e8 9a fd ff ff       	call   140001180 <__tmainCRTStartup>
   1400013e6:	90                   	nop

00000001400013e7 <.l_endw>:
   1400013e7:	90                   	nop
   1400013e8:	48 83 c4 28          	add    rsp,0x28
   1400013ec:	c3                   	ret
   1400013ed:	0f 1f 00             	nop    DWORD PTR [rax]

00000001400013f0 <mainCRTStartup>:
   1400013f0:	48 83 ec 28          	sub    rsp,0x28

00000001400013f4 <.l_start>:
   1400013f4:	48 8b 05 45 30 00 00 	mov    rax,QWORD PTR [rip+0x3045]        # 140004440 <.refptr.__mingw_app_type>
   1400013fb:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
   140001401:	e8 7a fd ff ff       	call   140001180 <__tmainCRTStartup>
   140001406:	90                   	nop

0000000140001407 <.l_end>:
   140001407:	90                   	nop
   140001408:	48 83 c4 28          	add    rsp,0x28
   14000140c:	c3                   	ret
   14000140d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000140001410 <atexit>:
   140001410:	48 83 ec 28          	sub    rsp,0x28
   140001414:	e8 57 13 00 00       	call   140002770 <_onexit>
   140001419:	48 83 f8 01          	cmp    rax,0x1
   14000141d:	19 c0                	sbb    eax,eax
   14000141f:	48 83 c4 28          	add    rsp,0x28
   140001423:	c3                   	ret
   140001424:	90                   	nop
   140001425:	90                   	nop
   140001426:	90                   	nop
   140001427:	90                   	nop
   140001428:	90                   	nop
   140001429:	90                   	nop
   14000142a:	90                   	nop
   14000142b:	90                   	nop
   14000142c:	90                   	nop
   14000142d:	90                   	nop
   14000142e:	90                   	nop
   14000142f:	90                   	nop

0000000140001430 <__gcc_register_frame>:
   140001430:	48 8d 0d 09 00 00 00 	lea    rcx,[rip+0x9]        # 140001440 <__gcc_deregister_frame>
   140001437:	e9 d4 ff ff ff       	jmp    140001410 <atexit>
   14000143c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000140001440 <__gcc_deregister_frame>:
   140001440:	c3                   	ret
   140001441:	90                   	nop
   140001442:	90                   	nop
   140001443:	90                   	nop
   140001444:	90                   	nop
   140001445:	90                   	nop
   140001446:	90                   	nop
   140001447:	90                   	nop
   140001448:	90                   	nop
   140001449:	90                   	nop
   14000144a:	90                   	nop
   14000144b:	90                   	nop
   14000144c:	90                   	nop
   14000144d:	90                   	nop
   14000144e:	90                   	nop
   14000144f:	90                   	nop

0000000140001450 <errGetSign>:
   140001450:	55                   	push   rbp
   140001451:	48 89 e5             	mov    rbp,rsp
   140001454:	89 4d 10             	mov    DWORD PTR [rbp+0x10],ecx
   140001457:	8b 45 10             	mov    eax,DWORD PTR [rbp+0x10]
   14000145a:	c1 e8 1f             	shr    eax,0x1f
   14000145d:	5d                   	pop    rbp
   14000145e:	c3                   	ret

000000014000145f <errGetReserved>:
   14000145f:	55                   	push   rbp
   140001460:	48 89 e5             	mov    rbp,rsp
   140001463:	89 4d 10             	mov    DWORD PTR [rbp+0x10],ecx
   140001466:	8b 45 10             	mov    eax,DWORD PTR [rbp+0x10]
   140001469:	c1 f8 18             	sar    eax,0x18
   14000146c:	83 e0 7f             	and    eax,0x7f
   14000146f:	5d                   	pop    rbp
   140001470:	c3                   	ret

0000000140001471 <errGetRecordA>:
   140001471:	55                   	push   rbp
   140001472:	48 89 e5             	mov    rbp,rsp
   140001475:	89 4d 10             	mov    DWORD PTR [rbp+0x10],ecx
   140001478:	8b 45 10             	mov    eax,DWORD PTR [rbp+0x10]
   14000147b:	c1 f8 0c             	sar    eax,0xc
   14000147e:	25 ff 0f 00 00       	and    eax,0xfff
   140001483:	5d                   	pop    rbp
   140001484:	c3                   	ret

0000000140001485 <errGetRecordB>:
   140001485:	55                   	push   rbp
   140001486:	48 89 e5             	mov    rbp,rsp
   140001489:	89 4d 10             	mov    DWORD PTR [rbp+0x10],ecx
   14000148c:	8b 45 10             	mov    eax,DWORD PTR [rbp+0x10]
   14000148f:	25 ff 0f 00 00       	and    eax,0xfff
   140001494:	5d                   	pop    rbp
   140001495:	c3                   	ret

0000000140001496 <main>:
   140001496:	55                   	push   rbp
   140001497:	57                   	push   rdi
   140001498:	56                   	push   rsi
   140001499:	53                   	push   rbx
   14000149a:	48 83 ec 48          	sub    rsp,0x48
   14000149e:	48 8d 6c 24 40       	lea    rbp,[rsp+0x40]
   1400014a3:	e8 18 01 00 00       	call   1400015c0 <__main>
   1400014a8:	c7 45 fc 00 10 00 80 	mov    DWORD PTR [rbp-0x4],0x80001000
   1400014af:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   1400014b2:	89 c1                	mov    ecx,eax
   1400014b4:	e8 cc ff ff ff       	call   140001485 <errGetRecordB>
   1400014b9:	89 c3                	mov    ebx,eax
   1400014bb:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   1400014be:	89 c1                	mov    ecx,eax
   1400014c0:	e8 ac ff ff ff       	call   140001471 <errGetRecordA>
   1400014c5:	89 c7                	mov    edi,eax
   1400014c7:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   1400014ca:	89 c1                	mov    ecx,eax
   1400014cc:	e8 8e ff ff ff       	call   14000145f <errGetReserved>
   1400014d1:	89 c6                	mov    esi,eax
   1400014d3:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
   1400014d6:	89 c1                	mov    ecx,eax
   1400014d8:	e8 73 ff ff ff       	call   140001450 <errGetSign>
   1400014dd:	89 5c 24 20          	mov    DWORD PTR [rsp+0x20],ebx
   1400014e1:	41 89 f9             	mov    r9d,edi
   1400014e4:	41 89 f0             	mov    r8d,esi
   1400014e7:	89 c2                	mov    edx,eax
   1400014e9:	48 8d 05 10 2b 00 00 	lea    rax,[rip+0x2b10]        # 140004000 <.rdata>
   1400014f0:	48 89 c1             	mov    rcx,rax
   1400014f3:	e8 f8 10 00 00       	call   1400025f0 <printf>
   1400014f8:	b8 00 00 00 00       	mov    eax,0x0
   1400014fd:	48 83 c4 48          	add    rsp,0x48
   140001501:	5b                   	pop    rbx
   140001502:	5e                   	pop    rsi
   140001503:	5f                   	pop    rdi
   140001504:	5d                   	pop    rbp
   140001505:	c3                   	ret
   140001506:	90                   	nop
   140001507:	90                   	nop
   140001508:	90                   	nop
   140001509:	90                   	nop
   14000150a:	90                   	nop
   14000150b:	90                   	nop
   14000150c:	90                   	nop
   14000150d:	90                   	nop
   14000150e:	90                   	nop
   14000150f:	90                   	nop

0000000140001510 <__do_global_dtors>:
   140001510:	48 83 ec 28          	sub    rsp,0x28
   140001514:	48 8b 05 e5 1a 00 00 	mov    rax,QWORD PTR [rip+0x1ae5]        # 140003000 <__data_start__>
   14000151b:	48 8b 00             	mov    rax,QWORD PTR [rax]
   14000151e:	48 85 c0             	test   rax,rax
   140001521:	74 22                	je     140001545 <__do_global_dtors+0x35>
   140001523:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140001528:	ff d0                	call   rax
   14000152a:	48 8b 05 cf 1a 00 00 	mov    rax,QWORD PTR [rip+0x1acf]        # 140003000 <__data_start__>
   140001531:	48 8d 50 08          	lea    rdx,[rax+0x8]
   140001535:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
   140001539:	48 89 15 c0 1a 00 00 	mov    QWORD PTR [rip+0x1ac0],rdx        # 140003000 <__data_start__>
   140001540:	48 85 c0             	test   rax,rax
   140001543:	75 e3                	jne    140001528 <__do_global_dtors+0x18>
   140001545:	48 83 c4 28          	add    rsp,0x28
   140001549:	c3                   	ret
   14000154a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000140001550 <__do_global_ctors>:
   140001550:	56                   	push   rsi
   140001551:	53                   	push   rbx
   140001552:	48 83 ec 28          	sub    rsp,0x28
   140001556:	48 8b 15 53 2e 00 00 	mov    rdx,QWORD PTR [rip+0x2e53]        # 1400043b0 <.refptr.__CTOR_LIST__>
   14000155d:	48 8b 02             	mov    rax,QWORD PTR [rdx]
   140001560:	83 f8 ff             	cmp    eax,0xffffffff
   140001563:	89 c1                	mov    ecx,eax
   140001565:	74 39                	je     1400015a0 <__do_global_ctors+0x50>
   140001567:	85 c9                	test   ecx,ecx
   140001569:	74 20                	je     14000158b <__do_global_ctors+0x3b>
   14000156b:	89 c8                	mov    eax,ecx
   14000156d:	83 e9 01             	sub    ecx,0x1
   140001570:	48 8d 1c c2          	lea    rbx,[rdx+rax*8]
   140001574:	48 29 c8             	sub    rax,rcx
   140001577:	48 8d 74 c2 f8       	lea    rsi,[rdx+rax*8-0x8]
   14000157c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140001580:	ff 13                	call   QWORD PTR [rbx]
   140001582:	48 83 eb 08          	sub    rbx,0x8
   140001586:	48 39 f3             	cmp    rbx,rsi
   140001589:	75 f5                	jne    140001580 <__do_global_ctors+0x30>
   14000158b:	48 8d 0d 7e ff ff ff 	lea    rcx,[rip+0xffffffffffffff7e]        # 140001510 <__do_global_dtors>
   140001592:	48 83 c4 28          	add    rsp,0x28
   140001596:	5b                   	pop    rbx
   140001597:	5e                   	pop    rsi
   140001598:	e9 73 fe ff ff       	jmp    140001410 <atexit>
   14000159d:	0f 1f 00             	nop    DWORD PTR [rax]
   1400015a0:	31 c0                	xor    eax,eax
   1400015a2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   1400015a8:	44 8d 40 01          	lea    r8d,[rax+0x1]
   1400015ac:	89 c1                	mov    ecx,eax
   1400015ae:	4a 83 3c c2 00       	cmp    QWORD PTR [rdx+r8*8],0x0
   1400015b3:	4c 89 c0             	mov    rax,r8
   1400015b6:	75 f0                	jne    1400015a8 <__do_global_ctors+0x58>
   1400015b8:	eb ad                	jmp    140001567 <__do_global_ctors+0x17>
   1400015ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000001400015c0 <__main>:
   1400015c0:	8b 05 6a 5a 00 00    	mov    eax,DWORD PTR [rip+0x5a6a]        # 140007030 <initialized>
   1400015c6:	85 c0                	test   eax,eax
   1400015c8:	74 06                	je     1400015d0 <__main+0x10>
   1400015ca:	c3                   	ret
   1400015cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   1400015d0:	c7 05 56 5a 00 00 01 	mov    DWORD PTR [rip+0x5a56],0x1        # 140007030 <initialized>
   1400015d7:	00 00 00 
   1400015da:	e9 71 ff ff ff       	jmp    140001550 <__do_global_ctors>
   1400015df:	90                   	nop

00000001400015e0 <_setargv>:
   1400015e0:	31 c0                	xor    eax,eax
   1400015e2:	c3                   	ret
   1400015e3:	90                   	nop
   1400015e4:	90                   	nop
   1400015e5:	90                   	nop
   1400015e6:	90                   	nop
   1400015e7:	90                   	nop
   1400015e8:	90                   	nop
   1400015e9:	90                   	nop
   1400015ea:	90                   	nop
   1400015eb:	90                   	nop
   1400015ec:	90                   	nop
   1400015ed:	90                   	nop
   1400015ee:	90                   	nop
   1400015ef:	90                   	nop

00000001400015f0 <__dyn_tls_dtor>:
   1400015f0:	48 83 ec 28          	sub    rsp,0x28
   1400015f4:	83 fa 03             	cmp    edx,0x3
   1400015f7:	74 17                	je     140001610 <__dyn_tls_dtor+0x20>
   1400015f9:	85 d2                	test   edx,edx
   1400015fb:	74 13                	je     140001610 <__dyn_tls_dtor+0x20>
   1400015fd:	b8 01 00 00 00       	mov    eax,0x1
   140001602:	48 83 c4 28          	add    rsp,0x28
   140001606:	c3                   	ret
   140001607:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   14000160e:	00 00 
   140001610:	e8 5b 0a 00 00       	call   140002070 <__mingw_TLScallback>
   140001615:	b8 01 00 00 00       	mov    eax,0x1
   14000161a:	48 83 c4 28          	add    rsp,0x28
   14000161e:	c3                   	ret
   14000161f:	90                   	nop

0000000140001620 <__dyn_tls_init>:
   140001620:	56                   	push   rsi
   140001621:	53                   	push   rbx
   140001622:	48 83 ec 28          	sub    rsp,0x28
   140001626:	48 8b 05 63 2d 00 00 	mov    rax,QWORD PTR [rip+0x2d63]        # 140004390 <.refptr._CRT_MT>
   14000162d:	83 38 02             	cmp    DWORD PTR [rax],0x2
   140001630:	74 06                	je     140001638 <__dyn_tls_init+0x18>
   140001632:	c7 00 02 00 00 00    	mov    DWORD PTR [rax],0x2
   140001638:	83 fa 02             	cmp    edx,0x2
   14000163b:	74 13                	je     140001650 <__dyn_tls_init+0x30>
   14000163d:	83 fa 01             	cmp    edx,0x1
   140001640:	74 4e                	je     140001690 <__dyn_tls_init+0x70>
   140001642:	b8 01 00 00 00       	mov    eax,0x1
   140001647:	48 83 c4 28          	add    rsp,0x28
   14000164b:	5b                   	pop    rbx
   14000164c:	5e                   	pop    rsi
   14000164d:	c3                   	ret
   14000164e:	66 90                	xchg   ax,ax
   140001650:	48 8d 1d 01 7a 00 00 	lea    rbx,[rip+0x7a01]        # 140009058 <__xd_z>
   140001657:	48 8d 35 fa 79 00 00 	lea    rsi,[rip+0x79fa]        # 140009058 <__xd_z>
   14000165e:	48 39 de             	cmp    rsi,rbx
   140001661:	74 df                	je     140001642 <__dyn_tls_init+0x22>
   140001663:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140001668:	48 8b 03             	mov    rax,QWORD PTR [rbx]
   14000166b:	48 85 c0             	test   rax,rax
   14000166e:	74 02                	je     140001672 <__dyn_tls_init+0x52>
   140001670:	ff d0                	call   rax
   140001672:	48 83 c3 08          	add    rbx,0x8
   140001676:	48 39 de             	cmp    rsi,rbx
   140001679:	75 ed                	jne    140001668 <__dyn_tls_init+0x48>
   14000167b:	b8 01 00 00 00       	mov    eax,0x1
   140001680:	48 83 c4 28          	add    rsp,0x28
   140001684:	5b                   	pop    rbx
   140001685:	5e                   	pop    rsi
   140001686:	c3                   	ret
   140001687:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   14000168e:	00 00 
   140001690:	e8 db 09 00 00       	call   140002070 <__mingw_TLScallback>
   140001695:	b8 01 00 00 00       	mov    eax,0x1
   14000169a:	48 83 c4 28          	add    rsp,0x28
   14000169e:	5b                   	pop    rbx
   14000169f:	5e                   	pop    rsi
   1400016a0:	c3                   	ret
   1400016a1:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1400016a8:	00 00 00 00 
   1400016ac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000001400016b0 <__tlregdtor>:
   1400016b0:	31 c0                	xor    eax,eax
   1400016b2:	c3                   	ret
   1400016b3:	90                   	nop
   1400016b4:	90                   	nop
   1400016b5:	90                   	nop
   1400016b6:	90                   	nop
   1400016b7:	90                   	nop
   1400016b8:	90                   	nop
   1400016b9:	90                   	nop
   1400016ba:	90                   	nop
   1400016bb:	90                   	nop
   1400016bc:	90                   	nop
   1400016bd:	90                   	nop
   1400016be:	90                   	nop
   1400016bf:	90                   	nop

00000001400016c0 <_matherr>:
   1400016c0:	56                   	push   rsi
   1400016c1:	53                   	push   rbx
   1400016c2:	48 83 ec 78          	sub    rsp,0x78
   1400016c6:	0f 29 74 24 40       	movaps XMMWORD PTR [rsp+0x40],xmm6
   1400016cb:	0f 29 7c 24 50       	movaps XMMWORD PTR [rsp+0x50],xmm7
   1400016d0:	44 0f 29 44 24 60    	movaps XMMWORD PTR [rsp+0x60],xmm8
   1400016d6:	83 39 06             	cmp    DWORD PTR [rcx],0x6
   1400016d9:	0f 87 cd 00 00 00    	ja     1400017ac <_matherr+0xec>
   1400016df:	8b 01                	mov    eax,DWORD PTR [rcx]
   1400016e1:	48 8d 15 dc 2a 00 00 	lea    rdx,[rip+0x2adc]        # 1400041c4 <.rdata+0x124>
   1400016e8:	48 63 04 82          	movsxd rax,DWORD PTR [rdx+rax*4]
   1400016ec:	48 01 d0             	add    rax,rdx
   1400016ef:	ff e0                	jmp    rax
   1400016f1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   1400016f8:	48 8d 1d c0 29 00 00 	lea    rbx,[rip+0x29c0]        # 1400040bf <.rdata+0x1f>
   1400016ff:	48 8b 71 08          	mov    rsi,QWORD PTR [rcx+0x8]
   140001703:	f2 44 0f 10 41 20    	movsd  xmm8,QWORD PTR [rcx+0x20]
   140001709:	f2 0f 10 79 18       	movsd  xmm7,QWORD PTR [rcx+0x18]
   14000170e:	f2 0f 10 71 10       	movsd  xmm6,QWORD PTR [rcx+0x10]
   140001713:	b9 02 00 00 00       	mov    ecx,0x2
   140001718:	e8 c3 11 00 00       	call   1400028e0 <__acrt_iob_func>
   14000171d:	f2 44 0f 11 44 24 30 	movsd  QWORD PTR [rsp+0x30],xmm8
   140001724:	49 89 f1             	mov    r9,rsi
   140001727:	49 89 d8             	mov    r8,rbx
   14000172a:	f2 0f 11 7c 24 28    	movsd  QWORD PTR [rsp+0x28],xmm7
   140001730:	48 89 c1             	mov    rcx,rax
   140001733:	f2 0f 11 74 24 20    	movsd  QWORD PTR [rsp+0x20],xmm6
   140001739:	48 8d 15 58 2a 00 00 	lea    rdx,[rip+0x2a58]        # 140004198 <.rdata+0xf8>
   140001740:	e8 fb 0e 00 00       	call   140002640 <fprintf>
   140001745:	90                   	nop
   140001746:	0f 28 74 24 40       	movaps xmm6,XMMWORD PTR [rsp+0x40]
   14000174b:	31 c0                	xor    eax,eax
   14000174d:	0f 28 7c 24 50       	movaps xmm7,XMMWORD PTR [rsp+0x50]
   140001752:	44 0f 28 44 24 60    	movaps xmm8,XMMWORD PTR [rsp+0x60]
   140001758:	48 83 c4 78          	add    rsp,0x78
   14000175c:	5b                   	pop    rbx
   14000175d:	5e                   	pop    rsi
   14000175e:	c3                   	ret
   14000175f:	90                   	nop
   140001760:	48 8d 1d 39 29 00 00 	lea    rbx,[rip+0x2939]        # 1400040a0 <.rdata>
   140001767:	eb 96                	jmp    1400016ff <_matherr+0x3f>
   140001769:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   140001770:	48 8d 1d 89 29 00 00 	lea    rbx,[rip+0x2989]        # 140004100 <.rdata+0x60>
   140001777:	eb 86                	jmp    1400016ff <_matherr+0x3f>
   140001779:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   140001780:	48 8d 1d 59 29 00 00 	lea    rbx,[rip+0x2959]        # 1400040e0 <.rdata+0x40>
   140001787:	e9 73 ff ff ff       	jmp    1400016ff <_matherr+0x3f>
   14000178c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140001790:	48 8d 1d b9 29 00 00 	lea    rbx,[rip+0x29b9]        # 140004150 <.rdata+0xb0>
   140001797:	e9 63 ff ff ff       	jmp    1400016ff <_matherr+0x3f>
   14000179c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   1400017a0:	48 8d 1d 81 29 00 00 	lea    rbx,[rip+0x2981]        # 140004128 <.rdata+0x88>
   1400017a7:	e9 53 ff ff ff       	jmp    1400016ff <_matherr+0x3f>
   1400017ac:	48 8d 1d d3 29 00 00 	lea    rbx,[rip+0x29d3]        # 140004186 <.rdata+0xe6>
   1400017b3:	e9 47 ff ff ff       	jmp    1400016ff <_matherr+0x3f>
   1400017b8:	90                   	nop
   1400017b9:	90                   	nop
   1400017ba:	90                   	nop
   1400017bb:	90                   	nop
   1400017bc:	90                   	nop
   1400017bd:	90                   	nop
   1400017be:	90                   	nop
   1400017bf:	90                   	nop

00000001400017c0 <_fpreset>:
   1400017c0:	db e3                	fninit
   1400017c2:	c3                   	ret
   1400017c3:	90                   	nop
   1400017c4:	90                   	nop
   1400017c5:	90                   	nop
   1400017c6:	90                   	nop
   1400017c7:	90                   	nop
   1400017c8:	90                   	nop
   1400017c9:	90                   	nop
   1400017ca:	90                   	nop
   1400017cb:	90                   	nop
   1400017cc:	90                   	nop
   1400017cd:	90                   	nop
   1400017ce:	90                   	nop
   1400017cf:	90                   	nop

00000001400017d0 <__report_error>:
   1400017d0:	56                   	push   rsi
   1400017d1:	53                   	push   rbx
   1400017d2:	48 83 ec 38          	sub    rsp,0x38
   1400017d6:	48 8d 44 24 58       	lea    rax,[rsp+0x58]
   1400017db:	48 89 cb             	mov    rbx,rcx
   1400017de:	b9 02 00 00 00       	mov    ecx,0x2
   1400017e3:	48 89 54 24 58       	mov    QWORD PTR [rsp+0x58],rdx
   1400017e8:	4c 89 44 24 60       	mov    QWORD PTR [rsp+0x60],r8
   1400017ed:	4c 89 4c 24 68       	mov    QWORD PTR [rsp+0x68],r9
   1400017f2:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
   1400017f7:	e8 e4 10 00 00       	call   1400028e0 <__acrt_iob_func>
   1400017fc:	41 b8 1b 00 00 00    	mov    r8d,0x1b
   140001802:	ba 01 00 00 00       	mov    edx,0x1
   140001807:	48 8d 0d d2 29 00 00 	lea    rcx,[rip+0x29d2]        # 1400041e0 <.rdata>
   14000180e:	49 89 c1             	mov    r9,rax
   140001811:	e8 f2 10 00 00       	call   140002908 <fwrite>
   140001816:	48 8b 74 24 28       	mov    rsi,QWORD PTR [rsp+0x28]
   14000181b:	b9 02 00 00 00       	mov    ecx,0x2
   140001820:	e8 bb 10 00 00       	call   1400028e0 <__acrt_iob_func>
   140001825:	48 89 da             	mov    rdx,rbx
   140001828:	48 89 c1             	mov    rcx,rax
   14000182b:	49 89 f0             	mov    r8,rsi
   14000182e:	e8 9d 0d 00 00       	call   1400025d0 <vfprintf>
   140001833:	e8 40 11 00 00       	call   140002978 <abort>
   140001838:	90                   	nop
   140001839:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000140001840 <mark_section_writable>:
   140001840:	57                   	push   rdi
   140001841:	56                   	push   rsi
   140001842:	53                   	push   rbx
   140001843:	48 83 ec 50          	sub    rsp,0x50
   140001847:	48 63 35 46 58 00 00 	movsxd rsi,DWORD PTR [rip+0x5846]        # 140007094 <maxSections>
   14000184e:	85 f6                	test   esi,esi
   140001850:	48 89 cb             	mov    rbx,rcx
   140001853:	0f 8e 17 01 00 00    	jle    140001970 <mark_section_writable+0x130>
   140001859:	48 8b 05 38 58 00 00 	mov    rax,QWORD PTR [rip+0x5838]        # 140007098 <the_secs>
   140001860:	45 31 c9             	xor    r9d,r9d
   140001863:	48 83 c0 18          	add    rax,0x18
   140001867:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   14000186e:	00 00 
   140001870:	4c 8b 00             	mov    r8,QWORD PTR [rax]
   140001873:	4c 39 c3             	cmp    rbx,r8
   140001876:	72 13                	jb     14000188b <mark_section_writable+0x4b>
   140001878:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
   14000187c:	8b 52 08             	mov    edx,DWORD PTR [rdx+0x8]
   14000187f:	49 01 d0             	add    r8,rdx
   140001882:	4c 39 c3             	cmp    rbx,r8
   140001885:	0f 82 8a 00 00 00    	jb     140001915 <mark_section_writable+0xd5>
   14000188b:	41 83 c1 01          	add    r9d,0x1
   14000188f:	48 83 c0 28          	add    rax,0x28
   140001893:	41 39 f1             	cmp    r9d,esi
   140001896:	75 d8                	jne    140001870 <mark_section_writable+0x30>
   140001898:	48 89 d9             	mov    rcx,rbx
   14000189b:	e8 10 0a 00 00       	call   1400022b0 <__mingw_GetSectionForAddress>
   1400018a0:	48 85 c0             	test   rax,rax
   1400018a3:	48 89 c7             	mov    rdi,rax
   1400018a6:	0f 84 e6 00 00 00    	je     140001992 <mark_section_writable+0x152>
   1400018ac:	48 8b 05 e5 57 00 00 	mov    rax,QWORD PTR [rip+0x57e5]        # 140007098 <the_secs>
   1400018b3:	48 8d 1c b6          	lea    rbx,[rsi+rsi*4]
   1400018b7:	48 c1 e3 03          	shl    rbx,0x3
   1400018bb:	48 01 d8             	add    rax,rbx
   1400018be:	48 89 78 20          	mov    QWORD PTR [rax+0x20],rdi
   1400018c2:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
   1400018c8:	e8 23 0b 00 00       	call   1400023f0 <_GetPEImageBase>
   1400018cd:	8b 57 0c             	mov    edx,DWORD PTR [rdi+0xc]
   1400018d0:	41 b8 30 00 00 00    	mov    r8d,0x30
   1400018d6:	48 8d 0c 10          	lea    rcx,[rax+rdx*1]
   1400018da:	48 8b 05 b7 57 00 00 	mov    rax,QWORD PTR [rip+0x57b7]        # 140007098 <the_secs>
   1400018e1:	48 8d 54 24 20       	lea    rdx,[rsp+0x20]
   1400018e6:	48 89 4c 18 18       	mov    QWORD PTR [rax+rbx*1+0x18],rcx
   1400018eb:	ff 15 e7 69 00 00    	call   QWORD PTR [rip+0x69e7]        # 1400082d8 <__imp_VirtualQuery>
   1400018f1:	48 85 c0             	test   rax,rax
   1400018f4:	0f 84 7d 00 00 00    	je     140001977 <mark_section_writable+0x137>
   1400018fa:	8b 44 24 44          	mov    eax,DWORD PTR [rsp+0x44]
   1400018fe:	8d 50 c0             	lea    edx,[rax-0x40]
   140001901:	83 e2 bf             	and    edx,0xffffffbf
   140001904:	74 08                	je     14000190e <mark_section_writable+0xce>
   140001906:	8d 50 fc             	lea    edx,[rax-0x4]
   140001909:	83 e2 fb             	and    edx,0xfffffffb
   14000190c:	75 12                	jne    140001920 <mark_section_writable+0xe0>
   14000190e:	83 05 7f 57 00 00 01 	add    DWORD PTR [rip+0x577f],0x1        # 140007094 <maxSections>
   140001915:	48 83 c4 50          	add    rsp,0x50
   140001919:	5b                   	pop    rbx
   14000191a:	5e                   	pop    rsi
   14000191b:	5f                   	pop    rdi
   14000191c:	c3                   	ret
   14000191d:	0f 1f 00             	nop    DWORD PTR [rax]
   140001920:	83 f8 02             	cmp    eax,0x2
   140001923:	41 b8 40 00 00 00    	mov    r8d,0x40
   140001929:	b8 04 00 00 00       	mov    eax,0x4
   14000192e:	48 8b 4c 24 20       	mov    rcx,QWORD PTR [rsp+0x20]
   140001933:	44 0f 44 c0          	cmove  r8d,eax
   140001937:	48 8b 54 24 38       	mov    rdx,QWORD PTR [rsp+0x38]
   14000193c:	48 03 1d 55 57 00 00 	add    rbx,QWORD PTR [rip+0x5755]        # 140007098 <the_secs>
   140001943:	49 89 d9             	mov    r9,rbx
   140001946:	48 89 4b 08          	mov    QWORD PTR [rbx+0x8],rcx
   14000194a:	48 89 53 10          	mov    QWORD PTR [rbx+0x10],rdx
   14000194e:	ff 15 7c 69 00 00    	call   QWORD PTR [rip+0x697c]        # 1400082d0 <__imp_VirtualProtect>
   140001954:	85 c0                	test   eax,eax
   140001956:	75 b6                	jne    14000190e <mark_section_writable+0xce>
   140001958:	ff 15 42 69 00 00    	call   QWORD PTR [rip+0x6942]        # 1400082a0 <__imp_GetLastError>
   14000195e:	48 8d 0d f3 28 00 00 	lea    rcx,[rip+0x28f3]        # 140004258 <.rdata+0x78>
   140001965:	89 c2                	mov    edx,eax
   140001967:	e8 64 fe ff ff       	call   1400017d0 <__report_error>
   14000196c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140001970:	31 f6                	xor    esi,esi
   140001972:	e9 21 ff ff ff       	jmp    140001898 <mark_section_writable+0x58>
   140001977:	48 8b 05 1a 57 00 00 	mov    rax,QWORD PTR [rip+0x571a]        # 140007098 <the_secs>
   14000197e:	48 8d 0d 9b 28 00 00 	lea    rcx,[rip+0x289b]        # 140004220 <.rdata+0x40>
   140001985:	8b 57 08             	mov    edx,DWORD PTR [rdi+0x8]
   140001988:	4c 8b 44 18 18       	mov    r8,QWORD PTR [rax+rbx*1+0x18]
   14000198d:	e8 3e fe ff ff       	call   1400017d0 <__report_error>
   140001992:	48 8d 0d 67 28 00 00 	lea    rcx,[rip+0x2867]        # 140004200 <.rdata+0x20>
   140001999:	48 89 da             	mov    rdx,rbx
   14000199c:	e8 2f fe ff ff       	call   1400017d0 <__report_error>
   1400019a1:	90                   	nop
   1400019a2:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1400019a9:	00 00 00 00 
   1400019ad:	0f 1f 00             	nop    DWORD PTR [rax]

00000001400019b0 <_pei386_runtime_relocator>:
   1400019b0:	55                   	push   rbp
   1400019b1:	41 57                	push   r15
   1400019b3:	41 56                	push   r14
   1400019b5:	41 55                	push   r13
   1400019b7:	41 54                	push   r12
   1400019b9:	57                   	push   rdi
   1400019ba:	56                   	push   rsi
   1400019bb:	53                   	push   rbx
   1400019bc:	48 83 ec 48          	sub    rsp,0x48
   1400019c0:	48 8d 6c 24 40       	lea    rbp,[rsp+0x40]
   1400019c5:	8b 3d c5 56 00 00    	mov    edi,DWORD PTR [rip+0x56c5]        # 140007090 <was_init.0>
   1400019cb:	85 ff                	test   edi,edi
   1400019cd:	74 11                	je     1400019e0 <_pei386_runtime_relocator+0x30>
   1400019cf:	48 8d 65 08          	lea    rsp,[rbp+0x8]
   1400019d3:	5b                   	pop    rbx
   1400019d4:	5e                   	pop    rsi
   1400019d5:	5f                   	pop    rdi
   1400019d6:	41 5c                	pop    r12
   1400019d8:	41 5d                	pop    r13
   1400019da:	41 5e                	pop    r14
   1400019dc:	41 5f                	pop    r15
   1400019de:	5d                   	pop    rbp
   1400019df:	c3                   	ret
   1400019e0:	c7 05 a6 56 00 00 01 	mov    DWORD PTR [rip+0x56a6],0x1        # 140007090 <was_init.0>
   1400019e7:	00 00 00 
   1400019ea:	e8 41 09 00 00       	call   140002330 <__mingw_GetSectionCount>
   1400019ef:	48 98                	cdqe
   1400019f1:	48 8d 04 80          	lea    rax,[rax+rax*4]
   1400019f5:	48 8d 04 c5 0f 00 00 	lea    rax,[rax*8+0xf]
   1400019fc:	00 
   1400019fd:	48 83 e0 f0          	and    rax,0xfffffffffffffff0
   140001a01:	e8 8a 0b 00 00       	call   140002590 <___chkstk_ms>
   140001a06:	4c 8b 2d b3 29 00 00 	mov    r13,QWORD PTR [rip+0x29b3]        # 1400043c0 <.refptr.__RUNTIME_PSEUDO_RELOC_LIST_END__>
   140001a0d:	c7 05 7d 56 00 00 00 	mov    DWORD PTR [rip+0x567d],0x0        # 140007094 <maxSections>
   140001a14:	00 00 00 
   140001a17:	48 8b 1d b2 29 00 00 	mov    rbx,QWORD PTR [rip+0x29b2]        # 1400043d0 <.refptr.__RUNTIME_PSEUDO_RELOC_LIST__>
   140001a1e:	48 29 c4             	sub    rsp,rax
   140001a21:	48 8d 44 24 30       	lea    rax,[rsp+0x30]
   140001a26:	48 89 05 6b 56 00 00 	mov    QWORD PTR [rip+0x566b],rax        # 140007098 <the_secs>
   140001a2d:	4c 89 e8             	mov    rax,r13
   140001a30:	48 29 d8             	sub    rax,rbx
   140001a33:	48 83 f8 07          	cmp    rax,0x7
   140001a37:	7e 96                	jle    1400019cf <_pei386_runtime_relocator+0x1f>
   140001a39:	48 83 f8 0b          	cmp    rax,0xb
   140001a3d:	8b 13                	mov    edx,DWORD PTR [rbx]
   140001a3f:	0f 8f 83 01 00 00    	jg     140001bc8 <_pei386_runtime_relocator+0x218>
   140001a45:	8b 03                	mov    eax,DWORD PTR [rbx]
   140001a47:	85 c0                	test   eax,eax
   140001a49:	0f 85 71 02 00 00    	jne    140001cc0 <_pei386_runtime_relocator+0x310>
   140001a4f:	8b 43 04             	mov    eax,DWORD PTR [rbx+0x4]
   140001a52:	85 c0                	test   eax,eax
   140001a54:	0f 85 66 02 00 00    	jne    140001cc0 <_pei386_runtime_relocator+0x310>
   140001a5a:	8b 53 08             	mov    edx,DWORD PTR [rbx+0x8]
   140001a5d:	83 fa 01             	cmp    edx,0x1
   140001a60:	0f 85 9c 02 00 00    	jne    140001d02 <_pei386_runtime_relocator+0x352>
   140001a66:	48 83 c3 0c          	add    rbx,0xc
   140001a6a:	4c 39 eb             	cmp    rbx,r13
   140001a6d:	0f 83 5c ff ff ff    	jae    1400019cf <_pei386_runtime_relocator+0x1f>
   140001a73:	4c 8b 25 76 29 00 00 	mov    r12,QWORD PTR [rip+0x2976]        # 1400043f0 <.refptr.__image_base__>
   140001a7a:	49 bf ff ff ff 7f ff 	movabs r15,0xffffffff7fffffff
   140001a81:	ff ff ff 
   140001a84:	eb 5d                	jmp    140001ae3 <_pei386_runtime_relocator+0x133>
   140001a86:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   140001a8d:	00 00 00 
   140001a90:	41 0f b6 36          	movzx  esi,BYTE PTR [r14]
   140001a94:	81 e1 c0 00 00 00    	and    ecx,0xc0
   140001a9a:	40 84 f6             	test   sil,sil
   140001a9d:	0f 89 05 02 00 00    	jns    140001ca8 <_pei386_runtime_relocator+0x2f8>
   140001aa3:	48 81 ce 00 ff ff ff 	or     rsi,0xffffffffffffff00
   140001aaa:	48 29 c6             	sub    rsi,rax
   140001aad:	4c 01 ce             	add    rsi,r9
   140001ab0:	85 c9                	test   ecx,ecx
   140001ab2:	75 17                	jne    140001acb <_pei386_runtime_relocator+0x11b>
   140001ab4:	48 81 fe ff 00 00 00 	cmp    rsi,0xff
   140001abb:	0f 8f 4e 01 00 00    	jg     140001c0f <_pei386_runtime_relocator+0x25f>
   140001ac1:	48 83 fe 80          	cmp    rsi,0xffffffffffffff80
   140001ac5:	0f 8c 44 01 00 00    	jl     140001c0f <_pei386_runtime_relocator+0x25f>
   140001acb:	4c 89 f1             	mov    rcx,r14
   140001ace:	e8 6d fd ff ff       	call   140001840 <mark_section_writable>
   140001ad3:	41 88 36             	mov    BYTE PTR [r14],sil
   140001ad6:	48 83 c3 0c          	add    rbx,0xc
   140001ada:	4c 39 eb             	cmp    rbx,r13
   140001add:	0f 83 8d 00 00 00    	jae    140001b70 <_pei386_runtime_relocator+0x1c0>
   140001ae3:	8b 4b 08             	mov    ecx,DWORD PTR [rbx+0x8]
   140001ae6:	8b 03                	mov    eax,DWORD PTR [rbx]
   140001ae8:	44 8b 43 04          	mov    r8d,DWORD PTR [rbx+0x4]
   140001aec:	0f b6 d1             	movzx  edx,cl
   140001aef:	4c 01 e0             	add    rax,r12
   140001af2:	83 fa 20             	cmp    edx,0x20
   140001af5:	4c 8b 08             	mov    r9,QWORD PTR [rax]
   140001af8:	4f 8d 34 20          	lea    r14,[r8+r12*1]
   140001afc:	0f 84 26 01 00 00    	je     140001c28 <_pei386_runtime_relocator+0x278>
   140001b02:	0f 87 e8 00 00 00    	ja     140001bf0 <_pei386_runtime_relocator+0x240>
   140001b08:	83 fa 08             	cmp    edx,0x8
   140001b0b:	74 83                	je     140001a90 <_pei386_runtime_relocator+0xe0>
   140001b0d:	83 fa 10             	cmp    edx,0x10
   140001b10:	0f 85 e0 01 00 00    	jne    140001cf6 <_pei386_runtime_relocator+0x346>
   140001b16:	41 0f b7 36          	movzx  esi,WORD PTR [r14]
   140001b1a:	81 e1 c0 00 00 00    	and    ecx,0xc0
   140001b20:	66 85 f6             	test   si,si
   140001b23:	0f 89 67 01 00 00    	jns    140001c90 <_pei386_runtime_relocator+0x2e0>
   140001b29:	48 81 ce 00 00 ff ff 	or     rsi,0xffffffffffff0000
   140001b30:	48 29 c6             	sub    rsi,rax
   140001b33:	4c 01 ce             	add    rsi,r9
   140001b36:	85 c9                	test   ecx,ecx
   140001b38:	75 1a                	jne    140001b54 <_pei386_runtime_relocator+0x1a4>
   140001b3a:	48 81 fe 00 80 ff ff 	cmp    rsi,0xffffffffffff8000
   140001b41:	0f 8c c8 00 00 00    	jl     140001c0f <_pei386_runtime_relocator+0x25f>
   140001b47:	48 81 fe ff ff 00 00 	cmp    rsi,0xffff
   140001b4e:	0f 8f bb 00 00 00    	jg     140001c0f <_pei386_runtime_relocator+0x25f>
   140001b54:	4c 89 f1             	mov    rcx,r14
   140001b57:	48 83 c3 0c          	add    rbx,0xc
   140001b5b:	e8 e0 fc ff ff       	call   140001840 <mark_section_writable>
   140001b60:	4c 39 eb             	cmp    rbx,r13
   140001b63:	66 41 89 36          	mov    WORD PTR [r14],si
   140001b67:	0f 82 76 ff ff ff    	jb     140001ae3 <_pei386_runtime_relocator+0x133>
   140001b6d:	0f 1f 00             	nop    DWORD PTR [rax]
   140001b70:	8b 15 1e 55 00 00    	mov    edx,DWORD PTR [rip+0x551e]        # 140007094 <maxSections>
   140001b76:	85 d2                	test   edx,edx
   140001b78:	0f 8e 51 fe ff ff    	jle    1400019cf <_pei386_runtime_relocator+0x1f>
   140001b7e:	48 8b 35 4b 67 00 00 	mov    rsi,QWORD PTR [rip+0x674b]        # 1400082d0 <__imp_VirtualProtect>
   140001b85:	4c 8d 65 fc          	lea    r12,[rbp-0x4]
   140001b89:	31 db                	xor    ebx,ebx
   140001b8b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140001b90:	48 8b 05 01 55 00 00 	mov    rax,QWORD PTR [rip+0x5501]        # 140007098 <the_secs>
   140001b97:	48 01 d8             	add    rax,rbx
   140001b9a:	44 8b 00             	mov    r8d,DWORD PTR [rax]
   140001b9d:	45 85 c0             	test   r8d,r8d
   140001ba0:	74 0d                	je     140001baf <_pei386_runtime_relocator+0x1ff>
   140001ba2:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
   140001ba6:	4d 89 e1             	mov    r9,r12
   140001ba9:	48 8b 48 08          	mov    rcx,QWORD PTR [rax+0x8]
   140001bad:	ff d6                	call   rsi
   140001baf:	83 c7 01             	add    edi,0x1
   140001bb2:	48 83 c3 28          	add    rbx,0x28
   140001bb6:	3b 3d d8 54 00 00    	cmp    edi,DWORD PTR [rip+0x54d8]        # 140007094 <maxSections>
   140001bbc:	7c d2                	jl     140001b90 <_pei386_runtime_relocator+0x1e0>
   140001bbe:	e9 0c fe ff ff       	jmp    1400019cf <_pei386_runtime_relocator+0x1f>
   140001bc3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140001bc8:	85 d2                	test   edx,edx
   140001bca:	0f 85 f0 00 00 00    	jne    140001cc0 <_pei386_runtime_relocator+0x310>
   140001bd0:	8b 43 04             	mov    eax,DWORD PTR [rbx+0x4]
   140001bd3:	89 c2                	mov    edx,eax
   140001bd5:	0b 53 08             	or     edx,DWORD PTR [rbx+0x8]
   140001bd8:	0f 85 74 fe ff ff    	jne    140001a52 <_pei386_runtime_relocator+0xa2>
   140001bde:	48 83 c3 0c          	add    rbx,0xc
   140001be2:	e9 5e fe ff ff       	jmp    140001a45 <_pei386_runtime_relocator+0x95>
   140001be7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   140001bee:	00 00 
   140001bf0:	83 fa 40             	cmp    edx,0x40
   140001bf3:	0f 85 fd 00 00 00    	jne    140001cf6 <_pei386_runtime_relocator+0x346>
   140001bf9:	49 8b 36             	mov    rsi,QWORD PTR [r14]
   140001bfc:	48 29 c6             	sub    rsi,rax
   140001bff:	4c 01 ce             	add    rsi,r9
   140001c02:	81 e1 c0 00 00 00    	and    ecx,0xc0
   140001c08:	75 66                	jne    140001c70 <_pei386_runtime_relocator+0x2c0>
   140001c0a:	48 85 f6             	test   rsi,rsi
   140001c0d:	78 61                	js     140001c70 <_pei386_runtime_relocator+0x2c0>
   140001c0f:	48 89 74 24 20       	mov    QWORD PTR [rsp+0x20],rsi
   140001c14:	48 8d 0d cd 26 00 00 	lea    rcx,[rip+0x26cd]        # 1400042e8 <.rdata+0x108>
   140001c1b:	4d 89 f0             	mov    r8,r14
   140001c1e:	e8 ad fb ff ff       	call   1400017d0 <__report_error>
   140001c23:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140001c28:	41 8b 36             	mov    esi,DWORD PTR [r14]
   140001c2b:	81 e1 c0 00 00 00    	and    ecx,0xc0
   140001c31:	85 f6                	test   esi,esi
   140001c33:	79 4b                	jns    140001c80 <_pei386_runtime_relocator+0x2d0>
   140001c35:	49 bb 00 00 00 00 ff 	movabs r11,0xffffffff00000000
   140001c3c:	ff ff ff 
   140001c3f:	4c 09 de             	or     rsi,r11
   140001c42:	48 29 c6             	sub    rsi,rax
   140001c45:	4c 01 ce             	add    rsi,r9
   140001c48:	85 c9                	test   ecx,ecx
   140001c4a:	75 0f                	jne    140001c5b <_pei386_runtime_relocator+0x2ab>
   140001c4c:	4c 39 fe             	cmp    rsi,r15
   140001c4f:	7e be                	jle    140001c0f <_pei386_runtime_relocator+0x25f>
   140001c51:	b8 ff ff ff ff       	mov    eax,0xffffffff
   140001c56:	48 39 c6             	cmp    rsi,rax
   140001c59:	7f b4                	jg     140001c0f <_pei386_runtime_relocator+0x25f>
   140001c5b:	4c 89 f1             	mov    rcx,r14
   140001c5e:	e8 dd fb ff ff       	call   140001840 <mark_section_writable>
   140001c63:	41 89 36             	mov    DWORD PTR [r14],esi
   140001c66:	e9 6b fe ff ff       	jmp    140001ad6 <_pei386_runtime_relocator+0x126>
   140001c6b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140001c70:	4c 89 f1             	mov    rcx,r14
   140001c73:	e8 c8 fb ff ff       	call   140001840 <mark_section_writable>
   140001c78:	49 89 36             	mov    QWORD PTR [r14],rsi
   140001c7b:	e9 56 fe ff ff       	jmp    140001ad6 <_pei386_runtime_relocator+0x126>
   140001c80:	48 29 c6             	sub    rsi,rax
   140001c83:	4c 01 ce             	add    rsi,r9
   140001c86:	85 c9                	test   ecx,ecx
   140001c88:	74 c2                	je     140001c4c <_pei386_runtime_relocator+0x29c>
   140001c8a:	eb cf                	jmp    140001c5b <_pei386_runtime_relocator+0x2ab>
   140001c8c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140001c90:	48 29 c6             	sub    rsi,rax
   140001c93:	4c 01 ce             	add    rsi,r9
   140001c96:	85 c9                	test   ecx,ecx
   140001c98:	0f 84 9c fe ff ff    	je     140001b3a <_pei386_runtime_relocator+0x18a>
   140001c9e:	e9 b1 fe ff ff       	jmp    140001b54 <_pei386_runtime_relocator+0x1a4>
   140001ca3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140001ca8:	48 29 c6             	sub    rsi,rax
   140001cab:	4c 01 ce             	add    rsi,r9
   140001cae:	85 c9                	test   ecx,ecx
   140001cb0:	0f 84 fe fd ff ff    	je     140001ab4 <_pei386_runtime_relocator+0x104>
   140001cb6:	e9 10 fe ff ff       	jmp    140001acb <_pei386_runtime_relocator+0x11b>
   140001cbb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140001cc0:	4c 39 eb             	cmp    rbx,r13
   140001cc3:	0f 83 06 fd ff ff    	jae    1400019cf <_pei386_runtime_relocator+0x1f>
   140001cc9:	4c 8b 35 20 27 00 00 	mov    r14,QWORD PTR [rip+0x2720]        # 1400043f0 <.refptr.__image_base__>
   140001cd0:	8b 73 04             	mov    esi,DWORD PTR [rbx+0x4]
   140001cd3:	48 83 c3 08          	add    rbx,0x8
   140001cd7:	44 8b 63 f8          	mov    r12d,DWORD PTR [rbx-0x8]
   140001cdb:	4c 01 f6             	add    rsi,r14
   140001cde:	44 03 26             	add    r12d,DWORD PTR [rsi]
   140001ce1:	48 89 f1             	mov    rcx,rsi
   140001ce4:	e8 57 fb ff ff       	call   140001840 <mark_section_writable>
   140001ce9:	4c 39 eb             	cmp    rbx,r13
   140001cec:	44 89 26             	mov    DWORD PTR [rsi],r12d
   140001cef:	72 df                	jb     140001cd0 <_pei386_runtime_relocator+0x320>
   140001cf1:	e9 7a fe ff ff       	jmp    140001b70 <_pei386_runtime_relocator+0x1c0>
   140001cf6:	48 8d 0d bb 25 00 00 	lea    rcx,[rip+0x25bb]        # 1400042b8 <.rdata+0xd8>
   140001cfd:	e8 ce fa ff ff       	call   1400017d0 <__report_error>
   140001d02:	48 8d 0d 77 25 00 00 	lea    rcx,[rip+0x2577]        # 140004280 <.rdata+0xa0>
   140001d09:	e8 c2 fa ff ff       	call   1400017d0 <__report_error>
   140001d0e:	90                   	nop
   140001d0f:	90                   	nop

0000000140001d10 <__mingw_raise_matherr>:
   140001d10:	48 83 ec 58          	sub    rsp,0x58
   140001d14:	48 8b 05 85 53 00 00 	mov    rax,QWORD PTR [rip+0x5385]        # 1400070a0 <stUserMathErr>
   140001d1b:	48 85 c0             	test   rax,rax
   140001d1e:	66 0f 14 d3          	unpcklpd xmm2,xmm3
   140001d22:	74 25                	je     140001d49 <__mingw_raise_matherr+0x39>
   140001d24:	f2 0f 10 84 24 80 00 	movsd  xmm0,QWORD PTR [rsp+0x80]
   140001d2b:	00 00 
   140001d2d:	89 4c 24 20          	mov    DWORD PTR [rsp+0x20],ecx
   140001d31:	48 8d 4c 24 20       	lea    rcx,[rsp+0x20]
   140001d36:	48 89 54 24 28       	mov    QWORD PTR [rsp+0x28],rdx
   140001d3b:	0f 29 54 24 30       	movaps XMMWORD PTR [rsp+0x30],xmm2
   140001d40:	f2 0f 11 44 24 40    	movsd  QWORD PTR [rsp+0x40],xmm0
   140001d46:	ff d0                	call   rax
   140001d48:	90                   	nop
   140001d49:	48 83 c4 58          	add    rsp,0x58
   140001d4d:	c3                   	ret
   140001d4e:	66 90                	xchg   ax,ax

0000000140001d50 <__mingw_setusermatherr>:
   140001d50:	48 89 0d 49 53 00 00 	mov    QWORD PTR [rip+0x5349],rcx        # 1400070a0 <stUserMathErr>
   140001d57:	e9 44 0c 00 00       	jmp    1400029a0 <__setusermatherr>
   140001d5c:	90                   	nop
   140001d5d:	90                   	nop
   140001d5e:	90                   	nop
   140001d5f:	90                   	nop

0000000140001d60 <_gnu_exception_handler>:
   140001d60:	53                   	push   rbx
   140001d61:	48 83 ec 20          	sub    rsp,0x20
   140001d65:	48 8b 11             	mov    rdx,QWORD PTR [rcx]
   140001d68:	8b 02                	mov    eax,DWORD PTR [rdx]
   140001d6a:	48 89 cb             	mov    rbx,rcx
   140001d6d:	89 c1                	mov    ecx,eax
   140001d6f:	81 e1 ff ff ff 20    	and    ecx,0x20ffffff
   140001d75:	81 f9 43 43 47 20    	cmp    ecx,0x20474343
   140001d7b:	0f 84 9f 00 00 00    	je     140001e20 <_gnu_exception_handler+0xc0>
   140001d81:	3d 96 00 00 c0       	cmp    eax,0xc0000096
   140001d86:	77 77                	ja     140001dff <_gnu_exception_handler+0x9f>
   140001d88:	3d 8b 00 00 c0       	cmp    eax,0xc000008b
   140001d8d:	76 21                	jbe    140001db0 <_gnu_exception_handler+0x50>
   140001d8f:	05 73 ff ff 3f       	add    eax,0x3fffff73
   140001d94:	83 f8 09             	cmp    eax,0x9
   140001d97:	77 54                	ja     140001ded <_gnu_exception_handler+0x8d>
   140001d99:	48 8d 15 a0 25 00 00 	lea    rdx,[rip+0x25a0]        # 140004340 <.rdata>
   140001da0:	48 63 04 82          	movsxd rax,DWORD PTR [rdx+rax*4]
   140001da4:	48 01 d0             	add    rax,rdx
   140001da7:	ff e0                	jmp    rax
   140001da9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   140001db0:	3d 05 00 00 c0       	cmp    eax,0xc0000005
   140001db5:	0f 84 d5 00 00 00    	je     140001e90 <_gnu_exception_handler+0x130>
   140001dbb:	76 3b                	jbe    140001df8 <_gnu_exception_handler+0x98>
   140001dbd:	3d 08 00 00 c0       	cmp    eax,0xc0000008
   140001dc2:	74 29                	je     140001ded <_gnu_exception_handler+0x8d>
   140001dc4:	3d 1d 00 00 c0       	cmp    eax,0xc000001d
   140001dc9:	75 34                	jne    140001dff <_gnu_exception_handler+0x9f>
   140001dcb:	31 d2                	xor    edx,edx
   140001dcd:	b9 04 00 00 00       	mov    ecx,0x4
   140001dd2:	e8 a9 0b 00 00       	call   140002980 <signal>
   140001dd7:	48 83 f8 01          	cmp    rax,0x1
   140001ddb:	0f 84 d6 00 00 00    	je     140001eb7 <_gnu_exception_handler+0x157>
   140001de1:	48 85 c0             	test   rax,rax
   140001de4:	74 19                	je     140001dff <_gnu_exception_handler+0x9f>
   140001de6:	b9 04 00 00 00       	mov    ecx,0x4
   140001deb:	ff d0                	call   rax
   140001ded:	b8 ff ff ff ff       	mov    eax,0xffffffff
   140001df2:	48 83 c4 20          	add    rsp,0x20
   140001df6:	5b                   	pop    rbx
   140001df7:	c3                   	ret
   140001df8:	3d 02 00 00 80       	cmp    eax,0x80000002
   140001dfd:	74 ee                	je     140001ded <_gnu_exception_handler+0x8d>
   140001dff:	48 8b 05 ba 52 00 00 	mov    rax,QWORD PTR [rip+0x52ba]        # 1400070c0 <__mingw_oldexcpt_handler>
   140001e06:	48 85 c0             	test   rax,rax
   140001e09:	74 25                	je     140001e30 <_gnu_exception_handler+0xd0>
   140001e0b:	48 89 d9             	mov    rcx,rbx
   140001e0e:	48 83 c4 20          	add    rsp,0x20
   140001e12:	5b                   	pop    rbx
   140001e13:	48 ff e0             	rex.W jmp rax
   140001e16:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   140001e1d:	00 00 00 
   140001e20:	f6 42 04 01          	test   BYTE PTR [rdx+0x4],0x1
   140001e24:	0f 85 57 ff ff ff    	jne    140001d81 <_gnu_exception_handler+0x21>
   140001e2a:	eb c1                	jmp    140001ded <_gnu_exception_handler+0x8d>
   140001e2c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140001e30:	31 c0                	xor    eax,eax
   140001e32:	48 83 c4 20          	add    rsp,0x20
   140001e36:	5b                   	pop    rbx
   140001e37:	c3                   	ret
   140001e38:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   140001e3f:	00 
   140001e40:	31 d2                	xor    edx,edx
   140001e42:	b9 08 00 00 00       	mov    ecx,0x8
   140001e47:	e8 34 0b 00 00       	call   140002980 <signal>
   140001e4c:	48 83 f8 01          	cmp    rax,0x1
   140001e50:	0f 84 89 00 00 00    	je     140001edf <_gnu_exception_handler+0x17f>
   140001e56:	48 85 c0             	test   rax,rax
   140001e59:	74 a4                	je     140001dff <_gnu_exception_handler+0x9f>
   140001e5b:	b9 08 00 00 00       	mov    ecx,0x8
   140001e60:	ff d0                	call   rax
   140001e62:	eb 89                	jmp    140001ded <_gnu_exception_handler+0x8d>
   140001e64:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140001e68:	31 d2                	xor    edx,edx
   140001e6a:	b9 08 00 00 00       	mov    ecx,0x8
   140001e6f:	e8 0c 0b 00 00       	call   140002980 <signal>
   140001e74:	48 83 f8 01          	cmp    rax,0x1
   140001e78:	75 dc                	jne    140001e56 <_gnu_exception_handler+0xf6>
   140001e7a:	ba 01 00 00 00       	mov    edx,0x1
   140001e7f:	b9 08 00 00 00       	mov    ecx,0x8
   140001e84:	e8 f7 0a 00 00       	call   140002980 <signal>
   140001e89:	e9 5f ff ff ff       	jmp    140001ded <_gnu_exception_handler+0x8d>
   140001e8e:	66 90                	xchg   ax,ax
   140001e90:	31 d2                	xor    edx,edx
   140001e92:	b9 0b 00 00 00       	mov    ecx,0xb
   140001e97:	e8 e4 0a 00 00       	call   140002980 <signal>
   140001e9c:	48 83 f8 01          	cmp    rax,0x1
   140001ea0:	74 29                	je     140001ecb <_gnu_exception_handler+0x16b>
   140001ea2:	48 85 c0             	test   rax,rax
   140001ea5:	0f 84 54 ff ff ff    	je     140001dff <_gnu_exception_handler+0x9f>
   140001eab:	b9 0b 00 00 00       	mov    ecx,0xb
   140001eb0:	ff d0                	call   rax
   140001eb2:	e9 36 ff ff ff       	jmp    140001ded <_gnu_exception_handler+0x8d>
   140001eb7:	ba 01 00 00 00       	mov    edx,0x1
   140001ebc:	b9 04 00 00 00       	mov    ecx,0x4
   140001ec1:	e8 ba 0a 00 00       	call   140002980 <signal>
   140001ec6:	e9 22 ff ff ff       	jmp    140001ded <_gnu_exception_handler+0x8d>
   140001ecb:	ba 01 00 00 00       	mov    edx,0x1
   140001ed0:	b9 0b 00 00 00       	mov    ecx,0xb
   140001ed5:	e8 a6 0a 00 00       	call   140002980 <signal>
   140001eda:	e9 0e ff ff ff       	jmp    140001ded <_gnu_exception_handler+0x8d>
   140001edf:	ba 01 00 00 00       	mov    edx,0x1
   140001ee4:	b9 08 00 00 00       	mov    ecx,0x8
   140001ee9:	e8 92 0a 00 00       	call   140002980 <signal>
   140001eee:	e8 cd f8 ff ff       	call   1400017c0 <_fpreset>
   140001ef3:	e9 f5 fe ff ff       	jmp    140001ded <_gnu_exception_handler+0x8d>
   140001ef8:	90                   	nop
   140001ef9:	90                   	nop
   140001efa:	90                   	nop
   140001efb:	90                   	nop
   140001efc:	90                   	nop
   140001efd:	90                   	nop
   140001efe:	90                   	nop
   140001eff:	90                   	nop

0000000140001f00 <__mingwthr_run_key_dtors.part.0>:
   140001f00:	41 54                	push   r12
   140001f02:	55                   	push   rbp
   140001f03:	57                   	push   rdi
   140001f04:	56                   	push   rsi
   140001f05:	53                   	push   rbx
   140001f06:	48 83 ec 20          	sub    rsp,0x20
   140001f0a:	4c 8d 25 ef 51 00 00 	lea    r12,[rip+0x51ef]        # 140007100 <__mingwthr_cs>
   140001f11:	4c 89 e1             	mov    rcx,r12
   140001f14:	ff 15 7e 63 00 00    	call   QWORD PTR [rip+0x637e]        # 140008298 <__imp_EnterCriticalSection>
   140001f1a:	48 8b 1d bf 51 00 00 	mov    rbx,QWORD PTR [rip+0x51bf]        # 1400070e0 <key_dtor_list>
   140001f21:	48 85 db             	test   rbx,rbx
   140001f24:	74 36                	je     140001f5c <__mingwthr_run_key_dtors.part.0+0x5c>
   140001f26:	48 8b 2d 9b 63 00 00 	mov    rbp,QWORD PTR [rip+0x639b]        # 1400082c8 <__imp_TlsGetValue>
   140001f2d:	48 8b 3d 6c 63 00 00 	mov    rdi,QWORD PTR [rip+0x636c]        # 1400082a0 <__imp_GetLastError>
   140001f34:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140001f38:	8b 0b                	mov    ecx,DWORD PTR [rbx]
   140001f3a:	ff d5                	call   rbp
   140001f3c:	48 89 c6             	mov    rsi,rax
   140001f3f:	ff d7                	call   rdi
   140001f41:	85 c0                	test   eax,eax
   140001f43:	75 0e                	jne    140001f53 <__mingwthr_run_key_dtors.part.0+0x53>
   140001f45:	48 85 f6             	test   rsi,rsi
   140001f48:	74 09                	je     140001f53 <__mingwthr_run_key_dtors.part.0+0x53>
   140001f4a:	48 8b 43 08          	mov    rax,QWORD PTR [rbx+0x8]
   140001f4e:	48 89 f1             	mov    rcx,rsi
   140001f51:	ff d0                	call   rax
   140001f53:	48 8b 5b 10          	mov    rbx,QWORD PTR [rbx+0x10]
   140001f57:	48 85 db             	test   rbx,rbx
   140001f5a:	75 dc                	jne    140001f38 <__mingwthr_run_key_dtors.part.0+0x38>
   140001f5c:	4c 89 e1             	mov    rcx,r12
   140001f5f:	48 83 c4 20          	add    rsp,0x20
   140001f63:	5b                   	pop    rbx
   140001f64:	5e                   	pop    rsi
   140001f65:	5f                   	pop    rdi
   140001f66:	5d                   	pop    rbp
   140001f67:	41 5c                	pop    r12
   140001f69:	48 ff 25 40 63 00 00 	rex.W jmp QWORD PTR [rip+0x6340]        # 1400082b0 <__imp_LeaveCriticalSection>

0000000140001f70 <___w64_mingwthr_add_key_dtor>:
   140001f70:	57                   	push   rdi
   140001f71:	56                   	push   rsi
   140001f72:	53                   	push   rbx
   140001f73:	48 83 ec 20          	sub    rsp,0x20
   140001f77:	8b 05 6b 51 00 00    	mov    eax,DWORD PTR [rip+0x516b]        # 1400070e8 <__mingwthr_cs_init>
   140001f7d:	85 c0                	test   eax,eax
   140001f7f:	89 cf                	mov    edi,ecx
   140001f81:	48 89 d6             	mov    rsi,rdx
   140001f84:	75 0a                	jne    140001f90 <___w64_mingwthr_add_key_dtor+0x20>
   140001f86:	31 c0                	xor    eax,eax
   140001f88:	48 83 c4 20          	add    rsp,0x20
   140001f8c:	5b                   	pop    rbx
   140001f8d:	5e                   	pop    rsi
   140001f8e:	5f                   	pop    rdi
   140001f8f:	c3                   	ret
   140001f90:	ba 18 00 00 00       	mov    edx,0x18
   140001f95:	b9 01 00 00 00       	mov    ecx,0x1
   140001f9a:	e8 19 0a 00 00       	call   1400029b8 <calloc>
   140001f9f:	48 85 c0             	test   rax,rax
   140001fa2:	48 89 c3             	mov    rbx,rax
   140001fa5:	74 33                	je     140001fda <___w64_mingwthr_add_key_dtor+0x6a>
   140001fa7:	48 89 70 08          	mov    QWORD PTR [rax+0x8],rsi
   140001fab:	48 8d 35 4e 51 00 00 	lea    rsi,[rip+0x514e]        # 140007100 <__mingwthr_cs>
   140001fb2:	89 38                	mov    DWORD PTR [rax],edi
   140001fb4:	48 89 f1             	mov    rcx,rsi
   140001fb7:	ff 15 db 62 00 00    	call   QWORD PTR [rip+0x62db]        # 140008298 <__imp_EnterCriticalSection>
   140001fbd:	48 8b 05 1c 51 00 00 	mov    rax,QWORD PTR [rip+0x511c]        # 1400070e0 <key_dtor_list>
   140001fc4:	48 89 f1             	mov    rcx,rsi
   140001fc7:	48 89 1d 12 51 00 00 	mov    QWORD PTR [rip+0x5112],rbx        # 1400070e0 <key_dtor_list>
   140001fce:	48 89 43 10          	mov    QWORD PTR [rbx+0x10],rax
   140001fd2:	ff 15 d8 62 00 00    	call   QWORD PTR [rip+0x62d8]        # 1400082b0 <__imp_LeaveCriticalSection>
   140001fd8:	eb ac                	jmp    140001f86 <___w64_mingwthr_add_key_dtor+0x16>
   140001fda:	83 c8 ff             	or     eax,0xffffffff
   140001fdd:	eb a9                	jmp    140001f88 <___w64_mingwthr_add_key_dtor+0x18>
   140001fdf:	90                   	nop

0000000140001fe0 <___w64_mingwthr_remove_key_dtor>:
   140001fe0:	56                   	push   rsi
   140001fe1:	53                   	push   rbx
   140001fe2:	48 83 ec 28          	sub    rsp,0x28
   140001fe6:	8b 05 fc 50 00 00    	mov    eax,DWORD PTR [rip+0x50fc]        # 1400070e8 <__mingwthr_cs_init>
   140001fec:	85 c0                	test   eax,eax
   140001fee:	89 cb                	mov    ebx,ecx
   140001ff0:	75 0e                	jne    140002000 <___w64_mingwthr_remove_key_dtor+0x20>
   140001ff2:	31 c0                	xor    eax,eax
   140001ff4:	48 83 c4 28          	add    rsp,0x28
   140001ff8:	5b                   	pop    rbx
   140001ff9:	5e                   	pop    rsi
   140001ffa:	c3                   	ret
   140001ffb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140002000:	48 8d 35 f9 50 00 00 	lea    rsi,[rip+0x50f9]        # 140007100 <__mingwthr_cs>
   140002007:	48 89 f1             	mov    rcx,rsi
   14000200a:	ff 15 88 62 00 00    	call   QWORD PTR [rip+0x6288]        # 140008298 <__imp_EnterCriticalSection>
   140002010:	48 8b 0d c9 50 00 00 	mov    rcx,QWORD PTR [rip+0x50c9]        # 1400070e0 <key_dtor_list>
   140002017:	48 85 c9             	test   rcx,rcx
   14000201a:	74 27                	je     140002043 <___w64_mingwthr_remove_key_dtor+0x63>
   14000201c:	31 d2                	xor    edx,edx
   14000201e:	eb 0b                	jmp    14000202b <___w64_mingwthr_remove_key_dtor+0x4b>
   140002020:	48 85 c0             	test   rax,rax
   140002023:	48 89 ca             	mov    rdx,rcx
   140002026:	74 1b                	je     140002043 <___w64_mingwthr_remove_key_dtor+0x63>
   140002028:	48 89 c1             	mov    rcx,rax
   14000202b:	8b 01                	mov    eax,DWORD PTR [rcx]
   14000202d:	39 d8                	cmp    eax,ebx
   14000202f:	48 8b 41 10          	mov    rax,QWORD PTR [rcx+0x10]
   140002033:	75 eb                	jne    140002020 <___w64_mingwthr_remove_key_dtor+0x40>
   140002035:	48 85 d2             	test   rdx,rdx
   140002038:	74 1e                	je     140002058 <___w64_mingwthr_remove_key_dtor+0x78>
   14000203a:	48 89 42 10          	mov    QWORD PTR [rdx+0x10],rax
   14000203e:	e8 7d 09 00 00       	call   1400029c0 <free>
   140002043:	48 89 f1             	mov    rcx,rsi
   140002046:	ff 15 64 62 00 00    	call   QWORD PTR [rip+0x6264]        # 1400082b0 <__imp_LeaveCriticalSection>
   14000204c:	31 c0                	xor    eax,eax
   14000204e:	48 83 c4 28          	add    rsp,0x28
   140002052:	5b                   	pop    rbx
   140002053:	5e                   	pop    rsi
   140002054:	c3                   	ret
   140002055:	0f 1f 00             	nop    DWORD PTR [rax]
   140002058:	48 89 05 81 50 00 00 	mov    QWORD PTR [rip+0x5081],rax        # 1400070e0 <key_dtor_list>
   14000205f:	eb dd                	jmp    14000203e <___w64_mingwthr_remove_key_dtor+0x5e>
   140002061:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   140002068:	00 00 00 00 
   14000206c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000140002070 <__mingw_TLScallback>:
   140002070:	53                   	push   rbx
   140002071:	48 83 ec 20          	sub    rsp,0x20
   140002075:	83 fa 02             	cmp    edx,0x2
   140002078:	0f 84 b2 00 00 00    	je     140002130 <__mingw_TLScallback+0xc0>
   14000207e:	77 30                	ja     1400020b0 <__mingw_TLScallback+0x40>
   140002080:	85 d2                	test   edx,edx
   140002082:	74 4c                	je     1400020d0 <__mingw_TLScallback+0x60>
   140002084:	8b 05 5e 50 00 00    	mov    eax,DWORD PTR [rip+0x505e]        # 1400070e8 <__mingwthr_cs_init>
   14000208a:	85 c0                	test   eax,eax
   14000208c:	0f 84 be 00 00 00    	je     140002150 <__mingw_TLScallback+0xe0>
   140002092:	c7 05 4c 50 00 00 01 	mov    DWORD PTR [rip+0x504c],0x1        # 1400070e8 <__mingwthr_cs_init>
   140002099:	00 00 00 
   14000209c:	b8 01 00 00 00       	mov    eax,0x1
   1400020a1:	48 83 c4 20          	add    rsp,0x20
   1400020a5:	5b                   	pop    rbx
   1400020a6:	c3                   	ret
   1400020a7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   1400020ae:	00 00 
   1400020b0:	83 fa 03             	cmp    edx,0x3
   1400020b3:	75 e7                	jne    14000209c <__mingw_TLScallback+0x2c>
   1400020b5:	8b 05 2d 50 00 00    	mov    eax,DWORD PTR [rip+0x502d]        # 1400070e8 <__mingwthr_cs_init>
   1400020bb:	85 c0                	test   eax,eax
   1400020bd:	74 dd                	je     14000209c <__mingw_TLScallback+0x2c>
   1400020bf:	e8 3c fe ff ff       	call   140001f00 <__mingwthr_run_key_dtors.part.0>
   1400020c4:	eb d6                	jmp    14000209c <__mingw_TLScallback+0x2c>
   1400020c6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   1400020cd:	00 00 00 
   1400020d0:	8b 05 12 50 00 00    	mov    eax,DWORD PTR [rip+0x5012]        # 1400070e8 <__mingwthr_cs_init>
   1400020d6:	85 c0                	test   eax,eax
   1400020d8:	75 66                	jne    140002140 <__mingw_TLScallback+0xd0>
   1400020da:	8b 05 08 50 00 00    	mov    eax,DWORD PTR [rip+0x5008]        # 1400070e8 <__mingwthr_cs_init>
   1400020e0:	83 f8 01             	cmp    eax,0x1
   1400020e3:	75 b7                	jne    14000209c <__mingw_TLScallback+0x2c>
   1400020e5:	48 8b 1d f4 4f 00 00 	mov    rbx,QWORD PTR [rip+0x4ff4]        # 1400070e0 <key_dtor_list>
   1400020ec:	48 85 db             	test   rbx,rbx
   1400020ef:	74 18                	je     140002109 <__mingw_TLScallback+0x99>
   1400020f1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   1400020f8:	48 89 d9             	mov    rcx,rbx
   1400020fb:	48 8b 5b 10          	mov    rbx,QWORD PTR [rbx+0x10]
   1400020ff:	e8 bc 08 00 00       	call   1400029c0 <free>
   140002104:	48 85 db             	test   rbx,rbx
   140002107:	75 ef                	jne    1400020f8 <__mingw_TLScallback+0x88>
   140002109:	48 8d 0d f0 4f 00 00 	lea    rcx,[rip+0x4ff0]        # 140007100 <__mingwthr_cs>
   140002110:	48 c7 05 c5 4f 00 00 	mov    QWORD PTR [rip+0x4fc5],0x0        # 1400070e0 <key_dtor_list>
   140002117:	00 00 00 00 
   14000211b:	c7 05 c3 4f 00 00 00 	mov    DWORD PTR [rip+0x4fc3],0x0        # 1400070e8 <__mingwthr_cs_init>
   140002122:	00 00 00 
   140002125:	ff 15 65 61 00 00    	call   QWORD PTR [rip+0x6165]        # 140008290 <__IAT_start__>
   14000212b:	e9 6c ff ff ff       	jmp    14000209c <__mingw_TLScallback+0x2c>
   140002130:	e8 8b f6 ff ff       	call   1400017c0 <_fpreset>
   140002135:	b8 01 00 00 00       	mov    eax,0x1
   14000213a:	48 83 c4 20          	add    rsp,0x20
   14000213e:	5b                   	pop    rbx
   14000213f:	c3                   	ret
   140002140:	e8 bb fd ff ff       	call   140001f00 <__mingwthr_run_key_dtors.part.0>
   140002145:	eb 93                	jmp    1400020da <__mingw_TLScallback+0x6a>
   140002147:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   14000214e:	00 00 
   140002150:	48 8d 0d a9 4f 00 00 	lea    rcx,[rip+0x4fa9]        # 140007100 <__mingwthr_cs>
   140002157:	ff 15 4b 61 00 00    	call   QWORD PTR [rip+0x614b]        # 1400082a8 <__imp_InitializeCriticalSection>
   14000215d:	e9 30 ff ff ff       	jmp    140002092 <__mingw_TLScallback+0x22>
   140002162:	90                   	nop
   140002163:	90                   	nop
   140002164:	90                   	nop
   140002165:	90                   	nop
   140002166:	90                   	nop
   140002167:	90                   	nop
   140002168:	90                   	nop
   140002169:	90                   	nop
   14000216a:	90                   	nop
   14000216b:	90                   	nop
   14000216c:	90                   	nop
   14000216d:	90                   	nop
   14000216e:	90                   	nop
   14000216f:	90                   	nop

0000000140002170 <exit>:
   140002170:	48 83 ec 28          	sub    rsp,0x28
   140002174:	48 8b 05 b5 22 00 00 	mov    rax,QWORD PTR [rip+0x22b5]        # 140004430 <.refptr.__imp_exit>
   14000217b:	ff 10                	call   QWORD PTR [rax]
   14000217d:	90                   	nop
   14000217e:	66 90                	xchg   ax,ax

0000000140002180 <_exit>:
   140002180:	48 83 ec 28          	sub    rsp,0x28
   140002184:	48 8b 05 85 22 00 00 	mov    rax,QWORD PTR [rip+0x2285]        # 140004410 <.refptr.__imp__exit>
   14000218b:	ff 10                	call   QWORD PTR [rax]
   14000218d:	90                   	nop
   14000218e:	90                   	nop
   14000218f:	90                   	nop

0000000140002190 <_ValidateImageBase>:
   140002190:	31 c0                	xor    eax,eax
   140002192:	66 81 39 4d 5a       	cmp    WORD PTR [rcx],0x5a4d
   140002197:	75 0f                	jne    1400021a8 <_ValidateImageBase+0x18>
   140002199:	48 63 51 3c          	movsxd rdx,DWORD PTR [rcx+0x3c]
   14000219d:	48 01 d1             	add    rcx,rdx
   1400021a0:	81 39 50 45 00 00    	cmp    DWORD PTR [rcx],0x4550
   1400021a6:	74 08                	je     1400021b0 <_ValidateImageBase+0x20>
   1400021a8:	c3                   	ret
   1400021a9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   1400021b0:	31 c0                	xor    eax,eax
   1400021b2:	66 81 79 18 0b 02    	cmp    WORD PTR [rcx+0x18],0x20b
   1400021b8:	0f 94 c0             	sete   al
   1400021bb:	c3                   	ret
   1400021bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000001400021c0 <_FindPESection>:
   1400021c0:	48 63 41 3c          	movsxd rax,DWORD PTR [rcx+0x3c]
   1400021c4:	48 01 c1             	add    rcx,rax
   1400021c7:	44 0f b7 41 06       	movzx  r8d,WORD PTR [rcx+0x6]
   1400021cc:	0f b7 41 14          	movzx  eax,WORD PTR [rcx+0x14]
   1400021d0:	66 45 85 c0          	test   r8w,r8w
   1400021d4:	48 8d 44 01 18       	lea    rax,[rcx+rax*1+0x18]
   1400021d9:	74 32                	je     14000220d <_FindPESection+0x4d>
   1400021db:	41 8d 48 ff          	lea    ecx,[r8-0x1]
   1400021df:	48 8d 0c 89          	lea    rcx,[rcx+rcx*4]
   1400021e3:	4c 8d 4c c8 28       	lea    r9,[rax+rcx*8+0x28]
   1400021e8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   1400021ef:	00 
   1400021f0:	44 8b 40 0c          	mov    r8d,DWORD PTR [rax+0xc]
   1400021f4:	4c 39 c2             	cmp    rdx,r8
   1400021f7:	4c 89 c1             	mov    rcx,r8
   1400021fa:	72 08                	jb     140002204 <_FindPESection+0x44>
   1400021fc:	03 48 08             	add    ecx,DWORD PTR [rax+0x8]
   1400021ff:	48 39 ca             	cmp    rdx,rcx
   140002202:	72 0b                	jb     14000220f <_FindPESection+0x4f>
   140002204:	48 83 c0 28          	add    rax,0x28
   140002208:	4c 39 c8             	cmp    rax,r9
   14000220b:	75 e3                	jne    1400021f0 <_FindPESection+0x30>
   14000220d:	31 c0                	xor    eax,eax
   14000220f:	c3                   	ret

0000000140002210 <_FindPESectionByName>:
   140002210:	57                   	push   rdi
   140002211:	56                   	push   rsi
   140002212:	53                   	push   rbx
   140002213:	48 83 ec 20          	sub    rsp,0x20
   140002217:	48 89 ce             	mov    rsi,rcx
   14000221a:	e8 b1 06 00 00       	call   1400028d0 <strlen>
   14000221f:	48 83 f8 08          	cmp    rax,0x8
   140002223:	77 7b                	ja     1400022a0 <_FindPESectionByName+0x90>
   140002225:	48 8b 15 c4 21 00 00 	mov    rdx,QWORD PTR [rip+0x21c4]        # 1400043f0 <.refptr.__image_base__>
   14000222c:	31 db                	xor    ebx,ebx
   14000222e:	66 81 3a 4d 5a       	cmp    WORD PTR [rdx],0x5a4d
   140002233:	75 59                	jne    14000228e <_FindPESectionByName+0x7e>
   140002235:	48 63 42 3c          	movsxd rax,DWORD PTR [rdx+0x3c]
   140002239:	48 01 d0             	add    rax,rdx
   14000223c:	81 38 50 45 00 00    	cmp    DWORD PTR [rax],0x4550
   140002242:	75 4a                	jne    14000228e <_FindPESectionByName+0x7e>
   140002244:	66 81 78 18 0b 02    	cmp    WORD PTR [rax+0x18],0x20b
   14000224a:	75 42                	jne    14000228e <_FindPESectionByName+0x7e>
   14000224c:	0f b7 50 14          	movzx  edx,WORD PTR [rax+0x14]
   140002250:	48 8d 5c 10 18       	lea    rbx,[rax+rdx*1+0x18]
   140002255:	0f b7 50 06          	movzx  edx,WORD PTR [rax+0x6]
   140002259:	66 85 d2             	test   dx,dx
   14000225c:	74 42                	je     1400022a0 <_FindPESectionByName+0x90>
   14000225e:	8d 42 ff             	lea    eax,[rdx-0x1]
   140002261:	48 8d 04 80          	lea    rax,[rax+rax*4]
   140002265:	48 8d 7c c3 28       	lea    rdi,[rbx+rax*8+0x28]
   14000226a:	eb 0d                	jmp    140002279 <_FindPESectionByName+0x69>
   14000226c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140002270:	48 83 c3 28          	add    rbx,0x28
   140002274:	48 39 fb             	cmp    rbx,rdi
   140002277:	74 27                	je     1400022a0 <_FindPESectionByName+0x90>
   140002279:	41 b8 08 00 00 00    	mov    r8d,0x8
   14000227f:	48 89 f2             	mov    rdx,rsi
   140002282:	48 89 d9             	mov    rcx,rbx
   140002285:	e8 4e 06 00 00       	call   1400028d8 <strncmp>
   14000228a:	85 c0                	test   eax,eax
   14000228c:	75 e2                	jne    140002270 <_FindPESectionByName+0x60>
   14000228e:	48 89 d8             	mov    rax,rbx
   140002291:	48 83 c4 20          	add    rsp,0x20
   140002295:	5b                   	pop    rbx
   140002296:	5e                   	pop    rsi
   140002297:	5f                   	pop    rdi
   140002298:	c3                   	ret
   140002299:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   1400022a0:	31 db                	xor    ebx,ebx
   1400022a2:	48 89 d8             	mov    rax,rbx
   1400022a5:	48 83 c4 20          	add    rsp,0x20
   1400022a9:	5b                   	pop    rbx
   1400022aa:	5e                   	pop    rsi
   1400022ab:	5f                   	pop    rdi
   1400022ac:	c3                   	ret
   1400022ad:	0f 1f 00             	nop    DWORD PTR [rax]

00000001400022b0 <__mingw_GetSectionForAddress>:
   1400022b0:	48 8b 15 39 21 00 00 	mov    rdx,QWORD PTR [rip+0x2139]        # 1400043f0 <.refptr.__image_base__>
   1400022b7:	31 c0                	xor    eax,eax
   1400022b9:	66 81 3a 4d 5a       	cmp    WORD PTR [rdx],0x5a4d
   1400022be:	75 10                	jne    1400022d0 <__mingw_GetSectionForAddress+0x20>
   1400022c0:	4c 63 42 3c          	movsxd r8,DWORD PTR [rdx+0x3c]
   1400022c4:	49 01 d0             	add    r8,rdx
   1400022c7:	41 81 38 50 45 00 00 	cmp    DWORD PTR [r8],0x4550
   1400022ce:	74 08                	je     1400022d8 <__mingw_GetSectionForAddress+0x28>
   1400022d0:	c3                   	ret
   1400022d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   1400022d8:	66 41 81 78 18 0b 02 	cmp    WORD PTR [r8+0x18],0x20b
   1400022df:	75 ef                	jne    1400022d0 <__mingw_GetSectionForAddress+0x20>
   1400022e1:	41 0f b7 40 14       	movzx  eax,WORD PTR [r8+0x14]
   1400022e6:	48 29 d1             	sub    rcx,rdx
   1400022e9:	49 8d 44 00 18       	lea    rax,[r8+rax*1+0x18]
   1400022ee:	45 0f b7 40 06       	movzx  r8d,WORD PTR [r8+0x6]
   1400022f3:	66 45 85 c0          	test   r8w,r8w
   1400022f7:	74 34                	je     14000232d <__mingw_GetSectionForAddress+0x7d>
   1400022f9:	41 8d 50 ff          	lea    edx,[r8-0x1]
   1400022fd:	48 8d 14 92          	lea    rdx,[rdx+rdx*4]
   140002301:	4c 8d 4c d0 28       	lea    r9,[rax+rdx*8+0x28]
   140002306:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   14000230d:	00 00 00 
   140002310:	44 8b 40 0c          	mov    r8d,DWORD PTR [rax+0xc]
   140002314:	4c 39 c1             	cmp    rcx,r8
   140002317:	4c 89 c2             	mov    rdx,r8
   14000231a:	72 08                	jb     140002324 <__mingw_GetSectionForAddress+0x74>
   14000231c:	03 50 08             	add    edx,DWORD PTR [rax+0x8]
   14000231f:	48 39 d1             	cmp    rcx,rdx
   140002322:	72 ac                	jb     1400022d0 <__mingw_GetSectionForAddress+0x20>
   140002324:	48 83 c0 28          	add    rax,0x28
   140002328:	4c 39 c8             	cmp    rax,r9
   14000232b:	75 e3                	jne    140002310 <__mingw_GetSectionForAddress+0x60>
   14000232d:	31 c0                	xor    eax,eax
   14000232f:	c3                   	ret

0000000140002330 <__mingw_GetSectionCount>:
   140002330:	48 8b 05 b9 20 00 00 	mov    rax,QWORD PTR [rip+0x20b9]        # 1400043f0 <.refptr.__image_base__>
   140002337:	31 c9                	xor    ecx,ecx
   140002339:	66 81 38 4d 5a       	cmp    WORD PTR [rax],0x5a4d
   14000233e:	75 0f                	jne    14000234f <__mingw_GetSectionCount+0x1f>
   140002340:	48 63 50 3c          	movsxd rdx,DWORD PTR [rax+0x3c]
   140002344:	48 01 d0             	add    rax,rdx
   140002347:	81 38 50 45 00 00    	cmp    DWORD PTR [rax],0x4550
   14000234d:	74 09                	je     140002358 <__mingw_GetSectionCount+0x28>
   14000234f:	89 c8                	mov    eax,ecx
   140002351:	c3                   	ret
   140002352:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   140002358:	66 81 78 18 0b 02    	cmp    WORD PTR [rax+0x18],0x20b
   14000235e:	75 ef                	jne    14000234f <__mingw_GetSectionCount+0x1f>
   140002360:	0f b7 48 06          	movzx  ecx,WORD PTR [rax+0x6]
   140002364:	89 c8                	mov    eax,ecx
   140002366:	c3                   	ret
   140002367:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   14000236e:	00 00 

0000000140002370 <_FindPESectionExec>:
   140002370:	4c 8b 05 79 20 00 00 	mov    r8,QWORD PTR [rip+0x2079]        # 1400043f0 <.refptr.__image_base__>
   140002377:	31 c0                	xor    eax,eax
   140002379:	66 41 81 38 4d 5a    	cmp    WORD PTR [r8],0x5a4d
   14000237f:	75 0f                	jne    140002390 <_FindPESectionExec+0x20>
   140002381:	49 63 50 3c          	movsxd rdx,DWORD PTR [r8+0x3c]
   140002385:	4c 01 c2             	add    rdx,r8
   140002388:	81 3a 50 45 00 00    	cmp    DWORD PTR [rdx],0x4550
   14000238e:	74 08                	je     140002398 <_FindPESectionExec+0x28>
   140002390:	c3                   	ret
   140002391:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   140002398:	66 81 7a 18 0b 02    	cmp    WORD PTR [rdx+0x18],0x20b
   14000239e:	75 f0                	jne    140002390 <_FindPESectionExec+0x20>
   1400023a0:	44 0f b7 42 06       	movzx  r8d,WORD PTR [rdx+0x6]
   1400023a5:	0f b7 42 14          	movzx  eax,WORD PTR [rdx+0x14]
   1400023a9:	66 45 85 c0          	test   r8w,r8w
   1400023ad:	48 8d 44 02 18       	lea    rax,[rdx+rax*1+0x18]
   1400023b2:	74 2c                	je     1400023e0 <_FindPESectionExec+0x70>
   1400023b4:	41 8d 50 ff          	lea    edx,[r8-0x1]
   1400023b8:	48 8d 14 92          	lea    rdx,[rdx+rdx*4]
   1400023bc:	48 8d 54 d0 28       	lea    rdx,[rax+rdx*8+0x28]
   1400023c1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   1400023c8:	f6 40 27 20          	test   BYTE PTR [rax+0x27],0x20
   1400023cc:	74 09                	je     1400023d7 <_FindPESectionExec+0x67>
   1400023ce:	48 85 c9             	test   rcx,rcx
   1400023d1:	74 bd                	je     140002390 <_FindPESectionExec+0x20>
   1400023d3:	48 83 e9 01          	sub    rcx,0x1
   1400023d7:	48 83 c0 28          	add    rax,0x28
   1400023db:	48 39 d0             	cmp    rax,rdx
   1400023de:	75 e8                	jne    1400023c8 <_FindPESectionExec+0x58>
   1400023e0:	31 c0                	xor    eax,eax
   1400023e2:	c3                   	ret
   1400023e3:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1400023ea:	00 00 00 00 
   1400023ee:	66 90                	xchg   ax,ax

00000001400023f0 <_GetPEImageBase>:
   1400023f0:	48 8b 05 f9 1f 00 00 	mov    rax,QWORD PTR [rip+0x1ff9]        # 1400043f0 <.refptr.__image_base__>
   1400023f7:	31 d2                	xor    edx,edx
   1400023f9:	66 81 38 4d 5a       	cmp    WORD PTR [rax],0x5a4d
   1400023fe:	75 0f                	jne    14000240f <_GetPEImageBase+0x1f>
   140002400:	48 63 48 3c          	movsxd rcx,DWORD PTR [rax+0x3c]
   140002404:	48 01 c1             	add    rcx,rax
   140002407:	81 39 50 45 00 00    	cmp    DWORD PTR [rcx],0x4550
   14000240d:	74 09                	je     140002418 <_GetPEImageBase+0x28>
   14000240f:	48 89 d0             	mov    rax,rdx
   140002412:	c3                   	ret
   140002413:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140002418:	66 81 79 18 0b 02    	cmp    WORD PTR [rcx+0x18],0x20b
   14000241e:	48 0f 44 d0          	cmove  rdx,rax
   140002422:	48 89 d0             	mov    rax,rdx
   140002425:	c3                   	ret
   140002426:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   14000242d:	00 00 00 

0000000140002430 <_IsNonwritableInCurrentImage>:
   140002430:	48 8b 15 b9 1f 00 00 	mov    rdx,QWORD PTR [rip+0x1fb9]        # 1400043f0 <.refptr.__image_base__>
   140002437:	31 c0                	xor    eax,eax
   140002439:	66 81 3a 4d 5a       	cmp    WORD PTR [rdx],0x5a4d
   14000243e:	75 10                	jne    140002450 <_IsNonwritableInCurrentImage+0x20>
   140002440:	4c 63 42 3c          	movsxd r8,DWORD PTR [rdx+0x3c]
   140002444:	49 01 d0             	add    r8,rdx
   140002447:	41 81 38 50 45 00 00 	cmp    DWORD PTR [r8],0x4550
   14000244e:	74 08                	je     140002458 <_IsNonwritableInCurrentImage+0x28>
   140002450:	c3                   	ret
   140002451:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   140002458:	66 41 81 78 18 0b 02 	cmp    WORD PTR [r8+0x18],0x20b
   14000245f:	75 ef                	jne    140002450 <_IsNonwritableInCurrentImage+0x20>
   140002461:	45 0f b7 48 06       	movzx  r9d,WORD PTR [r8+0x6]
   140002466:	48 29 d1             	sub    rcx,rdx
   140002469:	41 0f b7 50 14       	movzx  edx,WORD PTR [r8+0x14]
   14000246e:	66 45 85 c9          	test   r9w,r9w
   140002472:	49 8d 54 10 18       	lea    rdx,[r8+rdx*1+0x18]
   140002477:	74 d7                	je     140002450 <_IsNonwritableInCurrentImage+0x20>
   140002479:	41 8d 41 ff          	lea    eax,[r9-0x1]
   14000247d:	48 8d 04 80          	lea    rax,[rax+rax*4]
   140002481:	4c 8d 4c c2 28       	lea    r9,[rdx+rax*8+0x28]
   140002486:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   14000248d:	00 00 00 
   140002490:	44 8b 42 0c          	mov    r8d,DWORD PTR [rdx+0xc]
   140002494:	4c 39 c1             	cmp    rcx,r8
   140002497:	4c 89 c0             	mov    rax,r8
   14000249a:	72 08                	jb     1400024a4 <_IsNonwritableInCurrentImage+0x74>
   14000249c:	03 42 08             	add    eax,DWORD PTR [rdx+0x8]
   14000249f:	48 39 c1             	cmp    rcx,rax
   1400024a2:	72 0c                	jb     1400024b0 <_IsNonwritableInCurrentImage+0x80>
   1400024a4:	48 83 c2 28          	add    rdx,0x28
   1400024a8:	49 39 d1             	cmp    r9,rdx
   1400024ab:	75 e3                	jne    140002490 <_IsNonwritableInCurrentImage+0x60>
   1400024ad:	31 c0                	xor    eax,eax
   1400024af:	c3                   	ret
   1400024b0:	8b 42 24             	mov    eax,DWORD PTR [rdx+0x24]
   1400024b3:	f7 d0                	not    eax
   1400024b5:	c1 e8 1f             	shr    eax,0x1f
   1400024b8:	c3                   	ret
   1400024b9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000001400024c0 <__mingw_enum_import_library_names>:
   1400024c0:	4c 8b 1d 29 1f 00 00 	mov    r11,QWORD PTR [rip+0x1f29]        # 1400043f0 <.refptr.__image_base__>
   1400024c7:	45 31 c9             	xor    r9d,r9d
   1400024ca:	66 41 81 3b 4d 5a    	cmp    WORD PTR [r11],0x5a4d
   1400024d0:	75 10                	jne    1400024e2 <__mingw_enum_import_library_names+0x22>
   1400024d2:	4d 63 43 3c          	movsxd r8,DWORD PTR [r11+0x3c]
   1400024d6:	4d 01 d8             	add    r8,r11
   1400024d9:	41 81 38 50 45 00 00 	cmp    DWORD PTR [r8],0x4550
   1400024e0:	74 0e                	je     1400024f0 <__mingw_enum_import_library_names+0x30>
   1400024e2:	4c 89 c8             	mov    rax,r9
   1400024e5:	c3                   	ret
   1400024e6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   1400024ed:	00 00 00 
   1400024f0:	66 41 81 78 18 0b 02 	cmp    WORD PTR [r8+0x18],0x20b
   1400024f7:	75 e9                	jne    1400024e2 <__mingw_enum_import_library_names+0x22>
   1400024f9:	41 8b 80 90 00 00 00 	mov    eax,DWORD PTR [r8+0x90]
   140002500:	85 c0                	test   eax,eax
   140002502:	74 de                	je     1400024e2 <__mingw_enum_import_library_names+0x22>
   140002504:	45 0f b7 50 06       	movzx  r10d,WORD PTR [r8+0x6]
   140002509:	41 0f b7 50 14       	movzx  edx,WORD PTR [r8+0x14]
   14000250e:	66 45 85 d2          	test   r10w,r10w
   140002512:	49 8d 54 10 18       	lea    rdx,[r8+rdx*1+0x18]
   140002517:	74 c9                	je     1400024e2 <__mingw_enum_import_library_names+0x22>
   140002519:	45 8d 42 ff          	lea    r8d,[r10-0x1]
   14000251d:	4f 8d 04 80          	lea    r8,[r8+r8*4]
   140002521:	4e 8d 54 c2 28       	lea    r10,[rdx+r8*8+0x28]
   140002526:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   14000252d:	00 00 00 
   140002530:	44 8b 4a 0c          	mov    r9d,DWORD PTR [rdx+0xc]
   140002534:	4c 39 c8             	cmp    rax,r9
   140002537:	4d 89 c8             	mov    r8,r9
   14000253a:	72 09                	jb     140002545 <__mingw_enum_import_library_names+0x85>
   14000253c:	44 03 42 08          	add    r8d,DWORD PTR [rdx+0x8]
   140002540:	4c 39 c0             	cmp    rax,r8
   140002543:	72 13                	jb     140002558 <__mingw_enum_import_library_names+0x98>
   140002545:	48 83 c2 28          	add    rdx,0x28
   140002549:	4c 39 d2             	cmp    rdx,r10
   14000254c:	75 e2                	jne    140002530 <__mingw_enum_import_library_names+0x70>
   14000254e:	45 31 c9             	xor    r9d,r9d
   140002551:	4c 89 c8             	mov    rax,r9
   140002554:	c3                   	ret
   140002555:	0f 1f 00             	nop    DWORD PTR [rax]
   140002558:	4c 01 d8             	add    rax,r11
   14000255b:	eb 0a                	jmp    140002567 <__mingw_enum_import_library_names+0xa7>
   14000255d:	0f 1f 00             	nop    DWORD PTR [rax]
   140002560:	83 e9 01             	sub    ecx,0x1
   140002563:	48 83 c0 14          	add    rax,0x14
   140002567:	44 8b 40 04          	mov    r8d,DWORD PTR [rax+0x4]
   14000256b:	45 85 c0             	test   r8d,r8d
   14000256e:	75 07                	jne    140002577 <__mingw_enum_import_library_names+0xb7>
   140002570:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
   140002573:	85 d2                	test   edx,edx
   140002575:	74 d7                	je     14000254e <__mingw_enum_import_library_names+0x8e>
   140002577:	85 c9                	test   ecx,ecx
   140002579:	7f e5                	jg     140002560 <__mingw_enum_import_library_names+0xa0>
   14000257b:	44 8b 48 0c          	mov    r9d,DWORD PTR [rax+0xc]
   14000257f:	4d 01 d9             	add    r9,r11
   140002582:	4c 89 c8             	mov    rax,r9
   140002585:	c3                   	ret
   140002586:	90                   	nop
   140002587:	90                   	nop
   140002588:	90                   	nop
   140002589:	90                   	nop
   14000258a:	90                   	nop
   14000258b:	90                   	nop
   14000258c:	90                   	nop
   14000258d:	90                   	nop
   14000258e:	90                   	nop
   14000258f:	90                   	nop

0000000140002590 <___chkstk_ms>:
   140002590:	51                   	push   rcx
   140002591:	50                   	push   rax
   140002592:	48 3d 00 10 00 00    	cmp    rax,0x1000
   140002598:	48 8d 4c 24 18       	lea    rcx,[rsp+0x18]
   14000259d:	72 19                	jb     1400025b8 <___chkstk_ms+0x28>
   14000259f:	48 81 e9 00 10 00 00 	sub    rcx,0x1000
   1400025a6:	48 83 09 00          	or     QWORD PTR [rcx],0x0
   1400025aa:	48 2d 00 10 00 00    	sub    rax,0x1000
   1400025b0:	48 3d 00 10 00 00    	cmp    rax,0x1000
   1400025b6:	77 e7                	ja     14000259f <___chkstk_ms+0xf>
   1400025b8:	48 29 c1             	sub    rcx,rax
   1400025bb:	48 83 09 00          	or     QWORD PTR [rcx],0x0
   1400025bf:	58                   	pop    rax
   1400025c0:	59                   	pop    rcx
   1400025c1:	c3                   	ret
   1400025c2:	90                   	nop
   1400025c3:	90                   	nop
   1400025c4:	90                   	nop
   1400025c5:	90                   	nop
   1400025c6:	90                   	nop
   1400025c7:	90                   	nop
   1400025c8:	90                   	nop
   1400025c9:	90                   	nop
   1400025ca:	90                   	nop
   1400025cb:	90                   	nop
   1400025cc:	90                   	nop
   1400025cd:	90                   	nop
   1400025ce:	90                   	nop
   1400025cf:	90                   	nop

00000001400025d0 <vfprintf>:
   1400025d0:	48 83 ec 38          	sub    rsp,0x38
   1400025d4:	45 31 c9             	xor    r9d,r9d
   1400025d7:	4c 89 44 24 20       	mov    QWORD PTR [rsp+0x20],r8
   1400025dc:	49 89 d0             	mov    r8,rdx
   1400025df:	48 89 ca             	mov    rdx,rcx
   1400025e2:	31 c9                	xor    ecx,ecx
   1400025e4:	e8 0f 03 00 00       	call   1400028f8 <__stdio_common_vfprintf>
   1400025e9:	48 83 c4 38          	add    rsp,0x38
   1400025ed:	c3                   	ret
   1400025ee:	90                   	nop
   1400025ef:	90                   	nop

00000001400025f0 <printf>:
   1400025f0:	56                   	push   rsi
   1400025f1:	53                   	push   rbx
   1400025f2:	48 83 ec 48          	sub    rsp,0x48
   1400025f6:	48 8d 74 24 68       	lea    rsi,[rsp+0x68]
   1400025fb:	48 89 cb             	mov    rbx,rcx
   1400025fe:	b9 01 00 00 00       	mov    ecx,0x1
   140002603:	48 89 54 24 68       	mov    QWORD PTR [rsp+0x68],rdx
   140002608:	4c 89 44 24 70       	mov    QWORD PTR [rsp+0x70],r8
   14000260d:	4c 89 4c 24 78       	mov    QWORD PTR [rsp+0x78],r9
   140002612:	48 89 74 24 38       	mov    QWORD PTR [rsp+0x38],rsi
   140002617:	e8 c4 02 00 00       	call   1400028e0 <__acrt_iob_func>
   14000261c:	48 89 74 24 20       	mov    QWORD PTR [rsp+0x20],rsi
   140002621:	45 31 c9             	xor    r9d,r9d
   140002624:	49 89 d8             	mov    r8,rbx
   140002627:	48 89 c2             	mov    rdx,rax
   14000262a:	31 c9                	xor    ecx,ecx
   14000262c:	e8 c7 02 00 00       	call   1400028f8 <__stdio_common_vfprintf>
   140002631:	48 83 c4 48          	add    rsp,0x48
   140002635:	5b                   	pop    rbx
   140002636:	5e                   	pop    rsi
   140002637:	c3                   	ret
   140002638:	90                   	nop
   140002639:	90                   	nop
   14000263a:	90                   	nop
   14000263b:	90                   	nop
   14000263c:	90                   	nop
   14000263d:	90                   	nop
   14000263e:	90                   	nop
   14000263f:	90                   	nop

0000000140002640 <fprintf>:
   140002640:	48 83 ec 48          	sub    rsp,0x48
   140002644:	48 8d 44 24 60       	lea    rax,[rsp+0x60]
   140002649:	4c 89 44 24 60       	mov    QWORD PTR [rsp+0x60],r8
   14000264e:	49 89 d0             	mov    r8,rdx
   140002651:	48 89 ca             	mov    rdx,rcx
   140002654:	4c 89 4c 24 68       	mov    QWORD PTR [rsp+0x68],r9
   140002659:	31 c9                	xor    ecx,ecx
   14000265b:	45 31 c9             	xor    r9d,r9d
   14000265e:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
   140002663:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
   140002668:	e8 8b 02 00 00       	call   1400028f8 <__stdio_common_vfprintf>
   14000266d:	48 83 c4 48          	add    rsp,0x48
   140002671:	c3                   	ret
   140002672:	90                   	nop
   140002673:	90                   	nop
   140002674:	90                   	nop
   140002675:	90                   	nop
   140002676:	90                   	nop
   140002677:	90                   	nop
   140002678:	90                   	nop
   140002679:	90                   	nop
   14000267a:	90                   	nop
   14000267b:	90                   	nop
   14000267c:	90                   	nop
   14000267d:	90                   	nop
   14000267e:	90                   	nop
   14000267f:	90                   	nop

0000000140002680 <_get_output_format>:
   140002680:	31 c0                	xor    eax,eax
   140002682:	c3                   	ret
   140002683:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   14000268a:	00 00 00 00 
   14000268e:	66 90                	xchg   ax,ax

0000000140002690 <__getmainargs>:
   140002690:	41 54                	push   r12
   140002692:	55                   	push   rbp
   140002693:	57                   	push   rdi
   140002694:	56                   	push   rsi
   140002695:	53                   	push   rbx
   140002696:	48 83 ec 20          	sub    rsp,0x20
   14000269a:	4c 8b 64 24 70       	mov    r12,QWORD PTR [rsp+0x70]
   14000269f:	44 89 cd             	mov    ebp,r9d
   1400026a2:	48 89 d6             	mov    rsi,rdx
   1400026a5:	4c 89 c3             	mov    rbx,r8
   1400026a8:	48 89 cf             	mov    rdi,rcx
   1400026ab:	e8 a0 02 00 00       	call   140002950 <_initialize_narrow_environment>
   1400026b0:	83 fd 01             	cmp    ebp,0x1
   1400026b3:	b9 01 00 00 00       	mov    ecx,0x1
   1400026b8:	83 d9 ff             	sbb    ecx,0xffffffff
   1400026bb:	e8 70 02 00 00       	call   140002930 <_configure_narrow_argv>
   1400026c0:	e8 4b 02 00 00       	call   140002910 <__p___argc>
   1400026c5:	8b 00                	mov    eax,DWORD PTR [rax]
   1400026c7:	89 07                	mov    DWORD PTR [rdi],eax
   1400026c9:	e8 4a 02 00 00       	call   140002918 <__p___argv>
   1400026ce:	48 8b 00             	mov    rax,QWORD PTR [rax]
   1400026d1:	48 89 06             	mov    QWORD PTR [rsi],rax
   1400026d4:	e8 f7 02 00 00       	call   1400029d0 <__p__environ>
   1400026d9:	4d 85 e4             	test   r12,r12
   1400026dc:	48 8b 00             	mov    rax,QWORD PTR [rax]
   1400026df:	48 89 03             	mov    QWORD PTR [rbx],rax
   1400026e2:	74 09                	je     1400026ed <__getmainargs+0x5d>
   1400026e4:	41 8b 0c 24          	mov    ecx,DWORD PTR [r12]
   1400026e8:	e8 c3 02 00 00       	call   1400029b0 <_set_new_mode>
   1400026ed:	31 c0                	xor    eax,eax
   1400026ef:	48 83 c4 20          	add    rsp,0x20
   1400026f3:	5b                   	pop    rbx
   1400026f4:	5e                   	pop    rsi
   1400026f5:	5f                   	pop    rdi
   1400026f6:	5d                   	pop    rbp
   1400026f7:	41 5c                	pop    r12
   1400026f9:	c3                   	ret
   1400026fa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000140002700 <__wgetmainargs>:
   140002700:	41 54                	push   r12
   140002702:	55                   	push   rbp
   140002703:	57                   	push   rdi
   140002704:	56                   	push   rsi
   140002705:	53                   	push   rbx
   140002706:	48 83 ec 20          	sub    rsp,0x20
   14000270a:	4c 8b 64 24 70       	mov    r12,QWORD PTR [rsp+0x70]
   14000270f:	44 89 cd             	mov    ebp,r9d
   140002712:	48 89 d6             	mov    rsi,rdx
   140002715:	4c 89 c3             	mov    rbx,r8
   140002718:	48 89 cf             	mov    rdi,rcx
   14000271b:	e8 38 02 00 00       	call   140002958 <_initialize_wide_environment>
   140002720:	83 fd 01             	cmp    ebp,0x1
   140002723:	b9 01 00 00 00       	mov    ecx,0x1
   140002728:	83 d9 ff             	sbb    ecx,0xffffffff
   14000272b:	e8 08 02 00 00       	call   140002938 <_configure_wide_argv>
   140002730:	e8 db 01 00 00       	call   140002910 <__p___argc>
   140002735:	8b 00                	mov    eax,DWORD PTR [rax]
   140002737:	89 07                	mov    DWORD PTR [rdi],eax
   140002739:	e8 e2 01 00 00       	call   140002920 <__p___wargv>
   14000273e:	48 8b 00             	mov    rax,QWORD PTR [rax]
   140002741:	48 89 06             	mov    QWORD PTR [rsi],rax
   140002744:	e8 8f 02 00 00       	call   1400029d8 <__p__wenviron>
   140002749:	4d 85 e4             	test   r12,r12
   14000274c:	48 8b 00             	mov    rax,QWORD PTR [rax]
   14000274f:	48 89 03             	mov    QWORD PTR [rbx],rax
   140002752:	74 09                	je     14000275d <__wgetmainargs+0x5d>
   140002754:	41 8b 0c 24          	mov    ecx,DWORD PTR [r12]
   140002758:	e8 53 02 00 00       	call   1400029b0 <_set_new_mode>
   14000275d:	31 c0                	xor    eax,eax
   14000275f:	48 83 c4 20          	add    rsp,0x20
   140002763:	5b                   	pop    rbx
   140002764:	5e                   	pop    rsi
   140002765:	5f                   	pop    rdi
   140002766:	5d                   	pop    rbp
   140002767:	41 5c                	pop    r12
   140002769:	c3                   	ret
   14000276a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000140002770 <_onexit>:
   140002770:	53                   	push   rbx
   140002771:	48 83 ec 20          	sub    rsp,0x20
   140002775:	48 89 cb             	mov    rbx,rcx
   140002778:	e8 cb 01 00 00       	call   140002948 <_crt_atexit>
   14000277d:	85 c0                	test   eax,eax
   14000277f:	b8 00 00 00 00       	mov    eax,0x0
   140002784:	48 0f 44 c3          	cmove  rax,rbx
   140002788:	48 83 c4 20          	add    rsp,0x20
   14000278c:	5b                   	pop    rbx
   14000278d:	c3                   	ret
   14000278e:	66 90                	xchg   ax,ax

0000000140002790 <at_quick_exit>:
   140002790:	48 8b 05 e9 1c 00 00 	mov    rax,QWORD PTR [rip+0x1ce9]        # 140004480 <.refptr.__mingw_module_is_dll>
   140002797:	80 38 00             	cmp    BYTE PTR [rax],0x0
   14000279a:	74 04                	je     1400027a0 <at_quick_exit+0x10>
   14000279c:	31 c0                	xor    eax,eax
   14000279e:	c3                   	ret
   14000279f:	90                   	nop
   1400027a0:	e9 9b 01 00 00       	jmp    140002940 <_crt_at_quick_exit>
   1400027a5:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1400027ac:	00 00 00 00 

00000001400027b0 <_amsg_exit>:
   1400027b0:	53                   	push   rbx
   1400027b1:	48 83 ec 20          	sub    rsp,0x20
   1400027b5:	89 cb                	mov    ebx,ecx
   1400027b7:	b9 02 00 00 00       	mov    ecx,0x2
   1400027bc:	e8 1f 01 00 00       	call   1400028e0 <__acrt_iob_func>
   1400027c1:	48 8d 15 a8 1b 00 00 	lea    rdx,[rip+0x1ba8]        # 140004370 <.rdata>
   1400027c8:	41 89 d8             	mov    r8d,ebx
   1400027cb:	48 89 c1             	mov    rcx,rax
   1400027ce:	e8 6d fe ff ff       	call   140002640 <fprintf>
   1400027d3:	48 8b 05 36 1c 00 00 	mov    rax,QWORD PTR [rip+0x1c36]        # 140004410 <.refptr.__imp__exit>
   1400027da:	b9 ff 00 00 00       	mov    ecx,0xff
   1400027df:	ff 10                	call   QWORD PTR [rax]
   1400027e1:	90                   	nop
   1400027e2:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1400027e9:	00 00 00 00 
   1400027ed:	0f 1f 00             	nop    DWORD PTR [rax]

00000001400027f0 <__ms_fwprintf>:
   1400027f0:	48 83 ec 48          	sub    rsp,0x48
   1400027f4:	48 8d 44 24 60       	lea    rax,[rsp+0x60]
   1400027f9:	4c 89 44 24 60       	mov    QWORD PTR [rsp+0x60],r8
   1400027fe:	49 89 d0             	mov    r8,rdx
   140002801:	48 89 ca             	mov    rdx,rcx
   140002804:	4c 89 4c 24 68       	mov    QWORD PTR [rsp+0x68],r9
   140002809:	b9 04 00 00 00       	mov    ecx,0x4
   14000280e:	45 31 c9             	xor    r9d,r9d
   140002811:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
   140002816:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
   14000281b:	e8 e0 00 00 00       	call   140002900 <__stdio_common_vfwprintf>
   140002820:	48 83 c4 48          	add    rsp,0x48
   140002824:	c3                   	ret
   140002825:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   14000282c:	00 00 00 00 

0000000140002830 <tzset>:
   140002830:	48 83 ec 28          	sub    rsp,0x28
   140002834:	48 8b 05 e5 1b 00 00 	mov    rax,QWORD PTR [rip+0x1be5]        # 140004420 <.refptr.__imp__tzset>
   14000283b:	ff 10                	call   QWORD PTR [rax]
   14000283d:	e8 7e 00 00 00       	call   1400028c0 <__tzname>
   140002842:	48 89 05 87 08 00 00 	mov    QWORD PTR [rip+0x887],rax        # 1400030d0 <__imp_tzname>
   140002849:	e8 6a 00 00 00       	call   1400028b8 <__timezone>
   14000284e:	48 89 05 73 08 00 00 	mov    QWORD PTR [rip+0x873],rax        # 1400030c8 <__imp_timezone>
   140002855:	e8 56 00 00 00       	call   1400028b0 <__daylight>
   14000285a:	48 89 05 5f 08 00 00 	mov    QWORD PTR [rip+0x85f],rax        # 1400030c0 <__imp_daylight>
   140002861:	48 83 c4 28          	add    rsp,0x28
   140002865:	c3                   	ret
   140002866:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   14000286d:	00 00 00 

0000000140002870 <_tzset>:
   140002870:	48 83 ec 28          	sub    rsp,0x28
   140002874:	48 8b 05 a5 1b 00 00 	mov    rax,QWORD PTR [rip+0x1ba5]        # 140004420 <.refptr.__imp__tzset>
   14000287b:	ff 10                	call   QWORD PTR [rax]
   14000287d:	e8 3e 00 00 00       	call   1400028c0 <__tzname>
   140002882:	48 89 05 47 08 00 00 	mov    QWORD PTR [rip+0x847],rax        # 1400030d0 <__imp_tzname>
   140002889:	e8 2a 00 00 00       	call   1400028b8 <__timezone>
   14000288e:	48 89 05 33 08 00 00 	mov    QWORD PTR [rip+0x833],rax        # 1400030c8 <__imp_timezone>
   140002895:	e8 16 00 00 00       	call   1400028b0 <__daylight>
   14000289a:	48 89 05 1f 08 00 00 	mov    QWORD PTR [rip+0x81f],rax        # 1400030c0 <__imp_daylight>
   1400028a1:	48 83 c4 28          	add    rsp,0x28
   1400028a5:	c3                   	ret
   1400028a6:	90                   	nop
   1400028a7:	90                   	nop
   1400028a8:	90                   	nop
   1400028a9:	90                   	nop
   1400028aa:	90                   	nop
   1400028ab:	90                   	nop
   1400028ac:	90                   	nop
   1400028ad:	90                   	nop
   1400028ae:	90                   	nop
   1400028af:	90                   	nop

00000001400028b0 <__daylight>:
   1400028b0:	ff 25 7a 5b 00 00    	jmp    QWORD PTR [rip+0x5b7a]        # 140008430 <__imp___daylight>
   1400028b6:	90                   	nop
   1400028b7:	90                   	nop

00000001400028b8 <__timezone>:
   1400028b8:	ff 25 7a 5b 00 00    	jmp    QWORD PTR [rip+0x5b7a]        # 140008438 <__imp___timezone>
   1400028be:	90                   	nop
   1400028bf:	90                   	nop

00000001400028c0 <__tzname>:
   1400028c0:	ff 25 7a 5b 00 00    	jmp    QWORD PTR [rip+0x5b7a]        # 140008440 <__imp___tzname>
   1400028c6:	90                   	nop
   1400028c7:	90                   	nop

00000001400028c8 <.text>:
   1400028c8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   1400028cf:	00 

00000001400028d0 <strlen>:
   1400028d0:	ff 25 42 5b 00 00    	jmp    QWORD PTR [rip+0x5b42]        # 140008418 <__imp_strlen>
   1400028d6:	90                   	nop
   1400028d7:	90                   	nop

00000001400028d8 <strncmp>:
   1400028d8:	ff 25 42 5b 00 00    	jmp    QWORD PTR [rip+0x5b42]        # 140008420 <__imp_strncmp>
   1400028de:	90                   	nop
   1400028df:	90                   	nop

00000001400028e0 <__acrt_iob_func>:
   1400028e0:	ff 25 fa 5a 00 00    	jmp    QWORD PTR [rip+0x5afa]        # 1400083e0 <__imp___acrt_iob_func>
   1400028e6:	90                   	nop
   1400028e7:	90                   	nop

00000001400028e8 <__p__commode>:
   1400028e8:	ff 25 fa 5a 00 00    	jmp    QWORD PTR [rip+0x5afa]        # 1400083e8 <__imp___p__commode>
   1400028ee:	90                   	nop
   1400028ef:	90                   	nop

00000001400028f0 <__p__fmode>:
   1400028f0:	ff 25 fa 5a 00 00    	jmp    QWORD PTR [rip+0x5afa]        # 1400083f0 <__imp___p__fmode>
   1400028f6:	90                   	nop
   1400028f7:	90                   	nop

00000001400028f8 <__stdio_common_vfprintf>:
   1400028f8:	ff 25 fa 5a 00 00    	jmp    QWORD PTR [rip+0x5afa]        # 1400083f8 <__imp___stdio_common_vfprintf>
   1400028fe:	90                   	nop
   1400028ff:	90                   	nop

0000000140002900 <__stdio_common_vfwprintf>:
   140002900:	ff 25 fa 5a 00 00    	jmp    QWORD PTR [rip+0x5afa]        # 140008400 <__imp___stdio_common_vfwprintf>
   140002906:	90                   	nop
   140002907:	90                   	nop

0000000140002908 <fwrite>:
   140002908:	ff 25 fa 5a 00 00    	jmp    QWORD PTR [rip+0x5afa]        # 140008408 <__imp_fwrite>
   14000290e:	90                   	nop
   14000290f:	90                   	nop

0000000140002910 <__p___argc>:
   140002910:	ff 25 3a 5a 00 00    	jmp    QWORD PTR [rip+0x5a3a]        # 140008350 <__imp___p___argc>
   140002916:	90                   	nop
   140002917:	90                   	nop

0000000140002918 <__p___argv>:
   140002918:	ff 25 3a 5a 00 00    	jmp    QWORD PTR [rip+0x5a3a]        # 140008358 <__imp___p___argv>
   14000291e:	90                   	nop
   14000291f:	90                   	nop

0000000140002920 <__p___wargv>:
   140002920:	ff 25 3a 5a 00 00    	jmp    QWORD PTR [rip+0x5a3a]        # 140008360 <__imp___p___wargv>
   140002926:	90                   	nop
   140002927:	90                   	nop

0000000140002928 <_cexit>:
   140002928:	ff 25 3a 5a 00 00    	jmp    QWORD PTR [rip+0x5a3a]        # 140008368 <__imp__cexit>
   14000292e:	90                   	nop
   14000292f:	90                   	nop

0000000140002930 <_configure_narrow_argv>:
   140002930:	ff 25 3a 5a 00 00    	jmp    QWORD PTR [rip+0x5a3a]        # 140008370 <__imp__configure_narrow_argv>
   140002936:	90                   	nop
   140002937:	90                   	nop

0000000140002938 <_configure_wide_argv>:
   140002938:	ff 25 3a 5a 00 00    	jmp    QWORD PTR [rip+0x5a3a]        # 140008378 <__imp__configure_wide_argv>
   14000293e:	90                   	nop
   14000293f:	90                   	nop

0000000140002940 <_crt_at_quick_exit>:
   140002940:	ff 25 3a 5a 00 00    	jmp    QWORD PTR [rip+0x5a3a]        # 140008380 <__imp__crt_at_quick_exit>
   140002946:	90                   	nop
   140002947:	90                   	nop

0000000140002948 <_crt_atexit>:
   140002948:	ff 25 3a 5a 00 00    	jmp    QWORD PTR [rip+0x5a3a]        # 140008388 <__imp__crt_atexit>
   14000294e:	90                   	nop
   14000294f:	90                   	nop

0000000140002950 <_initialize_narrow_environment>:
   140002950:	ff 25 42 5a 00 00    	jmp    QWORD PTR [rip+0x5a42]        # 140008398 <__imp__initialize_narrow_environment>
   140002956:	90                   	nop
   140002957:	90                   	nop

0000000140002958 <_initialize_wide_environment>:
   140002958:	ff 25 42 5a 00 00    	jmp    QWORD PTR [rip+0x5a42]        # 1400083a0 <__imp__initialize_wide_environment>
   14000295e:	90                   	nop
   14000295f:	90                   	nop

0000000140002960 <_initterm>:
   140002960:	ff 25 42 5a 00 00    	jmp    QWORD PTR [rip+0x5a42]        # 1400083a8 <__imp__initterm>
   140002966:	90                   	nop
   140002967:	90                   	nop

0000000140002968 <__set_app_type>:
   140002968:	ff 25 42 5a 00 00    	jmp    QWORD PTR [rip+0x5a42]        # 1400083b0 <__imp___set_app_type>
   14000296e:	90                   	nop
   14000296f:	90                   	nop

0000000140002970 <_set_invalid_parameter_handler>:
   140002970:	ff 25 42 5a 00 00    	jmp    QWORD PTR [rip+0x5a42]        # 1400083b8 <__imp__set_invalid_parameter_handler>
   140002976:	90                   	nop
   140002977:	90                   	nop

0000000140002978 <abort>:
   140002978:	ff 25 42 5a 00 00    	jmp    QWORD PTR [rip+0x5a42]        # 1400083c0 <__imp_abort>
   14000297e:	90                   	nop
   14000297f:	90                   	nop

0000000140002980 <signal>:
   140002980:	ff 25 4a 5a 00 00    	jmp    QWORD PTR [rip+0x5a4a]        # 1400083d0 <__imp_signal>
   140002986:	90                   	nop
   140002987:	90                   	nop
   140002988:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   14000298f:	00 

0000000140002990 <__C_specific_handler>:
   140002990:	ff 25 a2 59 00 00    	jmp    QWORD PTR [rip+0x59a2]        # 140008338 <__imp___C_specific_handler>
   140002996:	90                   	nop
   140002997:	90                   	nop

0000000140002998 <memcpy>:
   140002998:	ff 25 a2 59 00 00    	jmp    QWORD PTR [rip+0x59a2]        # 140008340 <__imp_memcpy>
   14000299e:	90                   	nop
   14000299f:	90                   	nop

00000001400029a0 <__setusermatherr>:
   1400029a0:	ff 25 82 59 00 00    	jmp    QWORD PTR [rip+0x5982]        # 140008328 <__imp___setusermatherr>
   1400029a6:	90                   	nop
   1400029a7:	90                   	nop
   1400029a8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   1400029af:	00 

00000001400029b0 <_set_new_mode>:
   1400029b0:	ff 25 4a 59 00 00    	jmp    QWORD PTR [rip+0x594a]        # 140008300 <__imp__set_new_mode>
   1400029b6:	90                   	nop
   1400029b7:	90                   	nop

00000001400029b8 <calloc>:
   1400029b8:	ff 25 4a 59 00 00    	jmp    QWORD PTR [rip+0x594a]        # 140008308 <__imp_calloc>
   1400029be:	90                   	nop
   1400029bf:	90                   	nop

00000001400029c0 <free>:
   1400029c0:	ff 25 4a 59 00 00    	jmp    QWORD PTR [rip+0x594a]        # 140008310 <__imp_free>
   1400029c6:	90                   	nop
   1400029c7:	90                   	nop

00000001400029c8 <malloc>:
   1400029c8:	ff 25 4a 59 00 00    	jmp    QWORD PTR [rip+0x594a]        # 140008318 <__imp_malloc>
   1400029ce:	90                   	nop
   1400029cf:	90                   	nop

00000001400029d0 <__p__environ>:
   1400029d0:	ff 25 12 59 00 00    	jmp    QWORD PTR [rip+0x5912]        # 1400082e8 <__imp___p__environ>
   1400029d6:	90                   	nop
   1400029d7:	90                   	nop

00000001400029d8 <__p__wenviron>:
   1400029d8:	ff 25 12 59 00 00    	jmp    QWORD PTR [rip+0x5912]        # 1400082f0 <__imp___p__wenviron>
   1400029de:	90                   	nop
   1400029df:	90                   	nop

00000001400029e0 <VirtualQuery>:
   1400029e0:	ff 25 f2 58 00 00    	jmp    QWORD PTR [rip+0x58f2]        # 1400082d8 <__imp_VirtualQuery>
   1400029e6:	90                   	nop
   1400029e7:	90                   	nop

00000001400029e8 <VirtualProtect>:
   1400029e8:	ff 25 e2 58 00 00    	jmp    QWORD PTR [rip+0x58e2]        # 1400082d0 <__imp_VirtualProtect>
   1400029ee:	90                   	nop
   1400029ef:	90                   	nop

00000001400029f0 <TlsGetValue>:
   1400029f0:	ff 25 d2 58 00 00    	jmp    QWORD PTR [rip+0x58d2]        # 1400082c8 <__imp_TlsGetValue>
   1400029f6:	90                   	nop
   1400029f7:	90                   	nop

00000001400029f8 <Sleep>:
   1400029f8:	ff 25 c2 58 00 00    	jmp    QWORD PTR [rip+0x58c2]        # 1400082c0 <__imp_Sleep>
   1400029fe:	90                   	nop
   1400029ff:	90                   	nop

0000000140002a00 <SetUnhandledExceptionFilter>:
   140002a00:	ff 25 b2 58 00 00    	jmp    QWORD PTR [rip+0x58b2]        # 1400082b8 <__imp_SetUnhandledExceptionFilter>
   140002a06:	90                   	nop
   140002a07:	90                   	nop

0000000140002a08 <LeaveCriticalSection>:
   140002a08:	ff 25 a2 58 00 00    	jmp    QWORD PTR [rip+0x58a2]        # 1400082b0 <__imp_LeaveCriticalSection>
   140002a0e:	90                   	nop
   140002a0f:	90                   	nop

0000000140002a10 <InitializeCriticalSection>:
   140002a10:	ff 25 92 58 00 00    	jmp    QWORD PTR [rip+0x5892]        # 1400082a8 <__imp_InitializeCriticalSection>
   140002a16:	90                   	nop
   140002a17:	90                   	nop

0000000140002a18 <GetLastError>:
   140002a18:	ff 25 82 58 00 00    	jmp    QWORD PTR [rip+0x5882]        # 1400082a0 <__imp_GetLastError>
   140002a1e:	90                   	nop
   140002a1f:	90                   	nop

0000000140002a20 <EnterCriticalSection>:
   140002a20:	ff 25 72 58 00 00    	jmp    QWORD PTR [rip+0x5872]        # 140008298 <__imp_EnterCriticalSection>
   140002a26:	90                   	nop
   140002a27:	90                   	nop

0000000140002a28 <DeleteCriticalSection>:
   140002a28:	ff 25 62 58 00 00    	jmp    QWORD PTR [rip+0x5862]        # 140008290 <__IAT_start__>
   140002a2e:	90                   	nop
   140002a2f:	90                   	nop

0000000140002a30 <register_frame_ctor>:
   140002a30:	e9 fb e9 ff ff       	jmp    140001430 <__gcc_register_frame>
   140002a35:	90                   	nop
   140002a36:	90                   	nop
   140002a37:	90                   	nop
   140002a38:	90                   	nop
   140002a39:	90                   	nop
   140002a3a:	90                   	nop
   140002a3b:	90                   	nop
   140002a3c:	90                   	nop
   140002a3d:	90                   	nop
   140002a3e:	90                   	nop
   140002a3f:	90                   	nop

0000000140002a40 <__CTOR_LIST__>:
   140002a40:	ff                   	(bad)
   140002a41:	ff                   	(bad)
   140002a42:	ff                   	(bad)
   140002a43:	ff                   	(bad)
   140002a44:	ff                   	(bad)
   140002a45:	ff                   	(bad)
   140002a46:	ff                   	(bad)
   140002a47:	ff                 	push   QWORD PTR [rax]

0000000140002a48 <.ctors.65535>:
   140002a48:	30 2a                	xor    BYTE PTR [rdx],ch
   140002a4a:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

0000000140002a58 <__DTOR_LIST__>:
   140002a58:	ff                   	(bad)
   140002a59:	ff                   	(bad)
   140002a5a:	ff                   	(bad)
   140002a5b:	ff                   	(bad)
   140002a5c:	ff                   	(bad)
   140002a5d:	ff                   	(bad)
   140002a5e:	ff                   	(bad)
   140002a5f:	ff 00                	inc    DWORD PTR [rax]
   140002a61:	00 00                	add    BYTE PTR [rax],al
   140002a63:	00 00                	add    BYTE PTR [rax],al
   140002a65:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000140003000 <__data_start__>:
   140003000:	60                   	(bad)
   140003001:	2a 00                	sub    al,BYTE PTR [rax]
   140003003:	40 01 00             	rex add DWORD PTR [rax],eax
	...

0000000140003010 <__native_vcclrit_reason>:
   140003010:	ff                   	(bad)
   140003011:	ff                   	(bad)
   140003012:	ff                   	(bad)
   140003013:	ff                   	(bad)

0000000140003014 <__native_dllmain_reason>:
   140003014:	ff                   	(bad)
   140003015:	ff                   	(bad)
   140003016:	ff                   	(bad)
   140003017:	ff 00                	inc    DWORD PTR [rax]
   140003019:	00 00                	add    BYTE PTR [rax],al
   14000301b:	00 00                	add    BYTE PTR [rax],al
   14000301d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140003020 <_dowildcard>:
   140003020:	ff                   	(bad)
   140003021:	ff                   	(bad)
   140003022:	ff                   	(bad)
   140003023:	ff 00                	inc    DWORD PTR [rax]
	...

0000000140003030 <_CRT_MT>:
   140003030:	02 00                	add    al,BYTE PTR [rax]
	...

0000000140003040 <_MINGW_INSTALL_DEBUG_MATHERR>:
   140003040:	ff                   	(bad)
   140003041:	ff                   	(bad)
   140003042:	ff                   	(bad)
   140003043:	ff 00                	inc    DWORD PTR [rax]
	...

0000000140003050 <__imp_vfprintf>:
   140003050:	d0 25 00 40 01 00    	shl    BYTE PTR [rip+0x14000],1        # 140017056 <.debug_line_str+0x4fbf>
	...

0000000140003060 <__imp_printf>:
   140003060:	f0 25 00 40 01 00    	lock and eax,0x14000
	...

0000000140003070 <__imp_fprintf>:
   140003070:	40                   	rex
   140003071:	26 00 40 01          	es add BYTE PTR [rax+0x1],al
	...

0000000140003080 <__imp___winitenv>:
   140003080:	70 71                	jo     1400030f3 <initial_tzname1+0x3>
   140003082:	00 40 01             	add    BYTE PTR [rax+0x1],al
   140003085:	00 00                	add    BYTE PTR [rax],al
	...

0000000140003088 <__imp___initenv>:
   140003088:	78 71                	js     1400030fb <__imp_at_quick_exit+0x3>
   14000308a:	00 40 01             	add    BYTE PTR [rax+0x1],al
   14000308d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140003090 <__imp___ms_fwprintf>:
   140003090:	f0 27                	lock (bad)
   140003092:	00 40 01             	add    BYTE PTR [rax+0x1],al
   140003095:	00 00                	add    BYTE PTR [rax],al
	...

0000000140003098 <__imp_tzset>:
   140003098:	30 28                	xor    BYTE PTR [rax],ch
   14000309a:	00 40 01             	add    BYTE PTR [rax+0x1],al
   14000309d:	00 00                	add    BYTE PTR [rax],al
	...

00000001400030a0 <__imp__get_output_format>:
   1400030a0:	80 26 00             	and    BYTE PTR [rsi],0x0
   1400030a3:	40 01 00             	rex add DWORD PTR [rax],eax
	...

00000001400030a8 <__imp__amsg_exit>:
   1400030a8:	b0 27                	mov    al,0x27
   1400030aa:	00 40 01             	add    BYTE PTR [rax+0x1],al
   1400030ad:	00 00                	add    BYTE PTR [rax],al
	...

00000001400030b0 <__imp___wgetmainargs>:
   1400030b0:	00 27                	add    BYTE PTR [rdi],ah
   1400030b2:	00 40 01             	add    BYTE PTR [rax+0x1],al
   1400030b5:	00 00                	add    BYTE PTR [rax],al
	...

00000001400030b8 <__imp___getmainargs>:
   1400030b8:	90                   	nop
   1400030b9:	26 00 40 01          	es add BYTE PTR [rax+0x1],al
   1400030bd:	00 00                	add    BYTE PTR [rax],al
	...

00000001400030c0 <__imp_daylight>:
   1400030c0:	d8 30                	fdiv   DWORD PTR [rax]
   1400030c2:	00 40 01             	add    BYTE PTR [rax+0x1],al
   1400030c5:	00 00                	add    BYTE PTR [rax],al
	...

00000001400030c8 <__imp_timezone>:
   1400030c8:	dc 30                	fdiv   QWORD PTR [rax]
   1400030ca:	00 40 01             	add    BYTE PTR [rax+0x1],al
   1400030cd:	00 00                	add    BYTE PTR [rax],al
	...

00000001400030d0 <__imp_tzname>:
   1400030d0:	e0 30                	loopne 140003102 <__imp__onexit+0x2>
   1400030d2:	00 40 01             	add    BYTE PTR [rax+0x1],al
   1400030d5:	00 00                	add    BYTE PTR [rax],al
	...

00000001400030d8 <initial_daylight>:
   1400030d8:	01 00                	add    DWORD PTR [rax],eax
	...

00000001400030dc <initial_timezone>:
   1400030dc:	80 70 00 00          	xor    BYTE PTR [rax+0x0],0x0

00000001400030e0 <initial_tznames>:
   1400030e0:	f4                   	hlt
   1400030e1:	30 00                	xor    BYTE PTR [rax],al
   1400030e3:	40 01 00             	rex add DWORD PTR [rax],eax
   1400030e6:	00 00                	add    BYTE PTR [rax],al
   1400030e8:	f0 30 00             	lock xor BYTE PTR [rax],al
   1400030eb:	40 01 00             	rex add DWORD PTR [rax],eax
	...

00000001400030f0 <initial_tzname1>:
   1400030f0:	50                   	push   rax
   1400030f1:	44 54                	rex.R push rsp
	...

00000001400030f4 <initial_tzname0>:
   1400030f4:	50                   	push   rax
   1400030f5:	53                   	push   rbx
   1400030f6:	54                   	push   rsp
	...

00000001400030f8 <__imp_at_quick_exit>:
   1400030f8:	90                   	nop
   1400030f9:	27                   	(bad)
   1400030fa:	00 40 01             	add    BYTE PTR [rax+0x1],al
   1400030fd:	00 00                	add    BYTE PTR [rax],al
	...

0000000140003100 <__imp__onexit>:
   140003100:	70 27                	jo     140003129 <__data_end__+0x19>
   140003102:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

Disassembly of section .rdata:

0000000140004000 <.rdata>:
   140004000:	73 69                	jae    14000406b <_tls_used+0xb>
   140004002:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   140004004:	3a 25 64 0a 72 65    	cmp    ah,BYTE PTR [rip+0x65720a64]        # 1a5724a6e <.debug_line_str+0x657129d7>
   14000400a:	73 65                	jae    140004071 <_tls_used+0x11>
   14000400c:	72 76                	jb     140004084 <_tls_used+0x24>
   14000400e:	65 64 3a 25 64 0a 72 	gs cmp ah,BYTE PTR fs:[rip+0x65720a64]        # 1a5724a7a <.debug_line_str+0x657129e3>
   140004015:	65 
   140004016:	63 6f 72             	movsxd ebp,DWORD PTR [rdi+0x72]
   140004019:	64 2d 61 3a 25 64    	fs sub eax,0x64253a61
   14000401f:	0a 72 65             	or     dh,BYTE PTR [rdx+0x65]
   140004022:	63 6f 72             	movsxd ebp,DWORD PTR [rdi+0x72]
   140004025:	64 2d 62 3a 25 64    	fs sub eax,0x64253a62
   14000402b:	0a 0a                	or     cl,BYTE PTR [rdx]
	...

0000000140004040 <__dyn_tls_init_callback>:
   140004040:	20 16                	and    BYTE PTR [rsi],dl
   140004042:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

0000000140004060 <_tls_used>:
   140004060:	00 a0 00 40 01 00    	add    BYTE PTR [rax+0x14000],ah
   140004066:	00 00                	add    BYTE PTR [rax],al
   140004068:	08 a0 00 40 01 00    	or     BYTE PTR [rax+0x14000],ah
   14000406e:	00 00                	add    BYTE PTR [rax],al
   140004070:	6c                   	ins    BYTE PTR es:[rdi],dx
   140004071:	70 00                	jo     140004073 <_tls_used+0x13>
   140004073:	40 01 00             	rex add DWORD PTR [rax],eax
   140004076:	00 00                	add    BYTE PTR [rax],al
   140004078:	38 90 00 40 01 00    	cmp    BYTE PTR [rax+0x14000],dl
	...

00000001400040a0 <.rdata>:
   1400040a0:	41 72 67             	rex.B jb 14000410a <.rdata+0x6a>
   1400040a3:	75 6d                	jne    140004112 <.rdata+0x72>
   1400040a5:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   1400040a7:	74 20                	je     1400040c9 <.rdata+0x29>
   1400040a9:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
   1400040ab:	6d                   	ins    DWORD PTR es:[rdi],dx
   1400040ac:	61                   	(bad)
   1400040ad:	69 6e 20 65 72 72 6f 	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
   1400040b4:	72 20                	jb     1400040d6 <.rdata+0x36>
   1400040b6:	28 44 4f 4d          	sub    BYTE PTR [rdi+rcx*2+0x4d],al
   1400040ba:	41                   	rex.B
   1400040bb:	49                   	rex.WB
   1400040bc:	4e 29 00             	rex.WRX sub QWORD PTR [rax],r8
   1400040bf:	41 72 67             	rex.B jb 140004129 <.rdata+0x89>
   1400040c2:	75 6d                	jne    140004131 <.rdata+0x91>
   1400040c4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   1400040c6:	74 20                	je     1400040e8 <.rdata+0x48>
   1400040c8:	73 69                	jae    140004133 <.rdata+0x93>
   1400040ca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400040cb:	67 75 6c             	addr32 jne 14000413a <.rdata+0x9a>
   1400040ce:	61                   	(bad)
   1400040cf:	72 69                	jb     14000413a <.rdata+0x9a>
   1400040d1:	74 79                	je     14000414c <.rdata+0xac>
   1400040d3:	20 28                	and    BYTE PTR [rax],ch
   1400040d5:	53                   	push   rbx
   1400040d6:	49                   	rex.WB
   1400040d7:	47                   	rex.RXB
   1400040d8:	4e 29 00             	rex.WRX sub QWORD PTR [rax],r8
   1400040db:	00 00                	add    BYTE PTR [rax],al
   1400040dd:	00 00                	add    BYTE PTR [rax],al
   1400040df:	00 4f 76             	add    BYTE PTR [rdi+0x76],cl
   1400040e2:	65 72 66             	gs jb  14000414b <.rdata+0xab>
   1400040e5:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400040e6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400040e7:	77 20                	ja     140004109 <.rdata+0x69>
   1400040e9:	72 61                	jb     14000414c <.rdata+0xac>
   1400040eb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400040ec:	67 65 20 65 72       	and    BYTE PTR gs:[ebp+0x72],ah
   1400040f1:	72 6f                	jb     140004162 <.rdata+0xc2>
   1400040f3:	72 20                	jb     140004115 <.rdata+0x75>
   1400040f5:	28 4f 56             	sub    BYTE PTR [rdi+0x56],cl
   1400040f8:	45 52                	rex.RB push r10
   1400040fa:	46                   	rex.RX
   1400040fb:	4c                   	rex.WR
   1400040fc:	4f 57                	rex.WRXB push r15
   1400040fe:	29 00                	sub    DWORD PTR [rax],eax
   140004100:	50                   	push   rax
   140004101:	61                   	(bad)
   140004102:	72 74                	jb     140004178 <.rdata+0xd8>
   140004104:	69 61 6c 20 6c 6f 73 	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
   14000410b:	73 20                	jae    14000412d <.rdata+0x8d>
   14000410d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000410e:	66 20 73 69          	data16 and BYTE PTR [rbx+0x69],dh
   140004112:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   140004114:	69 66 69 63 61 6e 63 	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
   14000411b:	65 20 28             	and    BYTE PTR gs:[rax],ch
   14000411e:	50                   	push   rax
   14000411f:	4c                   	rex.WR
   140004120:	4f 53                	rex.WRXB push r11
   140004122:	53                   	push   rbx
   140004123:	29 00                	sub    DWORD PTR [rax],eax
   140004125:	00 00                	add    BYTE PTR [rax],al
   140004127:	00 54 6f 74          	add    BYTE PTR [rdi+rbp*2+0x74],dl
   14000412b:	61                   	(bad)
   14000412c:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000412d:	20 6c 6f 73          	and    BYTE PTR [rdi+rbp*2+0x73],ch
   140004131:	73 20                	jae    140004153 <.rdata+0xb3>
   140004133:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140004134:	66 20 73 69          	data16 and BYTE PTR [rbx+0x69],dh
   140004138:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000413a:	69 66 69 63 61 6e 63 	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
   140004141:	65 20 28             	and    BYTE PTR gs:[rax],ch
   140004144:	54                   	push   rsp
   140004145:	4c                   	rex.WR
   140004146:	4f 53                	rex.WRXB push r11
   140004148:	53                   	push   rbx
   140004149:	29 00                	sub    DWORD PTR [rax],eax
   14000414b:	00 00                	add    BYTE PTR [rax],al
   14000414d:	00 00                	add    BYTE PTR [rax],al
   14000414f:	00 54 68 65          	add    BYTE PTR [rax+rbp*2+0x65],dl
   140004153:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
   140004156:	73 75                	jae    1400041cd <.rdata+0x12d>
   140004158:	6c                   	ins    BYTE PTR es:[rdi],dx
   140004159:	74 20                	je     14000417b <.rdata+0xdb>
   14000415b:	69 73 20 74 6f 6f 20 	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
   140004162:	73 6d                	jae    1400041d1 <.rdata+0x131>
   140004164:	61                   	(bad)
   140004165:	6c                   	ins    BYTE PTR es:[rdi],dx
   140004166:	6c                   	ins    BYTE PTR es:[rdi],dx
   140004167:	20 74 6f 20          	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14000416b:	62 65                	(bad)
   14000416d:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
   140004170:	70 72                	jo     1400041e4 <.rdata+0x4>
   140004172:	65 73 65             	gs jae 1400041da <.rdata+0x13a>
   140004175:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140004176:	74 65                	je     1400041dd <.rdata+0x13d>
   140004178:	64 20 28             	and    BYTE PTR fs:[rax],ch
   14000417b:	55                   	push   rbp
   14000417c:	4e                   	rex.WRX
   14000417d:	44                   	rex.R
   14000417e:	45 52                	rex.RB push r10
   140004180:	46                   	rex.RX
   140004181:	4c                   	rex.WR
   140004182:	4f 57                	rex.WRXB push r15
   140004184:	29 00                	sub    DWORD PTR [rax],eax
   140004186:	55                   	push   rbp
   140004187:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140004188:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14000418c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000418d:	20 65 72             	and    BYTE PTR [rbp+0x72],ah
   140004190:	72 6f                	jb     140004201 <.rdata+0x21>
   140004192:	72 00                	jb     140004194 <.rdata+0xf4>
   140004194:	00 00                	add    BYTE PTR [rax],al
   140004196:	00 00                	add    BYTE PTR [rax],al
   140004198:	5f                   	pop    rdi
   140004199:	6d                   	ins    DWORD PTR es:[rdi],dx
   14000419a:	61                   	(bad)
   14000419b:	74 68                	je     140004205 <.rdata+0x25>
   14000419d:	65 72 72             	gs jb  140004212 <.rdata+0x32>
   1400041a0:	28 29                	sub    BYTE PTR [rcx],ch
   1400041a2:	3a 20                	cmp    ah,BYTE PTR [rax]
   1400041a4:	25 73 20 69 6e       	and    eax,0x6e692073
   1400041a9:	20 25 73 28 25 67    	and    BYTE PTR [rip+0x67252873],ah        # 1a7256a22 <.debug_line_str+0x6724498b>
   1400041af:	2c 20                	sub    al,0x20
   1400041b1:	25 67 29 20 20       	and    eax,0x20202967
   1400041b6:	28 72 65             	sub    BYTE PTR [rdx+0x65],dh
   1400041b9:	74 76                	je     140004231 <.rdata+0x51>
   1400041bb:	61                   	(bad)
   1400041bc:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400041bd:	3d 25 67 29 0a       	cmp    eax,0xa296725
   1400041c2:	00 00                	add    BYTE PTR [rax],al
   1400041c4:	e8 d5 ff ff 9c       	call   dd00419e <__size_of_stack_reserve__+0xdce0419e>
   1400041c9:	d5                   	(bad)
   1400041ca:	ff                   	(bad)
   1400041cb:	ff 34 d5 ff ff bc d5 	push   QWORD PTR [rdx*8-0x2a430001]
   1400041d2:	ff                   	(bad)
   1400041d3:	ff cc                	dec    esp
   1400041d5:	d5                   	(bad)
   1400041d6:	ff                   	(bad)
   1400041d7:	ff                   	(bad)
   1400041d8:	dc d5                	(bad)
   1400041da:	ff                   	(bad)
   1400041db:	ff ac d5 ff ff   	jmp    FWORD PTR [rbp+rdx*8+0x694dffff]

00000001400041e0 <.rdata>:
   1400041e0:	4d 69 6e 67 77 2d 77 	imul   r13,QWORD PTR [r14+0x67],0x36772d77
   1400041e7:	36 
   1400041e8:	34 20                	xor    al,0x20
   1400041ea:	72 75                	jb     140004261 <.rdata+0x81>
   1400041ec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400041ed:	74 69                	je     140004258 <.rdata+0x78>
   1400041ef:	6d                   	ins    DWORD PTR es:[rdi],dx
   1400041f0:	65 20 66 61          	and    BYTE PTR gs:[rsi+0x61],ah
   1400041f4:	69 6c 75 72 65 3a 0a 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
   1400041fb:	00 
   1400041fc:	00 00                	add    BYTE PTR [rax],al
   1400041fe:	00 00                	add    BYTE PTR [rax],al
   140004200:	41                   	rex.B
   140004201:	64 64 72 65          	fs fs jb 14000426a <.rdata+0x8a>
   140004205:	73 73                	jae    14000427a <.rdata+0x9a>
   140004207:	20 25 70 20 68 61    	and    BYTE PTR [rip+0x61682070],ah        # 1a168627d <.debug_line_str+0x616741e6>
   14000420d:	73 20                	jae    14000422f <.rdata+0x4f>
   14000420f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140004210:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140004211:	20 69 6d             	and    BYTE PTR [rcx+0x6d],ch
   140004214:	61                   	(bad)
   140004215:	67 65 2d 73 65 63 74 	addr32 gs sub eax,0x74636573
   14000421c:	69 6f 6e 00 20 20 56 	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
   140004223:	69 72 74 75 61 6c 51 	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
   14000422a:	75 65                	jne    140004291 <.rdata+0xb1>
   14000422c:	72 79                	jb     1400042a7 <.rdata+0xc7>
   14000422e:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
   140004231:	69 6c 65 64 20 66 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
   140004238:	72 
   140004239:	20 25 64 20 62 79    	and    BYTE PTR [rip+0x79622064],ah        # 1b96262a3 <.debug_line_str+0x7961420c>
   14000423f:	74 65                	je     1400042a6 <.rdata+0xc6>
   140004241:	73 20                	jae    140004263 <.rdata+0x83>
   140004243:	61                   	(bad)
   140004244:	74 20                	je     140004266 <.rdata+0x86>
   140004246:	61                   	(bad)
   140004247:	64 64 72 65          	fs fs jb 1400042b0 <.rdata+0xd0>
   14000424b:	73 73                	jae    1400042c0 <.rdata+0xe0>
   14000424d:	20 25 70 00 00 00    	and    BYTE PTR [rip+0x70],ah        # 1400042c3 <.rdata+0xe3>
   140004253:	00 00                	add    BYTE PTR [rax],al
   140004255:	00 00                	add    BYTE PTR [rax],al
   140004257:	00 20                	add    BYTE PTR [rax],ah
   140004259:	20 56 69             	and    BYTE PTR [rsi+0x69],dl
   14000425c:	72 74                	jb     1400042d2 <.rdata+0xf2>
   14000425e:	75 61                	jne    1400042c1 <.rdata+0xe1>
   140004260:	6c                   	ins    BYTE PTR es:[rdi],dx
   140004261:	50                   	push   rax
   140004262:	72 6f                	jb     1400042d3 <.rdata+0xf3>
   140004264:	74 65                	je     1400042cb <.rdata+0xeb>
   140004266:	63 74 20 66          	movsxd esi,DWORD PTR [rax+riz*1+0x66]
   14000426a:	61                   	(bad)
   14000426b:	69 6c 65 64 20 77 69 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
   140004272:	74 
   140004273:	68 20 63 6f 64       	push   0x646f6320
   140004278:	65 20 30             	and    BYTE PTR gs:[rax],dh
   14000427b:	78 25                	js     1400042a2 <.rdata+0xc2>
   14000427d:	78 00                	js     14000427f <.rdata+0x9f>
   14000427f:	00 20                	add    BYTE PTR [rax],ah
   140004281:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
   140004284:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   140004288:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140004289:	20 70 73             	and    BYTE PTR [rax+0x73],dh
   14000428c:	65 75 64             	gs jne 1400042f3 <.rdata+0x113>
   14000428f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140004290:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
   140004293:	6c                   	ins    BYTE PTR es:[rdi],dx
   140004294:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140004295:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
   140004298:	69 6f 6e 20 70 72 6f 	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
   14000429f:	74 6f                	je     140004310 <.rdata+0x130>
   1400042a1:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
   1400042a4:	20 76 65             	and    BYTE PTR [rsi+0x65],dh
   1400042a7:	72 73                	jb     14000431c <.rdata+0x13c>
   1400042a9:	69 6f 6e 20 25 64 2e 	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
   1400042b0:	0a 00                	or     al,BYTE PTR [rax]
   1400042b2:	00 00                	add    BYTE PTR [rax],al
   1400042b4:	00 00                	add    BYTE PTR [rax],al
   1400042b6:	00 00                	add    BYTE PTR [rax],al
   1400042b8:	20 20                	and    BYTE PTR [rax],ah
   1400042ba:	55                   	push   rbp
   1400042bb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400042bc:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   1400042c0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400042c1:	20 70 73             	and    BYTE PTR [rax+0x73],dh
   1400042c4:	65 75 64             	gs jne 14000432b <.rdata+0x14b>
   1400042c7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400042c8:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
   1400042cb:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400042cc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400042cd:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
   1400042d0:	69 6f 6e 20 62 69 74 	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
   1400042d7:	20 73 69             	and    BYTE PTR [rbx+0x69],dh
   1400042da:	7a 65                	jp     140004341 <.rdata+0x1>
   1400042dc:	20 25 64 2e 0a 00    	and    BYTE PTR [rip+0xa2e64],ah        # 1400a7146 <.debug_line_str+0x950af>
   1400042e2:	00 00                	add    BYTE PTR [rax],al
   1400042e4:	00 00                	add    BYTE PTR [rax],al
   1400042e6:	00 00                	add    BYTE PTR [rax],al
   1400042e8:	25 64 20 62 69       	and    eax,0x69622064
   1400042ed:	74 20                	je     14000430f <.rdata+0x12f>
   1400042ef:	70 73                	jo     140004364 <.rdata+0x24>
   1400042f1:	65 75 64             	gs jne 140004358 <.rdata+0x18>
   1400042f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400042f5:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
   1400042f8:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400042f9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400042fa:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
   1400042fd:	69 6f 6e 20 61 74 20 	imul   ebp,DWORD PTR [rdi+0x6e],0x20746120
   140004304:	25 70 20 6f 75       	and    eax,0x756f2070
   140004309:	74 20                	je     14000432b <.rdata+0x14b>
   14000430b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000430c:	66 20 72 61          	data16 and BYTE PTR [rdx+0x61],dh
   140004310:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140004311:	67 65 2c 20          	addr32 gs sub al,0x20
   140004315:	74 61                	je     140004378 <.rdata+0x8>
   140004317:	72 67                	jb     140004380 <.rdata+0x10>
   140004319:	65 74 69             	gs je  140004385 <.rdata+0x15>
   14000431c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000431d:	67 20 25 70 2c 20 79 	and    BYTE PTR [eip+0x79202c70],ah        # 1b9206f94 <.debug_line_str+0x791f4efd>
   140004324:	69 65 6c 64 69 6e 67 	imul   esp,DWORD PTR [rbp+0x6c],0x676e6964
   14000432b:	20 74 68 65          	and    BYTE PTR [rax+rbp*2+0x65],dh
   14000432f:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
   140004332:	6c                   	ins    BYTE PTR es:[rdi],dx
   140004333:	75 65                	jne    14000439a <.refptr._CRT_MT+0xa>
   140004335:	20 25 70 2e 0a 00    	and    BYTE PTR [rip+0xa2e70],ah        # 1400a71ab <.debug_line_str+0x95114>
   14000433b:	00 00                	add    BYTE PTR [rax],al
   14000433d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140004340 <.rdata>:
   140004340:	00 db                	add    bl,bl
   140004342:	ff                   	(bad)
   140004343:	ff 00                	inc    DWORD PTR [rax]
   140004345:	db ff                	(bad)
   140004347:	ff 00                	inc    DWORD PTR [rax]
   140004349:	db ff                	(bad)
   14000434b:	ff 00                	inc    DWORD PTR [rax]
   14000434d:	db ff                	(bad)
   14000434f:	ff 00                	inc    DWORD PTR [rax]
   140004351:	db ff                	(bad)
   140004353:	ff ad da ff ff 00    	jmp    FWORD PTR [rbp+0xffffda]
   140004359:	db ff                	(bad)
   14000435b:	ff 28                	jmp    FWORD PTR [rax]
   14000435d:	db ff                	(bad)
   14000435f:	ff ad da ff ff 8b    	jmp    FWORD PTR [rbp-0x74000026]
   140004365:	da ff                	(bad)
   140004367:	ff 00                	inc    DWORD PTR [rax]
   140004369:	00 00                	add    BYTE PTR [rax],al
   14000436b:	00 00                	add    BYTE PTR [rax],al
   14000436d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140004370 <.rdata>:
   140004370:	72 75                	jb     1400043e7 <.refptr.__dyn_tls_init_callback+0x7>
   140004372:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140004373:	74 69                	je     1400043de <.refptr.__RUNTIME_PSEUDO_RELOC_LIST__+0xe>
   140004375:	6d                   	ins    DWORD PTR es:[rdi],dx
   140004376:	65 20 65 72          	and    BYTE PTR gs:[rbp+0x72],ah
   14000437a:	72 6f                	jb     1400043eb <.refptr.__dyn_tls_init_callback+0xb>
   14000437c:	72 20                	jb     14000439e <.refptr._CRT_MT+0xe>
   14000437e:	25 64 0a 00 00       	and    eax,0xa64
	...

0000000140004390 <.refptr._CRT_MT>:
   140004390:	30 30                	xor    BYTE PTR [rax],dh
   140004392:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

00000001400043a0 <.refptr._MINGW_INSTALL_DEBUG_MATHERR>:
   1400043a0:	40 30 00             	rex xor BYTE PTR [rax],al
   1400043a3:	40 01 00             	rex add DWORD PTR [rax],eax
	...

00000001400043b0 <.refptr.__CTOR_LIST__>:
   1400043b0:	40 2a 00             	rex sub al,BYTE PTR [rax]
   1400043b3:	40 01 00             	rex add DWORD PTR [rax],eax
	...

00000001400043c0 <.refptr.__RUNTIME_PSEUDO_RELOC_LIST_END__>:
   1400043c0:	b0 45                	mov    al,0x45
   1400043c2:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

00000001400043d0 <.refptr.__RUNTIME_PSEUDO_RELOC_LIST__>:
   1400043d0:	b0 45                	mov    al,0x45
   1400043d2:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

00000001400043e0 <.refptr.__dyn_tls_init_callback>:
   1400043e0:	40                   	rex
   1400043e1:	40 00 40 01          	rex add BYTE PTR [rax+0x1],al
	...

00000001400043f0 <.refptr.__image_base__>:
   1400043f0:	00 00                	add    BYTE PTR [rax],al
   1400043f2:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

0000000140004400 <.refptr.__imp___initenv>:
   140004400:	88 30                	mov    BYTE PTR [rax],dh
   140004402:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

0000000140004410 <.refptr.__imp__exit>:
   140004410:	90                   	nop
   140004411:	83 00 40             	add    DWORD PTR [rax],0x40
   140004414:	01 00                	add    DWORD PTR [rax],eax
	...

0000000140004420 <.refptr.__imp__tzset>:
   140004420:	48 84 00             	rex.W test BYTE PTR [rax],al
   140004423:	40 01 00             	rex add DWORD PTR [rax],eax
	...

0000000140004430 <.refptr.__imp_exit>:
   140004430:	c8 83 00 40          	enter  0x83,0x40
   140004434:	01 00                	add    DWORD PTR [rax],eax
	...

0000000140004440 <.refptr.__mingw_app_type>:
   140004440:	80 70 00 40          	xor    BYTE PTR [rax+0x0],0x40
   140004444:	01 00                	add    DWORD PTR [rax],eax
	...

0000000140004450 <.refptr.__mingw_initltsdrot_force>:
   140004450:	68 70 00 40 01       	push   0x1400070
	...

0000000140004460 <.refptr.__mingw_initltsdyn_force>:
   140004460:	64 70 00             	fs jo  140004463 <.refptr.__mingw_initltsdyn_force+0x3>
   140004463:	40 01 00             	rex add DWORD PTR [rax],eax
	...

0000000140004470 <.refptr.__mingw_initltssuo_force>:
   140004470:	60                   	(bad)
   140004471:	70 00                	jo     140004473 <.refptr.__mingw_initltssuo_force+0x3>
   140004473:	40 01 00             	rex add DWORD PTR [rax],eax
	...

0000000140004480 <.refptr.__mingw_module_is_dll>:
   140004480:	00 70 00             	add    BYTE PTR [rax+0x0],dh
   140004483:	40 01 00             	rex add DWORD PTR [rax],eax
	...

0000000140004490 <.refptr.__mingw_oldexcpt_handler>:
   140004490:	c0 70 00 40          	shl    BYTE PTR [rax+0x0],0x40
   140004494:	01 00                	add    DWORD PTR [rax],eax
	...

00000001400044a0 <.refptr.__native_startup_lock>:
   1400044a0:	40 70 00             	rex jo 1400044a3 <.refptr.__native_startup_lock+0x3>
   1400044a3:	40 01 00             	rex add DWORD PTR [rax],eax
	...

00000001400044b0 <.refptr.__native_startup_state>:
   1400044b0:	48 70 00             	rex.W jo 1400044b3 <.refptr.__native_startup_state+0x3>
   1400044b3:	40 01 00             	rex add DWORD PTR [rax],eax
	...

00000001400044c0 <.refptr.__xc_a>:
   1400044c0:	00 90 00 40 01 00    	add    BYTE PTR [rax+0x14000],dl
	...

00000001400044d0 <.refptr.__xc_z>:
   1400044d0:	10 90 00 40 01 00    	adc    BYTE PTR [rax+0x14000],dl
	...

00000001400044e0 <.refptr.__xi_a>:
   1400044e0:	18 90 00 40 01 00    	sbb    BYTE PTR [rax+0x14000],dl
	...

00000001400044f0 <.refptr.__xi_z>:
   1400044f0:	28 90 00 40 01 00    	sub    BYTE PTR [rax+0x14000],dl
	...

0000000140004500 <.refptr._commode>:
   140004500:	70 70                	jo     140004572 <.rdata$zzz+0x12>
   140004502:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

0000000140004510 <.refptr._dowildcard>:
   140004510:	20 30                	and    BYTE PTR [rax],dh
   140004512:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

0000000140004520 <.refptr._fmode>:
   140004520:	b0 70                	mov    al,0x70
   140004522:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

0000000140004530 <.refptr._gnu_exception_handler>:
   140004530:	60                   	(bad)
   140004531:	1d 00 40 01 00       	sbb    eax,0x14000
	...

0000000140004540 <.refptr._matherr>:
   140004540:	c0 16 00             	rcl    BYTE PTR [rsi],0x0
   140004543:	40 01 00             	rex add DWORD PTR [rax],eax
	...

0000000140004550 <.refptr._newmode>:
   140004550:	50                   	push   rax
   140004551:	70 00                	jo     140004553 <.refptr._newmode+0x3>
   140004553:	40 01 00             	rex add DWORD PTR [rax],eax
	...

0000000140004560 <.rdata$zzz>:
   140004560:	47                   	rex.RXB
   140004561:	43                   	rex.XB
   140004562:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   140004565:	28 78 38             	sub    BYTE PTR [rax+0x38],bh
   140004568:	36 5f                	ss pop rdi
   14000456a:	36 34 2d             	ss xor al,0x2d
   14000456d:	77 69                	ja     1400045d8 <__RUNTIME_PSEUDO_RELOC_LIST_END__+0x28>
   14000456f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140004570:	33 32                	xor    esi,DWORD PTR [rdx]
   140004572:	2d 73 65 68 2d       	sub    eax,0x2d686573
   140004577:	72 65                	jb     1400045de <__RUNTIME_PSEUDO_RELOC_LIST_END__+0x2e>
   140004579:	76 31                	jbe    1400045ac <.rdata$zzz+0x4c>
   14000457b:	2c 20                	sub    al,0x20
   14000457d:	42 75 69             	rex.X jne 1400045e9 <__RUNTIME_PSEUDO_RELOC_LIST_END__+0x39>
   140004580:	6c                   	ins    BYTE PTR es:[rdi],dx
   140004581:	74 20                	je     1400045a3 <.rdata$zzz+0x43>
   140004583:	62                   	(bad)
   140004584:	79 20                	jns    1400045a6 <.rdata$zzz+0x46>
   140004586:	4d 69 6e 47 57 2d 42 	imul   r13,QWORD PTR [r14+0x47],0x75422d57
   14000458d:	75 
   14000458e:	69 6c 64 73 20 70 72 	imul   ebp,DWORD PTR [rsp+riz*2+0x73],0x6f727020
   140004595:	6f 
   140004596:	6a 65                	push   0x65
   140004598:	63 74 29 20          	movsxd esi,DWORD PTR [rcx+rbp*1+0x20]
   14000459c:	31 33                	xor    DWORD PTR [rbx],esi
   14000459e:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   1400045a1:	30 00                	xor    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

0000000140005000 <.pdata>:
   140005000:	00 10                	add    BYTE PTR [rax],dl
   140005002:	00 00                	add    BYTE PTR [rax],al
   140005004:	01 10                	add    DWORD PTR [rax],edx
   140005006:	00 00                	add    BYTE PTR [rax],al
   140005008:	00 60 00             	add    BYTE PTR [rax+0x0],ah
   14000500b:	00 10                	add    BYTE PTR [rax],dl
   14000500d:	10 00                	adc    BYTE PTR [rax],al
   14000500f:	00 2e                	add    BYTE PTR [rsi],ch
   140005011:	11 00                	adc    DWORD PTR [rax],eax
   140005013:	00 04 60             	add    BYTE PTR [rax+riz*2],al
   140005016:	00 00                	add    BYTE PTR [rax],al
   140005018:	30 11                	xor    BYTE PTR [rcx],dl
   14000501a:	00 00                	add    BYTE PTR [rax],al
   14000501c:	79 11                	jns    14000502f <.pdata+0x2f>
   14000501e:	00 00                	add    BYTE PTR [rax],al
   140005020:	0c 60                	or     al,0x60
   140005022:	00 00                	add    BYTE PTR [rax],al
   140005024:	80 11 00             	adc    BYTE PTR [rcx],0x0
   140005027:	00 d0                	add    al,dl
   140005029:	13 00                	adc    eax,DWORD PTR [rax]
   14000502b:	00 14 60             	add    BYTE PTR [rax+riz*2],dl
   14000502e:	00 00                	add    BYTE PTR [rax],al
   140005030:	d0 13                	rcl    BYTE PTR [rbx],1
   140005032:	00 00                	add    BYTE PTR [rax],al
   140005034:	ed                   	in     eax,dx
   140005035:	13 00                	adc    eax,DWORD PTR [rax]
   140005037:	00 24 60             	add    BYTE PTR [rax+riz*2],ah
   14000503a:	00 00                	add    BYTE PTR [rax],al
   14000503c:	f0 13 00             	lock adc eax,DWORD PTR [rax]
   14000503f:	00 0d 14 00 00 44    	add    BYTE PTR [rip+0x44000014],cl        # 184005059 <.debug_line_str+0x43ff2fc2>
   140005045:	60                   	(bad)
   140005046:	00 00                	add    BYTE PTR [rax],al
   140005048:	10 14 00             	adc    BYTE PTR [rax+rax*1],dl
   14000504b:	00 24 14             	add    BYTE PTR [rsp+rdx*1],ah
   14000504e:	00 00                	add    BYTE PTR [rax],al
   140005050:	64 60                	fs (bad)
	...

0000000140005054 <.pdata>:
   140005054:	30 14 00             	xor    BYTE PTR [rax+rax*1],dl
   140005057:	00 3c 14             	add    BYTE PTR [rsp+rdx*1],bh
   14000505a:	00 00                	add    BYTE PTR [rax],al
   14000505c:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000505d:	60                   	(bad)
   14000505e:	00 00                	add    BYTE PTR [rax],al
   140005060:	40 14 00             	rex adc al,0x0
   140005063:	00 41 14             	add    BYTE PTR [rcx+0x14],al
   140005066:	00 00                	add    BYTE PTR [rax],al
   140005068:	70 60                	jo     1400050ca <.pdata+0x22>
	...

000000014000506c <.pdata>:
   14000506c:	50                   	push   rax
   14000506d:	14 00                	adc    al,0x0
   14000506f:	00 5f 14             	add    BYTE PTR [rdi+0x14],bl
   140005072:	00 00                	add    BYTE PTR [rax],al
   140005074:	74 60                	je     1400050d6 <.pdata+0xa>
   140005076:	00 00                	add    BYTE PTR [rax],al
   140005078:	5f                   	pop    rdi
   140005079:	14 00                	adc    al,0x0
   14000507b:	00 71 14             	add    BYTE PTR [rcx+0x14],dh
   14000507e:	00 00                	add    BYTE PTR [rax],al
   140005080:	7c 60                	jl     1400050e2 <.pdata+0xa>
   140005082:	00 00                	add    BYTE PTR [rax],al
   140005084:	71 14                	jno    14000509a <.pdata+0x2e>
   140005086:	00 00                	add    BYTE PTR [rax],al
   140005088:	85 14 00             	test   DWORD PTR [rax+rax*1],edx
   14000508b:	00 84 60 00 00 85 14 	add    BYTE PTR [rax+riz*2+0x14850000],al
   140005092:	00 00                	add    BYTE PTR [rax],al
   140005094:	96                   	xchg   esi,eax
   140005095:	14 00                	adc    al,0x0
   140005097:	00 8c 60 00 00 96 14 	add    BYTE PTR [rax+riz*2+0x14960000],cl
   14000509e:	00 00                	add    BYTE PTR [rax],al
   1400050a0:	06                   	(bad)
   1400050a1:	15 00 00 94 60       	adc    eax,0x60940000
	...

00000001400050a8 <.pdata>:
   1400050a8:	10 15 00 00 4a 15    	adc    BYTE PTR [rip+0x154a0000],dl        # 1554a50ae <.debug_line_str+0x15493017>
   1400050ae:	00 00                	add    BYTE PTR [rax],al
   1400050b0:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400050b1:	60                   	(bad)
   1400050b2:	00 00                	add    BYTE PTR [rax],al
   1400050b4:	50                   	push   rax
   1400050b5:	15 00 00 ba 15       	adc    eax,0x15ba0000
   1400050ba:	00 00                	add    BYTE PTR [rax],al
   1400050bc:	ac                   	lods   al,BYTE PTR ds:[rsi]
   1400050bd:	60                   	(bad)
   1400050be:	00 00                	add    BYTE PTR [rax],al
   1400050c0:	c0 15 00 00 df 15 00 	rcl    BYTE PTR [rip+0x15df0000],0x0        # 155df50c7 <.debug_line_str+0x15de3030>
   1400050c7:	00 b8 60 00 00     	add    BYTE PTR [rax-0x1fffffa0],bh

00000001400050cc <.pdata>:
   1400050cc:	e0 15                	loopne 1400050e3 <.pdata+0xb>
   1400050ce:	00 00                	add    BYTE PTR [rax],al
   1400050d0:	e3 15                	jrcxz  1400050e7 <.pdata+0xf>
   1400050d2:	00 00                	add    BYTE PTR [rax],al
   1400050d4:	bc 60 00 00        	mov    esp,0xf0000060

00000001400050d8 <.pdata>:
   1400050d8:	f0 15 00 00 1f 16    	lock adc eax,0x161f0000
   1400050de:	00 00                	add    BYTE PTR [rax],al
   1400050e0:	c0 60 00 00          	shl    BYTE PTR [rax+0x0],0x0
   1400050e4:	20 16                	and    BYTE PTR [rsi],dl
   1400050e6:	00 00                	add    BYTE PTR [rax],al
   1400050e8:	a1 16 00 00 c8 60 00 	movabs eax,ds:0xb0000060c8000016
   1400050ef:	00 b0 
   1400050f1:	16                   	(bad)
   1400050f2:	00 00                	add    BYTE PTR [rax],al
   1400050f4:	b3 16                	mov    bl,0x16
   1400050f6:	00 00                	add    BYTE PTR [rax],al
   1400050f8:	d4                   	(bad)
   1400050f9:	60                   	(bad)
	...

00000001400050fc <.pdata>:
   1400050fc:	c0 16 00             	rcl    BYTE PTR [rsi],0x0
   1400050ff:	00 b8 17 00 00 d8    	add    BYTE PTR [rax-0x27ffffe9],bh
   140005105:	60                   	(bad)
	...

0000000140005108 <.pdata>:
   140005108:	c0 17 00             	rcl    BYTE PTR [rdi],0x0
   14000510b:	00 c3                	add    bl,al
   14000510d:	17                   	(bad)
   14000510e:	00 00                	add    BYTE PTR [rax],al
   140005110:	f0 60                	lock (bad)
	...

0000000140005114 <.pdata>:
   140005114:	d0 17                	rcl    BYTE PTR [rdi],1
   140005116:	00 00                	add    BYTE PTR [rax],al
   140005118:	39 18                	cmp    DWORD PTR [rax],ebx
   14000511a:	00 00                	add    BYTE PTR [rax],al
   14000511c:	f4                   	hlt
   14000511d:	60                   	(bad)
   14000511e:	00 00                	add    BYTE PTR [rax],al
   140005120:	40 18 00             	rex sbb BYTE PTR [rax],al
   140005123:	00 a2 19 00 00 00    	add    BYTE PTR [rdx+0x19],ah
   140005129:	61                   	(bad)
   14000512a:	00 00                	add    BYTE PTR [rax],al
   14000512c:	b0 19                	mov    al,0x19
   14000512e:	00 00                	add    BYTE PTR [rax],al
   140005130:	0f 1d 00             	nop    DWORD PTR [rax]
   140005133:	00 0c 61             	add    BYTE PTR [rcx+riz*2],cl
	...

0000000140005138 <.pdata>:
   140005138:	10 1d 00 00 4e 1d    	adc    BYTE PTR [rip+0x1d4e0000],bl        # 15d4e513e <.debug_line_str+0x1d4d30a7>
   14000513e:	00 00                	add    BYTE PTR [rax],al
   140005140:	24 61                	and    al,0x61
   140005142:	00 00                	add    BYTE PTR [rax],al
   140005144:	50                   	push   rax
   140005145:	1d 00 00 5c 1d       	sbb    eax,0x1d5c0000
   14000514a:	00 00                	add    BYTE PTR [rax],al
   14000514c:	2c 61                	sub    al,0x61
	...

0000000140005150 <.pdata>:
   140005150:	60                   	(bad)
   140005151:	1d 00 00 f8 1e       	sbb    eax,0x1ef80000
   140005156:	00 00                	add    BYTE PTR [rax],al
   140005158:	30 61 00             	xor    BYTE PTR [rcx+0x0],ah
	...

000000014000515c <.pdata>:
   14000515c:	00 1f                	add    BYTE PTR [rdi],bl
   14000515e:	00 00                	add    BYTE PTR [rax],al
   140005160:	70 1f                	jo     140005181 <.pdata+0x25>
   140005162:	00 00                	add    BYTE PTR [rax],al
   140005164:	38 61 00             	cmp    BYTE PTR [rcx+0x0],ah
   140005167:	00 70 1f             	add    BYTE PTR [rax+0x1f],dh
   14000516a:	00 00                	add    BYTE PTR [rax],al
   14000516c:	df 1f                	fistp  WORD PTR [rdi]
   14000516e:	00 00                	add    BYTE PTR [rax],al
   140005170:	48 61                	rex.W (bad)
   140005172:	00 00                	add    BYTE PTR [rax],al
   140005174:	e0 1f                	loopne 140005195 <.pdata+0x9>
   140005176:	00 00                	add    BYTE PTR [rax],al
   140005178:	61                   	(bad)
   140005179:	20 00                	and    BYTE PTR [rax],al
   14000517b:	00 54 61 00          	add    BYTE PTR [rcx+riz*2+0x0],dl
   14000517f:	00 70 20             	add    BYTE PTR [rax+0x20],dh
   140005182:	00 00                	add    BYTE PTR [rax],al
   140005184:	62 21                	(bad)
   140005186:	00 00                	add    BYTE PTR [rax],al
   140005188:	60                   	(bad)
   140005189:	61                   	(bad)
	...

000000014000518c <.pdata>:
   14000518c:	70 21                	jo     1400051af <.pdata+0xb>
   14000518e:	00 00                	add    BYTE PTR [rax],al
   140005190:	7e 21                	jle    1400051b3 <.pdata+0xf>
   140005192:	00 00                	add    BYTE PTR [rax],al
   140005194:	68 61 00 00 80       	push   0xffffffff80000061
   140005199:	21 00                	and    DWORD PTR [rax],eax
   14000519b:	00 8e 21 00 00 70    	add    BYTE PTR [rsi+0x70000021],cl
   1400051a1:	61                   	(bad)
	...

00000001400051a4 <.pdata>:
   1400051a4:	90                   	nop
   1400051a5:	21 00                	and    DWORD PTR [rax],eax
   1400051a7:	00 bc 21 00 00 78 61 	add    BYTE PTR [rcx+riz*1+0x61780000],bh
   1400051ae:	00 00                	add    BYTE PTR [rax],al
   1400051b0:	c0 21 00             	shl    BYTE PTR [rcx],0x0
   1400051b3:	00 10                	add    BYTE PTR [rax],dl
   1400051b5:	22 00                	and    al,BYTE PTR [rax]
   1400051b7:	00 7c 61 00          	add    BYTE PTR [rcx+riz*2+0x0],bh
   1400051bb:	00 10                	add    BYTE PTR [rax],dl
   1400051bd:	22 00                	and    al,BYTE PTR [rax]
   1400051bf:	00 ad 22 00 00 80    	add    BYTE PTR [rbp-0x7fffffde],ch
   1400051c5:	61                   	(bad)
   1400051c6:	00 00                	add    BYTE PTR [rax],al
   1400051c8:	b0 22                	mov    al,0x22
   1400051ca:	00 00                	add    BYTE PTR [rax],al
   1400051cc:	30 23                	xor    BYTE PTR [rbx],ah
   1400051ce:	00 00                	add    BYTE PTR [rax],al
   1400051d0:	8c 61 00             	mov    WORD PTR [rcx+0x0],fs
   1400051d3:	00 30                	add    BYTE PTR [rax],dh
   1400051d5:	23 00                	and    eax,DWORD PTR [rax]
   1400051d7:	00 67 23             	add    BYTE PTR [rdi+0x23],ah
   1400051da:	00 00                	add    BYTE PTR [rax],al
   1400051dc:	90                   	nop
   1400051dd:	61                   	(bad)
   1400051de:	00 00                	add    BYTE PTR [rax],al
   1400051e0:	70 23                	jo     140005205 <.pdata+0x61>
   1400051e2:	00 00                	add    BYTE PTR [rax],al
   1400051e4:	e3 23                	jrcxz  140005209 <.pdata+0x65>
   1400051e6:	00 00                	add    BYTE PTR [rax],al
   1400051e8:	94                   	xchg   esp,eax
   1400051e9:	61                   	(bad)
   1400051ea:	00 00                	add    BYTE PTR [rax],al
   1400051ec:	f0 23 00             	lock and eax,DWORD PTR [rax]
   1400051ef:	00 26                	add    BYTE PTR [rsi],ah
   1400051f1:	24 00                	and    al,0x0
   1400051f3:	00 98 61 00 00 30    	add    BYTE PTR [rax+0x30000061],bl
   1400051f9:	24 00                	and    al,0x0
   1400051fb:	00 b9 24 00 00 9c    	add    BYTE PTR [rcx-0x63ffffdc],bh
   140005201:	61                   	(bad)
   140005202:	00 00                	add    BYTE PTR [rax],al
   140005204:	c0 24 00 00          	shl    BYTE PTR [rax+rax*1],0x0
   140005208:	86 25 00 00 a0 61    	xchg   BYTE PTR [rip+0x61a00000],ah        # 1a1a0520e <.debug_line_str+0x619f3177>
	...

0000000140005210 <.pdata>:
   140005210:	d0 25 00 00 ee 25    	shl    BYTE PTR [rip+0x25ee0000],1        # 165ee5216 <.debug_line_str+0x25ed317f>
   140005216:	00 00                	add    BYTE PTR [rax],al
   140005218:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140005219:	61                   	(bad)
	...

000000014000521c <.pdata>:
   14000521c:	f0 25 00 00 38 26    	lock and eax,0x26380000
   140005222:	00 00                	add    BYTE PTR [rax],al
   140005224:	ac                   	lods   al,BYTE PTR ds:[rsi]
   140005225:	61                   	(bad)
	...

0000000140005228 <.pdata>:
   140005228:	40                   	rex
   140005229:	26 00 00             	es add BYTE PTR [rax],al
   14000522c:	72 26                	jb     140005254 <.pdata+0x20>
   14000522e:	00 00                	add    BYTE PTR [rax],al
   140005230:	b8 61 00 00        	mov    eax,0x80000061

0000000140005234 <.pdata>:
   140005234:	80 26 00             	and    BYTE PTR [rsi],0x0
   140005237:	00 83 26 00 00 c0    	add    BYTE PTR [rbx-0x3fffffda],al
   14000523d:	61                   	(bad)
   14000523e:	00 00                	add    BYTE PTR [rax],al
   140005240:	90                   	nop
   140005241:	26 00 00             	es add BYTE PTR [rax],al
   140005244:	fa                   	cli
   140005245:	26 00 00             	es add BYTE PTR [rax],al
   140005248:	c4 61 00 00          	(bad)
   14000524c:	00 27                	add    BYTE PTR [rdi],ah
   14000524e:	00 00                	add    BYTE PTR [rax],al
   140005250:	6a 27                	push   0x27
   140005252:	00 00                	add    BYTE PTR [rax],al
   140005254:	d4                   	(bad)
   140005255:	61                   	(bad)
   140005256:	00 00                	add    BYTE PTR [rax],al
   140005258:	70 27                	jo     140005281 <.pdata+0x4d>
   14000525a:	00 00                	add    BYTE PTR [rax],al
   14000525c:	8e 27                	mov    fs,WORD PTR [rdi]
   14000525e:	00 00                	add    BYTE PTR [rax],al
   140005260:	e4 61                	in     al,0x61
   140005262:	00 00                	add    BYTE PTR [rax],al
   140005264:	90                   	nop
   140005265:	27                   	(bad)
   140005266:	00 00                	add    BYTE PTR [rax],al
   140005268:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140005269:	27                   	(bad)
   14000526a:	00 00                	add    BYTE PTR [rax],al
   14000526c:	ec                   	in     al,dx
   14000526d:	61                   	(bad)
   14000526e:	00 00                	add    BYTE PTR [rax],al
   140005270:	b0 27                	mov    al,0x27
   140005272:	00 00                	add    BYTE PTR [rax],al
   140005274:	e2 27                	loop   14000529d <.pdata+0x69>
   140005276:	00 00                	add    BYTE PTR [rax],al
   140005278:	f0 61                	lock (bad)
   14000527a:	00 00                	add    BYTE PTR [rax],al
   14000527c:	f0 27                	lock (bad)
   14000527e:	00 00                	add    BYTE PTR [rax],al
   140005280:	25 28 00 00 f8       	and    eax,0xf8000028
   140005285:	61                   	(bad)
   140005286:	00 00                	add    BYTE PTR [rax],al
   140005288:	30 28                	xor    BYTE PTR [rax],ch
   14000528a:	00 00                	add    BYTE PTR [rax],al
   14000528c:	66 28 00             	data16 sub BYTE PTR [rax],al
   14000528f:	00 00                	add    BYTE PTR [rax],al
   140005291:	62                   	(bad)
   140005292:	00 00                	add    BYTE PTR [rax],al
   140005294:	70 28                	jo     1400052be <.pdata.startup+0x1e>
   140005296:	00 00                	add    BYTE PTR [rax],al
   140005298:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140005299:	28 00                	sub    BYTE PTR [rax],al
   14000529b:	00 08                	add    BYTE PTR [rax],cl
   14000529d:	62                   	(bad)
	...

00000001400052a0 <.pdata.startup>:
   1400052a0:	30 2a                	xor    BYTE PTR [rdx],ch
   1400052a2:	00 00                	add    BYTE PTR [rax],al
   1400052a4:	35 2a 00 00 10       	xor    eax,0x1000002a
   1400052a9:	62                   	.byte 0x62
	...

Disassembly of section .xdata:

0000000140006000 <.xdata>:
   140006000:	01 00                	add    DWORD PTR [rax],eax
   140006002:	00 00                	add    BYTE PTR [rax],al
   140006004:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   140006007:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
   14000600a:	00 00                	add    BYTE PTR [rax],al
   14000600c:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   14000600f:	00 04 62             	add    BYTE PTR [rdx+riz*2],al
   140006012:	00 00                	add    BYTE PTR [rax],al
   140006014:	01 0a                	add    DWORD PTR [rdx],ecx
   140006016:	06                   	(bad)
   140006017:	00 0a                	add    BYTE PTR [rdx],cl
   140006019:	32 06                	xor    al,BYTE PTR [rsi]
   14000601b:	30 05 60 04 70 03    	xor    BYTE PTR [rip+0x3700460],al        # 143706481 <.debug_line_str+0x36f43ea>
   140006021:	50                   	push   rax
   140006022:	02 c0                	add    al,al
   140006024:	09 04 01             	or     DWORD PTR [rcx+rax*1],eax
   140006027:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
   14000602a:	00 00                	add    BYTE PTR [rax],al
   14000602c:	90                   	nop
   14000602d:	29 00                	sub    DWORD PTR [rax],eax
   14000602f:	00 01                	add    BYTE PTR [rcx],al
   140006031:	00 00                	add    BYTE PTR [rax],al
   140006033:	00 d4                	add    ah,dl
   140006035:	13 00                	adc    eax,DWORD PTR [rax]
   140006037:	00 e7                	add    bh,ah
   140006039:	13 00                	adc    eax,DWORD PTR [rax]
   14000603b:	00 60 1d             	add    BYTE PTR [rax+0x1d],ah
   14000603e:	00 00                	add    BYTE PTR [rax],al
   140006040:	e7 13                	out    0x13,eax
   140006042:	00 00                	add    BYTE PTR [rax],al
   140006044:	09 04 01             	or     DWORD PTR [rcx+rax*1],eax
   140006047:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
   14000604a:	00 00                	add    BYTE PTR [rax],al
   14000604c:	90                   	nop
   14000604d:	29 00                	sub    DWORD PTR [rax],eax
   14000604f:	00 01                	add    BYTE PTR [rcx],al
   140006051:	00 00                	add    BYTE PTR [rax],al
   140006053:	00 f4                	add    ah,dh
   140006055:	13 00                	adc    eax,DWORD PTR [rax]
   140006057:	00 07                	add    BYTE PTR [rdi],al
   140006059:	14 00                	adc    al,0x0
   14000605b:	00 60 1d             	add    BYTE PTR [rax+0x1d],ah
   14000605e:	00 00                	add    BYTE PTR [rax],al
   140006060:	07                   	(bad)
   140006061:	14 00                	adc    al,0x0
   140006063:	00 01                	add    BYTE PTR [rcx],al
   140006065:	04 01                	add    al,0x1
   140006067:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
	...

000000014000606c <.xdata>:
   14000606c:	01 00                	add    DWORD PTR [rax],eax
   14000606e:	00 00                	add    BYTE PTR [rax],al
   140006070:	01 00                	add    DWORD PTR [rax],eax
	...

0000000140006074 <.xdata>:
   140006074:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
   140006077:	05 04 03 01 50       	add    eax,0x50010304
   14000607c:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
   14000607f:	05 04 03 01 50       	add    eax,0x50010304
   140006084:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
   140006087:	05 04 03 01 50       	add    eax,0x50010304
   14000608c:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
   14000608f:	05 04 03 01 50       	add    eax,0x50010304
   140006094:	01 0d 06 45 0d 03    	add    DWORD PTR [rip+0x30d4506],ecx        # 1430da5a0 <.debug_line_str+0x30c8509>
   14000609a:	08 82 04 30 03 60    	or     BYTE PTR [rdx+0x60033004],al
   1400060a0:	02 70 01             	add    dh,BYTE PTR [rax+0x1]
   1400060a3:	50                   	push   rax

00000001400060a4 <.xdata>:
   1400060a4:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   1400060a7:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
   1400060aa:	00 00                	add    BYTE PTR [rax],al
   1400060ac:	01 06                	add    DWORD PTR [rsi],eax
   1400060ae:	03 00                	add    eax,DWORD PTR [rax]
   1400060b0:	06                   	(bad)
   1400060b1:	42 02 30             	rex.X add sil,BYTE PTR [rax]
   1400060b4:	01 60 00             	add    DWORD PTR [rax+0x0],esp
   1400060b7:	00 01                	add    BYTE PTR [rcx],al
   1400060b9:	00 00                	add    BYTE PTR [rax],al
	...

00000001400060bc <.xdata>:
   1400060bc:	01 00                	add    DWORD PTR [rax],eax
	...

00000001400060c0 <.xdata>:
   1400060c0:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   1400060c3:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
   1400060c6:	00 00                	add    BYTE PTR [rax],al
   1400060c8:	01 06                	add    DWORD PTR [rsi],eax
   1400060ca:	03 00                	add    eax,DWORD PTR [rax]
   1400060cc:	06                   	(bad)
   1400060cd:	42 02 30             	rex.X add sil,BYTE PTR [rax]
   1400060d0:	01 60 00             	add    DWORD PTR [rax+0x0],esp
   1400060d3:	00 01                	add    BYTE PTR [rcx],al
   1400060d5:	00 00                	add    BYTE PTR [rax],al
	...

00000001400060d8 <.xdata>:
   1400060d8:	01 16                	add    DWORD PTR [rsi],edx
   1400060da:	09 00                	or     DWORD PTR [rax],eax
   1400060dc:	16                   	(bad)
   1400060dd:	88 06                	mov    BYTE PTR [rsi],al
   1400060df:	00 10                	add    BYTE PTR [rax],dl
   1400060e1:	78 05                	js     1400060e8 <.xdata+0x10>
   1400060e3:	00 0b                	add    BYTE PTR [rbx],cl
   1400060e5:	68 04 00 06 e2       	push   0xffffffffe2060004
   1400060ea:	02 30                	add    dh,BYTE PTR [rax]
   1400060ec:	01 60 00             	add    DWORD PTR [rax+0x0],esp
	...

00000001400060f0 <.xdata>:
   1400060f0:	01 00                	add    DWORD PTR [rax],eax
	...

00000001400060f4 <.xdata>:
   1400060f4:	01 06                	add    DWORD PTR [rsi],eax
   1400060f6:	03 00                	add    eax,DWORD PTR [rax]
   1400060f8:	06                   	(bad)
   1400060f9:	62 02                	(bad)
   1400060fb:	30 01                	xor    BYTE PTR [rcx],al
   1400060fd:	60                   	(bad)
   1400060fe:	00 00                	add    BYTE PTR [rax],al
   140006100:	01 07                	add    DWORD PTR [rdi],eax
   140006102:	04 00                	add    al,0x0
   140006104:	07                   	(bad)
   140006105:	92                   	xchg   edx,eax
   140006106:	03 30                	add    esi,DWORD PTR [rax]
   140006108:	02 60 01             	add    ah,BYTE PTR [rax+0x1]
   14000610b:	70 01                	jo     14000610e <.xdata+0x1a>
   14000610d:	15 0a 45 15 03       	adc    eax,0x315450a
   140006112:	10 82 0c 30 0b 60    	adc    BYTE PTR [rdx+0x600b300c],al
   140006118:	0a 70 09             	or     dh,BYTE PTR [rax+0x9]
   14000611b:	c0 07 d0             	rol    BYTE PTR [rdi],0xd0
   14000611e:	05 e0 03 f0 01       	add    eax,0x1f003e0
   140006123:	50                   	push   rax

0000000140006124 <.xdata>:
   140006124:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   140006127:	00 04 a2             	add    BYTE PTR [rdx+riz*4],al
   14000612a:	00 00                	add    BYTE PTR [rax],al
   14000612c:	01 00                	add    DWORD PTR [rax],eax
	...

0000000140006130 <.xdata>:
   140006130:	01 05 02 00 05 32    	add    DWORD PTR [rip+0x32050002],eax        # 172056138 <.debug_line_str+0x320440a1>
   140006136:	01 30                	add    DWORD PTR [rax],esi

0000000140006138 <.xdata>:
   140006138:	01 0a                	add    DWORD PTR [rdx],ecx
   14000613a:	06                   	(bad)
   14000613b:	00 0a                	add    BYTE PTR [rdx],cl
   14000613d:	32 06                	xor    al,BYTE PTR [rsi]
   14000613f:	30 05 60 04 70 03    	xor    BYTE PTR [rip+0x3700460],al        # 1437065a5 <.debug_line_str+0x36f450e>
   140006145:	50                   	push   rax
   140006146:	02 c0                	add    al,al
   140006148:	01 07                	add    DWORD PTR [rdi],eax
   14000614a:	04 00                	add    al,0x0
   14000614c:	07                   	(bad)
   14000614d:	32 03                	xor    al,BYTE PTR [rbx]
   14000614f:	30 02                	xor    BYTE PTR [rdx],al
   140006151:	60                   	(bad)
   140006152:	01 70 01             	add    DWORD PTR [rax+0x1],esi
   140006155:	06                   	(bad)
   140006156:	03 00                	add    eax,DWORD PTR [rax]
   140006158:	06                   	(bad)
   140006159:	42 02 30             	rex.X add sil,BYTE PTR [rax]
   14000615c:	01 60 00             	add    DWORD PTR [rax+0x0],esp
   14000615f:	00 01                	add    BYTE PTR [rcx],al
   140006161:	05 02 00 05 32       	add    eax,0x32050002
   140006166:	01 30                	add    DWORD PTR [rax],esi

0000000140006168 <.xdata>:
   140006168:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   14000616b:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
   14000616e:	00 00                	add    BYTE PTR [rax],al
   140006170:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   140006173:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
	...

0000000140006178 <.xdata>:
   140006178:	01 00                	add    DWORD PTR [rax],eax
   14000617a:	00 00                	add    BYTE PTR [rax],al
   14000617c:	01 00                	add    DWORD PTR [rax],eax
   14000617e:	00 00                	add    BYTE PTR [rax],al
   140006180:	01 07                	add    DWORD PTR [rdi],eax
   140006182:	04 00                	add    al,0x0
   140006184:	07                   	(bad)
   140006185:	32 03                	xor    al,BYTE PTR [rbx]
   140006187:	30 02                	xor    BYTE PTR [rdx],al
   140006189:	60                   	(bad)
   14000618a:	01 70 01             	add    DWORD PTR [rax+0x1],esi
   14000618d:	00 00                	add    BYTE PTR [rax],al
   14000618f:	00 01                	add    BYTE PTR [rcx],al
   140006191:	00 00                	add    BYTE PTR [rax],al
   140006193:	00 01                	add    BYTE PTR [rcx],al
   140006195:	00 00                	add    BYTE PTR [rax],al
   140006197:	00 01                	add    BYTE PTR [rcx],al
   140006199:	00 00                	add    BYTE PTR [rax],al
   14000619b:	00 01                	add    BYTE PTR [rcx],al
   14000619d:	00 00                	add    BYTE PTR [rax],al
   14000619f:	00 01                	add    BYTE PTR [rcx],al
   1400061a1:	00 00                	add    BYTE PTR [rax],al
	...

00000001400061a4 <.xdata>:
   1400061a4:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   1400061a7:	00 04 62             	add    BYTE PTR [rdx+riz*2],al
	...

00000001400061ac <.xdata>:
   1400061ac:	01 06                	add    DWORD PTR [rsi],eax
   1400061ae:	03 00                	add    eax,DWORD PTR [rax]
   1400061b0:	06                   	(bad)
   1400061b1:	82                   	(bad)
   1400061b2:	02 30                	add    dh,BYTE PTR [rax]
   1400061b4:	01 60 00             	add    DWORD PTR [rax+0x0],esp
	...

00000001400061b8 <.xdata>:
   1400061b8:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   1400061bb:	00 04 82             	add    BYTE PTR [rdx+rax*4],al
	...

00000001400061c0 <.xdata>:
   1400061c0:	01 00                	add    DWORD PTR [rax],eax
   1400061c2:	00 00                	add    BYTE PTR [rax],al
   1400061c4:	01 0a                	add    DWORD PTR [rdx],ecx
   1400061c6:	06                   	(bad)
   1400061c7:	00 0a                	add    BYTE PTR [rdx],cl
   1400061c9:	32 06                	xor    al,BYTE PTR [rsi]
   1400061cb:	30 05 60 04 70 03    	xor    BYTE PTR [rip+0x3700460],al        # 143706631 <.debug_line_str+0x36f459a>
   1400061d1:	50                   	push   rax
   1400061d2:	02 c0                	add    al,al
   1400061d4:	01 0a                	add    DWORD PTR [rdx],ecx
   1400061d6:	06                   	(bad)
   1400061d7:	00 0a                	add    BYTE PTR [rdx],cl
   1400061d9:	32 06                	xor    al,BYTE PTR [rsi]
   1400061db:	30 05 60 04 70 03    	xor    BYTE PTR [rip+0x3700460],al        # 143706641 <.debug_line_str+0x36f45aa>
   1400061e1:	50                   	push   rax
   1400061e2:	02 c0                	add    al,al
   1400061e4:	01 05 02 00 05 32    	add    DWORD PTR [rip+0x32050002],eax        # 1720561ec <.debug_line_str+0x32044155>
   1400061ea:	01 30                	add    DWORD PTR [rax],esi
   1400061ec:	01 00                	add    DWORD PTR [rax],eax
   1400061ee:	00 00                	add    BYTE PTR [rax],al
   1400061f0:	01 05 02 00 05 32    	add    DWORD PTR [rip+0x32050002],eax        # 1720561f8 <.debug_line_str+0x32044161>
   1400061f6:	01 30                	add    DWORD PTR [rax],esi
   1400061f8:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   1400061fb:	00 04 82             	add    BYTE PTR [rdx+rax*4],al
   1400061fe:	00 00                	add    BYTE PTR [rax],al
   140006200:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   140006203:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
   140006206:	00 00                	add    BYTE PTR [rax],al
   140006208:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   14000620b:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
	...

0000000140006210 <.xdata.startup>:
   140006210:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000140007000 <__bss_start__>:
   140007000:	00 00                	add    BYTE PTR [rax],al
	...

0000000140007004 <startinfo>:
   140007004:	00 00                	add    BYTE PTR [rax],al
	...

0000000140007008 <has_cctor>:
   140007008:	00 00                	add    BYTE PTR [rax],al
	...

000000014000700c <managedapp>:
   14000700c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140007010 <mainret>:
	...

0000000140007018 <envp>:
	...

0000000140007020 <argv>:
	...

0000000140007028 <argc>:
	...

0000000140007030 <initialized>:
	...

0000000140007040 <__native_startup_lock>:
	...

0000000140007048 <__native_startup_state>:
	...

0000000140007050 <_newmode>:
	...

0000000140007060 <__mingw_initltssuo_force>:
   140007060:	00 00                	add    BYTE PTR [rax],al
	...

0000000140007064 <__mingw_initltsdyn_force>:
   140007064:	00 00                	add    BYTE PTR [rax],al
	...

0000000140007068 <__mingw_initltsdrot_force>:
   140007068:	00 00                	add    BYTE PTR [rax],al
	...

000000014000706c <_tls_index>:
   14000706c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140007070 <_commode>:
	...

0000000140007080 <__mingw_app_type>:
	...

0000000140007090 <was_init.0>:
   140007090:	00 00                	add    BYTE PTR [rax],al
	...

0000000140007094 <maxSections>:
   140007094:	00 00                	add    BYTE PTR [rax],al
	...

0000000140007098 <the_secs>:
	...

00000001400070a0 <stUserMathErr>:
	...

00000001400070b0 <_fmode>:
	...

00000001400070c0 <__mingw_oldexcpt_handler>:
	...

00000001400070e0 <key_dtor_list>:
	...

00000001400070e8 <__mingwthr_cs_init>:
	...

0000000140007100 <__mingwthr_cs>:
	...

0000000140007140 <.bss>:
	...

0000000140007150 <.bss>:
	...

0000000140007170 <local__winitenv>:
	...

0000000140007178 <local__initenv>:
	...

Disassembly of section .idata:

0000000140008000 <_head_lib64_libkernel32_a>:
   140008000:	c8 80 00 00          	enter  0x80,0x0
	...
   14000800c:	b0 87                	mov    al,0x87
   14000800e:	00 00                	add    BYTE PTR [rax],al
   140008010:	90                   	nop
   140008011:	82                   	(bad)
	...

0000000140008014 <_head_lib64_libapi_ms_win_crt_environment_l1_1_0_a>:
   140008014:	20 81 00 00 00 00    	and    BYTE PTR [rcx+0x0],al
   14000801a:	00 00                	add    BYTE PTR [rax],al
   14000801c:	00 00                	add    BYTE PTR [rax],al
   14000801e:	00 00                	add    BYTE PTR [rax],al
   140008020:	c8 87 00 00          	enter  0x87,0x0
   140008024:	e8 82 00 00        	call   1780080ab <.debug_line_str+0x37ff6014>

0000000140008028 <_head_lib64_libapi_ms_win_crt_heap_l1_1_0_a>:
   140008028:	38 81 00 00 00 00    	cmp    BYTE PTR [rcx+0x0],al
   14000802e:	00 00                	add    BYTE PTR [rax],al
   140008030:	00 00                	add    BYTE PTR [rax],al
   140008032:	00 00                	add    BYTE PTR [rax],al
   140008034:	00 88 00 00 00 83    	add    BYTE PTR [rax-0x7d000000],cl
	...

000000014000803c <_head_lib64_libapi_ms_win_crt_math_l1_1_0_a>:
   14000803c:	60                   	(bad)
   14000803d:	81 00 00 00 00 00    	add    DWORD PTR [rax],0x0
   140008043:	00 00                	add    BYTE PTR [rax],al
   140008045:	00 00                	add    BYTE PTR [rax],al
   140008047:	00 24 88             	add    BYTE PTR [rax+rcx*4],ah
   14000804a:	00 00                	add    BYTE PTR [rax],al
   14000804c:	28 83 00 00      	sub    BYTE PTR [rbx-0x7e900000],al

0000000140008050 <_head_lib64_libapi_ms_win_crt_private_l1_1_0_a>:
   140008050:	70 81                	jo     140007fd3 <__bss_end__+0xe53>
	...
   14000805a:	00 00                	add    BYTE PTR [rax],al
   14000805c:	4c 88 00             	rex.WR mov BYTE PTR [rax],r8b
   14000805f:	00 38                	add    BYTE PTR [rax],bh
   140008061:	83 00 00             	add    DWORD PTR [rax],0x0

0000000140008064 <_head_lib64_libapi_ms_win_crt_runtime_l1_1_0_a>:
   140008064:	88 81 00 00 00 00    	mov    BYTE PTR [rcx+0x0],al
   14000806a:	00 00                	add    BYTE PTR [rax],al
   14000806c:	00 00                	add    BYTE PTR [rax],al
   14000806e:	00 00                	add    BYTE PTR [rax],al
   140008070:	b4 88                	mov    ah,0x88
   140008072:	00 00                	add    BYTE PTR [rax],al
   140008074:	50                   	push   rax
   140008075:	83 00 00             	add    DWORD PTR [rax],0x0

0000000140008078 <_head_lib64_libapi_ms_win_crt_stdio_l1_1_0_a>:
   140008078:	18 82 00 00 00 00    	sbb    BYTE PTR [rdx+0x0],al
   14000807e:	00 00                	add    BYTE PTR [rax],al
   140008080:	00 00                	add    BYTE PTR [rax],al
   140008082:	00 00                	add    BYTE PTR [rax],al
   140008084:	f0 88 00             	lock mov BYTE PTR [rax],al
   140008087:	00 e0                	add    al,ah
   140008089:	83 00 00             	add    DWORD PTR [rax],0x0

000000014000808c <_head_lib64_libapi_ms_win_crt_string_l1_1_0_a>:
   14000808c:	50                   	push   rax
   14000808d:	82                   	(bad)
	...
   140008096:	00 00                	add    BYTE PTR [rax],al
   140008098:	18 89 00 00 18 84    	sbb    BYTE PTR [rcx-0x7be80000],cl
	...

00000001400080a0 <_head_lib64_libapi_ms_win_crt_time_l1_1_0_a>:
   1400080a0:	68 82 00 00 00       	push   0x82
   1400080a5:	00 00                	add    BYTE PTR [rax],al
   1400080a7:	00 00                	add    BYTE PTR [rax],al
   1400080a9:	00 00                	add    BYTE PTR [rax],al
   1400080ab:	00 4c 89 00          	add    BYTE PTR [rcx+rcx*4+0x0],cl
   1400080af:	00 30                	add    BYTE PTR [rax],dh
   1400080b1:	84 00                	test   BYTE PTR [rax],al
	...

00000001400080c8 <hname>:
   1400080c8:	58                   	pop    rax
   1400080c9:	84 00                	test   BYTE PTR [rax],al
   1400080cb:	00 00                	add    BYTE PTR [rax],al
   1400080cd:	00 00                	add    BYTE PTR [rax],al
	...

00000001400080d0 <.idata$4>:
   1400080d0:	70 84                	jo     140008056 <_head_lib64_libapi_ms_win_crt_private_l1_1_0_a+0x6>
   1400080d2:	00 00                	add    BYTE PTR [rax],al
   1400080d4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400080d8 <.idata$4>:
   1400080d8:	88 84 00 00 00 00 00 	mov    BYTE PTR [rax+rax*1+0x0],al
	...

00000001400080e0 <.idata$4>:
   1400080e0:	98                   	cwde
   1400080e1:	84 00                	test   BYTE PTR [rax],al
   1400080e3:	00 00                	add    BYTE PTR [rax],al
   1400080e5:	00 00                	add    BYTE PTR [rax],al
	...

00000001400080e8 <.idata$4>:
   1400080e8:	b4 84                	mov    ah,0x84
   1400080ea:	00 00                	add    BYTE PTR [rax],al
   1400080ec:	00 00                	add    BYTE PTR [rax],al
	...

00000001400080f0 <.idata$4>:
   1400080f0:	cc                   	int3
   1400080f1:	84 00                	test   BYTE PTR [rax],al
   1400080f3:	00 00                	add    BYTE PTR [rax],al
   1400080f5:	00 00                	add    BYTE PTR [rax],al
	...

00000001400080f8 <.idata$4>:
   1400080f8:	ea                   	(bad)
   1400080f9:	84 00                	test   BYTE PTR [rax],al
   1400080fb:	00 00                	add    BYTE PTR [rax],al
   1400080fd:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008100 <.idata$4>:
   140008100:	f2 84 00             	repnz test BYTE PTR [rax],al
   140008103:	00 00                	add    BYTE PTR [rax],al
   140008105:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008108 <.idata$4>:
   140008108:	00 85 00 00 00 00    	add    BYTE PTR [rbp+0x0],al
	...

0000000140008110 <.idata$4>:
   140008110:	12 85 00 00 00 00    	adc    al,BYTE PTR [rbp+0x0]
	...

0000000140008118 <.idata$4>:
	...

0000000140008120 <hname>:
   140008120:	22 85 00 00 00 00    	and    al,BYTE PTR [rbp+0x0]
	...

0000000140008128 <.idata$4>:
   140008128:	32 85 00 00 00 00    	xor    al,BYTE PTR [rbp+0x0]
	...

0000000140008130 <.idata$4>:
	...

0000000140008138 <hname>:
   140008138:	42 85 00             	rex.X test DWORD PTR [rax],eax
   14000813b:	00 00                	add    BYTE PTR [rax],al
   14000813d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008140 <.idata$4>:
   140008140:	52                   	push   rdx
   140008141:	85 00                	test   DWORD PTR [rax],eax
   140008143:	00 00                	add    BYTE PTR [rax],al
   140008145:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008148 <.idata$4>:
   140008148:	5c                   	pop    rsp
   140008149:	85 00                	test   DWORD PTR [rax],eax
   14000814b:	00 00                	add    BYTE PTR [rax],al
   14000814d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008150 <.idata$4>:
   140008150:	64 85 00             	test   DWORD PTR fs:[rax],eax
   140008153:	00 00                	add    BYTE PTR [rax],al
   140008155:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008158 <.idata$4>:
	...

0000000140008160 <hname>:
   140008160:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140008161:	85 00                	test   DWORD PTR [rax],eax
   140008163:	00 00                	add    BYTE PTR [rax],al
   140008165:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008168 <.idata$4>:
	...

0000000140008170 <hname>:
   140008170:	82                   	(bad)
   140008171:	85 00                	test   DWORD PTR [rax],eax
   140008173:	00 00                	add    BYTE PTR [rax],al
   140008175:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008178 <.idata$4>:
   140008178:	9a                   	(bad)
   140008179:	85 00                	test   DWORD PTR [rax],eax
   14000817b:	00 00                	add    BYTE PTR [rax],al
   14000817d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008180 <.idata$4>:
	...

0000000140008188 <hname>:
   140008188:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008189:	85 00                	test   DWORD PTR [rax],eax
   14000818b:	00 00                	add    BYTE PTR [rax],al
   14000818d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008190 <.idata$4>:
   140008190:	b2 85                	mov    dl,0x85
   140008192:	00 00                	add    BYTE PTR [rax],al
   140008194:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008198 <.idata$4>:
   140008198:	c0 85 00 00 00 00 00 	rol    BYTE PTR [rbp+0x0],0x0
	...

00000001400081a0 <.idata$4>:
   1400081a0:	ce                   	(bad)
   1400081a1:	85 00                	test   DWORD PTR [rax],eax
   1400081a3:	00 00                	add    BYTE PTR [rax],al
   1400081a5:	00 00                	add    BYTE PTR [rax],al
	...

00000001400081a8 <.idata$4>:
   1400081a8:	d8 85 00 00 00 00    	fadd   DWORD PTR [rbp+0x0]
	...

00000001400081b0 <.idata$4>:
   1400081b0:	f2 85 00             	repnz test DWORD PTR [rax],eax
   1400081b3:	00 00                	add    BYTE PTR [rax],al
   1400081b5:	00 00                	add    BYTE PTR [rax],al
	...

00000001400081b8 <.idata$4>:
   1400081b8:	0a 86 00 00 00 00    	or     al,BYTE PTR [rsi+0x0]
	...

00000001400081c0 <.idata$4>:
   1400081c0:	20 86 00 00 00 00    	and    BYTE PTR [rsi+0x0],al
	...

00000001400081c8 <.idata$4>:
   1400081c8:	2e 86 00             	cs xchg BYTE PTR [rax],al
   1400081cb:	00 00                	add    BYTE PTR [rax],al
   1400081cd:	00 00                	add    BYTE PTR [rax],al
	...

00000001400081d0 <.idata$4>:
   1400081d0:	36 86 00             	ss xchg BYTE PTR [rax],al
   1400081d3:	00 00                	add    BYTE PTR [rax],al
   1400081d5:	00 00                	add    BYTE PTR [rax],al
	...

00000001400081d8 <.idata$4>:
   1400081d8:	58                   	pop    rax
   1400081d9:	86 00                	xchg   BYTE PTR [rax],al
   1400081db:	00 00                	add    BYTE PTR [rax],al
   1400081dd:	00 00                	add    BYTE PTR [rax],al
	...

00000001400081e0 <.idata$4>:
   1400081e0:	78 86                	js     140008168 <.idata$4>
   1400081e2:	00 00                	add    BYTE PTR [rax],al
   1400081e4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400081e8 <.idata$4>:
   1400081e8:	84 86 00 00 00 00    	test   BYTE PTR [rsi+0x0],al
	...

00000001400081f0 <.idata$4>:
   1400081f0:	94                   	xchg   esp,eax
   1400081f1:	86 00                	xchg   BYTE PTR [rax],al
   1400081f3:	00 00                	add    BYTE PTR [rax],al
   1400081f5:	00 00                	add    BYTE PTR [rax],al
	...

00000001400081f8 <.idata$4>:
   1400081f8:	b6 86                	mov    dh,0x86
   1400081fa:	00 00                	add    BYTE PTR [rax],al
   1400081fc:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008200 <.idata$4>:
   140008200:	be 86 00 00 00       	mov    esi,0x86
   140008205:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008208 <.idata$4>:
   140008208:	c6 86 00 00 00 00 00 	mov    BYTE PTR [rsi+0x0],0x0
	...

0000000140008210 <.idata$4>:
	...

0000000140008218 <hname>:
   140008218:	d0 86 00 00 00 00    	rol    BYTE PTR [rsi+0x0],1
	...

0000000140008220 <.idata$4>:
   140008220:	e2 86                	loop   1400081a8 <.idata$4>
   140008222:	00 00                	add    BYTE PTR [rax],al
   140008224:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008228 <.idata$4>:
   140008228:	f2 86 00             	xacquire xchg BYTE PTR [rax],al
   14000822b:	00 00                	add    BYTE PTR [rax],al
   14000822d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008230 <.idata$4>:
   140008230:	00 87 00 00 00 00    	add    BYTE PTR [rdi+0x0],al
	...

0000000140008238 <.idata$4>:
   140008238:	1a 87 00 00 00 00    	sbb    al,BYTE PTR [rdi+0x0]
	...

0000000140008240 <.idata$4>:
   140008240:	36 87 00             	ss xchg DWORD PTR [rax],eax
   140008243:	00 00                	add    BYTE PTR [rax],al
   140008245:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008248 <.idata$4>:
	...

0000000140008250 <hname>:
   140008250:	40 87 00             	rex xchg DWORD PTR [rax],eax
   140008253:	00 00                	add    BYTE PTR [rax],al
   140008255:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008258 <.idata$4>:
   140008258:	4a 87 00             	rex.WX xchg QWORD PTR [rax],rax
   14000825b:	00 00                	add    BYTE PTR [rax],al
   14000825d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008260 <.idata$4>:
	...

0000000140008268 <hname>:
   140008268:	54                   	push   rsp
   140008269:	87 00                	xchg   DWORD PTR [rax],eax
   14000826b:	00 00                	add    BYTE PTR [rax],al
   14000826d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008270 <.idata$4>:
   140008270:	62                   	(bad)
   140008271:	87 00                	xchg   DWORD PTR [rax],eax
   140008273:	00 00                	add    BYTE PTR [rax],al
   140008275:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008278 <.idata$4>:
   140008278:	70 87                	jo     140008201 <.idata$4+0x1>
   14000827a:	00 00                	add    BYTE PTR [rax],al
   14000827c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008280 <.idata$4>:
   140008280:	7c 87                	jl     140008209 <.idata$4+0x1>
   140008282:	00 00                	add    BYTE PTR [rax],al
   140008284:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008288 <.idata$4>:
	...

0000000140008290 <__IAT_start__>:
   140008290:	58                   	pop    rax
   140008291:	84 00                	test   BYTE PTR [rax],al
   140008293:	00 00                	add    BYTE PTR [rax],al
   140008295:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008298 <__imp_EnterCriticalSection>:
   140008298:	70 84                	jo     14000821e <hname+0x6>
   14000829a:	00 00                	add    BYTE PTR [rax],al
   14000829c:	00 00                	add    BYTE PTR [rax],al
	...

00000001400082a0 <__imp_GetLastError>:
   1400082a0:	88 84 00 00 00 00 00 	mov    BYTE PTR [rax+rax*1+0x0],al
	...

00000001400082a8 <__imp_InitializeCriticalSection>:
   1400082a8:	98                   	cwde
   1400082a9:	84 00                	test   BYTE PTR [rax],al
   1400082ab:	00 00                	add    BYTE PTR [rax],al
   1400082ad:	00 00                	add    BYTE PTR [rax],al
	...

00000001400082b0 <__imp_LeaveCriticalSection>:
   1400082b0:	b4 84                	mov    ah,0x84
   1400082b2:	00 00                	add    BYTE PTR [rax],al
   1400082b4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400082b8 <__imp_SetUnhandledExceptionFilter>:
   1400082b8:	cc                   	int3
   1400082b9:	84 00                	test   BYTE PTR [rax],al
   1400082bb:	00 00                	add    BYTE PTR [rax],al
   1400082bd:	00 00                	add    BYTE PTR [rax],al
	...

00000001400082c0 <__imp_Sleep>:
   1400082c0:	ea                   	(bad)
   1400082c1:	84 00                	test   BYTE PTR [rax],al
   1400082c3:	00 00                	add    BYTE PTR [rax],al
   1400082c5:	00 00                	add    BYTE PTR [rax],al
	...

00000001400082c8 <__imp_TlsGetValue>:
   1400082c8:	f2 84 00             	repnz test BYTE PTR [rax],al
   1400082cb:	00 00                	add    BYTE PTR [rax],al
   1400082cd:	00 00                	add    BYTE PTR [rax],al
	...

00000001400082d0 <__imp_VirtualProtect>:
   1400082d0:	00 85 00 00 00 00    	add    BYTE PTR [rbp+0x0],al
	...

00000001400082d8 <__imp_VirtualQuery>:
   1400082d8:	12 85 00 00 00 00    	adc    al,BYTE PTR [rbp+0x0]
	...

00000001400082e0 <.idata$5>:
	...

00000001400082e8 <__imp___p__environ>:
   1400082e8:	22 85 00 00 00 00    	and    al,BYTE PTR [rbp+0x0]
	...

00000001400082f0 <__imp___p__wenviron>:
   1400082f0:	32 85 00 00 00 00    	xor    al,BYTE PTR [rbp+0x0]
	...

00000001400082f8 <.idata$5>:
	...

0000000140008300 <__imp__set_new_mode>:
   140008300:	42 85 00             	rex.X test DWORD PTR [rax],eax
   140008303:	00 00                	add    BYTE PTR [rax],al
   140008305:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008308 <__imp_calloc>:
   140008308:	52                   	push   rdx
   140008309:	85 00                	test   DWORD PTR [rax],eax
   14000830b:	00 00                	add    BYTE PTR [rax],al
   14000830d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008310 <__imp_free>:
   140008310:	5c                   	pop    rsp
   140008311:	85 00                	test   DWORD PTR [rax],eax
   140008313:	00 00                	add    BYTE PTR [rax],al
   140008315:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008318 <__imp_malloc>:
   140008318:	64 85 00             	test   DWORD PTR fs:[rax],eax
   14000831b:	00 00                	add    BYTE PTR [rax],al
   14000831d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008320 <.idata$5>:
	...

0000000140008328 <__imp___setusermatherr>:
   140008328:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140008329:	85 00                	test   DWORD PTR [rax],eax
   14000832b:	00 00                	add    BYTE PTR [rax],al
   14000832d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008330 <.idata$5>:
	...

0000000140008338 <__imp___C_specific_handler>:
   140008338:	82                   	(bad)
   140008339:	85 00                	test   DWORD PTR [rax],eax
   14000833b:	00 00                	add    BYTE PTR [rax],al
   14000833d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008340 <__imp_memcpy>:
   140008340:	9a                   	(bad)
   140008341:	85 00                	test   DWORD PTR [rax],eax
   140008343:	00 00                	add    BYTE PTR [rax],al
   140008345:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008348 <.idata$5>:
	...

0000000140008350 <__imp___p___argc>:
   140008350:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140008351:	85 00                	test   DWORD PTR [rax],eax
   140008353:	00 00                	add    BYTE PTR [rax],al
   140008355:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008358 <__imp___p___argv>:
   140008358:	b2 85                	mov    dl,0x85
   14000835a:	00 00                	add    BYTE PTR [rax],al
   14000835c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008360 <__imp___p___wargv>:
   140008360:	c0 85 00 00 00 00 00 	rol    BYTE PTR [rbp+0x0],0x0
	...

0000000140008368 <__imp__cexit>:
   140008368:	ce                   	(bad)
   140008369:	85 00                	test   DWORD PTR [rax],eax
   14000836b:	00 00                	add    BYTE PTR [rax],al
   14000836d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008370 <__imp__configure_narrow_argv>:
   140008370:	d8 85 00 00 00 00    	fadd   DWORD PTR [rbp+0x0]
	...

0000000140008378 <__imp__configure_wide_argv>:
   140008378:	f2 85 00             	repnz test DWORD PTR [rax],eax
   14000837b:	00 00                	add    BYTE PTR [rax],al
   14000837d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008380 <__imp__crt_at_quick_exit>:
   140008380:	0a 86 00 00 00 00    	or     al,BYTE PTR [rsi+0x0]
	...

0000000140008388 <__imp__crt_atexit>:
   140008388:	20 86 00 00 00 00    	and    BYTE PTR [rsi+0x0],al
	...

0000000140008390 <__imp__exit>:
   140008390:	2e 86 00             	cs xchg BYTE PTR [rax],al
   140008393:	00 00                	add    BYTE PTR [rax],al
   140008395:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008398 <__imp__initialize_narrow_environment>:
   140008398:	36 86 00             	ss xchg BYTE PTR [rax],al
   14000839b:	00 00                	add    BYTE PTR [rax],al
   14000839d:	00 00                	add    BYTE PTR [rax],al
	...

00000001400083a0 <__imp__initialize_wide_environment>:
   1400083a0:	58                   	pop    rax
   1400083a1:	86 00                	xchg   BYTE PTR [rax],al
   1400083a3:	00 00                	add    BYTE PTR [rax],al
   1400083a5:	00 00                	add    BYTE PTR [rax],al
	...

00000001400083a8 <__imp__initterm>:
   1400083a8:	78 86                	js     140008330 <.idata$5>
   1400083aa:	00 00                	add    BYTE PTR [rax],al
   1400083ac:	00 00                	add    BYTE PTR [rax],al
	...

00000001400083b0 <__imp___set_app_type>:
   1400083b0:	84 86 00 00 00 00    	test   BYTE PTR [rsi+0x0],al
	...

00000001400083b8 <__imp__set_invalid_parameter_handler>:
   1400083b8:	94                   	xchg   esp,eax
   1400083b9:	86 00                	xchg   BYTE PTR [rax],al
   1400083bb:	00 00                	add    BYTE PTR [rax],al
   1400083bd:	00 00                	add    BYTE PTR [rax],al
	...

00000001400083c0 <__imp_abort>:
   1400083c0:	b6 86                	mov    dh,0x86
   1400083c2:	00 00                	add    BYTE PTR [rax],al
   1400083c4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400083c8 <__imp_exit>:
   1400083c8:	be 86 00 00 00       	mov    esi,0x86
   1400083cd:	00 00                	add    BYTE PTR [rax],al
	...

00000001400083d0 <__imp_signal>:
   1400083d0:	c6 86 00 00 00 00 00 	mov    BYTE PTR [rsi+0x0],0x0
	...

00000001400083d8 <.idata$5>:
	...

00000001400083e0 <__imp___acrt_iob_func>:
   1400083e0:	d0 86 00 00 00 00    	rol    BYTE PTR [rsi+0x0],1
	...

00000001400083e8 <__imp___p__commode>:
   1400083e8:	e2 86                	loop   140008370 <__imp__configure_narrow_argv>
   1400083ea:	00 00                	add    BYTE PTR [rax],al
   1400083ec:	00 00                	add    BYTE PTR [rax],al
	...

00000001400083f0 <__imp___p__fmode>:
   1400083f0:	f2 86 00             	xacquire xchg BYTE PTR [rax],al
   1400083f3:	00 00                	add    BYTE PTR [rax],al
   1400083f5:	00 00                	add    BYTE PTR [rax],al
	...

00000001400083f8 <__imp___stdio_common_vfprintf>:
   1400083f8:	00 87 00 00 00 00    	add    BYTE PTR [rdi+0x0],al
	...

0000000140008400 <__imp___stdio_common_vfwprintf>:
   140008400:	1a 87 00 00 00 00    	sbb    al,BYTE PTR [rdi+0x0]
	...

0000000140008408 <__imp_fwrite>:
   140008408:	36 87 00             	ss xchg DWORD PTR [rax],eax
   14000840b:	00 00                	add    BYTE PTR [rax],al
   14000840d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008410 <.idata$5>:
	...

0000000140008418 <__imp_strlen>:
   140008418:	40 87 00             	rex xchg DWORD PTR [rax],eax
   14000841b:	00 00                	add    BYTE PTR [rax],al
   14000841d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008420 <__imp_strncmp>:
   140008420:	4a 87 00             	rex.WX xchg QWORD PTR [rax],rax
   140008423:	00 00                	add    BYTE PTR [rax],al
   140008425:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008428 <.idata$5>:
	...

0000000140008430 <__imp___daylight>:
   140008430:	54                   	push   rsp
   140008431:	87 00                	xchg   DWORD PTR [rax],eax
   140008433:	00 00                	add    BYTE PTR [rax],al
   140008435:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008438 <__imp___timezone>:
   140008438:	62                   	(bad)
   140008439:	87 00                	xchg   DWORD PTR [rax],eax
   14000843b:	00 00                	add    BYTE PTR [rax],al
   14000843d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008440 <__imp___tzname>:
   140008440:	70 87                	jo     1400083c9 <__imp_exit+0x1>
   140008442:	00 00                	add    BYTE PTR [rax],al
   140008444:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008448 <__imp__tzset>:
   140008448:	7c 87                	jl     1400083d1 <__imp_signal+0x1>
   14000844a:	00 00                	add    BYTE PTR [rax],al
   14000844c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008450 <.idata$5>:
	...

0000000140008458 <__IAT_end__>:
   140008458:	19 01                	sbb    DWORD PTR [rcx],eax
   14000845a:	44                   	rex.R
   14000845b:	65 6c                	gs ins BYTE PTR es:[rdi],dx
   14000845d:	65 74 65             	gs je  1400084c5 <.idata$6+0x11>
   140008460:	43 72 69             	rex.XB jb 1400084cc <.idata$6>
   140008463:	74 69                	je     1400084ce <.idata$6+0x2>
   140008465:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
   140008468:	53                   	push   rbx
   140008469:	65 63 74 69 6f       	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000846e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
	...

0000000140008470 <.idata$6>:
   140008470:	3d 01 45 6e 74       	cmp    eax,0x746e4501
   140008475:	65 72 43             	gs jb  1400084bb <.idata$6+0x7>
   140008478:	72 69                	jb     1400084e3 <.idata$6+0x17>
   14000847a:	74 69                	je     1400084e5 <.idata$6+0x19>
   14000847c:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
   14000847f:	53                   	push   rbx
   140008480:	65 63 74 69 6f       	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140008485:	6e                   	outs   dx,BYTE PTR ds:[rsi]
	...

0000000140008488 <.idata$6>:
   140008488:	74 02                	je     14000848c <.idata$6+0x4>
   14000848a:	47                   	rex.RXB
   14000848b:	65 74 4c             	gs je  1400084da <.idata$6+0xe>
   14000848e:	61                   	(bad)
   14000848f:	73 74                	jae    140008505 <.idata$6+0x5>
   140008491:	45 72 72             	rex.RB jb 140008506 <.idata$6+0x6>
   140008494:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140008495:	72 00                	jb     140008497 <.idata$6+0xf>
	...

0000000140008498 <.idata$6>:
   140008498:	7a 03                	jp     14000849d <.idata$6+0x5>
   14000849a:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
   14000849c:	69 74 69 61 6c 69 7a 	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400084a3:	65 
   1400084a4:	43 72 69             	rex.XB jb 140008510 <.idata$6+0x10>
   1400084a7:	74 69                	je     140008512 <.idata$6>
   1400084a9:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
   1400084ac:	53                   	push   rbx
   1400084ad:	65 63 74 69 6f       	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400084b2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
	...

00000001400084b4 <.idata$6>:
   1400084b4:	d6                   	(bad)
   1400084b5:	03 4c 65 61          	add    ecx,DWORD PTR [rbp+riz*2+0x61]
   1400084b9:	76 65                	jbe    140008520 <.idata$6+0xe>
   1400084bb:	43 72 69             	rex.XB jb 140008527 <.idata$6+0x5>
   1400084be:	74 69                	je     140008529 <.idata$6+0x7>
   1400084c0:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
   1400084c3:	53                   	push   rbx
   1400084c4:	65 63 74 69 6f       	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400084c9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
	...

00000001400084cc <.idata$6>:
   1400084cc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400084cd:	05 53 65 74 55       	add    eax,0x55746553
   1400084d2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400084d3:	68 61 6e 64 6c       	push   0x6c646e61
   1400084d8:	65 64 45 78 63       	gs fs rex.RB js 140008540 <.idata$6+0xe>
   1400084dd:	65 70 74             	gs jo  140008554 <.idata$6+0x2>
   1400084e0:	69 6f 6e 46 69 6c 74 	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400084e7:	65 72 00             	gs jb  1400084ea <.idata$6>

00000001400084ea <.idata$6>:
   1400084ea:	7f 05                	jg     1400084f1 <.idata$6+0x7>
   1400084ec:	53                   	push   rbx
   1400084ed:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400084ee:	65 65 70 00          	gs gs jo 1400084f2 <.idata$6>

00000001400084f2 <.idata$6>:
   1400084f2:	a2 05 54 6c 73 47 65 	movabs ds:0x56746547736c5405,al
   1400084f9:	74 56 
   1400084fb:	61                   	(bad)
   1400084fc:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400084fd:	75 65                	jne    140008564 <.idata$6>
	...

0000000140008500 <.idata$6>:
   140008500:	d1 05 56 69 72 74    	rol    DWORD PTR [rip+0x74726956],1        # 1b472ee5c <.debug_line_str+0x7471cdc5>
   140008506:	75 61                	jne    140008569 <.idata$6+0x5>
   140008508:	6c                   	ins    BYTE PTR es:[rdi],dx
   140008509:	50                   	push   rax
   14000850a:	72 6f                	jb     14000857b <.idata$6+0xd>
   14000850c:	74 65                	je     140008573 <.idata$6+0x5>
   14000850e:	63 74 00 00          	movsxd esi,DWORD PTR [rax+rax*1+0x0]

0000000140008512 <.idata$6>:
   140008512:	d3 05 56 69 72 74    	rol    DWORD PTR [rip+0x74726956],cl        # 1b472ee6e <.debug_line_str+0x7471cdd7>
   140008518:	75 61                	jne    14000857b <.idata$6+0xd>
   14000851a:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000851b:	51                   	push   rcx
   14000851c:	75 65                	jne    140008583 <.idata$6+0x1>
   14000851e:	72 79                	jb     140008599 <.idata$6+0x17>
	...

0000000140008522 <.idata$6>:
   140008522:	01 00                	add    DWORD PTR [rax],eax
   140008524:	5f                   	pop    rdi
   140008525:	5f                   	pop    rdi
   140008526:	70 5f                	jo     140008587 <.idata$6+0x5>
   140008528:	5f                   	pop    rdi
   140008529:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   14000852b:	76 69                	jbe    140008596 <.idata$6+0x14>
   14000852d:	72 6f                	jb     14000859e <.idata$6+0x4>
   14000852f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
	...

0000000140008532 <.idata$6>:
   140008532:	02 00                	add    al,BYTE PTR [rax]
   140008534:	5f                   	pop    rdi
   140008535:	5f                   	pop    rdi
   140008536:	70 5f                	jo     140008597 <.idata$6+0x15>
   140008538:	5f                   	pop    rdi
   140008539:	77 65                	ja     1400085a0 <.idata$6+0x6>
   14000853b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000853c:	76 69                	jbe    1400085a7 <.idata$6+0x3>
   14000853e:	72 6f                	jb     1400085af <.idata$6+0xb>
   140008540:	6e                   	outs   dx,BYTE PTR ds:[rsi]
	...

0000000140008542 <.idata$6>:
   140008542:	18 00                	sbb    BYTE PTR [rax],al
   140008544:	5f                   	pop    rdi
   140008545:	73 65                	jae    1400085ac <.idata$6+0x8>
   140008547:	74 5f                	je     1400085a8 <.idata$6+0x4>
   140008549:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000854a:	65 77 5f             	gs ja  1400085ac <.idata$6+0x8>
   14000854d:	6d                   	ins    DWORD PTR es:[rdi],dx
   14000854e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000854f:	64 65 00           	fs add BYTE PTR gs:[rcx],bl

0000000140008552 <.idata$6>:
   140008552:	19 00                	sbb    DWORD PTR [rax],eax
   140008554:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
   140008557:	6c                   	ins    BYTE PTR es:[rdi],dx
   140008558:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140008559:	63 00                	movsxd eax,DWORD PTR [rax]
	...

000000014000855c <.idata$6>:
   14000855c:	1a 00                	sbb    al,BYTE PTR [rax]
   14000855e:	66 72 65             	data16 jb 1400085c6 <.idata$6+0x6>
   140008561:	65 00 00             	add    BYTE PTR gs:[rax],al

0000000140008564 <.idata$6>:
   140008564:	1b 00                	sbb    eax,DWORD PTR [rax]
   140008566:	6d                   	ins    DWORD PTR es:[rdi],dx
   140008567:	61                   	(bad)
   140008568:	6c                   	ins    BYTE PTR es:[rdi],dx
   140008569:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000856a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000856b:	63 00                	movsxd eax,DWORD PTR [rax]
	...

000000014000856e <.idata$6>:
   14000856e:	0a 00                	or     al,BYTE PTR [rax]
   140008570:	5f                   	pop    rdi
   140008571:	5f                   	pop    rdi
   140008572:	73 65                	jae    1400085d9 <.idata$6+0x1>
   140008574:	74 75                	je     1400085eb <.idata$6+0x13>
   140008576:	73 65                	jae    1400085dd <.idata$6+0x5>
   140008578:	72 6d                	jb     1400085e7 <.idata$6+0xf>
   14000857a:	61                   	(bad)
   14000857b:	74 68                	je     1400085e5 <.idata$6+0xd>
   14000857d:	65 72 72             	gs jb  1400085f2 <.idata$6>
	...

0000000140008582 <.idata$6>:
   140008582:	10 00                	adc    BYTE PTR [rax],al
   140008584:	5f                   	pop    rdi
   140008585:	5f                   	pop    rdi
   140008586:	43 5f                	rex.XB pop r15
   140008588:	73 70                	jae    1400085fa <.idata$6+0x8>
   14000858a:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14000858e:	69 63 5f 68 61 6e 64 	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   140008595:	6c                   	ins    BYTE PTR es:[rdi],dx
   140008596:	65 72 00             	gs jb  140008599 <.idata$6+0x17>
	...

000000014000859a <.idata$6>:
   14000859a:	78 04                	js     1400085a0 <.idata$6+0x6>
   14000859c:	6d                   	ins    DWORD PTR es:[rdi],dx
   14000859d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
   14000859f:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
	...

00000001400085a4 <.idata$6>:
   1400085a4:	05 00 5f 5f 70       	add    eax,0x705f5f00
   1400085a9:	5f                   	pop    rdi
   1400085aa:	5f                   	pop    rdi
   1400085ab:	5f                   	pop    rdi
   1400085ac:	61                   	(bad)
   1400085ad:	72 67                	jb     140008616 <.idata$6+0xc>
   1400085af:	63 00                	movsxd eax,DWORD PTR [rax]
	...

00000001400085b2 <.idata$6>:
   1400085b2:	06                   	(bad)
   1400085b3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
   1400085b6:	70 5f                	jo     140008617 <.idata$6+0xd>
   1400085b8:	5f                   	pop    rdi
   1400085b9:	5f                   	pop    rdi
   1400085ba:	61                   	(bad)
   1400085bb:	72 67                	jb     140008624 <.idata$6+0x4>
   1400085bd:	76 00                	jbe    1400085bf <.idata$6+0xd>
	...

00000001400085c0 <.idata$6>:
   1400085c0:	07                   	(bad)
   1400085c1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
   1400085c4:	70 5f                	jo     140008625 <.idata$6+0x5>
   1400085c6:	5f                   	pop    rdi
   1400085c7:	5f                   	pop    rdi
   1400085c8:	77 61                	ja     14000862b <.idata$6+0xb>
   1400085ca:	72 67                	jb     140008633 <.idata$6+0x5>
   1400085cc:	76 00                	jbe    1400085ce <.idata$6>

00000001400085ce <.idata$6>:
   1400085ce:	17                   	(bad)
   1400085cf:	00 5f 63             	add    BYTE PTR [rdi+0x63],bl
   1400085d2:	65 78 69             	gs js  14000863e <.idata$6+0x8>
   1400085d5:	74 00                	je     1400085d7 <.idata$6+0x9>
	...

00000001400085d8 <.idata$6>:
   1400085d8:	19 00                	sbb    DWORD PTR [rax],eax
   1400085da:	5f                   	pop    rdi
   1400085db:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400085de:	66 69 67 75 72 65    	imul   sp,WORD PTR [rdi+0x75],0x6572
   1400085e4:	5f                   	pop    rdi
   1400085e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400085e6:	61                   	(bad)
   1400085e7:	72 72                	jb     14000865b <.idata$6+0x3>
   1400085e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400085ea:	77 5f                	ja     14000864b <.idata$6+0x15>
   1400085ec:	61                   	(bad)
   1400085ed:	72 67                	jb     140008656 <.idata$6+0x20>
   1400085ef:	76 00                	jbe    1400085f1 <.idata$6+0x19>
	...

00000001400085f2 <.idata$6>:
   1400085f2:	1a 00                	sbb    al,BYTE PTR [rax]
   1400085f4:	5f                   	pop    rdi
   1400085f5:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400085f8:	66 69 67 75 72 65    	imul   sp,WORD PTR [rdi+0x75],0x6572
   1400085fe:	5f                   	pop    rdi
   1400085ff:	77 69                	ja     14000866a <.idata$6+0x12>
   140008601:	64 65 5f             	fs gs pop rdi
   140008604:	61                   	(bad)
   140008605:	72 67                	jb     14000866e <.idata$6+0x16>
   140008607:	76 00                	jbe    140008609 <.idata$6+0x17>
	...

000000014000860a <.idata$6>:
   14000860a:	1e                   	(bad)
   14000860b:	00 5f 63             	add    BYTE PTR [rdi+0x63],bl
   14000860e:	72 74                	jb     140008684 <.idata$6>
   140008610:	5f                   	pop    rdi
   140008611:	61                   	(bad)
   140008612:	74 5f                	je     140008673 <.idata$6+0x1b>
   140008614:	71 75                	jno    14000868b <.idata$6+0x7>
   140008616:	69 63 6b 5f 65 78 69 	imul   esp,DWORD PTR [rbx+0x6b],0x6978655f
   14000861d:	74 00                	je     14000861f <.idata$6+0x15>
	...

0000000140008620 <.idata$6>:
   140008620:	1f                   	(bad)
   140008621:	00 5f 63             	add    BYTE PTR [rdi+0x63],bl
   140008624:	72 74                	jb     14000869a <.idata$6+0x6>
   140008626:	5f                   	pop    rdi
   140008627:	61                   	(bad)
   140008628:	74 65                	je     14000868f <.idata$6+0xb>
   14000862a:	78 69                	js     140008695 <.idata$6+0x1>
   14000862c:	74 00                	je     14000862e <.idata$6>

000000014000862e <.idata$6>:
   14000862e:	25 00 5f 65 78       	and    eax,0x78655f00
   140008633:	69 74 00     	imul   esi,DWORD PTR [rax+rax*1+0x36],0x6e695f00
   14000863a:	 

0000000140008636 <.idata$6>:
   140008636:	36 00 5f 69          	ss add BYTE PTR [rdi+0x69],bl
   14000863a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000863b:	69 74 69 61 6c 69 7a 	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140008642:	65 
   140008643:	5f                   	pop    rdi
   140008644:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140008645:	61                   	(bad)
   140008646:	72 72                	jb     1400086ba <.idata$6+0x4>
   140008648:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140008649:	77 5f                	ja     1400086aa <.idata$6+0x16>
   14000864b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   14000864d:	76 69                	jbe    1400086b8 <.idata$6+0x2>
   14000864f:	72 6f                	jb     1400086c0 <.idata$6+0x2>
   140008651:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140008652:	6d                   	ins    DWORD PTR es:[rdi],dx
   140008653:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   140008655:	74 00                	je     140008657 <.idata$6+0x21>
	...

0000000140008658 <.idata$6>:
   140008658:	38 00                	cmp    BYTE PTR [rax],al
   14000865a:	5f                   	pop    rdi
   14000865b:	69 6e 69 74 69 61 6c 	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   140008662:	69 7a 65 5f 77 69 64 	imul   edi,DWORD PTR [rdx+0x65],0x6469775f
   140008669:	65 5f                	gs pop rdi
   14000866b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   14000866d:	76 69                	jbe    1400086d8 <.idata$6+0x8>
   14000866f:	72 6f                	jb     1400086e0 <.idata$6+0x10>
   140008671:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140008672:	6d                   	ins    DWORD PTR es:[rdi],dx
   140008673:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   140008675:	74 00                	je     140008677 <.idata$6+0x1f>
	...

0000000140008678 <.idata$6>:
   140008678:	39 00                	cmp    DWORD PTR [rax],eax
   14000867a:	5f                   	pop    rdi
   14000867b:	69 6e 69 74 74 65 72 	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   140008682:	6d                   	ins    DWORD PTR es:[rdi],dx
	...

0000000140008684 <.idata$6>:
   140008684:	45 00 5f 73          	add    BYTE PTR [r15+0x73],r11b
   140008688:	65 74 5f             	gs je  1400086ea <.idata$6+0x8>
   14000868b:	61                   	(bad)
   14000868c:	70 70                	jo     1400086fe <.idata$6+0xc>
   14000868e:	5f                   	pop    rdi
   14000868f:	74 79                	je     14000870a <.idata$6+0xa>
   140008691:	70 65                	jo     1400086f8 <.idata$6+0x6>
	...

0000000140008694 <.idata$6>:
   140008694:	4b 00 5f 73          	rex.WXB add BYTE PTR [r15+0x73],bl
   140008698:	65 74 5f             	gs je  1400086fa <.idata$6+0x8>
   14000869b:	69 6e 76 61 6c 69 64 	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   1400086a2:	5f                   	pop    rdi
   1400086a3:	70 61                	jo     140008706 <.idata$6+0x6>
   1400086a5:	72 61                	jb     140008708 <.idata$6+0x8>
   1400086a7:	6d                   	ins    DWORD PTR es:[rdi],dx
   1400086a8:	65 74 65             	gs je  140008710 <.idata$6+0x10>
   1400086ab:	72 5f                	jb     14000870c <.idata$6+0xc>
   1400086ad:	68 61 6e 64 6c       	push   0x6c646e61
   1400086b2:	65 72 00             	gs jb  1400086b5 <.idata$6+0x21>
	...

00000001400086b6 <.idata$6>:
   1400086b6:	58                   	pop    rax
   1400086b7:	00 61 62             	add    BYTE PTR [rcx+0x62],ah
   1400086ba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400086bb:	72 74                	jb     140008731 <.idata$6+0x17>
	...

00000001400086be <.idata$6>:
   1400086be:	59                   	pop    rcx
   1400086bf:	00 65 78             	add    BYTE PTR [rbp+0x78],ah
   1400086c2:	69 74 00 00    	imul   esi,DWORD PTR [rax+rax*1+0x0],0x69730067
   1400086c9:	 

00000001400086c6 <.idata$6>:
   1400086c6:	67 00 73 69          	add    BYTE PTR [ebx+0x69],dh
   1400086ca:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   1400086cc:	61                   	(bad)
   1400086cd:	6c                   	ins    BYTE PTR es:[rdi],dx
	...

00000001400086d0 <.idata$6>:
   1400086d0:	01 00                	add    DWORD PTR [rax],eax
   1400086d2:	5f                   	pop    rdi
   1400086d3:	5f                   	pop    rdi
   1400086d4:	61                   	(bad)
   1400086d5:	63 72 74             	movsxd esi,DWORD PTR [rdx+0x74]
   1400086d8:	5f                   	pop    rdi
   1400086d9:	69 6f 62 5f 66 75 6e 	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
   1400086e0:	63 00                	movsxd eax,DWORD PTR [rax]

00000001400086e2 <.idata$6>:
   1400086e2:	02 00                	add    al,BYTE PTR [rax]
   1400086e4:	5f                   	pop    rdi
   1400086e5:	5f                   	pop    rdi
   1400086e6:	70 5f                	jo     140008747 <.idata$6+0x7>
   1400086e8:	5f                   	pop    rdi
   1400086e9:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
   1400086ec:	6d                   	ins    DWORD PTR es:[rdi],dx
   1400086ed:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400086ee:	64 65 00 00          	fs add BYTE PTR gs:[rax],al

00000001400086f2 <.idata$6>:
   1400086f2:	03 00                	add    eax,DWORD PTR [rax]
   1400086f4:	5f                   	pop    rdi
   1400086f5:	5f                   	pop    rdi
   1400086f6:	70 5f                	jo     140008757 <.idata$6+0x3>
   1400086f8:	5f                   	pop    rdi
   1400086f9:	66 6d                	ins    WORD PTR es:[rdi],dx
   1400086fb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400086fc:	64 65 00 00          	fs add BYTE PTR gs:[rax],al

0000000140008700 <.idata$6>:
   140008700:	04 00                	add    al,0x0
   140008702:	5f                   	pop    rdi
   140008703:	5f                   	pop    rdi
   140008704:	73 74                	jae    14000877a <.idata$6+0xa>
   140008706:	64 69 6f 5f 63 6f 6d 	imul   ebp,DWORD PTR fs:[rdi+0x5f],0x6d6d6f63
   14000870d:	6d 
   14000870e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000870f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140008710:	5f                   	pop    rdi
   140008711:	76 66                	jbe    140008779 <.idata$6+0x9>
   140008713:	70 72                	jo     140008787 <.idata$6+0xb>
   140008715:	69 6e 74 66 00   	imul   ebp,DWORD PTR [rsi+0x74],0x80066

000000014000871a <.idata$6>:
   14000871a:	08 00                	or     BYTE PTR [rax],al
   14000871c:	5f                   	pop    rdi
   14000871d:	5f                   	pop    rdi
   14000871e:	73 74                	jae    140008794 <.idata$7>
   140008720:	64 69 6f 5f 63 6f 6d 	imul   ebp,DWORD PTR fs:[rdi+0x5f],0x6d6d6f63
   140008727:	6d 
   140008728:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140008729:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000872a:	5f                   	pop    rdi
   14000872b:	76 66                	jbe    140008793 <.idata$7+0x3>
   14000872d:	77 70                	ja     14000879f <.idata$7+0x3>
   14000872f:	72 69                	jb     14000879a <.idata$7+0x2>
   140008731:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140008732:	74 66                	je     14000879a <.idata$7+0x2>
	...

0000000140008736 <.idata$6>:
   140008736:	a9 00 66 77 72       	test   eax,0x72776600
   14000873b:	69 74 65 00 00   	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x7300a800
   140008742:	 

0000000140008740 <.idata$6>:
   140008740:	a8 00                	test   al,0x0
   140008742:	73 74                	jae    1400087b8 <__lib64_libkernel32_a_iname+0x8>
   140008744:	72 6c                	jb     1400087b2 <__lib64_libkernel32_a_iname+0x2>
   140008746:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
	...

000000014000874a <.idata$6>:
   14000874a:	ab                   	stos   DWORD PTR es:[rdi],eax
   14000874b:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
   14000874e:	72 6e                	jb     1400087be <__lib64_libkernel32_a_iname+0xe>
   140008750:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
	...

0000000140008754 <.idata$6>:
   140008754:	09 00                	or     DWORD PTR [rax],eax
   140008756:	5f                   	pop    rdi
   140008757:	5f                   	pop    rdi
   140008758:	64 61                	fs (bad)
   14000875a:	79 6c                	jns    1400087c8 <__lib64_libapi_ms_win_crt_environment_l1_1_0_a_iname>
   14000875c:	69 67 68 74 00 00  	imul   esp,DWORD PTR [rdi+0x68],0xb000074

0000000140008762 <.idata$6>:
   140008762:	0b 00                	or     eax,DWORD PTR [rax]
   140008764:	5f                   	pop    rdi
   140008765:	5f                   	pop    rdi
   140008766:	74 69                	je     1400087d1 <__lib64_libapi_ms_win_crt_environment_l1_1_0_a_iname+0x9>
   140008768:	6d                   	ins    DWORD PTR es:[rdi],dx
   140008769:	65 7a 6f             	gs jp  1400087db <__lib64_libapi_ms_win_crt_environment_l1_1_0_a_iname+0x13>
   14000876c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000876d:	65 00 00             	add    BYTE PTR gs:[rax],al

0000000140008770 <.idata$6>:
   140008770:	0c 00                	or     al,0x0
   140008772:	5f                   	pop    rdi
   140008773:	5f                   	pop    rdi
   140008774:	74 7a                	je     1400087f0 <.idata$7>
   140008776:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140008777:	61                   	(bad)
   140008778:	6d                   	ins    DWORD PTR es:[rdi],dx
   140008779:	65 00 00             	add    BYTE PTR gs:[rax],al

000000014000877c <.idata$6>:
   14000877c:	3c 00                	cmp    al,0x0
   14000877e:	5f                   	pop    rdi
   14000877f:	74 7a                	je     1400087fb <.idata$7+0x3>
   140008781:	73 65                	jae    1400087e8 <__lib64_libapi_ms_win_crt_environment_l1_1_0_a_iname+0x20>
   140008783:	74 00                	je     140008785 <.idata$6+0x9>
   140008785:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008788 <.idata$7>:
   140008788:	00 80 00 00      	add    BYTE PTR [rax-0x80000000],al

000000014000878c <.idata$7>:
   14000878c:	00 80 00 00      	add    BYTE PTR [rax-0x80000000],al

0000000140008790 <.idata$7>:
   140008790:	00 80 00 00      	add    BYTE PTR [rax-0x80000000],al

0000000140008794 <.idata$7>:
   140008794:	00 80 00 00      	add    BYTE PTR [rax-0x80000000],al

0000000140008798 <.idata$7>:
   140008798:	00 80 00 00      	add    BYTE PTR [rax-0x80000000],al

000000014000879c <.idata$7>:
   14000879c:	00 80 00 00      	add    BYTE PTR [rax-0x80000000],al

00000001400087a0 <.idata$7>:
   1400087a0:	00 80 00 00      	add    BYTE PTR [rax-0x80000000],al

00000001400087a4 <.idata$7>:
   1400087a4:	00 80 00 00      	add    BYTE PTR [rax-0x80000000],al

00000001400087a8 <.idata$7>:
   1400087a8:	00 80 00 00      	add    BYTE PTR [rax-0x80000000],al

00000001400087ac <.idata$7>:
   1400087ac:	00 80 00 00      	add    BYTE PTR [rax+0x454b0000],al

00000001400087b0 <__lib64_libkernel32_a_iname>:
   1400087b0:	4b                   	rex.WXB
   1400087b1:	45 52                	rex.RB push r10
   1400087b3:	4e                   	rex.WRX
   1400087b4:	45                   	rex.RB
   1400087b5:	4c 33 32             	xor    r14,QWORD PTR [rdx]
   1400087b8:	2e 64 6c             	cs fs ins BYTE PTR es:[rdi],dx
   1400087bb:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400087bc:	00 00                	add    BYTE PTR [rax],al
	...

00000001400087c0 <.idata$7>:
   1400087c0:	14 80                	adc    al,0x80
	...

00000001400087c4 <.idata$7>:
   1400087c4:	14 80                	adc    al,0x80
	...

00000001400087c8 <__lib64_libapi_ms_win_crt_environment_l1_1_0_a_iname>:
   1400087c8:	61                   	(bad)
   1400087c9:	70 69                	jo     140008834 <__lib64_libapi_ms_win_crt_math_l1_1_0_a_iname+0x10>
   1400087cb:	2d 6d 73 2d 77       	sub    eax,0x772d736d
   1400087d0:	69 6e 2d 63 72 74 2d 	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   1400087d7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   1400087d9:	76 69                	jbe    140008844 <.idata$7>
   1400087db:	72 6f                	jb     14000884c <__lib64_libapi_ms_win_crt_private_l1_1_0_a_iname>
   1400087dd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400087de:	6d                   	ins    DWORD PTR es:[rdi],dx
   1400087df:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   1400087e1:	74 2d                	je     140008810 <__lib64_libapi_ms_win_crt_heap_l1_1_0_a_iname+0x10>
   1400087e3:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400087e4:	31 2d 31 2d 30 2e    	xor    DWORD PTR [rip+0x2e302d31],ebp        # 16e30b51b <.debug_line_str+0x2e2f9484>
   1400087ea:	64 6c                	fs ins BYTE PTR es:[rdi],dx
   1400087ec:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400087ed:	00 00                	add    BYTE PTR [rax],al
	...

00000001400087f0 <.idata$7>:
   1400087f0:	28 80 00 00      	sub    BYTE PTR [rax-0x7fd80000],al

00000001400087f4 <.idata$7>:
   1400087f4:	28 80 00 00      	sub    BYTE PTR [rax-0x7fd80000],al

00000001400087f8 <.idata$7>:
   1400087f8:	28 80 00 00      	sub    BYTE PTR [rax-0x7fd80000],al

00000001400087fc <.idata$7>:
   1400087fc:	28 80 00 00      	sub    BYTE PTR [rax+0x70610000],al

0000000140008800 <__lib64_libapi_ms_win_crt_heap_l1_1_0_a_iname>:
   140008800:	61                   	(bad)
   140008801:	70 69                	jo     14000886c <__lib64_libapi_ms_win_crt_private_l1_1_0_a_iname+0x20>
   140008803:	2d 6d 73 2d 77       	sub    eax,0x772d736d
   140008808:	69 6e 2d 63 72 74 2d 	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   14000880f:	68 65 61 70 2d       	push   0x2d706165
   140008814:	6c                   	ins    BYTE PTR es:[rdi],dx
   140008815:	31 2d 31 2d 30 2e    	xor    DWORD PTR [rip+0x2e302d31],ebp        # 16e30b54c <.debug_line_str+0x2e2f94b5>
   14000881b:	64 6c                	fs ins BYTE PTR es:[rdi],dx
   14000881d:	6c                   	ins    BYTE PTR es:[rdi],dx
	...

0000000140008820 <.idata$7>:
   140008820:	3c 80                	cmp    al,0x80
	...

0000000140008824 <__lib64_libapi_ms_win_crt_math_l1_1_0_a_iname>:
   140008824:	61                   	(bad)
   140008825:	70 69                	jo     140008890 <.idata$7>
   140008827:	2d 6d 73 2d 77       	sub    eax,0x772d736d
   14000882c:	69 6e 2d 63 72 74 2d 	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   140008833:	6d                   	ins    DWORD PTR es:[rdi],dx
   140008834:	61                   	(bad)
   140008835:	74 68                	je     14000889f <.idata$7+0x3>
   140008837:	2d 6c 31 2d 31       	sub    eax,0x312d316c
   14000883c:	2d 30 2e 64 6c       	sub    eax,0x6c642e30
   140008841:	6c                   	ins    BYTE PTR es:[rdi],dx
	...

0000000140008844 <.idata$7>:
   140008844:	50                   	push   rax
   140008845:	80 00 00             	add    BYTE PTR [rax],0x0

0000000140008848 <.idata$7>:
   140008848:	50                   	push   rax
   140008849:	80 00 00             	add    BYTE PTR [rax],0x0

000000014000884c <__lib64_libapi_ms_win_crt_private_l1_1_0_a_iname>:
   14000884c:	61                   	(bad)
   14000884d:	70 69                	jo     1400088b8 <__lib64_libapi_ms_win_crt_runtime_l1_1_0_a_iname+0x4>
   14000884f:	2d 6d 73 2d 77       	sub    eax,0x772d736d
   140008854:	69 6e 2d 63 72 74 2d 	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   14000885b:	70 72                	jo     1400088cf <__lib64_libapi_ms_win_crt_runtime_l1_1_0_a_iname+0x1b>
   14000885d:	69 76 61 74 65 2d 6c 	imul   esi,DWORD PTR [rsi+0x61],0x6c2d6574
   140008864:	31 2d 31 2d 30 2e    	xor    DWORD PTR [rip+0x2e302d31],ebp        # 16e30b59b <.debug_line_str+0x2e2f9504>
   14000886a:	64 6c                	fs ins BYTE PTR es:[rdi],dx
   14000886c:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000886d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008870 <.idata$7>:
   140008870:	64 80 00 00          	add    BYTE PTR fs:[rax],0x0

0000000140008874 <.idata$7>:
   140008874:	64 80 00 00          	add    BYTE PTR fs:[rax],0x0

0000000140008878 <.idata$7>:
   140008878:	64 80 00 00          	add    BYTE PTR fs:[rax],0x0

000000014000887c <.idata$7>:
   14000887c:	64 80 00 00          	add    BYTE PTR fs:[rax],0x0

0000000140008880 <.idata$7>:
   140008880:	64 80 00 00          	add    BYTE PTR fs:[rax],0x0

0000000140008884 <.idata$7>:
   140008884:	64 80 00 00          	add    BYTE PTR fs:[rax],0x0

0000000140008888 <.idata$7>:
   140008888:	64 80 00 00          	add    BYTE PTR fs:[rax],0x0

000000014000888c <.idata$7>:
   14000888c:	64 80 00 00          	add    BYTE PTR fs:[rax],0x0

0000000140008890 <.idata$7>:
   140008890:	64 80 00 00          	add    BYTE PTR fs:[rax],0x0

0000000140008894 <.idata$7>:
   140008894:	64 80 00 00          	add    BYTE PTR fs:[rax],0x0

0000000140008898 <.idata$7>:
   140008898:	64 80 00 00          	add    BYTE PTR fs:[rax],0x0

000000014000889c <.idata$7>:
   14000889c:	64 80 00 00          	add    BYTE PTR fs:[rax],0x0

00000001400088a0 <.idata$7>:
   1400088a0:	64 80 00 00          	add    BYTE PTR fs:[rax],0x0

00000001400088a4 <.idata$7>:
   1400088a4:	64 80 00 00          	add    BYTE PTR fs:[rax],0x0

00000001400088a8 <.idata$7>:
   1400088a8:	64 80 00 00          	add    BYTE PTR fs:[rax],0x0

00000001400088ac <.idata$7>:
   1400088ac:	64 80 00 00          	add    BYTE PTR fs:[rax],0x0

00000001400088b0 <.idata$7>:
   1400088b0:	64 80 00 00          	add    BYTE PTR fs:[rax],0x0

00000001400088b4 <__lib64_libapi_ms_win_crt_runtime_l1_1_0_a_iname>:
   1400088b4:	61                   	(bad)
   1400088b5:	70 69                	jo     140008920 <__lib64_libapi_ms_win_crt_string_l1_1_0_a_iname+0x8>
   1400088b7:	2d 6d 73 2d 77       	sub    eax,0x772d736d
   1400088bc:	69 6e 2d 63 72 74 2d 	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   1400088c3:	72 75                	jb     14000893a <__lib64_libapi_ms_win_crt_string_l1_1_0_a_iname+0x22>
   1400088c5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400088c6:	74 69                	je     140008931 <__lib64_libapi_ms_win_crt_string_l1_1_0_a_iname+0x19>
   1400088c8:	6d                   	ins    DWORD PTR es:[rdi],dx
   1400088c9:	65 2d 6c 31 2d 31    	gs sub eax,0x312d316c
   1400088cf:	2d 30 2e 64 6c       	sub    eax,0x6c642e30
   1400088d4:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400088d5:	00 00                	add    BYTE PTR [rax],al
	...

00000001400088d8 <.idata$7>:
   1400088d8:	78 80                	js     14000885a <__lib64_libapi_ms_win_crt_private_l1_1_0_a_iname+0xe>
	...

00000001400088dc <.idata$7>:
   1400088dc:	78 80                	js     14000885e <__lib64_libapi_ms_win_crt_private_l1_1_0_a_iname+0x12>
	...

00000001400088e0 <.idata$7>:
   1400088e0:	78 80                	js     140008862 <__lib64_libapi_ms_win_crt_private_l1_1_0_a_iname+0x16>
	...

00000001400088e4 <.idata$7>:
   1400088e4:	78 80                	js     140008866 <__lib64_libapi_ms_win_crt_private_l1_1_0_a_iname+0x1a>
	...

00000001400088e8 <.idata$7>:
   1400088e8:	78 80                	js     14000886a <__lib64_libapi_ms_win_crt_private_l1_1_0_a_iname+0x1e>
	...

00000001400088ec <.idata$7>:
   1400088ec:	78 80                	js     14000886e <__lib64_libapi_ms_win_crt_private_l1_1_0_a_iname+0x22>
	...

00000001400088f0 <__lib64_libapi_ms_win_crt_stdio_l1_1_0_a_iname>:
   1400088f0:	61                   	(bad)
   1400088f1:	70 69                	jo     14000895c <__lib64_libapi_ms_win_crt_time_l1_1_0_a_iname+0x10>
   1400088f3:	2d 6d 73 2d 77       	sub    eax,0x772d736d
   1400088f8:	69 6e 2d 63 72 74 2d 	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   1400088ff:	73 74                	jae    140008975 <__lib64_libapi_ms_win_crt_time_l1_1_0_a_iname+0x29>
   140008901:	64 69 6f 2d 6c 31 2d 	imul   ebp,DWORD PTR fs:[rdi+0x2d],0x312d316c
   140008908:	31 
   140008909:	2d 30 2e 64 6c       	sub    eax,0x6c642e30
   14000890e:	6c                   	ins    BYTE PTR es:[rdi],dx
	...

0000000140008910 <.idata$7>:
   140008910:	8c 80 00 00      	mov    WORD PTR [rax-0x7f740000],es

0000000140008914 <.idata$7>:
   140008914:	8c 80 00 00      	mov    WORD PTR [rax+0x70610000],es

0000000140008918 <__lib64_libapi_ms_win_crt_string_l1_1_0_a_iname>:
   140008918:	61                   	(bad)
   140008919:	70 69                	jo     140008984 <__lib64_libapi_ms_win_crt_time_l1_1_0_a_iname+0x38>
   14000891b:	2d 6d 73 2d 77       	sub    eax,0x772d736d
   140008920:	69 6e 2d 63 72 74 2d 	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   140008927:	73 74                	jae    14000899d <__lib64_libapi_ms_win_crt_time_l1_1_0_a_iname+0x51>
   140008929:	72 69                	jb     140008994 <__lib64_libapi_ms_win_crt_time_l1_1_0_a_iname+0x48>
   14000892b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000892c:	67 2d 6c 31 2d 31    	addr32 sub eax,0x312d316c
   140008932:	2d 30 2e 64 6c       	sub    eax,0x6c642e30
   140008937:	6c                   	ins    BYTE PTR es:[rdi],dx
   140008938:	00 00                	add    BYTE PTR [rax],al
	...

000000014000893c <.idata$7>:
   14000893c:	a0 80 00 00    	movabs al,ds:0xa0000080a0000080
   140008943:	  

0000000140008940 <.idata$7>:
   140008940:	a0 80 00 00    	movabs al,ds:0xa0000080a0000080
   140008947:	  

0000000140008944 <.idata$7>:
   140008944:	a0 80 00 00    	movabs al,ds:0x61000080a0000080
   14000894b:	  

0000000140008948 <.idata$7>:
   140008948:	a0 80 00 00    	movabs al,ds:0x6d2d697061000080
   14000894f:	  

000000014000894c <__lib64_libapi_ms_win_crt_time_l1_1_0_a_iname>:
   14000894c:	61                   	(bad)
   14000894d:	70 69                	jo     1400089b8 <__lib64_libapi_ms_win_crt_time_l1_1_0_a_iname+0x6c>
   14000894f:	2d 6d 73 2d 77       	sub    eax,0x772d736d
   140008954:	69 6e 2d 63 72 74 2d 	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   14000895b:	74 69                	je     1400089c6 <__lib64_libapi_ms_win_crt_time_l1_1_0_a_iname+0x7a>
   14000895d:	6d                   	ins    DWORD PTR es:[rdi],dx
   14000895e:	65 2d 6c 31 2d 31    	gs sub eax,0x312d316c
   140008964:	2d 30 2e 64 6c       	sub    eax,0x6c642e30
   140008969:	6c                   	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

0000000140009000 <___crt_xc_start__>:
	...

0000000140009008 <__mingw_pcppinit>:
   140009008:	30 11                	xor    BYTE PTR [rcx],dl
   14000900a:	00 40 01             	add    BYTE PTR [rax+0x1],al
   14000900d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009010 <__xc_z>:
	...

0000000140009018 <___crt_xc_end__>:
	...

0000000140009020 <__mingw_pcinit>:
   140009020:	10 10                	adc    BYTE PTR [rax],dl
   140009022:	00 40 01             	add    BYTE PTR [rax+0x1],al
   140009025:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009028 <__xi_z>:
	...

0000000140009030 <___crt_xi_end__>:
	...

0000000140009038 <__xl_c>:
   140009038:	20 16                	and    BYTE PTR [rsi],dl
   14000903a:	00 40 01             	add    BYTE PTR [rax+0x1],al
   14000903d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009040 <__xl_d>:
   140009040:	f0 15 00 40 01 00    	lock adc eax,0x14000
	...

0000000140009048 <__xl_z>:
	...

0000000140009050 <___crt_xp_end__>:
	...

0000000140009058 <__xd_z>:
	...

Disassembly of section .tls:

000000014000a000 <___tls_start__>:
	...

000000014000a008 <_tls_end>:
	...

Disassembly of section .reloc:

000000014000b000 <.reloc>:
   14000b000:	00 20                	add    BYTE PTR [rax],ah
   14000b002:	00 00                	add    BYTE PTR [rax],al
   14000b004:	0c 00                	or     al,0x0
   14000b006:	00 00                	add    BYTE PTR [rax],al
   14000b008:	48 aa                	rex.W stos BYTE PTR es:[rdi],al
   14000b00a:	00 00                	add    BYTE PTR [rax],al
   14000b00c:	00 30                	add    BYTE PTR [rax],dh
   14000b00e:	00 00                	add    BYTE PTR [rax],al
   14000b010:	30 00                	xor    BYTE PTR [rax],al
   14000b012:	00 00                	add    BYTE PTR [rax],al
   14000b014:	00 a0 50 a0 60 a0    	add    BYTE PTR [rax-0x5f9f5fb0],ah
   14000b01a:	70 a0                	jo     14000afbc <___tls_end__+0xfac>
   14000b01c:	80 a0 88 a0 90 a0 98 	and    BYTE PTR [rax-0x5f6f5f78],0x98
   14000b023:	a0 a0 a0 a8 a0 b0 a0 	movabs al,ds:0xa0b8a0b0a0a8a0a0
   14000b02a:	b8 a0 
   14000b02c:	c0 a0 c8 a0 d0 a0 e0 	shl    BYTE PTR [rax-0x5f2f5f38],0xe0
   14000b033:	a0 e8 a0 f8 a0 00 a1 	movabs al,ds:0xa100a0f8a0e8
   14000b03a:	00 00 
   14000b03c:	00 40 00             	add    BYTE PTR [rax+0x0],al
   14000b03f:	00 4c 00 00          	add    BYTE PTR [rax+rax*1+0x0],cl
   14000b043:	00 40 a0             	add    BYTE PTR [rax-0x60],al
   14000b046:	60                   	(bad)
   14000b047:	a0 68 a0 70 a0 78 a0 	movabs al,ds:0xa390a078a070a068
   14000b04e:	90 a3 
   14000b050:	a0 a3 b0 a3 c0 a3 d0 	movabs al,ds:0xe0a3d0a3c0a3b0a3
   14000b057:	a3 e0 
   14000b059:	a3 f0 a3 00 a4 10 a4 	movabs ds:0xa420a410a400a3f0,eax
   14000b060:	20 a4 
   14000b062:	30 a4 40 a4 50 a4 60 	xor    BYTE PTR [rax+rax*2+0x60a450a4],ah
   14000b069:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000b06a:	70 a4                	jo     14000b010 <.reloc+0x10>
   14000b06c:	80 a4 90 a4 a0 a4 b0 	and    BYTE PTR [rax+rdx*4-0x4f5b5f5c],0xa4
   14000b073:	a4 
   14000b074:	c0 a4 d0 a4 e0 a4 f0 	shl    BYTE PTR [rax+rdx*8-0xf5b1f5c],0xa4
   14000b07b:	a4 
   14000b07c:	00 a5 10 a5 20 a5    	add    BYTE PTR [rbp-0x5adf5af0],ah
   14000b082:	30 a5 40 a5 50 a5    	xor    BYTE PTR [rbp-0x5aaf5ac0],ah
   14000b088:	00 90 00 00 10 00    	add    BYTE PTR [rax+0x100000],dl
   14000b08e:	00 00                	add    BYTE PTR [rax],al
   14000b090:	08 a0 20 a0 38 a0    	or     BYTE PTR [rax-0x5fc75fe0],ah
   14000b096:	40                   	rex
   14000b097:	a0                   	.byte 0xa0

Disassembly of section .debug_aranges:

000000014000c000 <.debug_aranges>:
   14000c000:	2c 00                	sub    al,0x0
   14000c002:	00 00                	add    BYTE PTR [rax],al
   14000c004:	02 00                	add    al,BYTE PTR [rax]
   14000c006:	00 00                	add    BYTE PTR [rax],al
   14000c008:	00 00                	add    BYTE PTR [rax],al
   14000c00a:	08 00                	or     BYTE PTR [rax],al
   14000c00c:	00 00                	add    BYTE PTR [rax],al
   14000c00e:	00 00                	add    BYTE PTR [rax],al
   14000c010:	90                   	nop
   14000c011:	25 00 40 01 00       	and    eax,0x14000
   14000c016:	00 00                	add    BYTE PTR [rax],al
   14000c018:	32 00                	xor    al,BYTE PTR [rax]
	...

000000014000c030 <.debug_aranges>:
   14000c030:	1c 00                	sbb    al,0x0
   14000c032:	00 00                	add    BYTE PTR [rax],al
   14000c034:	02 00                	add    al,BYTE PTR [rax]
   14000c036:	28 00                	sub    BYTE PTR [rax],al
   14000c038:	00 00                	add    BYTE PTR [rax],al
   14000c03a:	08 00                	or     BYTE PTR [rax],al
	...

Disassembly of section .debug_info:

000000014000d000 <.debug_info>:
   14000d000:	24 00                	and    al,0x0
   14000d002:	00 00                	add    BYTE PTR [rax],al
   14000d004:	05 00 01 08 00       	add    eax,0x80100
   14000d009:	00 00                	add    BYTE PTR [rax],al
   14000d00b:	00 01                	add    BYTE PTR [rcx],al
   14000d00d:	00 00                	add    BYTE PTR [rax],al
   14000d00f:	00 00                	add    BYTE PTR [rax],al
   14000d011:	90                   	nop
   14000d012:	25 00 40 01 00       	and    eax,0x14000
   14000d017:	00 00                	add    BYTE PTR [rax],al
   14000d019:	32 00                	xor    al,BYTE PTR [rax]
   14000d01b:	00 00                	add    BYTE PTR [rax],al
   14000d01d:	00 38                	add    BYTE PTR [rax],bh
   14000d01f:	00 00                	add    BYTE PTR [rax],al
   14000d021:	00 97 00 00 00 01    	add    BYTE PTR [rdi+0x1000000],dl
   14000d027:	80       	xor    BYTE PTR [rcx+0x500000f],0x0

000000014000d028 <.debug_info>:
   14000d028:	b1 0f                	mov    cl,0xf
   14000d02a:	00 00                	add    BYTE PTR [rax],al
   14000d02c:	05 00 01 08 14       	add    eax,0x14080100
   14000d031:	00 00                	add    BYTE PTR [rax],al
   14000d033:	00 07                	add    BYTE PTR [rdi],al
   14000d035:	47                   	rex.RXB
   14000d036:	4e 55                	rex.WRX push rbp
   14000d038:	20 43 31             	and    BYTE PTR [rbx+0x31],al
   14000d03b:	37                   	(bad)
   14000d03c:	20 31                	and    BYTE PTR [rcx],dh
   14000d03e:	33 2e                	xor    ebp,DWORD PTR [rsi]
   14000d040:	32 2e                	xor    ch,BYTE PTR [rsi]
   14000d042:	30 20                	xor    BYTE PTR [rax],ah
   14000d044:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
   14000d049:	65 3d 63 6f 72 65    	gs cmp eax,0x65726f63
   14000d04f:	32 20                	xor    ah,BYTE PTR [rax]
   14000d051:	2d 6d 61 72 63       	sub    eax,0x6372616d
   14000d056:	68 3d 6e 6f 63       	push   0x636f6e3d
   14000d05b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000d05c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000d05d:	61                   	(bad)
   14000d05e:	20 2d 67 20 2d 67    	and    BYTE PTR [rip+0x672d2067],ch        # 1a72df0cb <.debug_line_str+0x672cd034>
   14000d064:	20 2d 67 20 2d 4f    	and    BYTE PTR [rip+0x4f2d2067],ch        # 18f2df0d1 <.debug_line_str+0x4f2cd03a>
   14000d06a:	32 20                	xor    ah,BYTE PTR [rax]
   14000d06c:	2d 4f 32 20 2d       	sub    eax,0x2d20324f
   14000d071:	4f 32 20             	rex.WRXB xor r12b,BYTE PTR [r8]
   14000d074:	2d 66 6e 6f 2d       	sub    eax,0x2d6f6e66
   14000d079:	69 64 65 6e 74 20 2d 	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x662d2074
   14000d080:	66 
   14000d081:	50                   	push   rax
   14000d082:	49                   	rex.WB
   14000d083:	43 20 2d 66 62 75 69 	rex.XB and BYTE PTR [rip+0x69756266],bpl        # 1a97632f0 <.debug_line_str+0x69751259>
   14000d08a:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000d08b:	64 69 6e 67 2d 6c 69 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x62696c2d
   14000d092:	62 
   14000d093:	67 63 63 20          	movsxd esp,DWORD PTR [ebx+0x20]
   14000d097:	2d 66 6e 6f 2d       	sub    eax,0x2d6f6e66
   14000d09c:	73 74                	jae    14000d112 <.debug_info+0xea>
   14000d09e:	61                   	(bad)
   14000d09f:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
   14000d0a2:	70 72                	jo     14000d116 <.debug_info+0xee>
   14000d0a4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000d0a5:	74 65                	je     14000d10c <.debug_info+0xe4>
   14000d0a7:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000d0ab:	00 1d 97 00 00 00    	add    BYTE PTR [rip+0x97],bl        # 14000d148 <.debug_info+0x120>
   14000d0b1:	c4                   	(bad)
   14000d0b2:	00 00                	add    BYTE PTR [rax],al
   14000d0b4:	00 5c 00 00          	add    BYTE PTR [rax+rax*1+0x0],bl
   14000d0b8:	00 02                	add    BYTE PTR [rdx],al
   14000d0ba:	01 06                	add    DWORD PTR [rsi],eax
   14000d0bc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
   14000d0bf:	72 00                	jb     14000d0c1 <.debug_info+0x99>
   14000d0c1:	02 08                	add    cl,BYTE PTR [rax]
   14000d0c3:	07                   	(bad)
   14000d0c4:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000d0c5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000d0c6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000d0c7:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
   14000d0cc:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
   14000d0d0:	73 69                	jae    14000d13b <.debug_info+0x113>
   14000d0d2:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000d0d4:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
   14000d0d9:	74 00                	je     14000d0db <.debug_info+0xb3>
   14000d0db:	02 08                	add    cl,BYTE PTR [rax]
   14000d0dd:	05 6c 6f 6e 67       	add    eax,0x676e6f6c
   14000d0e2:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14000d0e6:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
   14000d0ea:	74 00                	je     14000d0ec <.debug_info+0xc4>
   14000d0ec:	02 02                	add    al,BYTE PTR [rdx]
   14000d0ee:	07                   	(bad)
   14000d0ef:	73 68                	jae    14000d159 <.debug_info+0x131>
   14000d0f1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000d0f2:	72 74                	jb     14000d168 <.debug_info+0x140>
   14000d0f4:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
   14000d0f7:	73 69                	jae    14000d162 <.debug_info+0x13a>
   14000d0f9:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000d0fb:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
   14000d100:	74 00                	je     14000d102 <.debug_info+0xda>
   14000d102:	02 04 05 69 6e 74 00 	add    al,BYTE PTR [rax*1+0x746e69]
   14000d109:	02 04 05 6c 6f 6e 67 	add    al,BYTE PTR [rax*1+0x676e6f6c]
   14000d110:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
   14000d113:	74 00                	je     14000d115 <.debug_info+0xed>
   14000d115:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
   14000d118:	75 6e                	jne    14000d188 <.debug_info+0x160>
   14000d11a:	73 69                	jae    14000d185 <.debug_info+0x15d>
   14000d11c:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000d11e:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
   14000d123:	74 00                	je     14000d125 <.debug_info+0xfd>
   14000d125:	02 10                	add    dl,BYTE PTR [rax]
   14000d127:	04 6c                	add    al,0x6c
   14000d129:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000d12a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000d12b:	67 20 64 6f 75       	and    BYTE PTR [edi+ebp*2+0x75],ah
   14000d130:	62                   	(bad)
   14000d131:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000d132:	65 00 02             	add    BYTE PTR gs:[rdx],al
   14000d135:	01 08                	add    DWORD PTR [rax],ecx
   14000d137:	75 6e                	jne    14000d1a7 <.debug_info+0x17f>
   14000d139:	73 69                	jae    14000d1a4 <.debug_info+0x17c>
   14000d13b:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000d13d:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
   14000d142:	61                   	(bad)
   14000d143:	72 00                	jb     14000d145 <.debug_info+0x11d>
   14000d145:	02 08                	add    cl,BYTE PTR [rax]
   14000d147:	04 64                	add    al,0x64
   14000d149:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000d14a:	75 62                	jne    14000d1ae <.debug_info+0x186>
   14000d14c:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000d14d:	65 00 02             	add    BYTE PTR gs:[rdx],al
   14000d150:	04 04                	add    al,0x4
   14000d152:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
   14000d154:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000d155:	61                   	(bad)
   14000d156:	74 00                	je     14000d158 <.debug_info+0x130>
   14000d158:	08 08                	or     BYTE PTR [rax],cl
   14000d15a:	36 01 00             	ss add DWORD PTR [rax],eax
   14000d15d:	00 09                	add    BYTE PTR [rcx],cl
   14000d15f:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
   14000d162:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000d163:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000d164:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000d165:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
   14000d169:	73 69                	jae    14000d1d4 <.debug_info+0x1ac>
   14000d16b:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000d16d:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
   14000d172:	74 00                	je     14000d174 <.debug_info+0x14c>
   14000d174:	02 02                	add    al,BYTE PTR [rdx]
   14000d176:	05 73 68 6f 72       	add    eax,0x726f6873
   14000d17b:	74 20                	je     14000d19d <.debug_info+0x175>
   14000d17d:	69 6e 74 00 03 69 78 	imul   ebp,DWORD PTR [rsi+0x74],0x78690300
   14000d184:	38 36                	cmp    BYTE PTR [rsi],dh
   14000d186:	5f                   	pop    rdi
   14000d187:	74 75                	je     14000d1fe <.debug_info+0x1d6>
   14000d189:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000d18a:	65 5f                	gs pop rdi
   14000d18c:	69 6e 64 69 63 65 73 	imul   ebp,DWORD PTR [rsi+0x64],0x73656369
   14000d193:	00 ed                	add    ch,ch
   14000d195:	00 00                	add    BYTE PTR [rax],al
   14000d197:	00 21                	add    BYTE PTR [rcx],ah
   14000d199:	01 03                	add    DWORD PTR [rbx],eax
   14000d19b:	0e                   	(bad)
   14000d19c:	00 00                	add    BYTE PTR [rax],al
   14000d19e:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d1a1:	36 5f                	ss pop rdi
   14000d1a3:	54                   	push   rsp
   14000d1a4:	55                   	push   rbp
   14000d1a5:	4e                   	rex.WRX
   14000d1a6:	45 5f                	rex.RB pop r15
   14000d1a8:	53                   	push   rbx
   14000d1a9:	43                   	rex.XB
   14000d1aa:	48                   	rex.W
   14000d1ab:	45                   	rex.RB
   14000d1ac:	44 55                	rex.R push rbp
   14000d1ae:	4c                   	rex.WR
   14000d1af:	45 00 00             	add    BYTE PTR [r8],r8b
   14000d1b2:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d1b5:	36 5f                	ss pop rdi
   14000d1b7:	54                   	push   rsp
   14000d1b8:	55                   	push   rbp
   14000d1b9:	4e                   	rex.WRX
   14000d1ba:	45 5f                	rex.RB pop r15
   14000d1bc:	50                   	push   rax
   14000d1bd:	41 52                	push   r10
   14000d1bf:	54                   	push   rsp
   14000d1c0:	49                   	rex.WB
   14000d1c1:	41                   	rex.B
   14000d1c2:	4c 5f                	rex.WR pop rdi
   14000d1c4:	52                   	push   rdx
   14000d1c5:	45                   	rex.RB
   14000d1c6:	47 5f                	rex.RXB pop r15
   14000d1c8:	44                   	rex.R
   14000d1c9:	45 50                	rex.RB push r8
   14000d1cb:	45                   	rex.RB
   14000d1cc:	4e                   	rex.WRX
   14000d1cd:	44                   	rex.R
   14000d1ce:	45                   	rex.RB
   14000d1cf:	4e                   	rex.WRX
   14000d1d0:	43 59                	rex.XB pop r9
   14000d1d2:	00 01                	add    BYTE PTR [rcx],al
   14000d1d4:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d1d7:	36 5f                	ss pop rdi
   14000d1d9:	54                   	push   rsp
   14000d1da:	55                   	push   rbp
   14000d1db:	4e                   	rex.WRX
   14000d1dc:	45 5f                	rex.RB pop r15
   14000d1de:	53                   	push   rbx
   14000d1df:	53                   	push   rbx
   14000d1e0:	45 5f                	rex.RB pop r15
   14000d1e2:	50                   	push   rax
   14000d1e3:	41 52                	push   r10
   14000d1e5:	54                   	push   rsp
   14000d1e6:	49                   	rex.WB
   14000d1e7:	41                   	rex.B
   14000d1e8:	4c 5f                	rex.WR pop rdi
   14000d1ea:	52                   	push   rdx
   14000d1eb:	45                   	rex.RB
   14000d1ec:	47 5f                	rex.RXB pop r15
   14000d1ee:	44                   	rex.R
   14000d1ef:	45 50                	rex.RB push r8
   14000d1f1:	45                   	rex.RB
   14000d1f2:	4e                   	rex.WRX
   14000d1f3:	44                   	rex.R
   14000d1f4:	45                   	rex.RB
   14000d1f5:	4e                   	rex.WRX
   14000d1f6:	43 59                	rex.XB pop r9
   14000d1f8:	00 02                	add    BYTE PTR [rdx],al
   14000d1fa:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d1fd:	36 5f                	ss pop rdi
   14000d1ff:	54                   	push   rsp
   14000d200:	55                   	push   rbp
   14000d201:	4e                   	rex.WRX
   14000d202:	45 5f                	rex.RB pop r15
   14000d204:	53                   	push   rbx
   14000d205:	53                   	push   rbx
   14000d206:	45 5f                	rex.RB pop r15
   14000d208:	50                   	push   rax
   14000d209:	41 52                	push   r10
   14000d20b:	54                   	push   rsp
   14000d20c:	49                   	rex.WB
   14000d20d:	41                   	rex.B
   14000d20e:	4c 5f                	rex.WR pop rdi
   14000d210:	52                   	push   rdx
   14000d211:	45                   	rex.RB
   14000d212:	47 5f                	rex.RXB pop r15
   14000d214:	46 50                	rex.RX push rax
   14000d216:	5f                   	pop    rdi
   14000d217:	43                   	rex.XB
   14000d218:	4f                   	rex.WRXB
   14000d219:	4e 56                	rex.WRX push rsi
   14000d21b:	45 52                	rex.RB push r10
   14000d21d:	54                   	push   rsp
   14000d21e:	53                   	push   rbx
   14000d21f:	5f                   	pop    rdi
   14000d220:	44                   	rex.R
   14000d221:	45 50                	rex.RB push r8
   14000d223:	45                   	rex.RB
   14000d224:	4e                   	rex.WRX
   14000d225:	44                   	rex.R
   14000d226:	45                   	rex.RB
   14000d227:	4e                   	rex.WRX
   14000d228:	43 59                	rex.XB pop r9
   14000d22a:	00 03                	add    BYTE PTR [rbx],al
   14000d22c:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d22f:	36 5f                	ss pop rdi
   14000d231:	54                   	push   rsp
   14000d232:	55                   	push   rbp
   14000d233:	4e                   	rex.WRX
   14000d234:	45 5f                	rex.RB pop r15
   14000d236:	53                   	push   rbx
   14000d237:	53                   	push   rbx
   14000d238:	45 5f                	rex.RB pop r15
   14000d23a:	50                   	push   rax
   14000d23b:	41 52                	push   r10
   14000d23d:	54                   	push   rsp
   14000d23e:	49                   	rex.WB
   14000d23f:	41                   	rex.B
   14000d240:	4c 5f                	rex.WR pop rdi
   14000d242:	52                   	push   rdx
   14000d243:	45                   	rex.RB
   14000d244:	47 5f                	rex.RXB pop r15
   14000d246:	43                   	rex.XB
   14000d247:	4f                   	rex.WRXB
   14000d248:	4e 56                	rex.WRX push rsi
   14000d24a:	45 52                	rex.RB push r10
   14000d24c:	54                   	push   rsp
   14000d24d:	53                   	push   rbx
   14000d24e:	5f                   	pop    rdi
   14000d24f:	44                   	rex.R
   14000d250:	45 50                	rex.RB push r8
   14000d252:	45                   	rex.RB
   14000d253:	4e                   	rex.WRX
   14000d254:	44                   	rex.R
   14000d255:	45                   	rex.RB
   14000d256:	4e                   	rex.WRX
   14000d257:	43 59                	rex.XB pop r9
   14000d259:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
   14000d25c:	58                   	pop    rax
   14000d25d:	38 36                	cmp    BYTE PTR [rsi],dh
   14000d25f:	5f                   	pop    rdi
   14000d260:	54                   	push   rsp
   14000d261:	55                   	push   rbp
   14000d262:	4e                   	rex.WRX
   14000d263:	45 5f                	rex.RB pop r15
   14000d265:	44                   	rex.R
   14000d266:	45 53                	rex.RB push r11
   14000d268:	54                   	push   rsp
   14000d269:	5f                   	pop    rdi
   14000d26a:	46                   	rex.RX
   14000d26b:	41                   	rex.B
   14000d26c:	4c 53                	rex.WR push rbx
   14000d26e:	45 5f                	rex.RB pop r15
   14000d270:	44                   	rex.R
   14000d271:	45 50                	rex.RB push r8
   14000d273:	5f                   	pop    rdi
   14000d274:	46                   	rex.RX
   14000d275:	4f 52                	rex.WRXB push r10
   14000d277:	5f                   	pop    rdi
   14000d278:	47                   	rex.RXB
   14000d279:	4c                   	rex.WR
   14000d27a:	43 00 05 01 58 38 36 	rex.XB add BYTE PTR [rip+0x36385801],al        # 176392a82 <.debug_line_str+0x363809eb>
   14000d281:	5f                   	pop    rdi
   14000d282:	54                   	push   rsp
   14000d283:	55                   	push   rbp
   14000d284:	4e                   	rex.WRX
   14000d285:	45 5f                	rex.RB pop r15
   14000d287:	53                   	push   rbx
   14000d288:	53                   	push   rbx
   14000d289:	45 5f                	rex.RB pop r15
   14000d28b:	53                   	push   rbx
   14000d28c:	50                   	push   rax
   14000d28d:	4c                   	rex.WR
   14000d28e:	49 54                	rex.WB push r12
   14000d290:	5f                   	pop    rdi
   14000d291:	52                   	push   rdx
   14000d292:	45                   	rex.RB
   14000d293:	47 53                	rex.RXB push r11
   14000d295:	00 06                	add    BYTE PTR [rsi],al
   14000d297:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d29a:	36 5f                	ss pop rdi
   14000d29c:	54                   	push   rsp
   14000d29d:	55                   	push   rbp
   14000d29e:	4e                   	rex.WRX
   14000d29f:	45 5f                	rex.RB pop r15
   14000d2a1:	50                   	push   rax
   14000d2a2:	41 52                	push   r10
   14000d2a4:	54                   	push   rsp
   14000d2a5:	49                   	rex.WB
   14000d2a6:	41                   	rex.B
   14000d2a7:	4c 5f                	rex.WR pop rdi
   14000d2a9:	46                   	rex.RX
   14000d2aa:	4c                   	rex.WR
   14000d2ab:	41                   	rex.B
   14000d2ac:	47 5f                	rex.RXB pop r15
   14000d2ae:	52                   	push   rdx
   14000d2af:	45                   	rex.RB
   14000d2b0:	47 5f                	rex.RXB pop r15
   14000d2b2:	53                   	push   rbx
   14000d2b3:	54                   	push   rsp
   14000d2b4:	41                   	rex.B
   14000d2b5:	4c                   	rex.WR
   14000d2b6:	4c 00 07             	rex.WR add BYTE PTR [rdi],r8b
   14000d2b9:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d2bc:	36 5f                	ss pop rdi
   14000d2be:	54                   	push   rsp
   14000d2bf:	55                   	push   rbp
   14000d2c0:	4e                   	rex.WRX
   14000d2c1:	45 5f                	rex.RB pop r15
   14000d2c3:	4d                   	rex.WRB
   14000d2c4:	4f 56                	rex.WRXB push r14
   14000d2c6:	58                   	pop    rax
   14000d2c7:	00 08                	add    BYTE PTR [rax],cl
   14000d2c9:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d2cc:	36 5f                	ss pop rdi
   14000d2ce:	54                   	push   rsp
   14000d2cf:	55                   	push   rbp
   14000d2d0:	4e                   	rex.WRX
   14000d2d1:	45 5f                	rex.RB pop r15
   14000d2d3:	4d                   	rex.WRB
   14000d2d4:	45                   	rex.RB
   14000d2d5:	4d                   	rex.WRB
   14000d2d6:	4f 52                	rex.WRXB push r10
   14000d2d8:	59                   	pop    rcx
   14000d2d9:	5f                   	pop    rdi
   14000d2da:	4d                   	rex.WRB
   14000d2db:	49 53                	rex.WB push r11
   14000d2dd:	4d                   	rex.WRB
   14000d2de:	41 54                	push   r12
   14000d2e0:	43                   	rex.XB
   14000d2e1:	48 5f                	rex.W pop rdi
   14000d2e3:	53                   	push   rbx
   14000d2e4:	54                   	push   rsp
   14000d2e5:	41                   	rex.B
   14000d2e6:	4c                   	rex.WR
   14000d2e7:	4c 00 09             	rex.WR add BYTE PTR [rcx],r9b
   14000d2ea:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d2ed:	36 5f                	ss pop rdi
   14000d2ef:	54                   	push   rsp
   14000d2f0:	55                   	push   rbp
   14000d2f1:	4e                   	rex.WRX
   14000d2f2:	45 5f                	rex.RB pop r15
   14000d2f4:	46 55                	rex.RX push rbp
   14000d2f6:	53                   	push   rbx
   14000d2f7:	45 5f                	rex.RB pop r15
   14000d2f9:	43                   	rex.XB
   14000d2fa:	4d 50                	rex.WRB push r8
   14000d2fc:	5f                   	pop    rdi
   14000d2fd:	41                   	rex.B
   14000d2fe:	4e                   	rex.WRX
   14000d2ff:	44 5f                	rex.R pop rdi
   14000d301:	42 52                	rex.X push rdx
   14000d303:	41                   	rex.B
   14000d304:	4e                   	rex.WRX
   14000d305:	43                   	rex.XB
   14000d306:	48 5f                	rex.W pop rdi
   14000d308:	33 32                	xor    esi,DWORD PTR [rdx]
   14000d30a:	00 0a                	add    BYTE PTR [rdx],cl
   14000d30c:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d30f:	36 5f                	ss pop rdi
   14000d311:	54                   	push   rsp
   14000d312:	55                   	push   rbp
   14000d313:	4e                   	rex.WRX
   14000d314:	45 5f                	rex.RB pop r15
   14000d316:	46 55                	rex.RX push rbp
   14000d318:	53                   	push   rbx
   14000d319:	45 5f                	rex.RB pop r15
   14000d31b:	43                   	rex.XB
   14000d31c:	4d 50                	rex.WRB push r8
   14000d31e:	5f                   	pop    rdi
   14000d31f:	41                   	rex.B
   14000d320:	4e                   	rex.WRX
   14000d321:	44 5f                	rex.R pop rdi
   14000d323:	42 52                	rex.X push rdx
   14000d325:	41                   	rex.B
   14000d326:	4e                   	rex.WRX
   14000d327:	43                   	rex.XB
   14000d328:	48 5f                	rex.W pop rdi
   14000d32a:	36 34 00             	ss xor al,0x0
   14000d32d:	0b 01                	or     eax,DWORD PTR [rcx]
   14000d32f:	58                   	pop    rax
   14000d330:	38 36                	cmp    BYTE PTR [rsi],dh
   14000d332:	5f                   	pop    rdi
   14000d333:	54                   	push   rsp
   14000d334:	55                   	push   rbp
   14000d335:	4e                   	rex.WRX
   14000d336:	45 5f                	rex.RB pop r15
   14000d338:	46 55                	rex.RX push rbp
   14000d33a:	53                   	push   rbx
   14000d33b:	45 5f                	rex.RB pop r15
   14000d33d:	43                   	rex.XB
   14000d33e:	4d 50                	rex.WRB push r8
   14000d340:	5f                   	pop    rdi
   14000d341:	41                   	rex.B
   14000d342:	4e                   	rex.WRX
   14000d343:	44 5f                	rex.R pop rdi
   14000d345:	42 52                	rex.X push rdx
   14000d347:	41                   	rex.B
   14000d348:	4e                   	rex.WRX
   14000d349:	43                   	rex.XB
   14000d34a:	48 5f                	rex.W pop rdi
   14000d34c:	53                   	push   rbx
   14000d34d:	4f                   	rex.WRXB
   14000d34e:	46                   	rex.RX
   14000d34f:	4c                   	rex.WR
   14000d350:	41                   	rex.B
   14000d351:	47 53                	rex.RXB push r11
   14000d353:	00 0c 01             	add    BYTE PTR [rcx+rax*1],cl
   14000d356:	58                   	pop    rax
   14000d357:	38 36                	cmp    BYTE PTR [rsi],dh
   14000d359:	5f                   	pop    rdi
   14000d35a:	54                   	push   rsp
   14000d35b:	55                   	push   rbp
   14000d35c:	4e                   	rex.WRX
   14000d35d:	45 5f                	rex.RB pop r15
   14000d35f:	46 55                	rex.RX push rbp
   14000d361:	53                   	push   rbx
   14000d362:	45 5f                	rex.RB pop r15
   14000d364:	41                   	rex.B
   14000d365:	4c 55                	rex.WR push rbp
   14000d367:	5f                   	pop    rdi
   14000d368:	41                   	rex.B
   14000d369:	4e                   	rex.WRX
   14000d36a:	44 5f                	rex.R pop rdi
   14000d36c:	42 52                	rex.X push rdx
   14000d36e:	41                   	rex.B
   14000d36f:	4e                   	rex.WRX
   14000d370:	43                   	rex.XB
   14000d371:	48 00 0d 01 58 38 36 	rex.W add BYTE PTR [rip+0x36385801],cl        # 176392b79 <.debug_line_str+0x36380ae2>
   14000d378:	5f                   	pop    rdi
   14000d379:	54                   	push   rsp
   14000d37a:	55                   	push   rbp
   14000d37b:	4e                   	rex.WRX
   14000d37c:	45 5f                	rex.RB pop r15
   14000d37e:	41                   	rex.B
   14000d37f:	43                   	rex.XB
   14000d380:	43 55                	rex.XB push r13
   14000d382:	4d 55                	rex.WRB push r13
   14000d384:	4c                   	rex.WR
   14000d385:	41 54                	push   r12
   14000d387:	45 5f                	rex.RB pop r15
   14000d389:	4f 55                	rex.WRXB push r13
   14000d38b:	54                   	push   rsp
   14000d38c:	47                   	rex.RXB
   14000d38d:	4f                   	rex.WRXB
   14000d38e:	49                   	rex.WB
   14000d38f:	4e                   	rex.WRX
   14000d390:	47 5f                	rex.RXB pop r15
   14000d392:	41 52                	push   r10
   14000d394:	47 53                	rex.RXB push r11
   14000d396:	00 0e                	add    BYTE PTR [rsi],cl
   14000d398:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d39b:	36 5f                	ss pop rdi
   14000d39d:	54                   	push   rsp
   14000d39e:	55                   	push   rbp
   14000d39f:	4e                   	rex.WRX
   14000d3a0:	45 5f                	rex.RB pop r15
   14000d3a2:	50                   	push   rax
   14000d3a3:	52                   	push   rdx
   14000d3a4:	4f                   	rex.WRXB
   14000d3a5:	4c                   	rex.WR
   14000d3a6:	4f                   	rex.WRXB
   14000d3a7:	47 55                	rex.RXB push r13
   14000d3a9:	45 5f                	rex.RB pop r15
   14000d3ab:	55                   	push   rbp
   14000d3ac:	53                   	push   rbx
   14000d3ad:	49                   	rex.WB
   14000d3ae:	4e                   	rex.WRX
   14000d3af:	47 5f                	rex.RXB pop r15
   14000d3b1:	4d                   	rex.WRB
   14000d3b2:	4f 56                	rex.WRXB push r14
   14000d3b4:	45 00 0f             	add    BYTE PTR [r15],r9b
   14000d3b7:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d3ba:	36 5f                	ss pop rdi
   14000d3bc:	54                   	push   rsp
   14000d3bd:	55                   	push   rbp
   14000d3be:	4e                   	rex.WRX
   14000d3bf:	45 5f                	rex.RB pop r15
   14000d3c1:	45 50                	rex.RB push r8
   14000d3c3:	49                   	rex.WB
   14000d3c4:	4c                   	rex.WR
   14000d3c5:	4f                   	rex.WRXB
   14000d3c6:	47 55                	rex.RXB push r13
   14000d3c8:	45 5f                	rex.RB pop r15
   14000d3ca:	55                   	push   rbp
   14000d3cb:	53                   	push   rbx
   14000d3cc:	49                   	rex.WB
   14000d3cd:	4e                   	rex.WRX
   14000d3ce:	47 5f                	rex.RXB pop r15
   14000d3d0:	4d                   	rex.WRB
   14000d3d1:	4f 56                	rex.WRXB push r14
   14000d3d3:	45 00 10             	add    BYTE PTR [r8],r10b
   14000d3d6:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d3d9:	36 5f                	ss pop rdi
   14000d3db:	54                   	push   rsp
   14000d3dc:	55                   	push   rbp
   14000d3dd:	4e                   	rex.WRX
   14000d3de:	45 5f                	rex.RB pop r15
   14000d3e0:	55                   	push   rbp
   14000d3e1:	53                   	push   rbx
   14000d3e2:	45 5f                	rex.RB pop r15
   14000d3e4:	4c                   	rex.WR
   14000d3e5:	45                   	rex.RB
   14000d3e6:	41 56                	push   r14
   14000d3e8:	45 00 11             	add    BYTE PTR [r9],r10b
   14000d3eb:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d3ee:	36 5f                	ss pop rdi
   14000d3f0:	54                   	push   rsp
   14000d3f1:	55                   	push   rbp
   14000d3f2:	4e                   	rex.WRX
   14000d3f3:	45 5f                	rex.RB pop r15
   14000d3f5:	50                   	push   rax
   14000d3f6:	55                   	push   rbp
   14000d3f7:	53                   	push   rbx
   14000d3f8:	48 5f                	rex.W pop rdi
   14000d3fa:	4d                   	rex.WRB
   14000d3fb:	45                   	rex.RB
   14000d3fc:	4d                   	rex.WRB
   14000d3fd:	4f 52                	rex.WRXB push r10
   14000d3ff:	59                   	pop    rcx
   14000d400:	00 12                	add    BYTE PTR [rdx],dl
   14000d402:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d405:	36 5f                	ss pop rdi
   14000d407:	54                   	push   rsp
   14000d408:	55                   	push   rbp
   14000d409:	4e                   	rex.WRX
   14000d40a:	45 5f                	rex.RB pop r15
   14000d40c:	53                   	push   rbx
   14000d40d:	49                   	rex.WB
   14000d40e:	4e                   	rex.WRX
   14000d40f:	47                   	rex.RXB
   14000d410:	4c                   	rex.WR
   14000d411:	45 5f                	rex.RB pop r15
   14000d413:	50                   	push   rax
   14000d414:	55                   	push   rbp
   14000d415:	53                   	push   rbx
   14000d416:	48 00 13             	rex.W add BYTE PTR [rbx],dl
   14000d419:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d41c:	36 5f                	ss pop rdi
   14000d41e:	54                   	push   rsp
   14000d41f:	55                   	push   rbp
   14000d420:	4e                   	rex.WRX
   14000d421:	45 5f                	rex.RB pop r15
   14000d423:	44                   	rex.R
   14000d424:	4f 55                	rex.WRXB push r13
   14000d426:	42                   	rex.X
   14000d427:	4c                   	rex.WR
   14000d428:	45 5f                	rex.RB pop r15
   14000d42a:	50                   	push   rax
   14000d42b:	55                   	push   rbp
   14000d42c:	53                   	push   rbx
   14000d42d:	48 00 14 01          	rex.W add BYTE PTR [rcx+rax*1],dl
   14000d431:	58                   	pop    rax
   14000d432:	38 36                	cmp    BYTE PTR [rsi],dh
   14000d434:	5f                   	pop    rdi
   14000d435:	54                   	push   rsp
   14000d436:	55                   	push   rbp
   14000d437:	4e                   	rex.WRX
   14000d438:	45 5f                	rex.RB pop r15
   14000d43a:	53                   	push   rbx
   14000d43b:	49                   	rex.WB
   14000d43c:	4e                   	rex.WRX
   14000d43d:	47                   	rex.RXB
   14000d43e:	4c                   	rex.WR
   14000d43f:	45 5f                	rex.RB pop r15
   14000d441:	50                   	push   rax
   14000d442:	4f 50                	rex.WRXB push r8
   14000d444:	00 15 01 58 38 36    	add    BYTE PTR [rip+0x36385801],dl        # 176392c4b <.debug_line_str+0x36380bb4>
   14000d44a:	5f                   	pop    rdi
   14000d44b:	54                   	push   rsp
   14000d44c:	55                   	push   rbp
   14000d44d:	4e                   	rex.WRX
   14000d44e:	45 5f                	rex.RB pop r15
   14000d450:	44                   	rex.R
   14000d451:	4f 55                	rex.WRXB push r13
   14000d453:	42                   	rex.X
   14000d454:	4c                   	rex.WR
   14000d455:	45 5f                	rex.RB pop r15
   14000d457:	50                   	push   rax
   14000d458:	4f 50                	rex.WRXB push r8
   14000d45a:	00 16                	add    BYTE PTR [rsi],dl
   14000d45c:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d45f:	36 5f                	ss pop rdi
   14000d461:	54                   	push   rsp
   14000d462:	55                   	push   rbp
   14000d463:	4e                   	rex.WRX
   14000d464:	45 5f                	rex.RB pop r15
   14000d466:	50                   	push   rax
   14000d467:	41                   	rex.B
   14000d468:	44 5f                	rex.R pop rdi
   14000d46a:	53                   	push   rbx
   14000d46b:	48                   	rex.W
   14000d46c:	4f 52                	rex.WRXB push r10
   14000d46e:	54                   	push   rsp
   14000d46f:	5f                   	pop    rdi
   14000d470:	46 55                	rex.RX push rbp
   14000d472:	4e                   	rex.WRX
   14000d473:	43 54                	rex.XB push r12
   14000d475:	49                   	rex.WB
   14000d476:	4f                   	rex.WRXB
   14000d477:	4e 00 17             	rex.WRX add BYTE PTR [rdi],r10b
   14000d47a:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d47d:	36 5f                	ss pop rdi
   14000d47f:	54                   	push   rsp
   14000d480:	55                   	push   rbp
   14000d481:	4e                   	rex.WRX
   14000d482:	45 5f                	rex.RB pop r15
   14000d484:	50                   	push   rax
   14000d485:	41                   	rex.B
   14000d486:	44 5f                	rex.R pop rdi
   14000d488:	52                   	push   rdx
   14000d489:	45 54                	rex.RB push r12
   14000d48b:	55                   	push   rbp
   14000d48c:	52                   	push   rdx
   14000d48d:	4e 53                	rex.WRX push rbx
   14000d48f:	00 18                	add    BYTE PTR [rax],bl
   14000d491:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d494:	36 5f                	ss pop rdi
   14000d496:	54                   	push   rsp
   14000d497:	55                   	push   rbp
   14000d498:	4e                   	rex.WRX
   14000d499:	45 5f                	rex.RB pop r15
   14000d49b:	46                   	rex.RX
   14000d49c:	4f 55                	rex.WRXB push r13
   14000d49e:	52                   	push   rdx
   14000d49f:	5f                   	pop    rdi
   14000d4a0:	4a 55                	rex.WX push rbp
   14000d4a2:	4d 50                	rex.WRB push r8
   14000d4a4:	5f                   	pop    rdi
   14000d4a5:	4c                   	rex.WR
   14000d4a6:	49                   	rex.WB
   14000d4a7:	4d                   	rex.WRB
   14000d4a8:	49 54                	rex.WB push r12
   14000d4aa:	00 19                	add    BYTE PTR [rcx],bl
   14000d4ac:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d4af:	36 5f                	ss pop rdi
   14000d4b1:	54                   	push   rsp
   14000d4b2:	55                   	push   rbp
   14000d4b3:	4e                   	rex.WRX
   14000d4b4:	45 5f                	rex.RB pop r15
   14000d4b6:	53                   	push   rbx
   14000d4b7:	4f                   	rex.WRXB
   14000d4b8:	46 54                	rex.RX push rsp
   14000d4ba:	57                   	push   rdi
   14000d4bb:	41 52                	push   r10
   14000d4bd:	45 5f                	rex.RB pop r15
   14000d4bf:	50                   	push   rax
   14000d4c0:	52                   	push   rdx
   14000d4c1:	45                   	rex.RB
   14000d4c2:	46                   	rex.RX
   14000d4c3:	45 54                	rex.RB push r12
   14000d4c5:	43                   	rex.XB
   14000d4c6:	48                   	rex.W
   14000d4c7:	49                   	rex.WB
   14000d4c8:	4e                   	rex.WRX
   14000d4c9:	47 5f                	rex.RXB pop r15
   14000d4cb:	42                   	rex.X
   14000d4cc:	45                   	rex.RB
   14000d4cd:	4e                   	rex.WRX
   14000d4ce:	45                   	rex.RB
   14000d4cf:	46                   	rex.RX
   14000d4d0:	49                   	rex.WB
   14000d4d1:	43                   	rex.XB
   14000d4d2:	49                   	rex.WB
   14000d4d3:	41                   	rex.B
   14000d4d4:	4c 00 1a             	rex.WR add BYTE PTR [rdx],r11b
   14000d4d7:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d4da:	36 5f                	ss pop rdi
   14000d4dc:	54                   	push   rsp
   14000d4dd:	55                   	push   rbp
   14000d4de:	4e                   	rex.WRX
   14000d4df:	45 5f                	rex.RB pop r15
   14000d4e1:	4c                   	rex.WR
   14000d4e2:	43 50                	rex.XB push r8
   14000d4e4:	5f                   	pop    rdi
   14000d4e5:	53                   	push   rbx
   14000d4e6:	54                   	push   rsp
   14000d4e7:	41                   	rex.B
   14000d4e8:	4c                   	rex.WR
   14000d4e9:	4c 00 1b             	rex.WR add BYTE PTR [rbx],r11b
   14000d4ec:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d4ef:	36 5f                	ss pop rdi
   14000d4f1:	54                   	push   rsp
   14000d4f2:	55                   	push   rbp
   14000d4f3:	4e                   	rex.WRX
   14000d4f4:	45 5f                	rex.RB pop r15
   14000d4f6:	52                   	push   rdx
   14000d4f7:	45                   	rex.RB
   14000d4f8:	41                   	rex.B
   14000d4f9:	44 5f                	rex.R pop rdi
   14000d4fb:	4d                   	rex.WRB
   14000d4fc:	4f                   	rex.WRXB
   14000d4fd:	44                   	rex.R
   14000d4fe:	49                   	rex.WB
   14000d4ff:	46 59                	rex.RX pop rcx
   14000d501:	00 1c 01             	add    BYTE PTR [rcx+rax*1],bl
   14000d504:	58                   	pop    rax
   14000d505:	38 36                	cmp    BYTE PTR [rsi],dh
   14000d507:	5f                   	pop    rdi
   14000d508:	54                   	push   rsp
   14000d509:	55                   	push   rbp
   14000d50a:	4e                   	rex.WRX
   14000d50b:	45 5f                	rex.RB pop r15
   14000d50d:	55                   	push   rbp
   14000d50e:	53                   	push   rbx
   14000d50f:	45 5f                	rex.RB pop r15
   14000d511:	49                   	rex.WB
   14000d512:	4e                   	rex.WRX
   14000d513:	43                   	rex.XB
   14000d514:	44                   	rex.R
   14000d515:	45                   	rex.RB
   14000d516:	43 00 1d 01 58 38 36 	rex.XB add BYTE PTR [rip+0x36385801],bl        # 176392d1e <.debug_line_str+0x36380c87>
   14000d51d:	5f                   	pop    rdi
   14000d51e:	54                   	push   rsp
   14000d51f:	55                   	push   rbp
   14000d520:	4e                   	rex.WRX
   14000d521:	45 5f                	rex.RB pop r15
   14000d523:	49                   	rex.WB
   14000d524:	4e 54                	rex.WRX push rsp
   14000d526:	45                   	rex.RB
   14000d527:	47                   	rex.RXB
   14000d528:	45 52                	rex.RB push r10
   14000d52a:	5f                   	pop    rdi
   14000d52b:	44                   	rex.R
   14000d52c:	46                   	rex.RX
   14000d52d:	4d                   	rex.WRB
   14000d52e:	4f                   	rex.WRXB
   14000d52f:	44                   	rex.R
   14000d530:	45 5f                	rex.RB pop r15
   14000d532:	4d                   	rex.WRB
   14000d533:	4f 56                	rex.WRXB push r14
   14000d535:	45 53                	rex.RB push r11
   14000d537:	00 1e                	add    BYTE PTR [rsi],bl
   14000d539:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d53c:	36 5f                	ss pop rdi
   14000d53e:	54                   	push   rsp
   14000d53f:	55                   	push   rbp
   14000d540:	4e                   	rex.WRX
   14000d541:	45 5f                	rex.RB pop r15
   14000d543:	4f 50                	rex.WRXB push r8
   14000d545:	54                   	push   rsp
   14000d546:	5f                   	pop    rdi
   14000d547:	41                   	rex.B
   14000d548:	47 55                	rex.RXB push r13
   14000d54a:	00 1f                	add    BYTE PTR [rdi],bl
   14000d54c:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d54f:	36 5f                	ss pop rdi
   14000d551:	54                   	push   rsp
   14000d552:	55                   	push   rbp
   14000d553:	4e                   	rex.WRX
   14000d554:	45 5f                	rex.RB pop r15
   14000d556:	41 56                	push   r14
   14000d558:	4f                   	rex.WRXB
   14000d559:	49                   	rex.WB
   14000d55a:	44 5f                	rex.R pop rdi
   14000d55c:	4c                   	rex.WR
   14000d55d:	45                   	rex.RB
   14000d55e:	41 5f                	pop    r15
   14000d560:	46                   	rex.RX
   14000d561:	4f 52                	rex.WRXB push r10
   14000d563:	5f                   	pop    rdi
   14000d564:	41                   	rex.B
   14000d565:	44                   	rex.R
   14000d566:	44 52                	rex.R push rdx
   14000d568:	00 20                	add    BYTE PTR [rax],ah
   14000d56a:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d56d:	36 5f                	ss pop rdi
   14000d56f:	54                   	push   rsp
   14000d570:	55                   	push   rbp
   14000d571:	4e                   	rex.WRX
   14000d572:	45 5f                	rex.RB pop r15
   14000d574:	53                   	push   rbx
   14000d575:	4c                   	rex.WR
   14000d576:	4f 57                	rex.WRXB push r15
   14000d578:	5f                   	pop    rdi
   14000d579:	49                   	rex.WB
   14000d57a:	4d 55                	rex.WRB push r13
   14000d57c:	4c 5f                	rex.WR pop rdi
   14000d57e:	49                   	rex.WB
   14000d57f:	4d                   	rex.WRB
   14000d580:	4d 33 32             	xor    r14,QWORD PTR [r10]
   14000d583:	5f                   	pop    rdi
   14000d584:	4d                   	rex.WRB
   14000d585:	45                   	rex.RB
   14000d586:	4d 00 21             	rex.WRB add BYTE PTR [r9],r12b
   14000d589:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d58c:	36 5f                	ss pop rdi
   14000d58e:	54                   	push   rsp
   14000d58f:	55                   	push   rbp
   14000d590:	4e                   	rex.WRX
   14000d591:	45 5f                	rex.RB pop r15
   14000d593:	53                   	push   rbx
   14000d594:	4c                   	rex.WR
   14000d595:	4f 57                	rex.WRXB push r15
   14000d597:	5f                   	pop    rdi
   14000d598:	49                   	rex.WB
   14000d599:	4d 55                	rex.WRB push r13
   14000d59b:	4c 5f                	rex.WR pop rdi
   14000d59d:	49                   	rex.WB
   14000d59e:	4d                   	rex.WRB
   14000d59f:	4d 38 00             	rex.WRB cmp BYTE PTR [r8],r8b
   14000d5a2:	22 01                	and    al,BYTE PTR [rcx]
   14000d5a4:	58                   	pop    rax
   14000d5a5:	38 36                	cmp    BYTE PTR [rsi],dh
   14000d5a7:	5f                   	pop    rdi
   14000d5a8:	54                   	push   rsp
   14000d5a9:	55                   	push   rbp
   14000d5aa:	4e                   	rex.WRX
   14000d5ab:	45 5f                	rex.RB pop r15
   14000d5ad:	41 56                	push   r14
   14000d5af:	4f                   	rex.WRXB
   14000d5b0:	49                   	rex.WB
   14000d5b1:	44 5f                	rex.R pop rdi
   14000d5b3:	4d                   	rex.WRB
   14000d5b4:	45                   	rex.RB
   14000d5b5:	4d 5f                	rex.WRB pop r15
   14000d5b7:	4f 50                	rex.WRXB push r8
   14000d5b9:	4e                   	rex.WRX
   14000d5ba:	44 5f                	rex.R pop rdi
   14000d5bc:	46                   	rex.RX
   14000d5bd:	4f 52                	rex.WRXB push r10
   14000d5bf:	5f                   	pop    rdi
   14000d5c0:	43                   	rex.XB
   14000d5c1:	4d                   	rex.WRB
   14000d5c2:	4f 56                	rex.WRXB push r14
   14000d5c4:	45 00 23             	add    BYTE PTR [r11],r12b
   14000d5c7:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d5ca:	36 5f                	ss pop rdi
   14000d5cc:	54                   	push   rsp
   14000d5cd:	55                   	push   rbp
   14000d5ce:	4e                   	rex.WRX
   14000d5cf:	45 5f                	rex.RB pop r15
   14000d5d1:	53                   	push   rbx
   14000d5d2:	49                   	rex.WB
   14000d5d3:	4e                   	rex.WRX
   14000d5d4:	47                   	rex.RXB
   14000d5d5:	4c                   	rex.WR
   14000d5d6:	45 5f                	rex.RB pop r15
   14000d5d8:	53                   	push   rbx
   14000d5d9:	54                   	push   rsp
   14000d5da:	52                   	push   rdx
   14000d5db:	49                   	rex.WB
   14000d5dc:	4e                   	rex.WRX
   14000d5dd:	47                   	rex.RXB
   14000d5de:	4f 50                	rex.WRXB push r8
   14000d5e0:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
   14000d5e3:	58                   	pop    rax
   14000d5e4:	38 36                	cmp    BYTE PTR [rsi],dh
   14000d5e6:	5f                   	pop    rdi
   14000d5e7:	54                   	push   rsp
   14000d5e8:	55                   	push   rbp
   14000d5e9:	4e                   	rex.WRX
   14000d5ea:	45 5f                	rex.RB pop r15
   14000d5ec:	50                   	push   rax
   14000d5ed:	52                   	push   rdx
   14000d5ee:	45                   	rex.RB
   14000d5ef:	46                   	rex.RX
   14000d5f0:	45 52                	rex.RB push r10
   14000d5f2:	5f                   	pop    rdi
   14000d5f3:	4b                   	rex.WXB
   14000d5f4:	4e                   	rex.WRX
   14000d5f5:	4f 57                	rex.WRXB push r15
   14000d5f7:	4e 5f                	rex.WRX pop rdi
   14000d5f9:	52                   	push   rdx
   14000d5fa:	45 50                	rex.RB push r8
   14000d5fc:	5f                   	pop    rdi
   14000d5fd:	4d                   	rex.WRB
   14000d5fe:	4f 56                	rex.WRXB push r14
   14000d600:	53                   	push   rbx
   14000d601:	42 5f                	rex.X pop rdi
   14000d603:	53                   	push   rbx
   14000d604:	54                   	push   rsp
   14000d605:	4f 53                	rex.WRXB push r11
   14000d607:	42 00 25 01 58 38 36 	rex.X add BYTE PTR [rip+0x36385801],spl        # 176392e0f <.debug_line_str+0x36380d78>
   14000d60e:	5f                   	pop    rdi
   14000d60f:	54                   	push   rsp
   14000d610:	55                   	push   rbp
   14000d611:	4e                   	rex.WRX
   14000d612:	45 5f                	rex.RB pop r15
   14000d614:	4d                   	rex.WRB
   14000d615:	49 53                	rex.WB push r11
   14000d617:	41                   	rex.B
   14000d618:	4c                   	rex.WR
   14000d619:	49                   	rex.WB
   14000d61a:	47                   	rex.RXB
   14000d61b:	4e                   	rex.WRX
   14000d61c:	45                   	rex.RB
   14000d61d:	44 5f                	rex.R pop rdi
   14000d61f:	4d                   	rex.WRB
   14000d620:	4f 56                	rex.WRXB push r14
   14000d622:	45 5f                	rex.RB pop r15
   14000d624:	53                   	push   rbx
   14000d625:	54                   	push   rsp
   14000d626:	52                   	push   rdx
   14000d627:	49                   	rex.WB
   14000d628:	4e                   	rex.WRX
   14000d629:	47 5f                	rex.RXB pop r15
   14000d62b:	50                   	push   rax
   14000d62c:	52                   	push   rdx
   14000d62d:	4f 5f                	rex.WRXB pop r15
   14000d62f:	45 50                	rex.RB push r8
   14000d631:	49                   	rex.WB
   14000d632:	4c                   	rex.WR
   14000d633:	4f                   	rex.WRXB
   14000d634:	47 55                	rex.RXB push r13
   14000d636:	45 53                	rex.RB push r11
   14000d638:	00 26                	add    BYTE PTR [rsi],ah
   14000d63a:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d63d:	36 5f                	ss pop rdi
   14000d63f:	54                   	push   rsp
   14000d640:	55                   	push   rbp
   14000d641:	4e                   	rex.WRX
   14000d642:	45 5f                	rex.RB pop r15
   14000d644:	55                   	push   rbp
   14000d645:	53                   	push   rbx
   14000d646:	45 5f                	rex.RB pop r15
   14000d648:	53                   	push   rbx
   14000d649:	41                   	rex.B
   14000d64a:	48                   	rex.W
   14000d64b:	46 00 27             	rex.RX add BYTE PTR [rdi],r12b
   14000d64e:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d651:	36 5f                	ss pop rdi
   14000d653:	54                   	push   rsp
   14000d654:	55                   	push   rbp
   14000d655:	4e                   	rex.WRX
   14000d656:	45 5f                	rex.RB pop r15
   14000d658:	55                   	push   rbp
   14000d659:	53                   	push   rbx
   14000d65a:	45 5f                	rex.RB pop r15
   14000d65c:	43                   	rex.XB
   14000d65d:	4c 54                	rex.WR push rsp
   14000d65f:	44 00 28             	add    BYTE PTR [rax],r13b
   14000d662:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d665:	36 5f                	ss pop rdi
   14000d667:	54                   	push   rsp
   14000d668:	55                   	push   rbp
   14000d669:	4e                   	rex.WRX
   14000d66a:	45 5f                	rex.RB pop r15
   14000d66c:	55                   	push   rbp
   14000d66d:	53                   	push   rbx
   14000d66e:	45 5f                	rex.RB pop r15
   14000d670:	42 54                	rex.X push rsp
   14000d672:	00 29                	add    BYTE PTR [rcx],ch
   14000d674:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d677:	36 5f                	ss pop rdi
   14000d679:	54                   	push   rsp
   14000d67a:	55                   	push   rbp
   14000d67b:	4e                   	rex.WRX
   14000d67c:	45 5f                	rex.RB pop r15
   14000d67e:	41 56                	push   r14
   14000d680:	4f                   	rex.WRXB
   14000d681:	49                   	rex.WB
   14000d682:	44 5f                	rex.R pop rdi
   14000d684:	46                   	rex.RX
   14000d685:	41                   	rex.B
   14000d686:	4c 53                	rex.WR push rbx
   14000d688:	45 5f                	rex.RB pop r15
   14000d68a:	44                   	rex.R
   14000d68b:	45 50                	rex.RB push r8
   14000d68d:	5f                   	pop    rdi
   14000d68e:	46                   	rex.RX
   14000d68f:	4f 52                	rex.WRXB push r10
   14000d691:	5f                   	pop    rdi
   14000d692:	42                   	rex.X
   14000d693:	4d                   	rex.WRB
   14000d694:	49 00 2a             	rex.WB add BYTE PTR [r10],bpl
   14000d697:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d69a:	36 5f                	ss pop rdi
   14000d69c:	54                   	push   rsp
   14000d69d:	55                   	push   rbp
   14000d69e:	4e                   	rex.WRX
   14000d69f:	45 5f                	rex.RB pop r15
   14000d6a1:	41                   	rex.B
   14000d6a2:	44                   	rex.R
   14000d6a3:	4a 55                	rex.WX push rbp
   14000d6a5:	53                   	push   rbx
   14000d6a6:	54                   	push   rsp
   14000d6a7:	5f                   	pop    rdi
   14000d6a8:	55                   	push   rbp
   14000d6a9:	4e 52                	rex.WRX push rdx
   14000d6ab:	4f                   	rex.WRXB
   14000d6ac:	4c                   	rex.WR
   14000d6ad:	4c 00 2b             	rex.WR add BYTE PTR [rbx],r13b
   14000d6b0:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d6b3:	36 5f                	ss pop rdi
   14000d6b5:	54                   	push   rsp
   14000d6b6:	55                   	push   rbp
   14000d6b7:	4e                   	rex.WRX
   14000d6b8:	45 5f                	rex.RB pop r15
   14000d6ba:	4f                   	rex.WRXB
   14000d6bb:	4e                   	rex.WRX
   14000d6bc:	45 5f                	rex.RB pop r15
   14000d6be:	49                   	rex.WB
   14000d6bf:	46 5f                	rex.RX pop rdi
   14000d6c1:	43                   	rex.XB
   14000d6c2:	4f                   	rex.WRXB
   14000d6c3:	4e 56                	rex.WRX push rsi
   14000d6c5:	5f                   	pop    rdi
   14000d6c6:	49                   	rex.WB
   14000d6c7:	4e 53                	rex.WRX push rbx
   14000d6c9:	4e 00 2c 01          	rex.WRX add BYTE PTR [rcx+r8*1],r13b
   14000d6cd:	58                   	pop    rax
   14000d6ce:	38 36                	cmp    BYTE PTR [rsi],dh
   14000d6d0:	5f                   	pop    rdi
   14000d6d1:	54                   	push   rsp
   14000d6d2:	55                   	push   rbp
   14000d6d3:	4e                   	rex.WRX
   14000d6d4:	45 5f                	rex.RB pop r15
   14000d6d6:	41 56                	push   r14
   14000d6d8:	4f                   	rex.WRXB
   14000d6d9:	49                   	rex.WB
   14000d6da:	44 5f                	rex.R pop rdi
   14000d6dc:	4d                   	rex.WRB
   14000d6dd:	46                   	rex.RX
   14000d6de:	45                   	rex.RB
   14000d6df:	4e                   	rex.WRX
   14000d6e0:	43                   	rex.XB
   14000d6e1:	45 00 2d 01 58 38 36 	add    BYTE PTR [rip+0x36385801],r13b        # 176392ee9 <.debug_line_str+0x36380e52>
   14000d6e8:	5f                   	pop    rdi
   14000d6e9:	54                   	push   rsp
   14000d6ea:	55                   	push   rbp
   14000d6eb:	4e                   	rex.WRX
   14000d6ec:	45 5f                	rex.RB pop r15
   14000d6ee:	45 58                	rex.RB pop r8
   14000d6f0:	50                   	push   rax
   14000d6f1:	41                   	rex.B
   14000d6f2:	4e                   	rex.WRX
   14000d6f3:	44 5f                	rex.R pop rdi
   14000d6f5:	41                   	rex.B
   14000d6f6:	42 53                	rex.X push rbx
   14000d6f8:	00 2e                	add    BYTE PTR [rsi],ch
   14000d6fa:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d6fd:	36 5f                	ss pop rdi
   14000d6ff:	54                   	push   rsp
   14000d700:	55                   	push   rbp
   14000d701:	4e                   	rex.WRX
   14000d702:	45 5f                	rex.RB pop r15
   14000d704:	55                   	push   rbp
   14000d705:	53                   	push   rbx
   14000d706:	45 5f                	rex.RB pop r15
   14000d708:	48                   	rex.W
   14000d709:	49                   	rex.WB
   14000d70a:	4d                   	rex.WRB
   14000d70b:	4f                   	rex.WRXB
   14000d70c:	44                   	rex.R
   14000d70d:	45 5f                	rex.RB pop r15
   14000d70f:	46                   	rex.RX
   14000d710:	49                   	rex.WB
   14000d711:	4f 50                	rex.WRXB push r8
   14000d713:	00 2f                	add    BYTE PTR [rdi],ch
   14000d715:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d718:	36 5f                	ss pop rdi
   14000d71a:	54                   	push   rsp
   14000d71b:	55                   	push   rbp
   14000d71c:	4e                   	rex.WRX
   14000d71d:	45 5f                	rex.RB pop r15
   14000d71f:	55                   	push   rbp
   14000d720:	53                   	push   rbx
   14000d721:	45 5f                	rex.RB pop r15
   14000d723:	53                   	push   rbx
   14000d724:	49                   	rex.WB
   14000d725:	4d                   	rex.WRB
   14000d726:	4f                   	rex.WRXB
   14000d727:	44                   	rex.R
   14000d728:	45 5f                	rex.RB pop r15
   14000d72a:	46                   	rex.RX
   14000d72b:	49                   	rex.WB
   14000d72c:	4f 50                	rex.WRXB push r8
   14000d72e:	00 30                	add    BYTE PTR [rax],dh
   14000d730:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d733:	36 5f                	ss pop rdi
   14000d735:	54                   	push   rsp
   14000d736:	55                   	push   rbp
   14000d737:	4e                   	rex.WRX
   14000d738:	45 5f                	rex.RB pop r15
   14000d73a:	55                   	push   rbp
   14000d73b:	53                   	push   rbx
   14000d73c:	45 5f                	rex.RB pop r15
   14000d73e:	46                   	rex.RX
   14000d73f:	46 52                	rex.RX push rdx
   14000d741:	45                   	rex.RB
   14000d742:	45 50                	rex.RB push r8
   14000d744:	00 31                	add    BYTE PTR [rcx],dh
   14000d746:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d749:	36 5f                	ss pop rdi
   14000d74b:	54                   	push   rsp
   14000d74c:	55                   	push   rbp
   14000d74d:	4e                   	rex.WRX
   14000d74e:	45 5f                	rex.RB pop r15
   14000d750:	45 58                	rex.RB pop r8
   14000d752:	54                   	push   rsp
   14000d753:	5f                   	pop    rdi
   14000d754:	38 30                	cmp    BYTE PTR [rax],dh
   14000d756:	33 38                	xor    edi,DWORD PTR [rax]
   14000d758:	37                   	(bad)
   14000d759:	5f                   	pop    rdi
   14000d75a:	43                   	rex.XB
   14000d75b:	4f                   	rex.WRXB
   14000d75c:	4e 53                	rex.WRX push rbx
   14000d75e:	54                   	push   rsp
   14000d75f:	41                   	rex.B
   14000d760:	4e 54                	rex.WRX push rsp
   14000d762:	53                   	push   rbx
   14000d763:	00 32                	add    BYTE PTR [rdx],dh
   14000d765:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d768:	36 5f                	ss pop rdi
   14000d76a:	54                   	push   rsp
   14000d76b:	55                   	push   rbp
   14000d76c:	4e                   	rex.WRX
   14000d76d:	45 5f                	rex.RB pop r15
   14000d76f:	47                   	rex.RXB
   14000d770:	45                   	rex.RB
   14000d771:	4e                   	rex.WRX
   14000d772:	45 52                	rex.RB push r10
   14000d774:	41                   	rex.B
   14000d775:	4c 5f                	rex.WR pop rdi
   14000d777:	52                   	push   rdx
   14000d778:	45                   	rex.RB
   14000d779:	47 53                	rex.RXB push r11
   14000d77b:	5f                   	pop    rdi
   14000d77c:	53                   	push   rbx
   14000d77d:	53                   	push   rbx
   14000d77e:	45 5f                	rex.RB pop r15
   14000d780:	53                   	push   rbx
   14000d781:	50                   	push   rax
   14000d782:	49                   	rex.WB
   14000d783:	4c                   	rex.WR
   14000d784:	4c 00 33             	rex.WR add BYTE PTR [rbx],r14b
   14000d787:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d78a:	36 5f                	ss pop rdi
   14000d78c:	54                   	push   rsp
   14000d78d:	55                   	push   rbp
   14000d78e:	4e                   	rex.WRX
   14000d78f:	45 5f                	rex.RB pop r15
   14000d791:	53                   	push   rbx
   14000d792:	53                   	push   rbx
   14000d793:	45 5f                	rex.RB pop r15
   14000d795:	55                   	push   rbp
   14000d796:	4e                   	rex.WRX
   14000d797:	41                   	rex.B
   14000d798:	4c                   	rex.WR
   14000d799:	49                   	rex.WB
   14000d79a:	47                   	rex.RXB
   14000d79b:	4e                   	rex.WRX
   14000d79c:	45                   	rex.RB
   14000d79d:	44 5f                	rex.R pop rdi
   14000d79f:	4c                   	rex.WR
   14000d7a0:	4f                   	rex.WRXB
   14000d7a1:	41                   	rex.B
   14000d7a2:	44 5f                	rex.R pop rdi
   14000d7a4:	4f 50                	rex.WRXB push r8
   14000d7a6:	54                   	push   rsp
   14000d7a7:	49                   	rex.WB
   14000d7a8:	4d                   	rex.WRB
   14000d7a9:	41                   	rex.B
   14000d7aa:	4c 00 34 01          	rex.WR add BYTE PTR [rcx+rax*1],r14b
   14000d7ae:	58                   	pop    rax
   14000d7af:	38 36                	cmp    BYTE PTR [rsi],dh
   14000d7b1:	5f                   	pop    rdi
   14000d7b2:	54                   	push   rsp
   14000d7b3:	55                   	push   rbp
   14000d7b4:	4e                   	rex.WRX
   14000d7b5:	45 5f                	rex.RB pop r15
   14000d7b7:	53                   	push   rbx
   14000d7b8:	53                   	push   rbx
   14000d7b9:	45 5f                	rex.RB pop r15
   14000d7bb:	55                   	push   rbp
   14000d7bc:	4e                   	rex.WRX
   14000d7bd:	41                   	rex.B
   14000d7be:	4c                   	rex.WR
   14000d7bf:	49                   	rex.WB
   14000d7c0:	47                   	rex.RXB
   14000d7c1:	4e                   	rex.WRX
   14000d7c2:	45                   	rex.RB
   14000d7c3:	44 5f                	rex.R pop rdi
   14000d7c5:	53                   	push   rbx
   14000d7c6:	54                   	push   rsp
   14000d7c7:	4f 52                	rex.WRXB push r10
   14000d7c9:	45 5f                	rex.RB pop r15
   14000d7cb:	4f 50                	rex.WRXB push r8
   14000d7cd:	54                   	push   rsp
   14000d7ce:	49                   	rex.WB
   14000d7cf:	4d                   	rex.WRB
   14000d7d0:	41                   	rex.B
   14000d7d1:	4c 00 35 01 58 38 36 	rex.WR add BYTE PTR [rip+0x36385801],r14b        # 176392fd9 <.debug_line_str+0x36380f42>
   14000d7d8:	5f                   	pop    rdi
   14000d7d9:	54                   	push   rsp
   14000d7da:	55                   	push   rbp
   14000d7db:	4e                   	rex.WRX
   14000d7dc:	45 5f                	rex.RB pop r15
   14000d7de:	53                   	push   rbx
   14000d7df:	53                   	push   rbx
   14000d7e0:	45 5f                	rex.RB pop r15
   14000d7e2:	50                   	push   rax
   14000d7e3:	41                   	rex.B
   14000d7e4:	43                   	rex.XB
   14000d7e5:	4b                   	rex.WXB
   14000d7e6:	45                   	rex.RB
   14000d7e7:	44 5f                	rex.R pop rdi
   14000d7e9:	53                   	push   rbx
   14000d7ea:	49                   	rex.WB
   14000d7eb:	4e                   	rex.WRX
   14000d7ec:	47                   	rex.RXB
   14000d7ed:	4c                   	rex.WR
   14000d7ee:	45 5f                	rex.RB pop r15
   14000d7f0:	49                   	rex.WB
   14000d7f1:	4e 53                	rex.WRX push rbx
   14000d7f3:	4e 5f                	rex.WRX pop rdi
   14000d7f5:	4f 50                	rex.WRXB push r8
   14000d7f7:	54                   	push   rsp
   14000d7f8:	49                   	rex.WB
   14000d7f9:	4d                   	rex.WRB
   14000d7fa:	41                   	rex.B
   14000d7fb:	4c 00 36             	rex.WR add BYTE PTR [rsi],r14b
   14000d7fe:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d801:	36 5f                	ss pop rdi
   14000d803:	54                   	push   rsp
   14000d804:	55                   	push   rbp
   14000d805:	4e                   	rex.WRX
   14000d806:	45 5f                	rex.RB pop r15
   14000d808:	53                   	push   rbx
   14000d809:	53                   	push   rbx
   14000d80a:	45 5f                	rex.RB pop r15
   14000d80c:	54                   	push   rsp
   14000d80d:	59                   	pop    rcx
   14000d80e:	50                   	push   rax
   14000d80f:	45                   	rex.RB
   14000d810:	4c                   	rex.WR
   14000d811:	45 53                	rex.RB push r11
   14000d813:	53                   	push   rbx
   14000d814:	5f                   	pop    rdi
   14000d815:	53                   	push   rbx
   14000d816:	54                   	push   rsp
   14000d817:	4f 52                	rex.WRXB push r10
   14000d819:	45 53                	rex.RB push r11
   14000d81b:	00 37                	add    BYTE PTR [rdi],dh
   14000d81d:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d820:	36 5f                	ss pop rdi
   14000d822:	54                   	push   rsp
   14000d823:	55                   	push   rbp
   14000d824:	4e                   	rex.WRX
   14000d825:	45 5f                	rex.RB pop r15
   14000d827:	53                   	push   rbx
   14000d828:	53                   	push   rbx
   14000d829:	45 5f                	rex.RB pop r15
   14000d82b:	4c                   	rex.WR
   14000d82c:	4f                   	rex.WRXB
   14000d82d:	41                   	rex.B
   14000d82e:	44 30 5f 42          	xor    BYTE PTR [rdi+0x42],r11b
   14000d832:	59                   	pop    rcx
   14000d833:	5f                   	pop    rdi
   14000d834:	50                   	push   rax
   14000d835:	58                   	pop    rax
   14000d836:	4f 52                	rex.WRXB push r10
   14000d838:	00 38                	add    BYTE PTR [rax],bh
   14000d83a:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d83d:	36 5f                	ss pop rdi
   14000d83f:	54                   	push   rsp
   14000d840:	55                   	push   rbp
   14000d841:	4e                   	rex.WRX
   14000d842:	45 5f                	rex.RB pop r15
   14000d844:	49                   	rex.WB
   14000d845:	4e 54                	rex.WRX push rsp
   14000d847:	45 52                	rex.RB push r10
   14000d849:	5f                   	pop    rdi
   14000d84a:	55                   	push   rbp
   14000d84b:	4e                   	rex.WRX
   14000d84c:	49 54                	rex.WB push r12
   14000d84e:	5f                   	pop    rdi
   14000d84f:	4d                   	rex.WRB
   14000d850:	4f 56                	rex.WRXB push r14
   14000d852:	45 53                	rex.RB push r11
   14000d854:	5f                   	pop    rdi
   14000d855:	54                   	push   rsp
   14000d856:	4f 5f                	rex.WRXB pop r15
   14000d858:	56                   	push   rsi
   14000d859:	45                   	rex.RB
   14000d85a:	43 00 39             	rex.XB add BYTE PTR [r9],dil
   14000d85d:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d860:	36 5f                	ss pop rdi
   14000d862:	54                   	push   rsp
   14000d863:	55                   	push   rbp
   14000d864:	4e                   	rex.WRX
   14000d865:	45 5f                	rex.RB pop r15
   14000d867:	49                   	rex.WB
   14000d868:	4e 54                	rex.WRX push rsp
   14000d86a:	45 52                	rex.RB push r10
   14000d86c:	5f                   	pop    rdi
   14000d86d:	55                   	push   rbp
   14000d86e:	4e                   	rex.WRX
   14000d86f:	49 54                	rex.WB push r12
   14000d871:	5f                   	pop    rdi
   14000d872:	4d                   	rex.WRB
   14000d873:	4f 56                	rex.WRXB push r14
   14000d875:	45 53                	rex.RB push r11
   14000d877:	5f                   	pop    rdi
   14000d878:	46 52                	rex.RX push rdx
   14000d87a:	4f                   	rex.WRXB
   14000d87b:	4d 5f                	rex.WRB pop r15
   14000d87d:	56                   	push   rsi
   14000d87e:	45                   	rex.RB
   14000d87f:	43 00 3a             	rex.XB add BYTE PTR [r10],dil
   14000d882:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d885:	36 5f                	ss pop rdi
   14000d887:	54                   	push   rsp
   14000d888:	55                   	push   rbp
   14000d889:	4e                   	rex.WRX
   14000d88a:	45 5f                	rex.RB pop r15
   14000d88c:	49                   	rex.WB
   14000d88d:	4e 54                	rex.WRX push rsp
   14000d88f:	45 52                	rex.RB push r10
   14000d891:	5f                   	pop    rdi
   14000d892:	55                   	push   rbp
   14000d893:	4e                   	rex.WRX
   14000d894:	49 54                	rex.WB push r12
   14000d896:	5f                   	pop    rdi
   14000d897:	43                   	rex.XB
   14000d898:	4f                   	rex.WRXB
   14000d899:	4e 56                	rex.WRX push rsi
   14000d89b:	45 52                	rex.RB push r10
   14000d89d:	53                   	push   rbx
   14000d89e:	49                   	rex.WB
   14000d89f:	4f                   	rex.WRXB
   14000d8a0:	4e 53                	rex.WRX push rbx
   14000d8a2:	00 3b                	add    BYTE PTR [rbx],bh
   14000d8a4:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d8a7:	36 5f                	ss pop rdi
   14000d8a9:	54                   	push   rsp
   14000d8aa:	55                   	push   rbp
   14000d8ab:	4e                   	rex.WRX
   14000d8ac:	45 5f                	rex.RB pop r15
   14000d8ae:	53                   	push   rbx
   14000d8af:	50                   	push   rax
   14000d8b0:	4c                   	rex.WR
   14000d8b1:	49 54                	rex.WB push r12
   14000d8b3:	5f                   	pop    rdi
   14000d8b4:	4d                   	rex.WRB
   14000d8b5:	45                   	rex.RB
   14000d8b6:	4d 5f                	rex.WRB pop r15
   14000d8b8:	4f 50                	rex.WRXB push r8
   14000d8ba:	4e                   	rex.WRX
   14000d8bb:	44 5f                	rex.R pop rdi
   14000d8bd:	46                   	rex.RX
   14000d8be:	4f 52                	rex.WRXB push r10
   14000d8c0:	5f                   	pop    rdi
   14000d8c1:	46 50                	rex.RX push rax
   14000d8c3:	5f                   	pop    rdi
   14000d8c4:	43                   	rex.XB
   14000d8c5:	4f                   	rex.WRXB
   14000d8c6:	4e 56                	rex.WRX push rsi
   14000d8c8:	45 52                	rex.RB push r10
   14000d8ca:	54                   	push   rsp
   14000d8cb:	53                   	push   rbx
   14000d8cc:	00 3c 01             	add    BYTE PTR [rcx+rax*1],bh
   14000d8cf:	58                   	pop    rax
   14000d8d0:	38 36                	cmp    BYTE PTR [rsi],dh
   14000d8d2:	5f                   	pop    rdi
   14000d8d3:	54                   	push   rsp
   14000d8d4:	55                   	push   rbp
   14000d8d5:	4e                   	rex.WRX
   14000d8d6:	45 5f                	rex.RB pop r15
   14000d8d8:	55                   	push   rbp
   14000d8d9:	53                   	push   rbx
   14000d8da:	45 5f                	rex.RB pop r15
   14000d8dc:	56                   	push   rsi
   14000d8dd:	45                   	rex.RB
   14000d8de:	43 54                	rex.XB push r12
   14000d8e0:	4f 52                	rex.WRXB push r10
   14000d8e2:	5f                   	pop    rdi
   14000d8e3:	46 50                	rex.RX push rax
   14000d8e5:	5f                   	pop    rdi
   14000d8e6:	43                   	rex.XB
   14000d8e7:	4f                   	rex.WRXB
   14000d8e8:	4e 56                	rex.WRX push rsi
   14000d8ea:	45 52                	rex.RB push r10
   14000d8ec:	54                   	push   rsp
   14000d8ed:	53                   	push   rbx
   14000d8ee:	00 3d 01 58 38 36    	add    BYTE PTR [rip+0x36385801],bh        # 1763930f5 <.debug_line_str+0x3638105e>
   14000d8f4:	5f                   	pop    rdi
   14000d8f5:	54                   	push   rsp
   14000d8f6:	55                   	push   rbp
   14000d8f7:	4e                   	rex.WRX
   14000d8f8:	45 5f                	rex.RB pop r15
   14000d8fa:	55                   	push   rbp
   14000d8fb:	53                   	push   rbx
   14000d8fc:	45 5f                	rex.RB pop r15
   14000d8fe:	56                   	push   rsi
   14000d8ff:	45                   	rex.RB
   14000d900:	43 54                	rex.XB push r12
   14000d902:	4f 52                	rex.WRXB push r10
   14000d904:	5f                   	pop    rdi
   14000d905:	43                   	rex.XB
   14000d906:	4f                   	rex.WRXB
   14000d907:	4e 56                	rex.WRX push rsi
   14000d909:	45 52                	rex.RB push r10
   14000d90b:	54                   	push   rsp
   14000d90c:	53                   	push   rbx
   14000d90d:	00 3e                	add    BYTE PTR [rsi],bh
   14000d90f:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d912:	36 5f                	ss pop rdi
   14000d914:	54                   	push   rsp
   14000d915:	55                   	push   rbp
   14000d916:	4e                   	rex.WRX
   14000d917:	45 5f                	rex.RB pop r15
   14000d919:	53                   	push   rbx
   14000d91a:	4c                   	rex.WR
   14000d91b:	4f 57                	rex.WRXB push r15
   14000d91d:	5f                   	pop    rdi
   14000d91e:	50                   	push   rax
   14000d91f:	53                   	push   rbx
   14000d920:	48 55                	rex.W push rbp
   14000d922:	46                   	rex.RX
   14000d923:	42 00 3f             	rex.X add BYTE PTR [rdi],dil
   14000d926:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000d929:	36 5f                	ss pop rdi
   14000d92b:	54                   	push   rsp
   14000d92c:	55                   	push   rbp
   14000d92d:	4e                   	rex.WRX
   14000d92e:	45 5f                	rex.RB pop r15
   14000d930:	41 56                	push   r14
   14000d932:	4f                   	rex.WRXB
   14000d933:	49                   	rex.WB
   14000d934:	44 5f                	rex.R pop rdi
   14000d936:	34 42                	xor    al,0x42
   14000d938:	59                   	pop    rcx
   14000d939:	54                   	push   rsp
   14000d93a:	45 5f                	rex.RB pop r15
   14000d93c:	50                   	push   rax
   14000d93d:	52                   	push   rdx
   14000d93e:	45                   	rex.RB
   14000d93f:	46                   	rex.RX
   14000d940:	49 58                	rex.WB pop r8
   14000d942:	45 53                	rex.RB push r11
   14000d944:	00 40 01             	add    BYTE PTR [rax+0x1],al
   14000d947:	58                   	pop    rax
   14000d948:	38 36                	cmp    BYTE PTR [rsi],dh
   14000d94a:	5f                   	pop    rdi
   14000d94b:	54                   	push   rsp
   14000d94c:	55                   	push   rbp
   14000d94d:	4e                   	rex.WRX
   14000d94e:	45 5f                	rex.RB pop r15
   14000d950:	55                   	push   rbp
   14000d951:	53                   	push   rbx
   14000d952:	45 5f                	rex.RB pop r15
   14000d954:	47                   	rex.RXB
   14000d955:	41 54                	push   r12
   14000d957:	48                   	rex.W
   14000d958:	45 52                	rex.RB push r10
   14000d95a:	5f                   	pop    rdi
   14000d95b:	32 50 41             	xor    dl,BYTE PTR [rax+0x41]
   14000d95e:	52                   	push   rdx
   14000d95f:	54                   	push   rsp
   14000d960:	53                   	push   rbx
   14000d961:	00 41 01             	add    BYTE PTR [rcx+0x1],al
   14000d964:	58                   	pop    rax
   14000d965:	38 36                	cmp    BYTE PTR [rsi],dh
   14000d967:	5f                   	pop    rdi
   14000d968:	54                   	push   rsp
   14000d969:	55                   	push   rbp
   14000d96a:	4e                   	rex.WRX
   14000d96b:	45 5f                	rex.RB pop r15
   14000d96d:	55                   	push   rbp
   14000d96e:	53                   	push   rbx
   14000d96f:	45 5f                	rex.RB pop r15
   14000d971:	53                   	push   rbx
   14000d972:	43                   	rex.XB
   14000d973:	41 54                	push   r12
   14000d975:	54                   	push   rsp
   14000d976:	45 52                	rex.RB push r10
   14000d978:	5f                   	pop    rdi
   14000d979:	32 50 41             	xor    dl,BYTE PTR [rax+0x41]
   14000d97c:	52                   	push   rdx
   14000d97d:	54                   	push   rsp
   14000d97e:	53                   	push   rbx
   14000d97f:	00 42 01             	add    BYTE PTR [rdx+0x1],al
   14000d982:	58                   	pop    rax
   14000d983:	38 36                	cmp    BYTE PTR [rsi],dh
   14000d985:	5f                   	pop    rdi
   14000d986:	54                   	push   rsp
   14000d987:	55                   	push   rbp
   14000d988:	4e                   	rex.WRX
   14000d989:	45 5f                	rex.RB pop r15
   14000d98b:	55                   	push   rbp
   14000d98c:	53                   	push   rbx
   14000d98d:	45 5f                	rex.RB pop r15
   14000d98f:	47                   	rex.RXB
   14000d990:	41 54                	push   r12
   14000d992:	48                   	rex.W
   14000d993:	45 52                	rex.RB push r10
   14000d995:	5f                   	pop    rdi
   14000d996:	34 50                	xor    al,0x50
   14000d998:	41 52                	push   r10
   14000d99a:	54                   	push   rsp
   14000d99b:	53                   	push   rbx
   14000d99c:	00 43 01             	add    BYTE PTR [rbx+0x1],al
   14000d99f:	58                   	pop    rax
   14000d9a0:	38 36                	cmp    BYTE PTR [rsi],dh
   14000d9a2:	5f                   	pop    rdi
   14000d9a3:	54                   	push   rsp
   14000d9a4:	55                   	push   rbp
   14000d9a5:	4e                   	rex.WRX
   14000d9a6:	45 5f                	rex.RB pop r15
   14000d9a8:	55                   	push   rbp
   14000d9a9:	53                   	push   rbx
   14000d9aa:	45 5f                	rex.RB pop r15
   14000d9ac:	53                   	push   rbx
   14000d9ad:	43                   	rex.XB
   14000d9ae:	41 54                	push   r12
   14000d9b0:	54                   	push   rsp
   14000d9b1:	45 52                	rex.RB push r10
   14000d9b3:	5f                   	pop    rdi
   14000d9b4:	34 50                	xor    al,0x50
   14000d9b6:	41 52                	push   r10
   14000d9b8:	54                   	push   rsp
   14000d9b9:	53                   	push   rbx
   14000d9ba:	00 44 01 58          	add    BYTE PTR [rcx+rax*1+0x58],al
   14000d9be:	38 36                	cmp    BYTE PTR [rsi],dh
   14000d9c0:	5f                   	pop    rdi
   14000d9c1:	54                   	push   rsp
   14000d9c2:	55                   	push   rbp
   14000d9c3:	4e                   	rex.WRX
   14000d9c4:	45 5f                	rex.RB pop r15
   14000d9c6:	55                   	push   rbp
   14000d9c7:	53                   	push   rbx
   14000d9c8:	45 5f                	rex.RB pop r15
   14000d9ca:	47                   	rex.RXB
   14000d9cb:	41 54                	push   r12
   14000d9cd:	48                   	rex.W
   14000d9ce:	45 52                	rex.RB push r10
   14000d9d0:	00 45 01             	add    BYTE PTR [rbp+0x1],al
   14000d9d3:	58                   	pop    rax
   14000d9d4:	38 36                	cmp    BYTE PTR [rsi],dh
   14000d9d6:	5f                   	pop    rdi
   14000d9d7:	54                   	push   rsp
   14000d9d8:	55                   	push   rbp
   14000d9d9:	4e                   	rex.WRX
   14000d9da:	45 5f                	rex.RB pop r15
   14000d9dc:	55                   	push   rbp
   14000d9dd:	53                   	push   rbx
   14000d9de:	45 5f                	rex.RB pop r15
   14000d9e0:	53                   	push   rbx
   14000d9e1:	43                   	rex.XB
   14000d9e2:	41 54                	push   r12
   14000d9e4:	54                   	push   rsp
   14000d9e5:	45 52                	rex.RB push r10
   14000d9e7:	00 46 01             	add    BYTE PTR [rsi+0x1],al
   14000d9ea:	58                   	pop    rax
   14000d9eb:	38 36                	cmp    BYTE PTR [rsi],dh
   14000d9ed:	5f                   	pop    rdi
   14000d9ee:	54                   	push   rsp
   14000d9ef:	55                   	push   rbp
   14000d9f0:	4e                   	rex.WRX
   14000d9f1:	45 5f                	rex.RB pop r15
   14000d9f3:	41 56                	push   r14
   14000d9f5:	4f                   	rex.WRXB
   14000d9f6:	49                   	rex.WB
   14000d9f7:	44 5f                	rex.R pop rdi
   14000d9f9:	31 32                	xor    DWORD PTR [rdx],esi
   14000d9fb:	38 46 4d             	cmp    BYTE PTR [rsi+0x4d],al
   14000d9fe:	41 5f                	pop    r15
   14000da00:	43                   	rex.XB
   14000da01:	48                   	rex.W
   14000da02:	41                   	rex.B
   14000da03:	49                   	rex.WB
   14000da04:	4e 53                	rex.WRX push rbx
   14000da06:	00 47 01             	add    BYTE PTR [rdi+0x1],al
   14000da09:	58                   	pop    rax
   14000da0a:	38 36                	cmp    BYTE PTR [rsi],dh
   14000da0c:	5f                   	pop    rdi
   14000da0d:	54                   	push   rsp
   14000da0e:	55                   	push   rbp
   14000da0f:	4e                   	rex.WRX
   14000da10:	45 5f                	rex.RB pop r15
   14000da12:	41 56                	push   r14
   14000da14:	4f                   	rex.WRXB
   14000da15:	49                   	rex.WB
   14000da16:	44 5f                	rex.R pop rdi
   14000da18:	32 35 36 46 4d 41    	xor    dh,BYTE PTR [rip+0x414d4636]        # 1814e2054 <.debug_line_str+0x414cffbd>
   14000da1e:	5f                   	pop    rdi
   14000da1f:	43                   	rex.XB
   14000da20:	48                   	rex.W
   14000da21:	41                   	rex.B
   14000da22:	49                   	rex.WB
   14000da23:	4e 53                	rex.WRX push rbx
   14000da25:	00 48 01             	add    BYTE PTR [rax+0x1],cl
   14000da28:	58                   	pop    rax
   14000da29:	38 36                	cmp    BYTE PTR [rsi],dh
   14000da2b:	5f                   	pop    rdi
   14000da2c:	54                   	push   rsp
   14000da2d:	55                   	push   rbp
   14000da2e:	4e                   	rex.WRX
   14000da2f:	45 5f                	rex.RB pop r15
   14000da31:	41 56                	push   r14
   14000da33:	4f                   	rex.WRXB
   14000da34:	49                   	rex.WB
   14000da35:	44 5f                	rex.R pop rdi
   14000da37:	35 31 32 46 4d       	xor    eax,0x4d463231
   14000da3c:	41 5f                	pop    r15
   14000da3e:	43                   	rex.XB
   14000da3f:	48                   	rex.W
   14000da40:	41                   	rex.B
   14000da41:	49                   	rex.WB
   14000da42:	4e 53                	rex.WRX push rbx
   14000da44:	00 49 01             	add    BYTE PTR [rcx+0x1],cl
   14000da47:	58                   	pop    rax
   14000da48:	38 36                	cmp    BYTE PTR [rsi],dh
   14000da4a:	5f                   	pop    rdi
   14000da4b:	54                   	push   rsp
   14000da4c:	55                   	push   rbp
   14000da4d:	4e                   	rex.WRX
   14000da4e:	45 5f                	rex.RB pop r15
   14000da50:	56                   	push   rsi
   14000da51:	32 44 46 5f          	xor    al,BYTE PTR [rsi+rax*2+0x5f]
   14000da55:	52                   	push   rdx
   14000da56:	45                   	rex.RB
   14000da57:	44 55                	rex.R push rbp
   14000da59:	43 54                	rex.XB push r12
   14000da5b:	49                   	rex.WB
   14000da5c:	4f                   	rex.WRXB
   14000da5d:	4e 5f                	rex.WRX pop rdi
   14000da5f:	50                   	push   rax
   14000da60:	52                   	push   rdx
   14000da61:	45                   	rex.RB
   14000da62:	46                   	rex.RX
   14000da63:	45 52                	rex.RB push r10
   14000da65:	5f                   	pop    rdi
   14000da66:	48                   	rex.W
   14000da67:	41                   	rex.B
   14000da68:	44                   	rex.R
   14000da69:	44 50                	rex.R push rax
   14000da6b:	44 00 4a 01          	add    BYTE PTR [rdx+0x1],r9b
   14000da6f:	58                   	pop    rax
   14000da70:	38 36                	cmp    BYTE PTR [rsi],dh
   14000da72:	5f                   	pop    rdi
   14000da73:	54                   	push   rsp
   14000da74:	55                   	push   rbp
   14000da75:	4e                   	rex.WRX
   14000da76:	45 5f                	rex.RB pop r15
   14000da78:	41 56                	push   r14
   14000da7a:	58                   	pop    rax
   14000da7b:	32 35 36 5f 55 4e    	xor    dh,BYTE PTR [rip+0x4e555f36]        # 18e5639b7 <.debug_line_str+0x4e551920>
   14000da81:	41                   	rex.B
   14000da82:	4c                   	rex.WR
   14000da83:	49                   	rex.WB
   14000da84:	47                   	rex.RXB
   14000da85:	4e                   	rex.WRX
   14000da86:	45                   	rex.RB
   14000da87:	44 5f                	rex.R pop rdi
   14000da89:	4c                   	rex.WR
   14000da8a:	4f                   	rex.WRXB
   14000da8b:	41                   	rex.B
   14000da8c:	44 5f                	rex.R pop rdi
   14000da8e:	4f 50                	rex.WRXB push r8
   14000da90:	54                   	push   rsp
   14000da91:	49                   	rex.WB
   14000da92:	4d                   	rex.WRB
   14000da93:	41                   	rex.B
   14000da94:	4c 00 4b 01          	rex.WR add BYTE PTR [rbx+0x1],r9b
   14000da98:	58                   	pop    rax
   14000da99:	38 36                	cmp    BYTE PTR [rsi],dh
   14000da9b:	5f                   	pop    rdi
   14000da9c:	54                   	push   rsp
   14000da9d:	55                   	push   rbp
   14000da9e:	4e                   	rex.WRX
   14000da9f:	45 5f                	rex.RB pop r15
   14000daa1:	41 56                	push   r14
   14000daa3:	58                   	pop    rax
   14000daa4:	32 35 36 5f 55 4e    	xor    dh,BYTE PTR [rip+0x4e555f36]        # 18e5639e0 <.debug_line_str+0x4e551949>
   14000daaa:	41                   	rex.B
   14000daab:	4c                   	rex.WR
   14000daac:	49                   	rex.WB
   14000daad:	47                   	rex.RXB
   14000daae:	4e                   	rex.WRX
   14000daaf:	45                   	rex.RB
   14000dab0:	44 5f                	rex.R pop rdi
   14000dab2:	53                   	push   rbx
   14000dab3:	54                   	push   rsp
   14000dab4:	4f 52                	rex.WRXB push r10
   14000dab6:	45 5f                	rex.RB pop r15
   14000dab8:	4f 50                	rex.WRXB push r8
   14000daba:	54                   	push   rsp
   14000dabb:	49                   	rex.WB
   14000dabc:	4d                   	rex.WRB
   14000dabd:	41                   	rex.B
   14000dabe:	4c 00 4c 01 58       	rex.WR add BYTE PTR [rcx+rax*1+0x58],r9b
   14000dac3:	38 36                	cmp    BYTE PTR [rsi],dh
   14000dac5:	5f                   	pop    rdi
   14000dac6:	54                   	push   rsp
   14000dac7:	55                   	push   rbp
   14000dac8:	4e                   	rex.WRX
   14000dac9:	45 5f                	rex.RB pop r15
   14000dacb:	41 56                	push   r14
   14000dacd:	58                   	pop    rax
   14000dace:	32 35 36 5f 53 50    	xor    dh,BYTE PTR [rip+0x50535f36]        # 190543a0a <.debug_line_str+0x50531973>
   14000dad4:	4c                   	rex.WR
   14000dad5:	49 54                	rex.WB push r12
   14000dad7:	5f                   	pop    rdi
   14000dad8:	52                   	push   rdx
   14000dad9:	45                   	rex.RB
   14000dada:	47 53                	rex.RXB push r11
   14000dadc:	00 4d 01             	add    BYTE PTR [rbp+0x1],cl
   14000dadf:	58                   	pop    rax
   14000dae0:	38 36                	cmp    BYTE PTR [rsi],dh
   14000dae2:	5f                   	pop    rdi
   14000dae3:	54                   	push   rsp
   14000dae4:	55                   	push   rbp
   14000dae5:	4e                   	rex.WRX
   14000dae6:	45 5f                	rex.RB pop r15
   14000dae8:	41 56                	push   r14
   14000daea:	58                   	pop    rax
   14000daeb:	31 32                	xor    DWORD PTR [rdx],esi
   14000daed:	38 5f 4f             	cmp    BYTE PTR [rdi+0x4f],bl
   14000daf0:	50                   	push   rax
   14000daf1:	54                   	push   rsp
   14000daf2:	49                   	rex.WB
   14000daf3:	4d                   	rex.WRB
   14000daf4:	41                   	rex.B
   14000daf5:	4c 00 4e 01          	rex.WR add BYTE PTR [rsi+0x1],r9b
   14000daf9:	58                   	pop    rax
   14000dafa:	38 36                	cmp    BYTE PTR [rsi],dh
   14000dafc:	5f                   	pop    rdi
   14000dafd:	54                   	push   rsp
   14000dafe:	55                   	push   rbp
   14000daff:	4e                   	rex.WRX
   14000db00:	45 5f                	rex.RB pop r15
   14000db02:	41 56                	push   r14
   14000db04:	58                   	pop    rax
   14000db05:	32 35 36 5f 4f 50    	xor    dh,BYTE PTR [rip+0x504f5f36]        # 190503a41 <.debug_line_str+0x504f19aa>
   14000db0b:	54                   	push   rsp
   14000db0c:	49                   	rex.WB
   14000db0d:	4d                   	rex.WRB
   14000db0e:	41                   	rex.B
   14000db0f:	4c 00 4f 01          	rex.WR add BYTE PTR [rdi+0x1],r9b
   14000db13:	58                   	pop    rax
   14000db14:	38 36                	cmp    BYTE PTR [rsi],dh
   14000db16:	5f                   	pop    rdi
   14000db17:	54                   	push   rsp
   14000db18:	55                   	push   rbp
   14000db19:	4e                   	rex.WRX
   14000db1a:	45 5f                	rex.RB pop r15
   14000db1c:	41 56                	push   r14
   14000db1e:	58                   	pop    rax
   14000db1f:	35 31 32 5f 53       	xor    eax,0x535f3231
   14000db24:	50                   	push   rax
   14000db25:	4c                   	rex.WR
   14000db26:	49 54                	rex.WB push r12
   14000db28:	5f                   	pop    rdi
   14000db29:	52                   	push   rdx
   14000db2a:	45                   	rex.RB
   14000db2b:	47 53                	rex.RXB push r11
   14000db2d:	00 50 01             	add    BYTE PTR [rax+0x1],dl
   14000db30:	58                   	pop    rax
   14000db31:	38 36                	cmp    BYTE PTR [rsi],dh
   14000db33:	5f                   	pop    rdi
   14000db34:	54                   	push   rsp
   14000db35:	55                   	push   rbp
   14000db36:	4e                   	rex.WRX
   14000db37:	45 5f                	rex.RB pop r15
   14000db39:	41 56                	push   r14
   14000db3b:	58                   	pop    rax
   14000db3c:	32 35 36 5f 4d 4f    	xor    dh,BYTE PTR [rip+0x4f4d5f36]        # 18f4e3a78 <.debug_line_str+0x4f4d19e1>
   14000db42:	56                   	push   rsi
   14000db43:	45 5f                	rex.RB pop r15
   14000db45:	42 59                	rex.X pop rcx
   14000db47:	5f                   	pop    rdi
   14000db48:	50                   	push   rax
   14000db49:	49                   	rex.WB
   14000db4a:	45                   	rex.RB
   14000db4b:	43                   	rex.XB
   14000db4c:	45 53                	rex.RB push r11
   14000db4e:	00 51 01             	add    BYTE PTR [rcx+0x1],dl
   14000db51:	58                   	pop    rax
   14000db52:	38 36                	cmp    BYTE PTR [rsi],dh
   14000db54:	5f                   	pop    rdi
   14000db55:	54                   	push   rsp
   14000db56:	55                   	push   rbp
   14000db57:	4e                   	rex.WRX
   14000db58:	45 5f                	rex.RB pop r15
   14000db5a:	41 56                	push   r14
   14000db5c:	58                   	pop    rax
   14000db5d:	32 35 36 5f 53 54    	xor    dh,BYTE PTR [rip+0x54535f36]        # 194543a99 <.debug_line_str+0x54531a02>
   14000db63:	4f 52                	rex.WRXB push r10
   14000db65:	45 5f                	rex.RB pop r15
   14000db67:	42 59                	rex.X pop rcx
   14000db69:	5f                   	pop    rdi
   14000db6a:	50                   	push   rax
   14000db6b:	49                   	rex.WB
   14000db6c:	45                   	rex.RB
   14000db6d:	43                   	rex.XB
   14000db6e:	45 53                	rex.RB push r11
   14000db70:	00 52 01             	add    BYTE PTR [rdx+0x1],dl
   14000db73:	58                   	pop    rax
   14000db74:	38 36                	cmp    BYTE PTR [rsi],dh
   14000db76:	5f                   	pop    rdi
   14000db77:	54                   	push   rsp
   14000db78:	55                   	push   rbp
   14000db79:	4e                   	rex.WRX
   14000db7a:	45 5f                	rex.RB pop r15
   14000db7c:	41 56                	push   r14
   14000db7e:	58                   	pop    rax
   14000db7f:	35 31 32 5f 4d       	xor    eax,0x4d5f3231
   14000db84:	4f 56                	rex.WRXB push r14
   14000db86:	45 5f                	rex.RB pop r15
   14000db88:	42 59                	rex.X pop rcx
   14000db8a:	5f                   	pop    rdi
   14000db8b:	50                   	push   rax
   14000db8c:	49                   	rex.WB
   14000db8d:	45                   	rex.RB
   14000db8e:	43                   	rex.XB
   14000db8f:	45 53                	rex.RB push r11
   14000db91:	00 53 01             	add    BYTE PTR [rbx+0x1],dl
   14000db94:	58                   	pop    rax
   14000db95:	38 36                	cmp    BYTE PTR [rsi],dh
   14000db97:	5f                   	pop    rdi
   14000db98:	54                   	push   rsp
   14000db99:	55                   	push   rbp
   14000db9a:	4e                   	rex.WRX
   14000db9b:	45 5f                	rex.RB pop r15
   14000db9d:	41 56                	push   r14
   14000db9f:	58                   	pop    rax
   14000dba0:	35 31 32 5f 53       	xor    eax,0x535f3231
   14000dba5:	54                   	push   rsp
   14000dba6:	4f 52                	rex.WRXB push r10
   14000dba8:	45 5f                	rex.RB pop r15
   14000dbaa:	42 59                	rex.X pop rcx
   14000dbac:	5f                   	pop    rdi
   14000dbad:	50                   	push   rax
   14000dbae:	49                   	rex.WB
   14000dbaf:	45                   	rex.RB
   14000dbb0:	43                   	rex.XB
   14000dbb1:	45 53                	rex.RB push r11
   14000dbb3:	00 54 01 58          	add    BYTE PTR [rcx+rax*1+0x58],dl
   14000dbb7:	38 36                	cmp    BYTE PTR [rsi],dh
   14000dbb9:	5f                   	pop    rdi
   14000dbba:	54                   	push   rsp
   14000dbbb:	55                   	push   rbp
   14000dbbc:	4e                   	rex.WRX
   14000dbbd:	45 5f                	rex.RB pop r15
   14000dbbf:	44                   	rex.R
   14000dbc0:	4f 55                	rex.WRXB push r13
   14000dbc2:	42                   	rex.X
   14000dbc3:	4c                   	rex.WR
   14000dbc4:	45 5f                	rex.RB pop r15
   14000dbc6:	57                   	push   rdi
   14000dbc7:	49 54                	rex.WB push r12
   14000dbc9:	48 5f                	rex.W pop rdi
   14000dbcb:	41                   	rex.B
   14000dbcc:	44                   	rex.R
   14000dbcd:	44 00 55 01          	add    BYTE PTR [rbp+0x1],r10b
   14000dbd1:	58                   	pop    rax
   14000dbd2:	38 36                	cmp    BYTE PTR [rsi],dh
   14000dbd4:	5f                   	pop    rdi
   14000dbd5:	54                   	push   rsp
   14000dbd6:	55                   	push   rbp
   14000dbd7:	4e                   	rex.WRX
   14000dbd8:	45 5f                	rex.RB pop r15
   14000dbda:	41                   	rex.B
   14000dbdb:	4c 57                	rex.WR push rdi
   14000dbdd:	41 59                	pop    r9
   14000dbdf:	53                   	push   rbx
   14000dbe0:	5f                   	pop    rdi
   14000dbe1:	46                   	rex.RX
   14000dbe2:	41                   	rex.B
   14000dbe3:	4e                   	rex.WRX
   14000dbe4:	43 59                	rex.XB pop r9
   14000dbe6:	5f                   	pop    rdi
   14000dbe7:	4d                   	rex.WRB
   14000dbe8:	41 54                	push   r12
   14000dbea:	48 5f                	rex.W pop rdi
   14000dbec:	33 38                	xor    edi,DWORD PTR [rax]
   14000dbee:	37                   	(bad)
   14000dbef:	00 56 01             	add    BYTE PTR [rsi+0x1],dl
   14000dbf2:	58                   	pop    rax
   14000dbf3:	38 36                	cmp    BYTE PTR [rsi],dh
   14000dbf5:	5f                   	pop    rdi
   14000dbf6:	54                   	push   rsp
   14000dbf7:	55                   	push   rbp
   14000dbf8:	4e                   	rex.WRX
   14000dbf9:	45 5f                	rex.RB pop r15
   14000dbfb:	55                   	push   rbp
   14000dbfc:	4e 52                	rex.WRX push rdx
   14000dbfe:	4f                   	rex.WRXB
   14000dbff:	4c                   	rex.WR
   14000dc00:	4c 5f                	rex.WR pop rdi
   14000dc02:	53                   	push   rbx
   14000dc03:	54                   	push   rsp
   14000dc04:	52                   	push   rdx
   14000dc05:	4c                   	rex.WR
   14000dc06:	45                   	rex.RB
   14000dc07:	4e 00 57 01          	rex.WRX add BYTE PTR [rdi+0x1],r10b
   14000dc0b:	58                   	pop    rax
   14000dc0c:	38 36                	cmp    BYTE PTR [rsi],dh
   14000dc0e:	5f                   	pop    rdi
   14000dc0f:	54                   	push   rsp
   14000dc10:	55                   	push   rbp
   14000dc11:	4e                   	rex.WRX
   14000dc12:	45 5f                	rex.RB pop r15
   14000dc14:	53                   	push   rbx
   14000dc15:	48                   	rex.W
   14000dc16:	49                   	rex.WB
   14000dc17:	46 54                	rex.RX push rsp
   14000dc19:	31 00                	xor    DWORD PTR [rax],eax
   14000dc1b:	58                   	pop    rax
   14000dc1c:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000dc1f:	36 5f                	ss pop rdi
   14000dc21:	54                   	push   rsp
   14000dc22:	55                   	push   rbp
   14000dc23:	4e                   	rex.WRX
   14000dc24:	45 5f                	rex.RB pop r15
   14000dc26:	5a                   	pop    rdx
   14000dc27:	45 52                	rex.RB push r10
   14000dc29:	4f 5f                	rex.WRXB pop r15
   14000dc2b:	45 58                	rex.RB pop r8
   14000dc2d:	54                   	push   rsp
   14000dc2e:	45                   	rex.RB
   14000dc2f:	4e                   	rex.WRX
   14000dc30:	44 5f                	rex.R pop rdi
   14000dc32:	57                   	push   rdi
   14000dc33:	49 54                	rex.WB push r12
   14000dc35:	48 5f                	rex.W pop rdi
   14000dc37:	41                   	rex.B
   14000dc38:	4e                   	rex.WRX
   14000dc39:	44 00 59 01          	add    BYTE PTR [rcx+0x1],r11b
   14000dc3d:	58                   	pop    rax
   14000dc3e:	38 36                	cmp    BYTE PTR [rsi],dh
   14000dc40:	5f                   	pop    rdi
   14000dc41:	54                   	push   rsp
   14000dc42:	55                   	push   rbp
   14000dc43:	4e                   	rex.WRX
   14000dc44:	45 5f                	rex.RB pop r15
   14000dc46:	50                   	push   rax
   14000dc47:	52                   	push   rdx
   14000dc48:	4f                   	rex.WRXB
   14000dc49:	4d                   	rex.WRB
   14000dc4a:	4f 54                	rex.WRXB push r12
   14000dc4c:	45 5f                	rex.RB pop r15
   14000dc4e:	48                   	rex.W
   14000dc4f:	49                   	rex.WB
   14000dc50:	4d                   	rex.WRB
   14000dc51:	4f                   	rex.WRXB
   14000dc52:	44                   	rex.R
   14000dc53:	45 5f                	rex.RB pop r15
   14000dc55:	49                   	rex.WB
   14000dc56:	4d 55                	rex.WRB push r13
   14000dc58:	4c 00 5a 01          	rex.WR add BYTE PTR [rdx+0x1],r11b
   14000dc5c:	58                   	pop    rax
   14000dc5d:	38 36                	cmp    BYTE PTR [rsi],dh
   14000dc5f:	5f                   	pop    rdi
   14000dc60:	54                   	push   rsp
   14000dc61:	55                   	push   rbp
   14000dc62:	4e                   	rex.WRX
   14000dc63:	45 5f                	rex.RB pop r15
   14000dc65:	46                   	rex.RX
   14000dc66:	41 53                	push   r11
   14000dc68:	54                   	push   rsp
   14000dc69:	5f                   	pop    rdi
   14000dc6a:	50                   	push   rax
   14000dc6b:	52                   	push   rdx
   14000dc6c:	45                   	rex.RB
   14000dc6d:	46                   	rex.RX
   14000dc6e:	49 58                	rex.WB pop r8
   14000dc70:	00 5b 01             	add    BYTE PTR [rbx+0x1],bl
   14000dc73:	58                   	pop    rax
   14000dc74:	38 36                	cmp    BYTE PTR [rsi],dh
   14000dc76:	5f                   	pop    rdi
   14000dc77:	54                   	push   rsp
   14000dc78:	55                   	push   rbp
   14000dc79:	4e                   	rex.WRX
   14000dc7a:	45 5f                	rex.RB pop r15
   14000dc7c:	52                   	push   rdx
   14000dc7d:	45                   	rex.RB
   14000dc7e:	41                   	rex.B
   14000dc7f:	44 5f                	rex.R pop rdi
   14000dc81:	4d                   	rex.WRB
   14000dc82:	4f                   	rex.WRXB
   14000dc83:	44                   	rex.R
   14000dc84:	49                   	rex.WB
   14000dc85:	46 59                	rex.RX pop rcx
   14000dc87:	5f                   	pop    rdi
   14000dc88:	57                   	push   rdi
   14000dc89:	52                   	push   rdx
   14000dc8a:	49 54                	rex.WB push r12
   14000dc8c:	45 00 5c 01 58       	add    BYTE PTR [r9+rax*1+0x58],r11b
   14000dc91:	38 36                	cmp    BYTE PTR [rsi],dh
   14000dc93:	5f                   	pop    rdi
   14000dc94:	54                   	push   rsp
   14000dc95:	55                   	push   rbp
   14000dc96:	4e                   	rex.WRX
   14000dc97:	45 5f                	rex.RB pop r15
   14000dc99:	4d                   	rex.WRB
   14000dc9a:	4f 56                	rex.WRXB push r14
   14000dc9c:	45 5f                	rex.RB pop r15
   14000dc9e:	4d 31 5f 56          	xor    QWORD PTR [r15+0x56],r11
   14000dca2:	49                   	rex.WB
   14000dca3:	41 5f                	pop    r15
   14000dca5:	4f 52                	rex.WRXB push r10
   14000dca7:	00 5d 01             	add    BYTE PTR [rbp+0x1],bl
   14000dcaa:	58                   	pop    rax
   14000dcab:	38 36                	cmp    BYTE PTR [rsi],dh
   14000dcad:	5f                   	pop    rdi
   14000dcae:	54                   	push   rsp
   14000dcaf:	55                   	push   rbp
   14000dcb0:	4e                   	rex.WRX
   14000dcb1:	45 5f                	rex.RB pop r15
   14000dcb3:	4e                   	rex.WRX
   14000dcb4:	4f 54                	rex.WRXB push r12
   14000dcb6:	5f                   	pop    rdi
   14000dcb7:	55                   	push   rbp
   14000dcb8:	4e 50                	rex.WRX push rax
   14000dcba:	41                   	rex.B
   14000dcbb:	49 52                	rex.WB push r10
   14000dcbd:	41                   	rex.B
   14000dcbe:	42                   	rex.X
   14000dcbf:	4c                   	rex.WR
   14000dcc0:	45 00 5e 01          	add    BYTE PTR [r14+0x1],r11b
   14000dcc4:	58                   	pop    rax
   14000dcc5:	38 36                	cmp    BYTE PTR [rsi],dh
   14000dcc7:	5f                   	pop    rdi
   14000dcc8:	54                   	push   rsp
   14000dcc9:	55                   	push   rbp
   14000dcca:	4e                   	rex.WRX
   14000dccb:	45 5f                	rex.RB pop r15
   14000dccd:	50                   	push   rax
   14000dcce:	41 52                	push   r10
   14000dcd0:	54                   	push   rsp
   14000dcd1:	49                   	rex.WB
   14000dcd2:	41                   	rex.B
   14000dcd3:	4c 5f                	rex.WR pop rdi
   14000dcd5:	52                   	push   rdx
   14000dcd6:	45                   	rex.RB
   14000dcd7:	47 5f                	rex.RXB pop r15
   14000dcd9:	53                   	push   rbx
   14000dcda:	54                   	push   rsp
   14000dcdb:	41                   	rex.B
   14000dcdc:	4c                   	rex.WR
   14000dcdd:	4c 00 5f 01          	rex.WR add BYTE PTR [rdi+0x1],r11b
   14000dce1:	58                   	pop    rax
   14000dce2:	38 36                	cmp    BYTE PTR [rsi],dh
   14000dce4:	5f                   	pop    rdi
   14000dce5:	54                   	push   rsp
   14000dce6:	55                   	push   rbp
   14000dce7:	4e                   	rex.WRX
   14000dce8:	45 5f                	rex.RB pop r15
   14000dcea:	50                   	push   rax
   14000dceb:	52                   	push   rdx
   14000dcec:	4f                   	rex.WRXB
   14000dced:	4d                   	rex.WRB
   14000dcee:	4f 54                	rex.WRXB push r12
   14000dcf0:	45 5f                	rex.RB pop r15
   14000dcf2:	51                   	push   rcx
   14000dcf3:	49                   	rex.WB
   14000dcf4:	4d                   	rex.WRB
   14000dcf5:	4f                   	rex.WRXB
   14000dcf6:	44                   	rex.R
   14000dcf7:	45 00 60 01          	add    BYTE PTR [r8+0x1],r12b
   14000dcfb:	58                   	pop    rax
   14000dcfc:	38 36                	cmp    BYTE PTR [rsi],dh
   14000dcfe:	5f                   	pop    rdi
   14000dcff:	54                   	push   rsp
   14000dd00:	55                   	push   rbp
   14000dd01:	4e                   	rex.WRX
   14000dd02:	45 5f                	rex.RB pop r15
   14000dd04:	50                   	push   rax
   14000dd05:	52                   	push   rdx
   14000dd06:	4f                   	rex.WRXB
   14000dd07:	4d                   	rex.WRB
   14000dd08:	4f 54                	rex.WRXB push r12
   14000dd0a:	45 5f                	rex.RB pop r15
   14000dd0c:	48                   	rex.W
   14000dd0d:	49 5f                	rex.WB pop r15
   14000dd0f:	52                   	push   rdx
   14000dd10:	45                   	rex.RB
   14000dd11:	47 53                	rex.RXB push r11
   14000dd13:	00 61 01             	add    BYTE PTR [rcx+0x1],ah
   14000dd16:	58                   	pop    rax
   14000dd17:	38 36                	cmp    BYTE PTR [rsi],dh
   14000dd19:	5f                   	pop    rdi
   14000dd1a:	54                   	push   rsp
   14000dd1b:	55                   	push   rbp
   14000dd1c:	4e                   	rex.WRX
   14000dd1d:	45 5f                	rex.RB pop r15
   14000dd1f:	48                   	rex.W
   14000dd20:	49                   	rex.WB
   14000dd21:	4d                   	rex.WRB
   14000dd22:	4f                   	rex.WRXB
   14000dd23:	44                   	rex.R
   14000dd24:	45 5f                	rex.RB pop r15
   14000dd26:	4d                   	rex.WRB
   14000dd27:	41 54                	push   r12
   14000dd29:	48 00 62 01          	rex.W add BYTE PTR [rdx+0x1],spl
   14000dd2d:	58                   	pop    rax
   14000dd2e:	38 36                	cmp    BYTE PTR [rsi],dh
   14000dd30:	5f                   	pop    rdi
   14000dd31:	54                   	push   rsp
   14000dd32:	55                   	push   rbp
   14000dd33:	4e                   	rex.WRX
   14000dd34:	45 5f                	rex.RB pop r15
   14000dd36:	53                   	push   rbx
   14000dd37:	50                   	push   rax
   14000dd38:	4c                   	rex.WR
   14000dd39:	49 54                	rex.WB push r12
   14000dd3b:	5f                   	pop    rdi
   14000dd3c:	4c                   	rex.WR
   14000dd3d:	4f                   	rex.WRXB
   14000dd3e:	4e                   	rex.WRX
   14000dd3f:	47 5f                	rex.RXB pop r15
   14000dd41:	4d                   	rex.WRB
   14000dd42:	4f 56                	rex.WRXB push r14
   14000dd44:	45 53                	rex.RB push r11
   14000dd46:	00 63 01             	add    BYTE PTR [rbx+0x1],ah
   14000dd49:	58                   	pop    rax
   14000dd4a:	38 36                	cmp    BYTE PTR [rsi],dh
   14000dd4c:	5f                   	pop    rdi
   14000dd4d:	54                   	push   rsp
   14000dd4e:	55                   	push   rbp
   14000dd4f:	4e                   	rex.WRX
   14000dd50:	45 5f                	rex.RB pop r15
   14000dd52:	55                   	push   rbp
   14000dd53:	53                   	push   rbx
   14000dd54:	45 5f                	rex.RB pop r15
   14000dd56:	58                   	pop    rax
   14000dd57:	43                   	rex.XB
   14000dd58:	48                   	rex.W
   14000dd59:	47                   	rex.RXB
   14000dd5a:	42 00 64 01 58       	add    BYTE PTR [rcx+r8*1+0x58],spl
   14000dd5f:	38 36                	cmp    BYTE PTR [rsi],dh
   14000dd61:	5f                   	pop    rdi
   14000dd62:	54                   	push   rsp
   14000dd63:	55                   	push   rbp
   14000dd64:	4e                   	rex.WRX
   14000dd65:	45 5f                	rex.RB pop r15
   14000dd67:	55                   	push   rbp
   14000dd68:	53                   	push   rbx
   14000dd69:	45 5f                	rex.RB pop r15
   14000dd6b:	4d                   	rex.WRB
   14000dd6c:	4f 56                	rex.WRXB push r14
   14000dd6e:	30 00                	xor    BYTE PTR [rax],al
   14000dd70:	65 01 58 38          	add    DWORD PTR gs:[rax+0x38],ebx
   14000dd74:	36 5f                	ss pop rdi
   14000dd76:	54                   	push   rsp
   14000dd77:	55                   	push   rbp
   14000dd78:	4e                   	rex.WRX
   14000dd79:	45 5f                	rex.RB pop r15
   14000dd7b:	4e                   	rex.WRX
   14000dd7c:	4f 54                	rex.WRXB push r12
   14000dd7e:	5f                   	pop    rdi
   14000dd7f:	56                   	push   rsi
   14000dd80:	45                   	rex.RB
   14000dd81:	43 54                	rex.XB push r12
   14000dd83:	4f 52                	rex.WRXB push r10
   14000dd85:	4d                   	rex.WRB
   14000dd86:	4f                   	rex.WRXB
   14000dd87:	44                   	rex.R
   14000dd88:	45 00 66 01          	add    BYTE PTR [r14+0x1],r12b
   14000dd8c:	58                   	pop    rax
   14000dd8d:	38 36                	cmp    BYTE PTR [rsi],dh
   14000dd8f:	5f                   	pop    rdi
   14000dd90:	54                   	push   rsp
   14000dd91:	55                   	push   rbp
   14000dd92:	4e                   	rex.WRX
   14000dd93:	45 5f                	rex.RB pop r15
   14000dd95:	41 56                	push   r14
   14000dd97:	4f                   	rex.WRXB
   14000dd98:	49                   	rex.WB
   14000dd99:	44 5f                	rex.R pop rdi
   14000dd9b:	56                   	push   rsi
   14000dd9c:	45                   	rex.RB
   14000dd9d:	43 54                	rex.XB push r12
   14000dd9f:	4f 52                	rex.WRXB push r10
   14000dda1:	5f                   	pop    rdi
   14000dda2:	44                   	rex.R
   14000dda3:	45                   	rex.RB
   14000dda4:	43                   	rex.XB
   14000dda5:	4f                   	rex.WRXB
   14000dda6:	44                   	rex.R
   14000dda7:	45 00 67 01          	add    BYTE PTR [r15+0x1],r12b
   14000ddab:	58                   	pop    rax
   14000ddac:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ddae:	5f                   	pop    rdi
   14000ddaf:	54                   	push   rsp
   14000ddb0:	55                   	push   rbp
   14000ddb1:	4e                   	rex.WRX
   14000ddb2:	45 5f                	rex.RB pop r15
   14000ddb4:	42 52                	rex.X push rdx
   14000ddb6:	41                   	rex.B
   14000ddb7:	4e                   	rex.WRX
   14000ddb8:	43                   	rex.XB
   14000ddb9:	48 5f                	rex.W pop rdi
   14000ddbb:	50                   	push   rax
   14000ddbc:	52                   	push   rdx
   14000ddbd:	45                   	rex.RB
   14000ddbe:	44                   	rex.R
   14000ddbf:	49                   	rex.WB
   14000ddc0:	43 54                	rex.XB push r12
   14000ddc2:	49                   	rex.WB
   14000ddc3:	4f                   	rex.WRXB
   14000ddc4:	4e 5f                	rex.WRX pop rdi
   14000ddc6:	48                   	rex.W
   14000ddc7:	49                   	rex.WB
   14000ddc8:	4e 54                	rex.WRX push rsp
   14000ddca:	53                   	push   rbx
   14000ddcb:	00 68 01             	add    BYTE PTR [rax+0x1],ch
   14000ddce:	58                   	pop    rax
   14000ddcf:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ddd1:	5f                   	pop    rdi
   14000ddd2:	54                   	push   rsp
   14000ddd3:	55                   	push   rbp
   14000ddd4:	4e                   	rex.WRX
   14000ddd5:	45 5f                	rex.RB pop r15
   14000ddd7:	51                   	push   rcx
   14000ddd8:	49                   	rex.WB
   14000ddd9:	4d                   	rex.WRB
   14000ddda:	4f                   	rex.WRXB
   14000dddb:	44                   	rex.R
   14000dddc:	45 5f                	rex.RB pop r15
   14000ddde:	4d                   	rex.WRB
   14000dddf:	41 54                	push   r12
   14000dde1:	48 00 69 01          	rex.W add BYTE PTR [rcx+0x1],bpl
   14000dde5:	58                   	pop    rax
   14000dde6:	38 36                	cmp    BYTE PTR [rsi],dh
   14000dde8:	5f                   	pop    rdi
   14000dde9:	54                   	push   rsp
   14000ddea:	55                   	push   rbp
   14000ddeb:	4e                   	rex.WRX
   14000ddec:	45 5f                	rex.RB pop r15
   14000ddee:	50                   	push   rax
   14000ddef:	52                   	push   rdx
   14000ddf0:	4f                   	rex.WRXB
   14000ddf1:	4d                   	rex.WRB
   14000ddf2:	4f 54                	rex.WRXB push r12
   14000ddf4:	45 5f                	rex.RB pop r15
   14000ddf6:	51                   	push   rcx
   14000ddf7:	49 5f                	rex.WB pop r15
   14000ddf9:	52                   	push   rdx
   14000ddfa:	45                   	rex.RB
   14000ddfb:	47 53                	rex.RXB push r11
   14000ddfd:	00 6a 01             	add    BYTE PTR [rdx+0x1],ch
   14000de00:	58                   	pop    rax
   14000de01:	38 36                	cmp    BYTE PTR [rsi],dh
   14000de03:	5f                   	pop    rdi
   14000de04:	54                   	push   rsp
   14000de05:	55                   	push   rbp
   14000de06:	4e                   	rex.WRX
   14000de07:	45 5f                	rex.RB pop r15
   14000de09:	45                   	rex.RB
   14000de0a:	4d                   	rex.WRB
   14000de0b:	49 54                	rex.WB push r12
   14000de0d:	5f                   	pop    rdi
   14000de0e:	56                   	push   rsi
   14000de0f:	5a                   	pop    rdx
   14000de10:	45 52                	rex.RB push r10
   14000de12:	4f 55                	rex.WRXB push r13
   14000de14:	50                   	push   rax
   14000de15:	50                   	push   rax
   14000de16:	45 52                	rex.RB push r10
   14000de18:	00 6b 01             	add    BYTE PTR [rbx+0x1],ch
   14000de1b:	58                   	pop    rax
   14000de1c:	38 36                	cmp    BYTE PTR [rsi],dh
   14000de1e:	5f                   	pop    rdi
   14000de1f:	54                   	push   rsp
   14000de20:	55                   	push   rbp
   14000de21:	4e                   	rex.WRX
   14000de22:	45 5f                	rex.RB pop r15
   14000de24:	4c                   	rex.WR
   14000de25:	41 53                	push   r11
   14000de27:	54                   	push   rsp
   14000de28:	00 6c 00 03          	add    BYTE PTR [rax+rax*1+0x3],ch
   14000de2c:	69 78 38 36 5f 61 72 	imul   edi,DWORD PTR [rax+0x38],0x72615f36
   14000de33:	63 68 5f             	movsxd ebp,DWORD PTR [rax+0x5f]
   14000de36:	69 6e 64 69 63 65 73 	imul   ebp,DWORD PTR [rsi+0x64],0x73656369
   14000de3d:	00 ed                	add    ch,ch
   14000de3f:	00 00                	add    BYTE PTR [rax],al
   14000de41:	00 c5                	add    ch,al
   14000de43:	01 8a 0e 00 00 01    	add    DWORD PTR [rdx+0x100000e],ecx
   14000de49:	58                   	pop    rax
   14000de4a:	38 36                	cmp    BYTE PTR [rsi],dh
   14000de4c:	5f                   	pop    rdi
   14000de4d:	41 52                	push   r10
   14000de4f:	43                   	rex.XB
   14000de50:	48 5f                	rex.W pop rdi
   14000de52:	43                   	rex.XB
   14000de53:	4d                   	rex.WRB
   14000de54:	4f 56                	rex.WRXB push r14
   14000de56:	00 00                	add    BYTE PTR [rax],al
   14000de58:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000de5b:	36 5f                	ss pop rdi
   14000de5d:	41 52                	push   r10
   14000de5f:	43                   	rex.XB
   14000de60:	48 5f                	rex.W pop rdi
   14000de62:	43                   	rex.XB
   14000de63:	4d 50                	rex.WRB push r8
   14000de65:	58                   	pop    rax
   14000de66:	43                   	rex.XB
   14000de67:	48                   	rex.W
   14000de68:	47 00 01             	rex.RXB add BYTE PTR [r9],r8b
   14000de6b:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000de6e:	36 5f                	ss pop rdi
   14000de70:	41 52                	push   r10
   14000de72:	43                   	rex.XB
   14000de73:	48 5f                	rex.W pop rdi
   14000de75:	43                   	rex.XB
   14000de76:	4d 50                	rex.WRB push r8
   14000de78:	58                   	pop    rax
   14000de79:	43                   	rex.XB
   14000de7a:	48                   	rex.W
   14000de7b:	47 38 42 00          	rex.RXB cmp BYTE PTR [r10+0x0],r8b
   14000de7f:	02 01                	add    al,BYTE PTR [rcx]
   14000de81:	58                   	pop    rax
   14000de82:	38 36                	cmp    BYTE PTR [rsi],dh
   14000de84:	5f                   	pop    rdi
   14000de85:	41 52                	push   r10
   14000de87:	43                   	rex.XB
   14000de88:	48 5f                	rex.W pop rdi
   14000de8a:	58                   	pop    rax
   14000de8b:	41                   	rex.B
   14000de8c:	44                   	rex.R
   14000de8d:	44 00 03             	add    BYTE PTR [rbx],r8b
   14000de90:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000de93:	36 5f                	ss pop rdi
   14000de95:	41 52                	push   r10
   14000de97:	43                   	rex.XB
   14000de98:	48 5f                	rex.W pop rdi
   14000de9a:	42 53                	rex.X push rbx
   14000de9c:	57                   	push   rdi
   14000de9d:	41 50                	push   r8
   14000de9f:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
   14000dea2:	58                   	pop    rax
   14000dea3:	38 36                	cmp    BYTE PTR [rsi],dh
   14000dea5:	5f                   	pop    rdi
   14000dea6:	41 52                	push   r10
   14000dea8:	43                   	rex.XB
   14000dea9:	48 5f                	rex.W pop rdi
   14000deab:	4c                   	rex.WR
   14000deac:	41 53                	push   r11
   14000deae:	54                   	push   rsp
   14000deaf:	00 05 00 02 01 06    	add    BYTE PTR [rip+0x6010200],al        # 14601e0b5 <.debug_line_str+0x600c01e>
   14000deb5:	73 69                	jae    14000df20 <.debug_info+0xef8>
   14000deb7:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000deb9:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
   14000debe:	61                   	(bad)
   14000debf:	72 00                	jb     14000dec1 <.debug_info+0xe99>
   14000dec1:	02 10                	add    dl,BYTE PTR [rax]
   14000dec3:	05 5f 5f 69 6e       	add    eax,0x6e695f5f
   14000dec8:	74 31                	je     14000defb <.debug_info+0xed3>
   14000deca:	32 38                	xor    bh,BYTE PTR [rax]
   14000decc:	00 02                	add    BYTE PTR [rdx],al
   14000dece:	10 07                	adc    BYTE PTR [rdi],al
   14000ded0:	5f                   	pop    rdi
   14000ded1:	5f                   	pop    rdi
   14000ded2:	69 6e 74 31 32 38 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20383231
   14000ded9:	75 6e                	jne    14000df49 <.debug_info+0xf21>
   14000dedb:	73 69                	jae    14000df46 <.debug_info+0xf1e>
   14000dedd:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000dedf:	65 64 00 02          	gs add BYTE PTR fs:[rdx],al
   14000dee3:	02 04 5f             	add    al,BYTE PTR [rdi+rbx*2]
   14000dee6:	46 6c                	rex.RX ins BYTE PTR es:[rdi],dx
   14000dee8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000dee9:	61                   	(bad)
   14000deea:	74 31                	je     14000df1d <.debug_info+0xef5>
   14000deec:	36 00 02             	ss add BYTE PTR [rdx],al
   14000deef:	04 03                	add    al,0x3
   14000def1:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000def4:	70 6c                	jo     14000df62 <.debug_info+0xf3a>
   14000def6:	65 78 20             	gs js  14000df19 <.debug_info+0xef1>
   14000def9:	5f                   	pop    rdi
   14000defa:	46 6c                	rex.RX ins BYTE PTR es:[rdi],dx
   14000defc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000defd:	61                   	(bad)
   14000defe:	74 31                	je     14000df31 <.debug_info+0xf09>
   14000df00:	36 00 02             	ss add BYTE PTR [rdx],al
   14000df03:	08 03                	or     BYTE PTR [rbx],al
   14000df05:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000df08:	70 6c                	jo     14000df76 <.debug_info+0xf4e>
   14000df0a:	65 78 20             	gs js  14000df2d <.debug_info+0xf05>
   14000df0d:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
   14000df0f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000df10:	61                   	(bad)
   14000df11:	74 00                	je     14000df13 <.debug_info+0xeeb>
   14000df13:	02 10                	add    dl,BYTE PTR [rax]
   14000df15:	03 63 6f             	add    esp,DWORD PTR [rbx+0x6f]
   14000df18:	6d                   	ins    DWORD PTR es:[rdi],dx
   14000df19:	70 6c                	jo     14000df87 <.debug_info+0xf5f>
   14000df1b:	65 78 20             	gs js  14000df3e <.debug_info+0xf16>
   14000df1e:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
   14000df20:	75 62                	jne    14000df84 <.debug_info+0xf5c>
   14000df22:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000df23:	65 00 02             	add    BYTE PTR gs:[rdx],al
   14000df26:	20 03                	and    BYTE PTR [rbx],al
   14000df28:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000df2b:	70 6c                	jo     14000df99 <.debug_info+0xf71>
   14000df2d:	65 78 20             	gs js  14000df50 <.debug_info+0xf28>
   14000df30:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000df31:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000df32:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000df33:	67 20 64 6f 75       	and    BYTE PTR [edi+ebp*2+0x75],ah
   14000df38:	62                   	(bad)
   14000df39:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000df3a:	65 00 02             	add    BYTE PTR gs:[rdx],al
   14000df3d:	10 04 5f             	adc    BYTE PTR [rdi+rbx*2],al
   14000df40:	46 6c                	rex.RX ins BYTE PTR es:[rdi],dx
   14000df42:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000df43:	61                   	(bad)
   14000df44:	74 31                	je     14000df77 <.debug_info+0xf4f>
   14000df46:	32 38                	xor    bh,BYTE PTR [rax]
   14000df48:	00 02                	add    BYTE PTR [rdx],al
   14000df4a:	20 03                	and    BYTE PTR [rbx],al
   14000df4c:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000df4f:	70 6c                	jo     14000dfbd <.debug_info+0xf95>
   14000df51:	65 78 20             	gs js  14000df74 <.debug_info+0xf4c>
   14000df54:	5f                   	pop    rdi
   14000df55:	46 6c                	rex.RX ins BYTE PTR es:[rdi],dx
   14000df57:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000df58:	61                   	(bad)
   14000df59:	74 31                	je     14000df8c <.debug_info+0xf64>
   14000df5b:	32 38                	xor    bh,BYTE PTR [rax]
   14000df5d:	00 0a                	add    BYTE PTR [rdx],cl
   14000df5f:	66 75 6e             	data16 jne 14000dfd0 <.debug_info+0xfa8>
   14000df62:	63 5f 70             	movsxd ebx,DWORD PTR [rdi+0x70]
   14000df65:	74 72                	je     14000dfd9 <.debug_info+0xfb1>
   14000df67:	00 02                	add    BYTE PTR [rdx],al
   14000df69:	2a 10                	sub    dl,BYTE PTR [rax]
   14000df6b:	30 01                	xor    BYTE PTR [rcx],al
   14000df6d:	00 00                	add    BYTE PTR [rax],al
   14000df6f:	04 36                	add    al,0x36
   14000df71:	0f 00 00             	sldt   WORD PTR [rax]
   14000df74:	52                   	push   rdx
   14000df75:	0f 00 00             	sldt   WORD PTR [rax]
   14000df78:	0b 00                	or     eax,DWORD PTR [rax]
   14000df7a:	05 5f 5f 43 54       	add    eax,0x54435f5f
   14000df7f:	4f 52                	rex.WRXB push r10
   14000df81:	5f                   	pop    rdi
   14000df82:	4c                   	rex.WR
   14000df83:	49 53                	rex.WB push r11
   14000df85:	54                   	push   rsp
   14000df86:	5f                   	pop    rdi
   14000df87:	5f                   	pop    rdi
   14000df88:	00 2f                	add    BYTE PTR [rdi],ch
   14000df8a:	47 0f 00 00          	rex.RXB sldt WORD PTR [r8]
   14000df8e:	05 5f 5f 44 54       	add    eax,0x54445f5f
   14000df93:	4f 52                	rex.WRXB push r10
   14000df95:	5f                   	pop    rdi
   14000df96:	4c                   	rex.WR
   14000df97:	49 53                	rex.WB push r11
   14000df99:	54                   	push   rsp
   14000df9a:	5f                   	pop    rdi
   14000df9b:	5f                   	pop    rdi
   14000df9c:	00 30                	add    BYTE PTR [rax],dh
   14000df9e:	47 0f 00 00          	rex.RXB sldt WORD PTR [r8]
   14000dfa2:	04 36                	add    al,0x36
   14000dfa4:	0f 00 00             	sldt   WORD PTR [rax]
   14000dfa7:	8a 0f                	mov    cl,BYTE PTR [rdi]
   14000dfa9:	00 00                	add    BYTE PTR [rax],al
   14000dfab:	0c 99                	or     al,0x99
   14000dfad:	00 00                	add    BYTE PTR [rax],al
   14000dfaf:	00 01                	add    BYTE PTR [rcx],al
   14000dfb1:	00 06                	add    BYTE PTR [rsi],al
   14000dfb3:	52                   	push   rdx
   14000dfb4:	0f 00 00             	sldt   WORD PTR [rax]
   14000dfb7:	94                   	xchg   esp,eax
   14000dfb8:	09 7a 0f             	or     DWORD PTR [rdx+0xf],edi
   14000dfbb:	00 00                	add    BYTE PTR [rax],al
   14000dfbd:	09 03                	or     DWORD PTR [rbx],eax
   14000dfbf:	60                   	(bad)
   14000dfc0:	71 00                	jno    14000dfc2 <.debug_info+0xf9a>
   14000dfc2:	40 01 00             	rex add DWORD PTR [rax],eax
   14000dfc5:	00 00                	add    BYTE PTR [rax],al
   14000dfc7:	06                   	(bad)
   14000dfc8:	66 0f 00 00          	data16 sldt WORD PTR [rax]
   14000dfcc:	95                   	xchg   ebp,eax
   14000dfcd:	09 7a 0f             	or     DWORD PTR [rdx+0xf],edi
   14000dfd0:	00 00                	add    BYTE PTR [rax],al
   14000dfd2:	09 03                	or     DWORD PTR [rbx],eax
   14000dfd4:	50                   	push   rax
   14000dfd5:	71 00                	jno    14000dfd7 <.debug_info+0xfaf>
   14000dfd7:	40 01 00             	rex add DWORD PTR [rax],eax
   14000dfda:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_abbrev:

000000014000e000 <.debug_abbrev>:
   14000e000:	01 11                	add    DWORD PTR [rcx],edx
   14000e002:	00 10                	add    BYTE PTR [rax],dl
   14000e004:	17                   	(bad)
   14000e005:	11 01                	adc    DWORD PTR [rcx],eax
   14000e007:	12 0f                	adc    cl,BYTE PTR [rdi]
   14000e009:	03 0e                	add    ecx,DWORD PTR [rsi]
   14000e00b:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
   14000e00d:	25 0e 13 05 00       	and    eax,0x5130e
	...

000000014000e014 <.debug_abbrev>:
   14000e014:	01 28                	add    DWORD PTR [rax],ebp
   14000e016:	00 03                	add    BYTE PTR [rbx],al
   14000e018:	08 1c 0b             	or     BYTE PTR [rbx+rcx*1],bl
   14000e01b:	00 00                	add    BYTE PTR [rax],al
   14000e01d:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
   14000e020:	0b 0b                	or     ecx,DWORD PTR [rbx]
   14000e022:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
   14000e025:	08 00                	or     BYTE PTR [rax],al
   14000e027:	00 03                	add    BYTE PTR [rbx],al
   14000e029:	04 01                	add    al,0x1
   14000e02b:	03 08                	add    ecx,DWORD PTR [rax]
   14000e02d:	3e 21 07             	ds and DWORD PTR [rdi],eax
   14000e030:	0b 21                	or     esp,DWORD PTR [rcx]
   14000e032:	04 49                	add    al,0x49
   14000e034:	13 3a                	adc    edi,DWORD PTR [rdx]
   14000e036:	21 01                	and    DWORD PTR [rcx],eax
   14000e038:	3b 05 39 21 06 01    	cmp    eax,DWORD PTR [rip+0x1062139]        # 141070177 <.debug_line_str+0x105e0e0>
   14000e03e:	13 00                	adc    eax,DWORD PTR [rax]
   14000e040:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
   14000e043:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
   14000e046:	01 13                	add    DWORD PTR [rbx],edx
   14000e048:	00 00                	add    BYTE PTR [rax],al
   14000e04a:	05 34 00 03 08       	add    eax,0x8030034
   14000e04f:	3a 21                	cmp    ah,BYTE PTR [rcx]
   14000e051:	02 3b                	add    bh,BYTE PTR [rbx]
   14000e053:	0b 39                	or     edi,DWORD PTR [rcx]
   14000e055:	21 11                	and    DWORD PTR [rcx],edx
   14000e057:	49 13 3f             	adc    rdi,QWORD PTR [r15]
   14000e05a:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
   14000e05d:	00 00                	add    BYTE PTR [rax],al
   14000e05f:	06                   	(bad)
   14000e060:	34 00                	xor    al,0x0
   14000e062:	47 13 3a             	rex.RXB adc r15d,DWORD PTR [r10]
   14000e065:	21 03                	and    DWORD PTR [rbx],eax
   14000e067:	3b 05 39 21 0a 49    	cmp    eax,DWORD PTR [rip+0x490a2139]        # 1890b01a6 <.debug_line_str+0x4909e10f>
   14000e06d:	13 02                	adc    eax,DWORD PTR [rdx]
   14000e06f:	18 00                	sbb    BYTE PTR [rax],al
   14000e071:	00 07                	add    BYTE PTR [rdi],al
   14000e073:	11 01                	adc    DWORD PTR [rcx],eax
   14000e075:	25 08 13 0b 03       	and    eax,0x30b1308
   14000e07a:	1f                   	(bad)
   14000e07b:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
   14000e07d:	10 17                	adc    BYTE PTR [rdi],dl
   14000e07f:	00 00                	add    BYTE PTR [rax],al
   14000e081:	08 0f                	or     BYTE PTR [rdi],cl
   14000e083:	00 0b                	add    BYTE PTR [rbx],cl
   14000e085:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
   14000e088:	00 00                	add    BYTE PTR [rax],al
   14000e08a:	09 15 00 27 19 00    	or     DWORD PTR [rip+0x192700],edx        # 1401a0790 <.debug_line_str+0x18e6f9>
   14000e090:	00 0a                	add    BYTE PTR [rdx],cl
   14000e092:	16                   	(bad)
   14000e093:	00 03                	add    BYTE PTR [rbx],al
   14000e095:	08 3a                	or     BYTE PTR [rdx],bh
   14000e097:	0b 3b                	or     edi,DWORD PTR [rbx]
   14000e099:	0b 39                	or     edi,DWORD PTR [rcx]
   14000e09b:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
   14000e09e:	00 00                	add    BYTE PTR [rax],al
   14000e0a0:	0b 21                	or     esp,DWORD PTR [rcx]
   14000e0a2:	00 00                	add    BYTE PTR [rax],al
   14000e0a4:	00 0c 21             	add    BYTE PTR [rcx+riz*1],cl
   14000e0a7:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
   14000e0aa:	2f                   	(bad)
   14000e0ab:	0b 00                	or     eax,DWORD PTR [rax]
	...

Disassembly of section .debug_line:

000000014000f000 <.debug_line>:
   14000f000:	58                   	pop    rax
   14000f001:	00 00                	add    BYTE PTR [rax],al
   14000f003:	00 05 00 08 00 2e    	add    BYTE PTR [rip+0x2e000800],al        # 16e00f809 <.debug_line_str+0x2dffd772>
   14000f009:	00 00                	add    BYTE PTR [rax],al
   14000f00b:	00 01                	add    BYTE PTR [rcx],al
   14000f00d:	01 01                	add    DWORD PTR [rcx],eax
   14000f00f:	fb                   	sti
   14000f010:	0e                   	(bad)
   14000f011:	0d 00 01 01 01       	or     eax,0x1010100
   14000f016:	01 00                	add    DWORD PTR [rax],eax
   14000f018:	00 00                	add    BYTE PTR [rax],al
   14000f01a:	01 00                	add    DWORD PTR [rax],eax
   14000f01c:	00 01                	add    BYTE PTR [rcx],al
   14000f01e:	01 01                	add    DWORD PTR [rcx],eax
   14000f020:	1f                   	(bad)
   14000f021:	02 00                	add    al,BYTE PTR [rax]
   14000f023:	00 00                	add    BYTE PTR [rax],al
   14000f025:	00 5f 00             	add    BYTE PTR [rdi+0x0],bl
   14000f028:	00 00                	add    BYTE PTR [rax],al
   14000f02a:	02 01                	add    al,BYTE PTR [rcx]
   14000f02c:	1f                   	(bad)
   14000f02d:	02 0f                	add    cl,BYTE PTR [rdi]
   14000f02f:	02 8e 00 00 00 01    	add    cl,BYTE PTR [rsi+0x1000000]
   14000f035:	8e 00                	mov    es,WORD PTR [rax]
   14000f037:	00 00                	add    BYTE PTR [rax],al
   14000f039:	01 00                	add    DWORD PTR [rax],eax
   14000f03b:	09 02                	or     DWORD PTR [rdx],eax
   14000f03d:	90                   	nop
   14000f03e:	25 00 40 01 00       	and    eax,0x14000
   14000f043:	00 00                	add    BYTE PTR [rax],al
   14000f045:	03 f4                	add    esi,esp
   14000f047:	00 01                	add    BYTE PTR [rcx],al
   14000f049:	22 22                	and    ah,BYTE PTR [rdx]
   14000f04b:	67 59                	addr32 pop rcx
   14000f04d:	30 75 4b             	xor    BYTE PTR [rbp+0x4b],dh
   14000f050:	67 67 30 3d 4c 22 22 	addr32 xor BYTE PTR [eip+0x222224c],bh        # 1422312a4 <.debug_line_str+0x221f20d>
   14000f057:	02 
   14000f058:	01 00                	add    DWORD PTR [rax],eax
   14000f05a:	01 01                	add    DWORD PTR [rcx],eax

000000014000f05c <.debug_line>:
   14000f05c:	44 00 00             	add    BYTE PTR [rax],r8b
   14000f05f:	00 05 00 08 00 3c    	add    BYTE PTR [rip+0x3c000800],al        # 17c00f865 <.debug_line_str+0x3bffd7ce>
   14000f065:	00 00                	add    BYTE PTR [rax],al
   14000f067:	00 01                	add    BYTE PTR [rcx],al
   14000f069:	01 01                	add    DWORD PTR [rcx],eax
   14000f06b:	fb                   	sti
   14000f06c:	0e                   	(bad)
   14000f06d:	0d 00 01 01 01       	or     eax,0x1010100
   14000f072:	01 00                	add    DWORD PTR [rax],eax
   14000f074:	00 00                	add    BYTE PTR [rax],al
   14000f076:	01 00                	add    DWORD PTR [rax],eax
   14000f078:	00 01                	add    BYTE PTR [rcx],al
   14000f07a:	01 01                	add    DWORD PTR [rcx],eax
   14000f07c:	1f                   	(bad)
   14000f07d:	03 23                	add    esp,DWORD PTR [rbx]
   14000f07f:	01 00                	add    DWORD PTR [rax],eax
   14000f081:	00 82 01 00 00 a5    	add    BYTE PTR [rdx-0x5affffff],al
   14000f087:	01 00                	add    DWORD PTR [rax],eax
   14000f089:	00 02                	add    BYTE PTR [rdx],al
   14000f08b:	01 1f                	add    DWORD PTR [rdi],ebx
   14000f08d:	02 0f                	add    cl,BYTE PTR [rdi]
   14000f08f:	04 d1                	add    al,0xd1
   14000f091:	01 00                	add    DWORD PTR [rax],eax
   14000f093:	00 01                	add    BYTE PTR [rcx],al
   14000f095:	db 01                	fild   DWORD PTR [rcx]
   14000f097:	00 00                	add    BYTE PTR [rax],al
   14000f099:	02 e2                	add    ah,dl
   14000f09b:	01 00                	add    DWORD PTR [rax],eax
   14000f09d:	00 01                	add    BYTE PTR [rcx],al
   14000f09f:	ee                   	out    dx,al
   14000f0a0:	01 00                	add    DWORD PTR [rax],eax
   14000f0a2:	00 01                	add    BYTE PTR [rcx],al

Disassembly of section .debug_frame:

0000000140010000 <.debug_frame>:
   140010000:	14 00                	adc    al,0x0
   140010002:	00 00                	add    BYTE PTR [rax],al
   140010004:	ff                   	(bad)
   140010005:	ff                   	(bad)
   140010006:	ff                   	(bad)
   140010007:	ff 01                	inc    DWORD PTR [rcx]
   140010009:	00 01                	add    BYTE PTR [rcx],al
   14001000b:	78 20                	js     14001002d <.debug_frame+0x2d>
   14001000d:	0c 07                	or     al,0x7
   14001000f:	08 a0 01 00 00 00    	or     BYTE PTR [rax+0x1],ah
   140010015:	00 00                	add    BYTE PTR [rax],al
   140010017:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
   14001001a:	00 00                	add    BYTE PTR [rax],al
   14001001c:	00 00                	add    BYTE PTR [rax],al
   14001001e:	00 00                	add    BYTE PTR [rax],al
   140010020:	90                   	nop
   140010021:	25 00 40 01 00       	and    eax,0x14000
   140010026:	00 00                	add    BYTE PTR [rax],al
   140010028:	32 00                	xor    al,BYTE PTR [rax]
   14001002a:	00 00                	add    BYTE PTR [rax],al
   14001002c:	00 00                	add    BYTE PTR [rax],al
   14001002e:	00 00                	add    BYTE PTR [rax],al
   140010030:	41 0e                	rex.B (bad)
   140010032:	10 82 02 41 0e 18    	adc    BYTE PTR [rdx+0x180e4102],al
   140010038:	80 03 6e             	add    BYTE PTR [rbx],0x6e
   14001003b:	0e                   	(bad)
   14001003c:	10 c0                	adc    al,al
   14001003e:	41 0e                	rex.B (bad)
   140010040:	08 c2                	or     dl,al
   140010042:	00 00                	add    BYTE PTR [rax],al
   140010044:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_str:

0000000140011000 <.debug_str>:
   140011000:	43 3a 2f             	rex.XB cmp bpl,BYTE PTR [r15]
   140011003:	62 75                	(bad)
   140011005:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x2f746f6f
   14001100c:	2f 
   14001100d:	73 72                	jae    140011081 <.debug_str+0x81>
   14001100f:	63 2f                	movsxd ebp,DWORD PTR [rdi]
   140011011:	67 63 63 2d          	movsxd esp,DWORD PTR [ebx+0x2d]
   140011015:	31 33                	xor    DWORD PTR [rbx],esi
   140011017:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   14001101a:	30 2f                	xor    BYTE PTR [rdi],ch
   14001101c:	6c                   	ins    BYTE PTR es:[rdi],dx
   14001101d:	69 62 67 63 63 2f 63 	imul   esp,DWORD PTR [rdx+0x67],0x632f6363
   140011024:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140011025:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140011026:	66 69 67 2f 69 33    	imul   sp,WORD PTR [rdi+0x2f],0x3369
   14001102c:	38 36                	cmp    BYTE PTR [rsi],dh
   14001102e:	5c                   	pop    rsp
   14001102f:	63 79 67             	movsxd edi,DWORD PTR [rcx+0x67]
   140011032:	77 69                	ja     14001109d <.debug_str+0x9d>
   140011034:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140011035:	2e 53                	cs push rbx
   140011037:	00 43 3a             	add    BYTE PTR [rbx+0x3a],al
   14001103a:	5c                   	pop    rsp
   14001103b:	62 75                	(bad)
   14001103d:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x5c746f6f
   140011044:	5c 
   140011045:	78 38                	js     14001107f <.debug_str+0x7f>
   140011047:	36 5f                	ss pop rdi
   140011049:	36 34 2d             	ss xor al,0x2d
   14001104c:	31 33                	xor    DWORD PTR [rbx],esi
   14001104e:	32 30                	xor    dh,BYTE PTR [rax]
   140011050:	2d 77 69 6e 33       	sub    eax,0x336e6977
   140011055:	32 2d 73 65 68 2d    	xor    ch,BYTE PTR [rip+0x2d686573]        # 16d6975ce <.debug_line_str+0x2d685537>
   14001105b:	75 63                	jne    1400110c0 <.debug_str+0xc0>
   14001105d:	72 74                	jb     1400110d3 <.debug_str+0xd3>
   14001105f:	2d 72 74 5f 76       	sub    eax,0x765f7472
   140011064:	31 31                	xor    DWORD PTR [rcx],esi
   140011066:	2d 72 65 76 31       	sub    eax,0x31766572
   14001106b:	5c                   	pop    rsp
   14001106c:	62 75                	(bad)
   14001106e:	69 6c 64 5c 67 63 63 	imul   ebp,DWORD PTR [rsp+riz*2+0x5c],0x2d636367
   140011075:	2d 
   140011076:	31 33                	xor    DWORD PTR [rbx],esi
   140011078:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   14001107b:	30 5c 78 38          	xor    BYTE PTR [rax+rdi*2+0x38],bl
   14001107f:	36 5f                	ss pop rdi
   140011081:	36 34 2d             	ss xor al,0x2d
   140011084:	77 36                	ja     1400110bc <.debug_str+0xbc>
   140011086:	34 2d                	xor    al,0x2d
   140011088:	6d                   	ins    DWORD PTR es:[rdi],dx
   140011089:	69 6e 67 77 33 32 5c 	imul   ebp,DWORD PTR [rsi+0x67],0x5c323377
   140011090:	6c                   	ins    BYTE PTR es:[rdi],dx
   140011091:	69 62 67 63 63 00 47 	imul   esp,DWORD PTR [rdx+0x67],0x47006363
   140011098:	4e 55                	rex.WRX push rbp
   14001109a:	20 41 53             	and    BYTE PTR [rcx+0x53],al
   14001109d:	20 32                	and    BYTE PTR [rdx],dh
   14001109f:	2e 33 39             	cs xor edi,DWORD PTR [rcx]
	...

Disassembly of section .debug_line_str:

0000000140012000 <.debug_line_str>:
   140012000:	43 3a 5c 62 75       	cmp    bl,BYTE PTR [r10+r12*2+0x75]
   140012005:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x5c746f6f
   14001200c:	5c 
   14001200d:	78 38                	js     140012047 <.debug_line_str+0x47>
   14001200f:	36 5f                	ss pop rdi
   140012011:	36 34 2d             	ss xor al,0x2d
   140012014:	31 33                	xor    DWORD PTR [rbx],esi
   140012016:	32 30                	xor    dh,BYTE PTR [rax]
   140012018:	2d 77 69 6e 33       	sub    eax,0x336e6977
   14001201d:	32 2d 73 65 68 2d    	xor    ch,BYTE PTR [rip+0x2d686573]        # 16d698596 <.debug_line_str+0x2d6864ff>
   140012023:	75 63                	jne    140012088 <.debug_line_str+0x88>
   140012025:	72 74                	jb     14001209b <.debug_line_str+0x4>
   140012027:	2d 72 74 5f 76       	sub    eax,0x765f7472
   14001202c:	31 31                	xor    DWORD PTR [rcx],esi
   14001202e:	2d 72 65 76 31       	sub    eax,0x31766572
   140012033:	5c                   	pop    rsp
   140012034:	62 75                	(bad)
   140012036:	69 6c 64 5c 67 63 63 	imul   ebp,DWORD PTR [rsp+riz*2+0x5c],0x2d636367
   14001203d:	2d 
   14001203e:	31 33                	xor    DWORD PTR [rbx],esi
   140012040:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   140012043:	30 5c 78 38          	xor    BYTE PTR [rax+rdi*2+0x38],bl
   140012047:	36 5f                	ss pop rdi
   140012049:	36 34 2d             	ss xor al,0x2d
   14001204c:	77 36                	ja     140012084 <.debug_line_str+0x84>
   14001204e:	34 2d                	xor    al,0x2d
   140012050:	6d                   	ins    DWORD PTR es:[rdi],dx
   140012051:	69 6e 67 77 33 32 5c 	imul   ebp,DWORD PTR [rsi+0x67],0x5c323377
   140012058:	6c                   	ins    BYTE PTR es:[rdi],dx
   140012059:	69 62 67 63 63 00 43 	imul   esp,DWORD PTR [rdx+0x67],0x43006363
   140012060:	3a 2f                	cmp    ch,BYTE PTR [rdi]
   140012062:	62 75                	(bad)
   140012064:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x2f746f6f
   14001206b:	2f 
   14001206c:	73 72                	jae    1400120e0 <.debug_line_str+0x49>
   14001206e:	63 2f                	movsxd ebp,DWORD PTR [rdi]
   140012070:	67 63 63 2d          	movsxd esp,DWORD PTR [ebx+0x2d]
   140012074:	31 33                	xor    DWORD PTR [rbx],esi
   140012076:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   140012079:	30 2f                	xor    BYTE PTR [rdi],ch
   14001207b:	6c                   	ins    BYTE PTR es:[rdi],dx
   14001207c:	69 62 67 63 63 2f 63 	imul   esp,DWORD PTR [rdx+0x67],0x632f6363
   140012083:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140012084:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140012085:	66 69 67 2f 69 33    	imul   sp,WORD PTR [rdi+0x2f],0x3369
   14001208b:	38 36                	cmp    BYTE PTR [rsi],dh
   14001208d:	00 63 79             	add    BYTE PTR [rbx+0x79],ah
   140012090:	67 77 69             	addr32 ja 1400120fc <.debug_line_str+0x65>
   140012093:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140012094:	2e 53                	cs push rbx
	...

0000000140012097 <.debug_line_str>:
   140012097:	43 3a 2f             	rex.XB cmp bpl,BYTE PTR [r15]
   14001209a:	62 75                	(bad)
   14001209c:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x2f746f6f
   1400120a3:	2f 
   1400120a4:	73 72                	jae    140012118 <.debug_line_str+0x81>
   1400120a6:	63 2f                	movsxd ebp,DWORD PTR [rdi]
   1400120a8:	67 63 63 2d          	movsxd esp,DWORD PTR [ebx+0x2d]
   1400120ac:	31 33                	xor    DWORD PTR [rbx],esi
   1400120ae:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   1400120b1:	30 2f                	xor    BYTE PTR [rdi],ch
   1400120b3:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400120b4:	69 62 67 63 63 2f 6c 	imul   esp,DWORD PTR [rdx+0x67],0x6c2f6363
   1400120bb:	69 62 67 63 63 32 2e 	imul   esp,DWORD PTR [rdx+0x67],0x2e326363
   1400120c2:	63 00                	movsxd eax,DWORD PTR [rax]
   1400120c4:	43 3a 5c 62 75       	cmp    bl,BYTE PTR [r10+r12*2+0x75]
   1400120c9:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x5c746f6f
   1400120d0:	5c 
   1400120d1:	78 38                	js     14001210b <.debug_line_str+0x74>
   1400120d3:	36 5f                	ss pop rdi
   1400120d5:	36 34 2d             	ss xor al,0x2d
   1400120d8:	31 33                	xor    DWORD PTR [rbx],esi
   1400120da:	32 30                	xor    dh,BYTE PTR [rax]
   1400120dc:	2d 77 69 6e 33       	sub    eax,0x336e6977
   1400120e1:	32 2d 73 65 68 2d    	xor    ch,BYTE PTR [rip+0x2d686573]        # 16d69865a <.debug_line_str+0x2d6865c3>
   1400120e7:	75 63                	jne    14001214c <.debug_line_str+0xb5>
   1400120e9:	72 74                	jb     14001215f <.debug_line_str+0xc8>
   1400120eb:	2d 72 74 5f 76       	sub    eax,0x765f7472
   1400120f0:	31 31                	xor    DWORD PTR [rcx],esi
   1400120f2:	2d 72 65 76 31       	sub    eax,0x31766572
   1400120f7:	5c                   	pop    rsp
   1400120f8:	62 75                	(bad)
   1400120fa:	69 6c 64 5c 67 63 63 	imul   ebp,DWORD PTR [rsp+riz*2+0x5c],0x2d636367
   140012101:	2d 
   140012102:	31 33                	xor    DWORD PTR [rbx],esi
   140012104:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   140012107:	30 5c 78 38          	xor    BYTE PTR [rax+rdi*2+0x38],bl
   14001210b:	36 5f                	ss pop rdi
   14001210d:	36 34 2d             	ss xor al,0x2d
   140012110:	77 36                	ja     140012148 <.debug_line_str+0xb1>
   140012112:	34 2d                	xor    al,0x2d
   140012114:	6d                   	ins    DWORD PTR es:[rdi],dx
   140012115:	69 6e 67 77 33 32 5c 	imul   ebp,DWORD PTR [rsi+0x67],0x5c323377
   14001211c:	6c                   	ins    BYTE PTR es:[rdi],dx
   14001211d:	69 62 67 63 63 00 43 	imul   esp,DWORD PTR [rdx+0x67],0x43006363
   140012124:	3a 2f                	cmp    ch,BYTE PTR [rdi]
   140012126:	62 75                	(bad)
   140012128:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x2f746f6f
   14001212f:	2f 
   140012130:	78 38                	js     14001216a <.debug_line_str+0xd3>
   140012132:	36 5f                	ss pop rdi
   140012134:	36 34 2d             	ss xor al,0x2d
   140012137:	31 33                	xor    DWORD PTR [rbx],esi
   140012139:	32 30                	xor    dh,BYTE PTR [rax]
   14001213b:	2d 77 69 6e 33       	sub    eax,0x336e6977
   140012140:	32 2d 73 65 68 2d    	xor    ch,BYTE PTR [rip+0x2d686573]        # 16d6986b9 <.debug_line_str+0x2d686622>
   140012146:	75 63                	jne    1400121ab <.debug_line_str+0x114>
   140012148:	72 74                	jb     1400121be <.debug_line_str+0x127>
   14001214a:	2d 72 74 5f 76       	sub    eax,0x765f7472
   14001214f:	31 31                	xor    DWORD PTR [rcx],esi
   140012151:	2d 72 65 76 31       	sub    eax,0x31766572
   140012156:	2f                   	(bad)
   140012157:	62 75                	(bad)
   140012159:	69 6c 64 2f 67 63 63 	imul   ebp,DWORD PTR [rsp+riz*2+0x2f],0x2d636367
   140012160:	2d 
   140012161:	31 33                	xor    DWORD PTR [rbx],esi
   140012163:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   140012166:	30 2f                	xor    BYTE PTR [rdi],ch
   140012168:	78 38                	js     1400121a2 <.debug_line_str+0x10b>
   14001216a:	36 5f                	ss pop rdi
   14001216c:	36 34 2d             	ss xor al,0x2d
   14001216f:	77 36                	ja     1400121a7 <.debug_line_str+0x110>
   140012171:	34 2d                	xor    al,0x2d
   140012173:	6d                   	ins    DWORD PTR es:[rdi],dx
   140012174:	69 6e 67 77 33 32 2f 	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
   14001217b:	6c                   	ins    BYTE PTR es:[rdi],dx
   14001217c:	69 62 67 63 63 00 43 	imul   esp,DWORD PTR [rdx+0x67],0x43006363
   140012183:	3a 2f                	cmp    ch,BYTE PTR [rdi]
   140012185:	62 75                	(bad)
   140012187:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x2f746f6f
   14001218e:	2f 
   14001218f:	73 72                	jae    140012203 <.debug_line_str+0x16c>
   140012191:	63 2f                	movsxd ebp,DWORD PTR [rdi]
   140012193:	67 63 63 2d          	movsxd esp,DWORD PTR [ebx+0x2d]
   140012197:	31 33                	xor    DWORD PTR [rbx],esi
   140012199:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   14001219c:	30 2f                	xor    BYTE PTR [rdi],ch
   14001219e:	6c                   	ins    BYTE PTR es:[rdi],dx
   14001219f:	69 62 67 63 63 00 43 	imul   esp,DWORD PTR [rdx+0x67],0x43006363
   1400121a6:	3a 2f                	cmp    ch,BYTE PTR [rdi]
   1400121a8:	62 75                	(bad)
   1400121aa:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x2f746f6f
   1400121b1:	2f 
   1400121b2:	73 72                	jae    140012226 <.debug_line_str+0x18f>
   1400121b4:	63 2f                	movsxd ebp,DWORD PTR [rdi]
   1400121b6:	67 63 63 2d          	movsxd esp,DWORD PTR [ebx+0x2d]
   1400121ba:	31 33                	xor    DWORD PTR [rbx],esi
   1400121bc:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   1400121bf:	30 2f                	xor    BYTE PTR [rdi],ch
   1400121c1:	67 63 63 2f          	movsxd esp,DWORD PTR [ebx+0x2f]
   1400121c5:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400121c8:	66 69 67 2f 69 33    	imul   sp,WORD PTR [rdi+0x2f],0x3369
   1400121ce:	38 36                	cmp    BYTE PTR [rsi],dh
   1400121d0:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
   1400121d4:	67 63 63 32          	movsxd esp,DWORD PTR [ebx+0x32]
   1400121d8:	2e 63 00             	cs movsxd eax,DWORD PTR [rax]
   1400121db:	69 33 38 36 2e 68    	imul   esi,DWORD PTR [rbx],0x682e3638
   1400121e1:	00 67 62             	add    BYTE PTR [rdi+0x62],ah
   1400121e4:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400121e5:	2d 63 74 6f 72       	sub    eax,0x726f7463
   1400121ea:	73 2e                	jae    14001221a <.debug_line_str+0x183>
   1400121ec:	68 00 6c 69 62       	push   0x62696c00
   1400121f1:	67 63 63 32          	movsxd esp,DWORD PTR [ebx+0x32]
   1400121f5:	2e 63 00             	cs movsxd eax,DWORD PTR [rax]
