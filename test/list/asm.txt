
test1.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <__mingw_invalidParameterHandler>:
   140001000:	c3                   	ret
   140001001:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   140001008:	00 00 00 00 
   14000100c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000140001010 <pre_c_init>:
   140001010:	48 83 ec 28          	sub    rsp,0x28
   140001014:	48 8b 05 f5 44 00 00 	mov    rax,QWORD PTR [rip+0x44f5]        # 140005510 <.refptr.__mingw_initltsdrot_force>
   14000101b:	31 c9                	xor    ecx,ecx
   14000101d:	c7 00 01 00 00 00    	mov    DWORD PTR [rax],0x1
   140001023:	48 8b 05 f6 44 00 00 	mov    rax,QWORD PTR [rip+0x44f6]        # 140005520 <.refptr.__mingw_initltsdyn_force>
   14000102a:	c7 00 01 00 00 00    	mov    DWORD PTR [rax],0x1
   140001030:	48 8b 05 f9 44 00 00 	mov    rax,QWORD PTR [rip+0x44f9]        # 140005530 <.refptr.__mingw_initltssuo_force>
   140001037:	c7 00 01 00 00 00    	mov    DWORD PTR [rax],0x1
   14000103d:	48 8b 05 6c 44 00 00 	mov    rax,QWORD PTR [rip+0x446c]        # 1400054b0 <.refptr.__image_base__>
   140001044:	66 81 38 4d 5a       	cmp    WORD PTR [rax],0x5a4d
   140001049:	75 0f                	jne    14000105a <pre_c_init+0x4a>
   14000104b:	48 63 50 3c          	movsxd rdx,DWORD PTR [rax+0x3c]
   14000104f:	48 01 d0             	add    rax,rdx
   140001052:	81 38 50 45 00 00    	cmp    DWORD PTR [rax],0x4550
   140001058:	74 66                	je     1400010c0 <pre_c_init+0xb0>
   14000105a:	48 8b 05 9f 44 00 00 	mov    rax,QWORD PTR [rip+0x449f]        # 140005500 <.refptr.__mingw_app_type>
   140001061:	89 0d a5 6f 00 00    	mov    DWORD PTR [rip+0x6fa5],ecx        # 14000800c <managedapp>
   140001067:	8b 00                	mov    eax,DWORD PTR [rax]
   140001069:	85 c0                	test   eax,eax
   14000106b:	74 43                	je     1400010b0 <pre_c_init+0xa0>
   14000106d:	b9 02 00 00 00       	mov    ecx,0x2
   140001072:	e8 b1 1e 00 00       	call   140002f28 <__set_app_type>
   140001077:	e8 24 1e 00 00       	call   140002ea0 <__p__fmode>
   14000107c:	48 8b 15 5d 45 00 00 	mov    rdx,QWORD PTR [rip+0x455d]        # 1400055e0 <.refptr._fmode>
   140001083:	8b 12                	mov    edx,DWORD PTR [rdx]
   140001085:	89 10                	mov    DWORD PTR [rax],edx
   140001087:	e8 0c 1e 00 00       	call   140002e98 <__p__commode>
   14000108c:	48 8b 15 2d 45 00 00 	mov    rdx,QWORD PTR [rip+0x452d]        # 1400055c0 <.refptr._commode>
   140001093:	8b 12                	mov    edx,DWORD PTR [rdx]
   140001095:	89 10                	mov    DWORD PTR [rax],edx
   140001097:	e8 44 0b 00 00       	call   140001be0 <_setargv>
   14000109c:	48 8b 05 bd 43 00 00 	mov    rax,QWORD PTR [rip+0x43bd]        # 140005460 <.refptr._MINGW_INSTALL_DEBUG_MATHERR>
   1400010a3:	83 38 01             	cmp    DWORD PTR [rax],0x1
   1400010a6:	74 50                	je     1400010f8 <pre_c_init+0xe8>
   1400010a8:	31 c0                	xor    eax,eax
   1400010aa:	48 83 c4 28          	add    rsp,0x28
   1400010ae:	c3                   	ret
   1400010af:	90                   	nop
   1400010b0:	b9 01 00 00 00       	mov    ecx,0x1
   1400010b5:	e8 6e 1e 00 00       	call   140002f28 <__set_app_type>
   1400010ba:	eb bb                	jmp    140001077 <pre_c_init+0x67>
   1400010bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   1400010c0:	0f b7 50 18          	movzx  edx,WORD PTR [rax+0x18]
   1400010c4:	66 81 fa 0b 01       	cmp    dx,0x10b
   1400010c9:	74 45                	je     140001110 <pre_c_init+0x100>
   1400010cb:	66 81 fa 0b 02       	cmp    dx,0x20b
   1400010d0:	75 88                	jne    14000105a <pre_c_init+0x4a>
   1400010d2:	83 b8 84 00 00 00 0e 	cmp    DWORD PTR [rax+0x84],0xe
   1400010d9:	0f 86 7b ff ff ff    	jbe    14000105a <pre_c_init+0x4a>
   1400010df:	8b 90 f8 00 00 00    	mov    edx,DWORD PTR [rax+0xf8]
   1400010e5:	31 c9                	xor    ecx,ecx
   1400010e7:	85 d2                	test   edx,edx
   1400010e9:	0f 95 c1             	setne  cl
   1400010ec:	e9 69 ff ff ff       	jmp    14000105a <pre_c_init+0x4a>
   1400010f1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   1400010f8:	48 8b 0d 01 45 00 00 	mov    rcx,QWORD PTR [rip+0x4501]        # 140005600 <.refptr._matherr>
   1400010ff:	e8 4c 12 00 00       	call   140002350 <__mingw_setusermatherr>
   140001104:	31 c0                	xor    eax,eax
   140001106:	48 83 c4 28          	add    rsp,0x28
   14000110a:	c3                   	ret
   14000110b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140001110:	83 78 74 0e          	cmp    DWORD PTR [rax+0x74],0xe
   140001114:	0f 86 40 ff ff ff    	jbe    14000105a <pre_c_init+0x4a>
   14000111a:	44 8b 80 e8 00 00 00 	mov    r8d,DWORD PTR [rax+0xe8]
   140001121:	31 c9                	xor    ecx,ecx
   140001123:	45 85 c0             	test   r8d,r8d
   140001126:	0f 95 c1             	setne  cl
   140001129:	e9 2c ff ff ff       	jmp    14000105a <pre_c_init+0x4a>
   14000112e:	66 90                	xchg   ax,ax

0000000140001130 <pre_cpp_init>:
   140001130:	48 83 ec 38          	sub    rsp,0x38
   140001134:	48 8b 05 d5 44 00 00 	mov    rax,QWORD PTR [rip+0x44d5]        # 140005610 <.refptr._newmode>
   14000113b:	4c 8d 05 d6 6e 00 00 	lea    r8,[rip+0x6ed6]        # 140008018 <envp>
   140001142:	48 8d 15 d7 6e 00 00 	lea    rdx,[rip+0x6ed7]        # 140008020 <argv>
   140001149:	48 8d 0d d8 6e 00 00 	lea    rcx,[rip+0x6ed8]        # 140008028 <argc>
   140001150:	8b 00                	mov    eax,DWORD PTR [rax]
   140001152:	89 05 ac 6e 00 00    	mov    DWORD PTR [rip+0x6eac],eax        # 140008004 <startinfo>
   140001158:	48 8b 05 71 44 00 00 	mov    rax,QWORD PTR [rip+0x4471]        # 1400055d0 <.refptr._dowildcard>
   14000115f:	44 8b 08             	mov    r9d,DWORD PTR [rax]
   140001162:	48 8d 05 9b 6e 00 00 	lea    rax,[rip+0x6e9b]        # 140008004 <startinfo>
   140001169:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
   14000116e:	e8 cd 1a 00 00       	call   140002c40 <__getmainargs>
   140001173:	90                   	nop
   140001174:	48 83 c4 38          	add    rsp,0x38
   140001178:	c3                   	ret
   140001179:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000140001180 <__tmainCRTStartup>:
   140001180:	41 54                	push   r12
   140001182:	55                   	push   rbp
   140001183:	57                   	push   rdi
   140001184:	56                   	push   rsi
   140001185:	53                   	push   rbx
   140001186:	48 83 ec 20          	sub    rsp,0x20
   14000118a:	48 8b 1d cf 43 00 00 	mov    rbx,QWORD PTR [rip+0x43cf]        # 140005560 <.refptr.__native_startup_lock>
   140001191:	31 ff                	xor    edi,edi
   140001193:	65 48 8b 04 25 30 00 	mov    rax,QWORD PTR gs:0x30
   14000119a:	00 00 
   14000119c:	48 8b 2d 35 81 00 00 	mov    rbp,QWORD PTR [rip+0x8135]        # 1400092d8 <__imp_Sleep>
   1400011a3:	48 8b 70 08          	mov    rsi,QWORD PTR [rax+0x8]
   1400011a7:	eb 17                	jmp    1400011c0 <__tmainCRTStartup+0x40>
   1400011a9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   1400011b0:	48 39 c6             	cmp    rsi,rax
   1400011b3:	0f 84 67 01 00 00    	je     140001320 <__tmainCRTStartup+0x1a0>
   1400011b9:	b9 e8 03 00 00       	mov    ecx,0x3e8
   1400011be:	ff d5                	call   rbp
   1400011c0:	48 89 f8             	mov    rax,rdi
   1400011c3:	f0 48 0f b1 33       	lock cmpxchg QWORD PTR [rbx],rsi
   1400011c8:	48 85 c0             	test   rax,rax
   1400011cb:	75 e3                	jne    1400011b0 <__tmainCRTStartup+0x30>
   1400011cd:	48 8b 35 9c 43 00 00 	mov    rsi,QWORD PTR [rip+0x439c]        # 140005570 <.refptr.__native_startup_state>
   1400011d4:	31 ff                	xor    edi,edi
   1400011d6:	8b 06                	mov    eax,DWORD PTR [rsi]
   1400011d8:	83 f8 01             	cmp    eax,0x1
   1400011db:	0f 84 56 01 00 00    	je     140001337 <__tmainCRTStartup+0x1b7>
   1400011e1:	8b 06                	mov    eax,DWORD PTR [rsi]
   1400011e3:	85 c0                	test   eax,eax
   1400011e5:	0f 84 b5 01 00 00    	je     1400013a0 <__tmainCRTStartup+0x220>
   1400011eb:	c7 05 13 6e 00 00 01 	mov    DWORD PTR [rip+0x6e13],0x1        # 140008008 <has_cctor>
   1400011f2:	00 00 00 
   1400011f5:	8b 06                	mov    eax,DWORD PTR [rsi]
   1400011f7:	83 f8 01             	cmp    eax,0x1
   1400011fa:	0f 84 4c 01 00 00    	je     14000134c <__tmainCRTStartup+0x1cc>
   140001200:	85 ff                	test   edi,edi
   140001202:	0f 84 65 01 00 00    	je     14000136d <__tmainCRTStartup+0x1ed>
   140001208:	48 8b 05 91 42 00 00 	mov    rax,QWORD PTR [rip+0x4291]        # 1400054a0 <.refptr.__dyn_tls_init_callback>
   14000120f:	48 8b 00             	mov    rax,QWORD PTR [rax]
   140001212:	48 85 c0             	test   rax,rax
   140001215:	74 0c                	je     140001223 <__tmainCRTStartup+0xa3>
   140001217:	45 31 c0             	xor    r8d,r8d
   14000121a:	ba 02 00 00 00       	mov    edx,0x2
   14000121f:	31 c9                	xor    ecx,ecx
   140001221:	ff d0                	call   rax
   140001223:	e8 88 0d 00 00       	call   140001fb0 <_pei386_runtime_relocator>
   140001228:	48 8b 0d c1 43 00 00 	mov    rcx,QWORD PTR [rip+0x43c1]        # 1400055f0 <.refptr._gnu_exception_handler>
   14000122f:	ff 15 9b 80 00 00    	call   QWORD PTR [rip+0x809b]        # 1400092d0 <__imp_SetUnhandledExceptionFilter>
   140001235:	48 8b 15 14 43 00 00 	mov    rdx,QWORD PTR [rip+0x4314]        # 140005550 <.refptr.__mingw_oldexcpt_handler>
   14000123c:	48 8d 0d bd fd ff ff 	lea    rcx,[rip+0xfffffffffffffdbd]        # 140001000 <__mingw_invalidParameterHandler>
   140001243:	48 89 02             	mov    QWORD PTR [rdx],rax
   140001246:	e8 e5 1c 00 00       	call   140002f30 <_set_invalid_parameter_handler>
   14000124b:	e8 70 0b 00 00       	call   140001dc0 <_fpreset>
   140001250:	8b 1d d2 6d 00 00    	mov    ebx,DWORD PTR [rip+0x6dd2]        # 140008028 <argc>
   140001256:	8d 7b 01             	lea    edi,[rbx+0x1]
   140001259:	48 63 ff             	movsxd rdi,edi
   14000125c:	48 c1 e7 03          	shl    rdi,0x3
   140001260:	48 89 f9             	mov    rcx,rdi
   140001263:	e8 20 1d 00 00       	call   140002f88 <malloc>
   140001268:	85 db                	test   ebx,ebx
   14000126a:	48 8b 2d af 6d 00 00 	mov    rbp,QWORD PTR [rip+0x6daf]        # 140008020 <argv>
   140001271:	49 89 c4             	mov    r12,rax
   140001274:	0f 8e 46 01 00 00    	jle    1400013c0 <__tmainCRTStartup+0x240>
   14000127a:	48 83 ef 08          	sub    rdi,0x8
   14000127e:	31 db                	xor    ebx,ebx
   140001280:	48 8b 4c 1d 00       	mov    rcx,QWORD PTR [rbp+rbx*1+0x0]
   140001285:	e8 f6 1b 00 00       	call   140002e80 <strlen>
   14000128a:	48 8d 70 01          	lea    rsi,[rax+0x1]
   14000128e:	48 89 f1             	mov    rcx,rsi
   140001291:	e8 f2 1c 00 00       	call   140002f88 <malloc>
   140001296:	49 89 f0             	mov    r8,rsi
   140001299:	49 89 04 1c          	mov    QWORD PTR [r12+rbx*1],rax
   14000129d:	48 8b 54 1d 00       	mov    rdx,QWORD PTR [rbp+rbx*1+0x0]
   1400012a2:	48 89 c1             	mov    rcx,rax
   1400012a5:	48 83 c3 08          	add    rbx,0x8
   1400012a9:	e8 aa 1c 00 00       	call   140002f58 <memcpy>
   1400012ae:	48 39 df             	cmp    rdi,rbx
   1400012b1:	75 cd                	jne    140001280 <__tmainCRTStartup+0x100>
   1400012b3:	4c 01 e7             	add    rdi,r12
   1400012b6:	48 c7 07 00 00 00 00 	mov    QWORD PTR [rdi],0x0
   1400012bd:	4c 89 25 5c 6d 00 00 	mov    QWORD PTR [rip+0x6d5c],r12        # 140008020 <argv>
   1400012c4:	e8 f7 08 00 00       	call   140001bc0 <__main>
   1400012c9:	48 8b 05 f0 41 00 00 	mov    rax,QWORD PTR [rip+0x41f0]        # 1400054c0 <.refptr.__imp___initenv>
   1400012d0:	4c 8b 05 41 6d 00 00 	mov    r8,QWORD PTR [rip+0x6d41]        # 140008018 <envp>
   1400012d7:	8b 0d 4b 6d 00 00    	mov    ecx,DWORD PTR [rip+0x6d4b]        # 140008028 <argc>
   1400012dd:	48 8b 00             	mov    rax,QWORD PTR [rax]
   1400012e0:	4c 89 00             	mov    QWORD PTR [rax],r8
   1400012e3:	48 8b 15 36 6d 00 00 	mov    rdx,QWORD PTR [rip+0x6d36]        # 140008020 <argv>
   1400012ea:	e8 61 01 00 00       	call   140001450 <main>
   1400012ef:	8b 0d 17 6d 00 00    	mov    ecx,DWORD PTR [rip+0x6d17]        # 14000800c <managedapp>
   1400012f5:	89 05 15 6d 00 00    	mov    DWORD PTR [rip+0x6d15],eax        # 140008010 <mainret>
   1400012fb:	85 c9                	test   ecx,ecx
   1400012fd:	0f 84 c5 00 00 00    	je     1400013c8 <__tmainCRTStartup+0x248>
   140001303:	8b 15 ff 6c 00 00    	mov    edx,DWORD PTR [rip+0x6cff]        # 140008008 <has_cctor>
   140001309:	85 d2                	test   edx,edx
   14000130b:	74 73                	je     140001380 <__tmainCRTStartup+0x200>
   14000130d:	48 83 c4 20          	add    rsp,0x20
   140001311:	5b                   	pop    rbx
   140001312:	5e                   	pop    rsi
   140001313:	5f                   	pop    rdi
   140001314:	5d                   	pop    rbp
   140001315:	41 5c                	pop    r12
   140001317:	c3                   	ret
   140001318:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   14000131f:	00 
   140001320:	48 8b 35 49 42 00 00 	mov    rsi,QWORD PTR [rip+0x4249]        # 140005570 <.refptr.__native_startup_state>
   140001327:	bf 01 00 00 00       	mov    edi,0x1
   14000132c:	8b 06                	mov    eax,DWORD PTR [rsi]
   14000132e:	83 f8 01             	cmp    eax,0x1
   140001331:	0f 85 aa fe ff ff    	jne    1400011e1 <__tmainCRTStartup+0x61>
   140001337:	b9 1f 00 00 00       	mov    ecx,0x1f
   14000133c:	e8 1f 1a 00 00       	call   140002d60 <_amsg_exit>
   140001341:	8b 06                	mov    eax,DWORD PTR [rsi]
   140001343:	83 f8 01             	cmp    eax,0x1
   140001346:	0f 85 b4 fe ff ff    	jne    140001200 <__tmainCRTStartup+0x80>
   14000134c:	48 8b 15 3d 42 00 00 	mov    rdx,QWORD PTR [rip+0x423d]        # 140005590 <.refptr.__xc_z>
   140001353:	48 8b 0d 26 42 00 00 	mov    rcx,QWORD PTR [rip+0x4226]        # 140005580 <.refptr.__xc_a>
   14000135a:	e8 c1 1b 00 00       	call   140002f20 <_initterm>
   14000135f:	85 ff                	test   edi,edi
   140001361:	c7 06 02 00 00 00    	mov    DWORD PTR [rsi],0x2
   140001367:	0f 85 9b fe ff ff    	jne    140001208 <__tmainCRTStartup+0x88>
   14000136d:	31 c0                	xor    eax,eax
   14000136f:	48 87 03             	xchg   QWORD PTR [rbx],rax
   140001372:	e9 91 fe ff ff       	jmp    140001208 <__tmainCRTStartup+0x88>
   140001377:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   14000137e:	00 00 
   140001380:	e8 63 1b 00 00       	call   140002ee8 <_cexit>
   140001385:	8b 05 85 6c 00 00    	mov    eax,DWORD PTR [rip+0x6c85]        # 140008010 <mainret>
   14000138b:	48 83 c4 20          	add    rsp,0x20
   14000138f:	5b                   	pop    rbx
   140001390:	5e                   	pop    rsi
   140001391:	5f                   	pop    rdi
   140001392:	5d                   	pop    rbp
   140001393:	41 5c                	pop    r12
   140001395:	c3                   	ret
   140001396:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   14000139d:	00 00 00 
   1400013a0:	48 8b 15 09 42 00 00 	mov    rdx,QWORD PTR [rip+0x4209]        # 1400055b0 <.refptr.__xi_z>
   1400013a7:	c7 06 01 00 00 00    	mov    DWORD PTR [rsi],0x1
   1400013ad:	48 8b 0d ec 41 00 00 	mov    rcx,QWORD PTR [rip+0x41ec]        # 1400055a0 <.refptr.__xi_a>
   1400013b4:	e8 67 1b 00 00       	call   140002f20 <_initterm>
   1400013b9:	e9 37 fe ff ff       	jmp    1400011f5 <__tmainCRTStartup+0x75>
   1400013be:	66 90                	xchg   ax,ax
   1400013c0:	48 89 c7             	mov    rdi,rax
   1400013c3:	e9 ee fe ff ff       	jmp    1400012b6 <__tmainCRTStartup+0x136>
   1400013c8:	89 c1                	mov    ecx,eax
   1400013ca:	e8 a1 13 00 00       	call   140002770 <exit>
   1400013cf:	90                   	nop

00000001400013d0 <WinMainCRTStartup>:
   1400013d0:	48 83 ec 28          	sub    rsp,0x28

00000001400013d4 <.l_startw>:
   1400013d4:	48 8b 05 25 41 00 00 	mov    rax,QWORD PTR [rip+0x4125]        # 140005500 <.refptr.__mingw_app_type>
   1400013db:	c7 00 01 00 00 00    	mov    DWORD PTR [rax],0x1
   1400013e1:	e8 9a fd ff ff       	call   140001180 <__tmainCRTStartup>
   1400013e6:	90                   	nop

00000001400013e7 <.l_endw>:
   1400013e7:	90                   	nop
   1400013e8:	48 83 c4 28          	add    rsp,0x28
   1400013ec:	c3                   	ret
   1400013ed:	0f 1f 00             	nop    DWORD PTR [rax]

00000001400013f0 <mainCRTStartup>:
   1400013f0:	48 83 ec 28          	sub    rsp,0x28

00000001400013f4 <.l_start>:
   1400013f4:	48 8b 05 05 41 00 00 	mov    rax,QWORD PTR [rip+0x4105]        # 140005500 <.refptr.__mingw_app_type>
   1400013fb:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
   140001401:	e8 7a fd ff ff       	call   140001180 <__tmainCRTStartup>
   140001406:	90                   	nop

0000000140001407 <.l_end>:
   140001407:	90                   	nop
   140001408:	48 83 c4 28          	add    rsp,0x28
   14000140c:	c3                   	ret
   14000140d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000140001410 <atexit>:
   140001410:	48 83 ec 28          	sub    rsp,0x28
   140001414:	e8 07 19 00 00       	call   140002d20 <_onexit>
   140001419:	48 83 f8 01          	cmp    rax,0x1
   14000141d:	19 c0                	sbb    eax,eax
   14000141f:	48 83 c4 28          	add    rsp,0x28
   140001423:	c3                   	ret
   140001424:	90                   	nop
   140001425:	90                   	nop
   140001426:	90                   	nop
   140001427:	90                   	nop
   140001428:	90                   	nop
   140001429:	90                   	nop
   14000142a:	90                   	nop
   14000142b:	90                   	nop
   14000142c:	90                   	nop
   14000142d:	90                   	nop
   14000142e:	90                   	nop
   14000142f:	90                   	nop

0000000140001430 <__gcc_register_frame>:
   140001430:	48 8d 0d 09 00 00 00 	lea    rcx,[rip+0x9]        # 140001440 <__gcc_deregister_frame>
   140001437:	e9 d4 ff ff ff       	jmp    140001410 <atexit>
   14000143c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000140001440 <__gcc_deregister_frame>:
   140001440:	c3                   	ret
   140001441:	90                   	nop
   140001442:	90                   	nop
   140001443:	90                   	nop
   140001444:	90                   	nop
   140001445:	90                   	nop
   140001446:	90                   	nop
   140001447:	90                   	nop
   140001448:	90                   	nop
   140001449:	90                   	nop
   14000144a:	90                   	nop
   14000144b:	90                   	nop
   14000144c:	90                   	nop
   14000144d:	90                   	nop
   14000144e:	90                   	nop
   14000144f:	90                   	nop

0000000140001450 <main>:
   140001450:	55                   	push   rbp
   140001451:	48 89 e5             	mov    rbp,rsp
   140001454:	48 83 ec 30          	sub    rsp,0x30
   140001458:	e8 63 07 00 00       	call   140001bc0 <__main>
   14000145d:	48 8d 05 9c 3b 00 00 	lea    rax,[rip+0x3b9c]        # 140005000 <.rdata>
   140001464:	48 89 c1             	mov    rcx,rax
   140001467:	e8 24 05 00 00       	call   140001990 <wrap_alloc_init>
   14000146c:	e8 4f 00 00 00       	call   1400014c0 <listCreate>
   140001471:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
   140001475:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   140001479:	ba 00 00 00 00       	mov    edx,0x0
   14000147e:	48 89 c1             	mov    rcx,rax
   140001481:	e8 ba 00 00 00       	call   140001540 <listAdd>
   140001486:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   14000148a:	ba 00 00 00 00       	mov    edx,0x0
   14000148f:	48 89 c1             	mov    rcx,rax
   140001492:	e8 29 01 00 00       	call   1400015c0 <listDel>
   140001497:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
   14000149b:	48 89 c1             	mov    rcx,rax
   14000149e:	e8 4d 00 00 00       	call   1400014f0 <listDelete>
   1400014a3:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
   1400014aa:	00 
   1400014ab:	e8 00 05 00 00       	call   1400019b0 <wrap_alloc_fini>
   1400014b0:	b8 00 00 00 00       	mov    eax,0x0
   1400014b5:	48 83 c4 30          	add    rsp,0x30
   1400014b9:	5d                   	pop    rbp
   1400014ba:	c3                   	ret
   1400014bb:	90                   	nop
   1400014bc:	90                   	nop
   1400014bd:	90                   	nop
   1400014be:	90                   	nop
   1400014bf:	90                   	nop

00000001400014c0 <listCreate>:
   1400014c0:	48 83 ec 28          	sub    rsp,0x28
   1400014c4:	b9 18 00 00 00       	mov    ecx,0x18
   1400014c9:	e8 12 05 00 00       	call   1400019e0 <wrap_malloc>
   1400014ce:	48 85 c0             	test   rax,rax
   1400014d1:	74 0e                	je     1400014e1 <listCreate+0x21>
   1400014d3:	66 0f ef c0          	pxor   xmm0,xmm0
   1400014d7:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
   1400014dd:	0f 11 40 08          	movups XMMWORD PTR [rax+0x8],xmm0
   1400014e1:	48 83 c4 28          	add    rsp,0x28
   1400014e5:	c3                   	ret
   1400014e6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   1400014ed:	00 00 00 

00000001400014f0 <listDelete>:
   1400014f0:	57                   	push   rdi
   1400014f1:	56                   	push   rsi
   1400014f2:	53                   	push   rbx
   1400014f3:	48 83 ec 20          	sub    rsp,0x20
   1400014f7:	48 85 c9             	test   rcx,rcx
   1400014fa:	48 89 cf             	mov    rdi,rcx
   1400014fd:	74 39                	je     140001538 <listDelete+0x48>
   1400014ff:	8b 01                	mov    eax,DWORD PTR [rcx]
   140001501:	48 8b 59 08          	mov    rbx,QWORD PTR [rcx+0x8]
   140001505:	85 c0                	test   eax,eax
   140001507:	7e 1a                	jle    140001523 <listDelete+0x33>
   140001509:	31 f6                	xor    esi,esi
   14000150b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140001510:	48 89 d9             	mov    rcx,rbx
   140001513:	83 c6 01             	add    esi,0x1
   140001516:	48 8b 5b 10          	mov    rbx,QWORD PTR [rbx+0x10]
   14000151a:	e8 b1 05 00 00       	call   140001ad0 <wrap_free>
   14000151f:	39 37                	cmp    DWORD PTR [rdi],esi
   140001521:	7f ed                	jg     140001510 <listDelete+0x20>
   140001523:	48 89 f9             	mov    rcx,rdi
   140001526:	48 83 c4 20          	add    rsp,0x20
   14000152a:	5b                   	pop    rbx
   14000152b:	5e                   	pop    rsi
   14000152c:	5f                   	pop    rdi
   14000152d:	e9 9e 05 00 00       	jmp    140001ad0 <wrap_free>
   140001532:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   140001538:	48 83 c4 20          	add    rsp,0x20
   14000153c:	5b                   	pop    rbx
   14000153d:	5e                   	pop    rsi
   14000153e:	5f                   	pop    rdi
   14000153f:	c3                   	ret

0000000140001540 <listAdd>:
   140001540:	56                   	push   rsi
   140001541:	53                   	push   rbx
   140001542:	48 83 ec 28          	sub    rsp,0x28
   140001546:	48 85 c9             	test   rcx,rcx
   140001549:	48 89 cb             	mov    rbx,rcx
   14000154c:	48 89 d6             	mov    rsi,rdx
   14000154f:	74 56                	je     1400015a7 <listAdd+0x67>
   140001551:	e8 aa 03 00 00       	call   140001900 <listNodeCreate>
   140001556:	48 85 c0             	test   rax,rax
   140001559:	74 53                	je     1400015ae <listAdd+0x6e>
   14000155b:	8b 0b                	mov    ecx,DWORD PTR [rbx]
   14000155d:	85 c9                	test   ecx,ecx
   14000155f:	74 2f                	je     140001590 <listAdd+0x50>
   140001561:	48 8b 53 10          	mov    rdx,QWORD PTR [rbx+0x10]
   140001565:	48 c7 40 10 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
   14000156c:	00 
   14000156d:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
   140001571:	48 89 42 10          	mov    QWORD PTR [rdx+0x10],rax
   140001575:	48 89 43 10          	mov    QWORD PTR [rbx+0x10],rax
   140001579:	83 c1 01             	add    ecx,0x1
   14000157c:	48 89 30             	mov    QWORD PTR [rax],rsi
   14000157f:	31 c0                	xor    eax,eax
   140001581:	89 0b                	mov    DWORD PTR [rbx],ecx
   140001583:	48 83 c4 28          	add    rsp,0x28
   140001587:	5b                   	pop    rbx
   140001588:	5e                   	pop    rsi
   140001589:	c3                   	ret
   14000158a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   140001590:	66 48 0f 6e c8       	movq   xmm1,rax
   140001595:	f2 0f 12 c1          	movddup xmm0,xmm1
   140001599:	0f 11 43 08          	movups XMMWORD PTR [rbx+0x8],xmm0
   14000159d:	66 0f ef c0          	pxor   xmm0,xmm0
   1400015a1:	0f 11 40 08          	movups XMMWORD PTR [rax+0x8],xmm0
   1400015a5:	eb d2                	jmp    140001579 <listAdd+0x39>
   1400015a7:	b8 00 10 00 80       	mov    eax,0x80001000
   1400015ac:	eb d5                	jmp    140001583 <listAdd+0x43>
   1400015ae:	b8 01 10 00 80       	mov    eax,0x80001001
   1400015b3:	eb ce                	jmp    140001583 <listAdd+0x43>
   1400015b5:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1400015bc:	00 00 00 00 

00000001400015c0 <listDel>:
   1400015c0:	57                   	push   rdi
   1400015c1:	56                   	push   rsi
   1400015c2:	53                   	push   rbx
   1400015c3:	48 83 ec 20          	sub    rsp,0x20
   1400015c7:	48 85 c9             	test   rcx,rcx
   1400015ca:	48 89 cb             	mov    rbx,rcx
   1400015cd:	89 d7                	mov    edi,edx
   1400015cf:	0f 84 8a 00 00 00    	je     14000165f <listDel+0x9f>
   1400015d5:	e8 d6 02 00 00       	call   1400018b0 <listIndexRange>
   1400015da:	85 c0                	test   eax,eax
   1400015dc:	74 7a                	je     140001658 <listDel+0x98>
   1400015de:	89 fa                	mov    edx,edi
   1400015e0:	48 89 d9             	mov    rcx,rbx
   1400015e3:	e8 28 03 00 00       	call   140001910 <listAccess>
   1400015e8:	48 85 c0             	test   rax,rax
   1400015eb:	48 89 c6             	mov    rsi,rax
   1400015ee:	74 76                	je     140001666 <listDel+0xa6>
   1400015f0:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
   1400015f4:	48 89 d9             	mov    rcx,rbx
   1400015f7:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
   1400015fb:	48 89 42 10          	mov    QWORD PTR [rdx+0x10],rax
   1400015ff:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
   140001603:	89 fa                	mov    edx,edi
   140001605:	e8 c6 02 00 00       	call   1400018d0 <listIsBegin>
   14000160a:	85 c0                	test   eax,eax
   14000160c:	74 08                	je     140001616 <listDel+0x56>
   14000160e:	48 8b 46 10          	mov    rax,QWORD PTR [rsi+0x10]
   140001612:	48 89 43 08          	mov    QWORD PTR [rbx+0x8],rax
   140001616:	89 fa                	mov    edx,edi
   140001618:	48 89 d9             	mov    rcx,rbx
   14000161b:	e8 c0 02 00 00       	call   1400018e0 <listIsEnd>
   140001620:	85 c0                	test   eax,eax
   140001622:	74 08                	je     14000162c <listDel+0x6c>
   140001624:	48 8b 46 08          	mov    rax,QWORD PTR [rsi+0x8]
   140001628:	48 89 43 10          	mov    QWORD PTR [rbx+0x10],rax
   14000162c:	48 89 f1             	mov    rcx,rsi
   14000162f:	e8 9c 04 00 00       	call   140001ad0 <wrap_free>
   140001634:	83 2b 01             	sub    DWORD PTR [rbx],0x1
   140001637:	74 0f                	je     140001648 <listDel+0x88>
   140001639:	31 c0                	xor    eax,eax
   14000163b:	48 83 c4 20          	add    rsp,0x20
   14000163f:	5b                   	pop    rbx
   140001640:	5e                   	pop    rsi
   140001641:	5f                   	pop    rdi
   140001642:	c3                   	ret
   140001643:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140001648:	66 0f ef c0          	pxor   xmm0,xmm0
   14000164c:	0f 11 43 08          	movups XMMWORD PTR [rbx+0x8],xmm0
   140001650:	eb e7                	jmp    140001639 <listDel+0x79>
   140001652:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   140001658:	b8 00 20 00 80       	mov    eax,0x80002000
   14000165d:	eb dc                	jmp    14000163b <listDel+0x7b>
   14000165f:	b8 00 10 00 80       	mov    eax,0x80001000
   140001664:	eb d5                	jmp    14000163b <listDel+0x7b>
   140001666:	b8 02 10 00 80       	mov    eax,0x80001002
   14000166b:	eb ce                	jmp    14000163b <listDel+0x7b>
   14000166d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000140001670 <listCrean>:
   140001670:	57                   	push   rdi
   140001671:	56                   	push   rsi
   140001672:	53                   	push   rbx
   140001673:	48 83 ec 20          	sub    rsp,0x20
   140001677:	48 85 c9             	test   rcx,rcx
   14000167a:	48 89 cf             	mov    rdi,rcx
   14000167d:	74 34                	je     1400016b3 <listCrean+0x43>
   14000167f:	8b 01                	mov    eax,DWORD PTR [rcx]
   140001681:	48 8b 59 08          	mov    rbx,QWORD PTR [rcx+0x8]
   140001685:	85 c0                	test   eax,eax
   140001687:	7e 1a                	jle    1400016a3 <listCrean+0x33>
   140001689:	31 f6                	xor    esi,esi
   14000168b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140001690:	48 89 d9             	mov    rcx,rbx
   140001693:	83 c6 01             	add    esi,0x1
   140001696:	48 8b 5b 10          	mov    rbx,QWORD PTR [rbx+0x10]
   14000169a:	e8 31 04 00 00       	call   140001ad0 <wrap_free>
   14000169f:	39 37                	cmp    DWORD PTR [rdi],esi
   1400016a1:	7f ed                	jg     140001690 <listCrean+0x20>
   1400016a3:	c7 07 00 00 00 00    	mov    DWORD PTR [rdi],0x0
   1400016a9:	31 c0                	xor    eax,eax
   1400016ab:	48 83 c4 20          	add    rsp,0x20
   1400016af:	5b                   	pop    rbx
   1400016b0:	5e                   	pop    rsi
   1400016b1:	5f                   	pop    rdi
   1400016b2:	c3                   	ret
   1400016b3:	b8 00 10 00 80       	mov    eax,0x80001000
   1400016b8:	eb f1                	jmp    1400016ab <listCrean+0x3b>
   1400016ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000001400016c0 <listFill>:
   1400016c0:	48 85 c9             	test   rcx,rcx
   1400016c3:	74 28                	je     1400016ed <listFill+0x2d>
   1400016c5:	44 8b 09             	mov    r9d,DWORD PTR [rcx]
   1400016c8:	31 c0                	xor    eax,eax
   1400016ca:	4c 8b 41 08          	mov    r8,QWORD PTR [rcx+0x8]
   1400016ce:	45 85 c9             	test   r9d,r9d
   1400016d1:	7e 17                	jle    1400016ea <listFill+0x2a>
   1400016d3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   1400016d8:	83 c0 01             	add    eax,0x1
   1400016db:	4c 89 c1             	mov    rcx,r8
   1400016de:	4d 8b 40 10          	mov    r8,QWORD PTR [r8+0x10]
   1400016e2:	44 39 c8             	cmp    eax,r9d
   1400016e5:	48 89 11             	mov    QWORD PTR [rcx],rdx
   1400016e8:	75 ee                	jne    1400016d8 <listFill+0x18>
   1400016ea:	31 c0                	xor    eax,eax
   1400016ec:	c3                   	ret
   1400016ed:	b8 00 10 00 80       	mov    eax,0x80001000
   1400016f2:	c3                   	ret
   1400016f3:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1400016fa:	00 00 00 00 
   1400016fe:	66 90                	xchg   ax,ax

0000000140001700 <listGet>:
   140001700:	56                   	push   rsi
   140001701:	53                   	push   rbx
   140001702:	48 83 ec 28          	sub    rsp,0x28
   140001706:	48 85 c9             	test   rcx,rcx
   140001709:	48 89 cb             	mov    rbx,rcx
   14000170c:	89 d6                	mov    esi,edx
   14000170e:	74 28                	je     140001738 <listGet+0x38>
   140001710:	e8 9b 01 00 00       	call   1400018b0 <listIndexRange>
   140001715:	85 c0                	test   eax,eax
   140001717:	74 1f                	je     140001738 <listGet+0x38>
   140001719:	89 f2                	mov    edx,esi
   14000171b:	48 89 d9             	mov    rcx,rbx
   14000171e:	e8 ed 01 00 00       	call   140001910 <listAccess>
   140001723:	48 85 c0             	test   rax,rax
   140001726:	74 10                	je     140001738 <listGet+0x38>
   140001728:	48 8b 00             	mov    rax,QWORD PTR [rax]
   14000172b:	48 83 c4 28          	add    rsp,0x28
   14000172f:	5b                   	pop    rbx
   140001730:	5e                   	pop    rsi
   140001731:	c3                   	ret
   140001732:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   140001738:	31 c0                	xor    eax,eax
   14000173a:	48 83 c4 28          	add    rsp,0x28
   14000173e:	5b                   	pop    rbx
   14000173f:	5e                   	pop    rsi
   140001740:	c3                   	ret
   140001741:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   140001748:	00 00 00 00 
   14000174c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000140001750 <listSet>:
   140001750:	57                   	push   rdi
   140001751:	56                   	push   rsi
   140001752:	53                   	push   rbx
   140001753:	48 83 ec 20          	sub    rsp,0x20
   140001757:	48 85 c9             	test   rcx,rcx
   14000175a:	48 89 cb             	mov    rbx,rcx
   14000175d:	89 d6                	mov    esi,edx
   14000175f:	4c 89 c7             	mov    rdi,r8
   140001762:	74 33                	je     140001797 <listSet+0x47>
   140001764:	e8 47 01 00 00       	call   1400018b0 <listIndexRange>
   140001769:	85 c0                	test   eax,eax
   14000176b:	74 23                	je     140001790 <listSet+0x40>
   14000176d:	89 f2                	mov    edx,esi
   14000176f:	48 89 d9             	mov    rcx,rbx
   140001772:	e8 99 01 00 00       	call   140001910 <listAccess>
   140001777:	48 85 c0             	test   rax,rax
   14000177a:	74 22                	je     14000179e <listSet+0x4e>
   14000177c:	48 89 38             	mov    QWORD PTR [rax],rdi
   14000177f:	31 c0                	xor    eax,eax
   140001781:	48 83 c4 20          	add    rsp,0x20
   140001785:	5b                   	pop    rbx
   140001786:	5e                   	pop    rsi
   140001787:	5f                   	pop    rdi
   140001788:	c3                   	ret
   140001789:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   140001790:	b8 00 20 00 80       	mov    eax,0x80002000
   140001795:	eb ea                	jmp    140001781 <listSet+0x31>
   140001797:	b8 00 10 00 80       	mov    eax,0x80001000
   14000179c:	eb e3                	jmp    140001781 <listSet+0x31>
   14000179e:	b8 02 10 00 80       	mov    eax,0x80001002
   1400017a3:	eb dc                	jmp    140001781 <listSet+0x31>
   1400017a5:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1400017ac:	00 00 00 00 

00000001400017b0 <listLength>:
   1400017b0:	48 85 c9             	test   rcx,rcx
   1400017b3:	74 03                	je     1400017b8 <listLength+0x8>
   1400017b5:	8b 01                	mov    eax,DWORD PTR [rcx]
   1400017b7:	c3                   	ret
   1400017b8:	b8 ff ff ff ff       	mov    eax,0xffffffff
   1400017bd:	c3                   	ret
   1400017be:	66 90                	xchg   ax,ax

00000001400017c0 <listCopy>:
   1400017c0:	57                   	push   rdi
   1400017c1:	56                   	push   rsi
   1400017c2:	53                   	push   rbx
   1400017c3:	48 83 ec 20          	sub    rsp,0x20
   1400017c7:	48 85 c9             	test   rcx,rcx
   1400017ca:	48 89 ce             	mov    rsi,rcx
   1400017cd:	0f 84 7d 00 00 00    	je     140001850 <listCopy+0x90>
   1400017d3:	b9 18 00 00 00       	mov    ecx,0x18
   1400017d8:	e8 03 02 00 00       	call   1400019e0 <wrap_malloc>
   1400017dd:	48 85 c0             	test   rax,rax
   1400017e0:	48 89 c7             	mov    rdi,rax
   1400017e3:	74 0e                	je     1400017f3 <listCopy+0x33>
   1400017e5:	66 0f ef c0          	pxor   xmm0,xmm0
   1400017e9:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
   1400017ef:	0f 11 40 08          	movups XMMWORD PTR [rax+0x8],xmm0
   1400017f3:	8b 06                	mov    eax,DWORD PTR [rsi]
   1400017f5:	85 c0                	test   eax,eax
   1400017f7:	7e 47                	jle    140001840 <listCopy+0x80>
   1400017f9:	31 db                	xor    ebx,ebx
   1400017fb:	eb 24                	jmp    140001821 <listCopy+0x61>
   1400017fd:	0f 1f 00             	nop    DWORD PTR [rax]
   140001800:	89 da                	mov    edx,ebx
   140001802:	48 89 f1             	mov    rcx,rsi
   140001805:	e8 06 01 00 00       	call   140001910 <listAccess>
   14000180a:	48 85 c0             	test   rax,rax
   14000180d:	74 20                	je     14000182f <listCopy+0x6f>
   14000180f:	48 8b 10             	mov    rdx,QWORD PTR [rax]
   140001812:	48 89 f9             	mov    rcx,rdi
   140001815:	83 c3 01             	add    ebx,0x1
   140001818:	e8 23 fd ff ff       	call   140001540 <listAdd>
   14000181d:	39 1e                	cmp    DWORD PTR [rsi],ebx
   14000181f:	7e 1f                	jle    140001840 <listCopy+0x80>
   140001821:	89 da                	mov    edx,ebx
   140001823:	48 89 f1             	mov    rcx,rsi
   140001826:	e8 85 00 00 00       	call   1400018b0 <listIndexRange>
   14000182b:	85 c0                	test   eax,eax
   14000182d:	75 d1                	jne    140001800 <listCopy+0x40>
   14000182f:	31 d2                	xor    edx,edx
   140001831:	48 89 f9             	mov    rcx,rdi
   140001834:	83 c3 01             	add    ebx,0x1
   140001837:	e8 04 fd ff ff       	call   140001540 <listAdd>
   14000183c:	39 1e                	cmp    DWORD PTR [rsi],ebx
   14000183e:	7f e1                	jg     140001821 <listCopy+0x61>
   140001840:	48 89 f8             	mov    rax,rdi
   140001843:	48 83 c4 20          	add    rsp,0x20
   140001847:	5b                   	pop    rbx
   140001848:	5e                   	pop    rsi
   140001849:	5f                   	pop    rdi
   14000184a:	c3                   	ret
   14000184b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140001850:	31 ff                	xor    edi,edi
   140001852:	48 89 f8             	mov    rax,rdi
   140001855:	48 83 c4 20          	add    rsp,0x20
   140001859:	5b                   	pop    rbx
   14000185a:	5e                   	pop    rsi
   14000185b:	5f                   	pop    rdi
   14000185c:	c3                   	ret
   14000185d:	90                   	nop
   14000185e:	90                   	nop
   14000185f:	90                   	nop

0000000140001860 <listIndexConvert>:
   140001860:	8b 09                	mov    ecx,DWORD PTR [rcx]
   140001862:	44 8d 04 0a          	lea    r8d,[rdx+rcx*1]
   140001866:	89 d0                	mov    eax,edx
   140001868:	29 c8                	sub    eax,ecx
   14000186a:	85 d2                	test   edx,edx
   14000186c:	41 0f 48 c0          	cmovs  eax,r8d
   140001870:	c3                   	ret
   140001871:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   140001878:	00 00 00 00 
   14000187c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000140001880 <listIndexConvertP>:
   140001880:	85 d2                	test   edx,edx
   140001882:	89 d0                	mov    eax,edx
   140001884:	78 0a                	js     140001890 <listIndexConvertP+0x10>
   140001886:	c3                   	ret
   140001887:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   14000188e:	00 00 
   140001890:	03 01                	add    eax,DWORD PTR [rcx]
   140001892:	c3                   	ret
   140001893:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   14000189a:	00 00 00 00 
   14000189e:	66 90                	xchg   ax,ax

00000001400018a0 <listIndexConvertN>:
   1400018a0:	85 d2                	test   edx,edx
   1400018a2:	89 d0                	mov    eax,edx
   1400018a4:	78 02                	js     1400018a8 <listIndexConvertN+0x8>
   1400018a6:	2b 01                	sub    eax,DWORD PTR [rcx]
   1400018a8:	c3                   	ret
   1400018a9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000001400018b0 <listIndexRange>:
   1400018b0:	8b 01                	mov    eax,DWORD PTR [rcx]
   1400018b2:	89 c1                	mov    ecx,eax
   1400018b4:	f7 d1                	not    ecx
   1400018b6:	39 d1                	cmp    ecx,edx
   1400018b8:	0f 9c c1             	setl   cl
   1400018bb:	39 d0                	cmp    eax,edx
   1400018bd:	0f 9f c0             	setg   al
   1400018c0:	0f b6 c0             	movzx  eax,al
   1400018c3:	21 c8                	and    eax,ecx
   1400018c5:	c3                   	ret
   1400018c6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   1400018cd:	00 00 00 

00000001400018d0 <listIsBegin>:
   1400018d0:	85 d2                	test   edx,edx
   1400018d2:	79 02                	jns    1400018d6 <listIsBegin+0x6>
   1400018d4:	03 11                	add    edx,DWORD PTR [rcx]
   1400018d6:	31 c0                	xor    eax,eax
   1400018d8:	85 d2                	test   edx,edx
   1400018da:	0f 94 c0             	sete   al
   1400018dd:	c3                   	ret
   1400018de:	66 90                	xchg   ax,ax

00000001400018e0 <listIsEnd>:
   1400018e0:	8b 01                	mov    eax,DWORD PTR [rcx]
   1400018e2:	8d 0c 02             	lea    ecx,[rdx+rax*1]
   1400018e5:	85 d2                	test   edx,edx
   1400018e7:	0f 48 d1             	cmovs  edx,ecx
   1400018ea:	83 e8 01             	sub    eax,0x1
   1400018ed:	39 d0                	cmp    eax,edx
   1400018ef:	0f 94 c0             	sete   al
   1400018f2:	0f b6 c0             	movzx  eax,al
   1400018f5:	c3                   	ret
   1400018f6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   1400018fd:	00 00 00 

0000000140001900 <listNodeCreate>:
   140001900:	b9 18 00 00 00       	mov    ecx,0x18
   140001905:	e9 d6 00 00 00       	jmp    1400019e0 <wrap_malloc>
   14000190a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000140001910 <listAccess>:
   140001910:	85 d2                	test   edx,edx
   140001912:	78 2c                	js     140001940 <listAccess+0x30>
   140001914:	48 8b 41 08          	mov    rax,QWORD PTR [rcx+0x8]
   140001918:	74 23                	je     14000193d <listAccess+0x2d>
   14000191a:	8d 4a ff             	lea    ecx,[rdx-0x1]
   14000191d:	f6 c2 01             	test   dl,0x1
   140001920:	74 0e                	je     140001930 <listAccess+0x20>
   140001922:	85 c9                	test   ecx,ecx
   140001924:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
   140001928:	89 ca                	mov    edx,ecx
   14000192a:	74 11                	je     14000193d <listAccess+0x2d>
   14000192c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140001930:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
   140001934:	83 ea 02             	sub    edx,0x2
   140001937:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
   14000193b:	75 f3                	jne    140001930 <listAccess+0x20>
   14000193d:	c3                   	ret
   14000193e:	66 90                	xchg   ax,ax
   140001940:	83 fa ff             	cmp    edx,0xffffffff
   140001943:	48 8b 41 10          	mov    rax,QWORD PTR [rcx+0x10]
   140001947:	74 f4                	je     14000193d <listAccess+0x2d>
   140001949:	8d 4a 01             	lea    ecx,[rdx+0x1]
   14000194c:	f6 c2 01             	test   dl,0x1
   14000194f:	75 0f                	jne    140001960 <listAccess+0x50>
   140001951:	83 f9 ff             	cmp    ecx,0xffffffff
   140001954:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
   140001958:	89 ca                	mov    edx,ecx
   14000195a:	74 e1                	je     14000193d <listAccess+0x2d>
   14000195c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140001960:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
   140001964:	83 c2 02             	add    edx,0x2
   140001967:	83 fa ff             	cmp    edx,0xffffffff
   14000196a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
   14000196e:	74 cd                	je     14000193d <listAccess+0x2d>
   140001970:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
   140001974:	83 c2 02             	add    edx,0x2
   140001977:	83 fa ff             	cmp    edx,0xffffffff
   14000197a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
   14000197e:	75 e0                	jne    140001960 <listAccess+0x50>
   140001980:	eb bb                	jmp    14000193d <listAccess+0x2d>
   140001982:	90                   	nop
   140001983:	90                   	nop
   140001984:	90                   	nop
   140001985:	90                   	nop
   140001986:	90                   	nop
   140001987:	90                   	nop
   140001988:	90                   	nop
   140001989:	90                   	nop
   14000198a:	90                   	nop
   14000198b:	90                   	nop
   14000198c:	90                   	nop
   14000198d:	90                   	nop
   14000198e:	90                   	nop
   14000198f:	90                   	nop

0000000140001990 <wrap_alloc_init>:
   140001990:	48 83 ec 28          	sub    rsp,0x28
   140001994:	48 8d 15 85 36 00 00 	lea    rdx,[rip+0x3685]        # 140005020 <.rdata>
   14000199b:	e8 20 15 00 00       	call   140002ec0 <fopen>
   1400019a0:	48 89 05 89 66 00 00 	mov    QWORD PTR [rip+0x6689],rax        # 140008030 <WRAP_ALLOC_FILE_POINTER>
   1400019a7:	48 83 c4 28          	add    rsp,0x28
   1400019ab:	c3                   	ret
   1400019ac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000001400019b0 <wrap_alloc_fini>:
   1400019b0:	48 8b 0d 79 66 00 00 	mov    rcx,QWORD PTR [rip+0x6679]        # 140008030 <WRAP_ALLOC_FILE_POINTER>
   1400019b7:	e9 fc 14 00 00       	jmp    140002eb8 <fclose>
   1400019bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000001400019c0 <wrap_log_header>:
   1400019c0:	4c 8b 0d 69 66 00 00 	mov    r9,QWORD PTR [rip+0x6669]        # 140008030 <WRAP_ALLOC_FILE_POINTER>
   1400019c7:	41 b8 4f 00 00 00    	mov    r8d,0x4f
   1400019cd:	ba 01 00 00 00       	mov    edx,0x1
   1400019d2:	48 8d 0d 4f 36 00 00 	lea    rcx,[rip+0x364f]        # 140005028 <.rdata+0x8>
   1400019d9:	e9 ea 14 00 00       	jmp    140002ec8 <fwrite>
   1400019de:	66 90                	xchg   ax,ax

00000001400019e0 <wrap_malloc>:
   1400019e0:	56                   	push   rsi
   1400019e1:	53                   	push   rbx
   1400019e2:	48 83 ec 38          	sub    rsp,0x38
   1400019e6:	48 89 ce             	mov    rsi,rcx
   1400019e9:	e8 9a 15 00 00       	call   140002f88 <malloc>
   1400019ee:	48 8b 0d 3b 66 00 00 	mov    rcx,QWORD PTR [rip+0x663b]        # 140008030 <WRAP_ALLOC_FILE_POINTER>
   1400019f5:	45 31 c9             	xor    r9d,r9d
   1400019f8:	48 c7 44 24 28 00 00 	mov    QWORD PTR [rsp+0x28],0x0
   1400019ff:	00 00 
   140001a01:	48 89 c3             	mov    rbx,rax
   140001a04:	48 89 74 24 20       	mov    QWORD PTR [rsp+0x20],rsi
   140001a09:	49 89 c0             	mov    r8,rax
   140001a0c:	48 8d 15 65 36 00 00 	lea    rdx,[rip+0x3665]        # 140005078 <.rdata+0x58>
   140001a13:	e8 d8 11 00 00       	call   140002bf0 <fprintf>
   140001a18:	48 89 d8             	mov    rax,rbx
   140001a1b:	48 83 c4 38          	add    rsp,0x38
   140001a1f:	5b                   	pop    rbx
   140001a20:	5e                   	pop    rsi
   140001a21:	c3                   	ret
   140001a22:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   140001a29:	00 00 00 00 
   140001a2d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000140001a30 <wrap_calloc>:
   140001a30:	57                   	push   rdi
   140001a31:	56                   	push   rsi
   140001a32:	53                   	push   rbx
   140001a33:	48 83 ec 30          	sub    rsp,0x30
   140001a37:	48 89 cf             	mov    rdi,rcx
   140001a3a:	48 89 d6             	mov    rsi,rdx
   140001a3d:	e8 36 15 00 00       	call   140002f78 <calloc>
   140001a42:	48 8b 0d e7 65 00 00 	mov    rcx,QWORD PTR [rip+0x65e7]        # 140008030 <WRAP_ALLOC_FILE_POINTER>
   140001a49:	48 89 7c 24 28       	mov    QWORD PTR [rsp+0x28],rdi
   140001a4e:	45 31 c9             	xor    r9d,r9d
   140001a51:	48 89 c3             	mov    rbx,rax
   140001a54:	48 89 74 24 20       	mov    QWORD PTR [rsp+0x20],rsi
   140001a59:	49 89 c0             	mov    r8,rax
   140001a5c:	48 8d 15 35 36 00 00 	lea    rdx,[rip+0x3635]        # 140005098 <.rdata+0x78>
   140001a63:	e8 88 11 00 00       	call   140002bf0 <fprintf>
   140001a68:	48 89 d8             	mov    rax,rbx
   140001a6b:	48 83 c4 30          	add    rsp,0x30
   140001a6f:	5b                   	pop    rbx
   140001a70:	5e                   	pop    rsi
   140001a71:	5f                   	pop    rdi
   140001a72:	c3                   	ret
   140001a73:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   140001a7a:	00 00 00 00 
   140001a7e:	66 90                	xchg   ax,ax

0000000140001a80 <wrap_realloc>:
   140001a80:	57                   	push   rdi
   140001a81:	56                   	push   rsi
   140001a82:	53                   	push   rbx
   140001a83:	48 83 ec 30          	sub    rsp,0x30
   140001a87:	48 89 ce             	mov    rsi,rcx
   140001a8a:	48 89 d7             	mov    rdi,rdx
   140001a8d:	e8 fe 14 00 00       	call   140002f90 <realloc>
   140001a92:	48 8b 0d 97 65 00 00 	mov    rcx,QWORD PTR [rip+0x6597]        # 140008030 <WRAP_ALLOC_FILE_POINTER>
   140001a99:	49 89 f1             	mov    r9,rsi
   140001a9c:	48 c7 44 24 28 00 00 	mov    QWORD PTR [rsp+0x28],0x0
   140001aa3:	00 00 
   140001aa5:	48 89 c3             	mov    rbx,rax
   140001aa8:	48 89 7c 24 20       	mov    QWORD PTR [rsp+0x20],rdi
   140001aad:	49 89 c0             	mov    r8,rax
   140001ab0:	48 8d 15 01 36 00 00 	lea    rdx,[rip+0x3601]        # 1400050b8 <.rdata+0x98>
   140001ab7:	e8 34 11 00 00       	call   140002bf0 <fprintf>
   140001abc:	48 89 d8             	mov    rax,rbx
   140001abf:	48 83 c4 30          	add    rsp,0x30
   140001ac3:	5b                   	pop    rbx
   140001ac4:	5e                   	pop    rsi
   140001ac5:	5f                   	pop    rdi
   140001ac6:	c3                   	ret
   140001ac7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   140001ace:	00 00 

0000000140001ad0 <wrap_free>:
   140001ad0:	53                   	push   rbx
   140001ad1:	48 83 ec 30          	sub    rsp,0x30
   140001ad5:	48 89 cb             	mov    rbx,rcx
   140001ad8:	e8 a3 14 00 00       	call   140002f80 <free>
   140001add:	48 8b 0d 4c 65 00 00 	mov    rcx,QWORD PTR [rip+0x654c]        # 140008030 <WRAP_ALLOC_FILE_POINTER>
   140001ae4:	49 89 d9             	mov    r9,rbx
   140001ae7:	48 c7 44 24 28 00 00 	mov    QWORD PTR [rsp+0x28],0x0
   140001aee:	00 00 
   140001af0:	48 c7 44 24 20 00 00 	mov    QWORD PTR [rsp+0x20],0x0
   140001af7:	00 00 
   140001af9:	45 31 c0             	xor    r8d,r8d
   140001afc:	48 8d 15 d5 35 00 00 	lea    rdx,[rip+0x35d5]        # 1400050d8 <.rdata+0xb8>
   140001b03:	e8 e8 10 00 00       	call   140002bf0 <fprintf>
   140001b08:	90                   	nop
   140001b09:	48 83 c4 30          	add    rsp,0x30
   140001b0d:	5b                   	pop    rbx
   140001b0e:	c3                   	ret
   140001b0f:	90                   	nop

0000000140001b10 <__do_global_dtors>:
   140001b10:	48 83 ec 28          	sub    rsp,0x28
   140001b14:	48 8b 05 e5 24 00 00 	mov    rax,QWORD PTR [rip+0x24e5]        # 140004000 <__data_start__>
   140001b1b:	48 8b 00             	mov    rax,QWORD PTR [rax]
   140001b1e:	48 85 c0             	test   rax,rax
   140001b21:	74 22                	je     140001b45 <__do_global_dtors+0x35>
   140001b23:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140001b28:	ff d0                	call   rax
   140001b2a:	48 8b 05 cf 24 00 00 	mov    rax,QWORD PTR [rip+0x24cf]        # 140004000 <__data_start__>
   140001b31:	48 8d 50 08          	lea    rdx,[rax+0x8]
   140001b35:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
   140001b39:	48 89 15 c0 24 00 00 	mov    QWORD PTR [rip+0x24c0],rdx        # 140004000 <__data_start__>
   140001b40:	48 85 c0             	test   rax,rax
   140001b43:	75 e3                	jne    140001b28 <__do_global_dtors+0x18>
   140001b45:	48 83 c4 28          	add    rsp,0x28
   140001b49:	c3                   	ret
   140001b4a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000140001b50 <__do_global_ctors>:
   140001b50:	56                   	push   rsi
   140001b51:	53                   	push   rbx
   140001b52:	48 83 ec 28          	sub    rsp,0x28
   140001b56:	48 8b 15 13 39 00 00 	mov    rdx,QWORD PTR [rip+0x3913]        # 140005470 <.refptr.__CTOR_LIST__>
   140001b5d:	48 8b 02             	mov    rax,QWORD PTR [rdx]
   140001b60:	83 f8 ff             	cmp    eax,0xffffffff
   140001b63:	89 c1                	mov    ecx,eax
   140001b65:	74 39                	je     140001ba0 <__do_global_ctors+0x50>
   140001b67:	85 c9                	test   ecx,ecx
   140001b69:	74 20                	je     140001b8b <__do_global_ctors+0x3b>
   140001b6b:	89 c8                	mov    eax,ecx
   140001b6d:	83 e9 01             	sub    ecx,0x1
   140001b70:	48 8d 1c c2          	lea    rbx,[rdx+rax*8]
   140001b74:	48 29 c8             	sub    rax,rcx
   140001b77:	48 8d 74 c2 f8       	lea    rsi,[rdx+rax*8-0x8]
   140001b7c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140001b80:	ff 13                	call   QWORD PTR [rbx]
   140001b82:	48 83 eb 08          	sub    rbx,0x8
   140001b86:	48 39 f3             	cmp    rbx,rsi
   140001b89:	75 f5                	jne    140001b80 <__do_global_ctors+0x30>
   140001b8b:	48 8d 0d 7e ff ff ff 	lea    rcx,[rip+0xffffffffffffff7e]        # 140001b10 <__do_global_dtors>
   140001b92:	48 83 c4 28          	add    rsp,0x28
   140001b96:	5b                   	pop    rbx
   140001b97:	5e                   	pop    rsi
   140001b98:	e9 73 f8 ff ff       	jmp    140001410 <atexit>
   140001b9d:	0f 1f 00             	nop    DWORD PTR [rax]
   140001ba0:	31 c0                	xor    eax,eax
   140001ba2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   140001ba8:	44 8d 40 01          	lea    r8d,[rax+0x1]
   140001bac:	89 c1                	mov    ecx,eax
   140001bae:	4a 83 3c c2 00       	cmp    QWORD PTR [rdx+r8*8],0x0
   140001bb3:	4c 89 c0             	mov    rax,r8
   140001bb6:	75 f0                	jne    140001ba8 <__do_global_ctors+0x58>
   140001bb8:	eb ad                	jmp    140001b67 <__do_global_ctors+0x17>
   140001bba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000140001bc0 <__main>:
   140001bc0:	8b 05 7a 64 00 00    	mov    eax,DWORD PTR [rip+0x647a]        # 140008040 <initialized>
   140001bc6:	85 c0                	test   eax,eax
   140001bc8:	74 06                	je     140001bd0 <__main+0x10>
   140001bca:	c3                   	ret
   140001bcb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140001bd0:	c7 05 66 64 00 00 01 	mov    DWORD PTR [rip+0x6466],0x1        # 140008040 <initialized>
   140001bd7:	00 00 00 
   140001bda:	e9 71 ff ff ff       	jmp    140001b50 <__do_global_ctors>
   140001bdf:	90                   	nop

0000000140001be0 <_setargv>:
   140001be0:	31 c0                	xor    eax,eax
   140001be2:	c3                   	ret
   140001be3:	90                   	nop
   140001be4:	90                   	nop
   140001be5:	90                   	nop
   140001be6:	90                   	nop
   140001be7:	90                   	nop
   140001be8:	90                   	nop
   140001be9:	90                   	nop
   140001bea:	90                   	nop
   140001beb:	90                   	nop
   140001bec:	90                   	nop
   140001bed:	90                   	nop
   140001bee:	90                   	nop
   140001bef:	90                   	nop

0000000140001bf0 <__dyn_tls_dtor>:
   140001bf0:	48 83 ec 28          	sub    rsp,0x28
   140001bf4:	83 fa 03             	cmp    edx,0x3
   140001bf7:	74 17                	je     140001c10 <__dyn_tls_dtor+0x20>
   140001bf9:	85 d2                	test   edx,edx
   140001bfb:	74 13                	je     140001c10 <__dyn_tls_dtor+0x20>
   140001bfd:	b8 01 00 00 00       	mov    eax,0x1
   140001c02:	48 83 c4 28          	add    rsp,0x28
   140001c06:	c3                   	ret
   140001c07:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   140001c0e:	00 00 
   140001c10:	e8 5b 0a 00 00       	call   140002670 <__mingw_TLScallback>
   140001c15:	b8 01 00 00 00       	mov    eax,0x1
   140001c1a:	48 83 c4 28          	add    rsp,0x28
   140001c1e:	c3                   	ret
   140001c1f:	90                   	nop

0000000140001c20 <__dyn_tls_init>:
   140001c20:	56                   	push   rsi
   140001c21:	53                   	push   rbx
   140001c22:	48 83 ec 28          	sub    rsp,0x28
   140001c26:	48 8b 05 23 38 00 00 	mov    rax,QWORD PTR [rip+0x3823]        # 140005450 <.refptr._CRT_MT>
   140001c2d:	83 38 02             	cmp    DWORD PTR [rax],0x2
   140001c30:	74 06                	je     140001c38 <__dyn_tls_init+0x18>
   140001c32:	c7 00 02 00 00 00    	mov    DWORD PTR [rax],0x2
   140001c38:	83 fa 02             	cmp    edx,0x2
   140001c3b:	74 13                	je     140001c50 <__dyn_tls_init+0x30>
   140001c3d:	83 fa 01             	cmp    edx,0x1
   140001c40:	74 4e                	je     140001c90 <__dyn_tls_init+0x70>
   140001c42:	b8 01 00 00 00       	mov    eax,0x1
   140001c47:	48 83 c4 28          	add    rsp,0x28
   140001c4b:	5b                   	pop    rbx
   140001c4c:	5e                   	pop    rsi
   140001c4d:	c3                   	ret
   140001c4e:	66 90                	xchg   ax,ax
   140001c50:	48 8d 1d 01 84 00 00 	lea    rbx,[rip+0x8401]        # 14000a058 <__xd_z>
   140001c57:	48 8d 35 fa 83 00 00 	lea    rsi,[rip+0x83fa]        # 14000a058 <__xd_z>
   140001c5e:	48 39 de             	cmp    rsi,rbx
   140001c61:	74 df                	je     140001c42 <__dyn_tls_init+0x22>
   140001c63:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140001c68:	48 8b 03             	mov    rax,QWORD PTR [rbx]
   140001c6b:	48 85 c0             	test   rax,rax
   140001c6e:	74 02                	je     140001c72 <__dyn_tls_init+0x52>
   140001c70:	ff d0                	call   rax
   140001c72:	48 83 c3 08          	add    rbx,0x8
   140001c76:	48 39 de             	cmp    rsi,rbx
   140001c79:	75 ed                	jne    140001c68 <__dyn_tls_init+0x48>
   140001c7b:	b8 01 00 00 00       	mov    eax,0x1
   140001c80:	48 83 c4 28          	add    rsp,0x28
   140001c84:	5b                   	pop    rbx
   140001c85:	5e                   	pop    rsi
   140001c86:	c3                   	ret
   140001c87:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   140001c8e:	00 00 
   140001c90:	e8 db 09 00 00       	call   140002670 <__mingw_TLScallback>
   140001c95:	b8 01 00 00 00       	mov    eax,0x1
   140001c9a:	48 83 c4 28          	add    rsp,0x28
   140001c9e:	5b                   	pop    rbx
   140001c9f:	5e                   	pop    rsi
   140001ca0:	c3                   	ret
   140001ca1:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   140001ca8:	00 00 00 00 
   140001cac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000140001cb0 <__tlregdtor>:
   140001cb0:	31 c0                	xor    eax,eax
   140001cb2:	c3                   	ret
   140001cb3:	90                   	nop
   140001cb4:	90                   	nop
   140001cb5:	90                   	nop
   140001cb6:	90                   	nop
   140001cb7:	90                   	nop
   140001cb8:	90                   	nop
   140001cb9:	90                   	nop
   140001cba:	90                   	nop
   140001cbb:	90                   	nop
   140001cbc:	90                   	nop
   140001cbd:	90                   	nop
   140001cbe:	90                   	nop
   140001cbf:	90                   	nop

0000000140001cc0 <_matherr>:
   140001cc0:	56                   	push   rsi
   140001cc1:	53                   	push   rbx
   140001cc2:	48 83 ec 78          	sub    rsp,0x78
   140001cc6:	0f 29 74 24 40       	movaps XMMWORD PTR [rsp+0x40],xmm6
   140001ccb:	0f 29 7c 24 50       	movaps XMMWORD PTR [rsp+0x50],xmm7
   140001cd0:	44 0f 29 44 24 60    	movaps XMMWORD PTR [rsp+0x60],xmm8
   140001cd6:	83 39 06             	cmp    DWORD PTR [rcx],0x6
   140001cd9:	0f 87 cd 00 00 00    	ja     140001dac <_matherr+0xec>
   140001cdf:	8b 01                	mov    eax,DWORD PTR [rcx]
   140001ce1:	48 8d 15 9c 35 00 00 	lea    rdx,[rip+0x359c]        # 140005284 <.rdata+0x124>
   140001ce8:	48 63 04 82          	movsxd rax,DWORD PTR [rdx+rax*4]
   140001cec:	48 01 d0             	add    rax,rdx
   140001cef:	ff e0                	jmp    rax
   140001cf1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   140001cf8:	48 8d 1d 80 34 00 00 	lea    rbx,[rip+0x3480]        # 14000517f <.rdata+0x1f>
   140001cff:	48 8b 71 08          	mov    rsi,QWORD PTR [rcx+0x8]
   140001d03:	f2 44 0f 10 41 20    	movsd  xmm8,QWORD PTR [rcx+0x20]
   140001d09:	f2 0f 10 79 18       	movsd  xmm7,QWORD PTR [rcx+0x18]
   140001d0e:	f2 0f 10 71 10       	movsd  xmm6,QWORD PTR [rcx+0x10]
   140001d13:	b9 02 00 00 00       	mov    ecx,0x2
   140001d18:	e8 73 11 00 00       	call   140002e90 <__acrt_iob_func>
   140001d1d:	f2 44 0f 11 44 24 30 	movsd  QWORD PTR [rsp+0x30],xmm8
   140001d24:	49 89 f1             	mov    r9,rsi
   140001d27:	49 89 d8             	mov    r8,rbx
   140001d2a:	f2 0f 11 7c 24 28    	movsd  QWORD PTR [rsp+0x28],xmm7
   140001d30:	48 89 c1             	mov    rcx,rax
   140001d33:	f2 0f 11 74 24 20    	movsd  QWORD PTR [rsp+0x20],xmm6
   140001d39:	48 8d 15 18 35 00 00 	lea    rdx,[rip+0x3518]        # 140005258 <.rdata+0xf8>
   140001d40:	e8 ab 0e 00 00       	call   140002bf0 <fprintf>
   140001d45:	90                   	nop
   140001d46:	0f 28 74 24 40       	movaps xmm6,XMMWORD PTR [rsp+0x40]
   140001d4b:	31 c0                	xor    eax,eax
   140001d4d:	0f 28 7c 24 50       	movaps xmm7,XMMWORD PTR [rsp+0x50]
   140001d52:	44 0f 28 44 24 60    	movaps xmm8,XMMWORD PTR [rsp+0x60]
   140001d58:	48 83 c4 78          	add    rsp,0x78
   140001d5c:	5b                   	pop    rbx
   140001d5d:	5e                   	pop    rsi
   140001d5e:	c3                   	ret
   140001d5f:	90                   	nop
   140001d60:	48 8d 1d f9 33 00 00 	lea    rbx,[rip+0x33f9]        # 140005160 <.rdata>
   140001d67:	eb 96                	jmp    140001cff <_matherr+0x3f>
   140001d69:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   140001d70:	48 8d 1d 49 34 00 00 	lea    rbx,[rip+0x3449]        # 1400051c0 <.rdata+0x60>
   140001d77:	eb 86                	jmp    140001cff <_matherr+0x3f>
   140001d79:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   140001d80:	48 8d 1d 19 34 00 00 	lea    rbx,[rip+0x3419]        # 1400051a0 <.rdata+0x40>
   140001d87:	e9 73 ff ff ff       	jmp    140001cff <_matherr+0x3f>
   140001d8c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140001d90:	48 8d 1d 79 34 00 00 	lea    rbx,[rip+0x3479]        # 140005210 <.rdata+0xb0>
   140001d97:	e9 63 ff ff ff       	jmp    140001cff <_matherr+0x3f>
   140001d9c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140001da0:	48 8d 1d 41 34 00 00 	lea    rbx,[rip+0x3441]        # 1400051e8 <.rdata+0x88>
   140001da7:	e9 53 ff ff ff       	jmp    140001cff <_matherr+0x3f>
   140001dac:	48 8d 1d 93 34 00 00 	lea    rbx,[rip+0x3493]        # 140005246 <.rdata+0xe6>
   140001db3:	e9 47 ff ff ff       	jmp    140001cff <_matherr+0x3f>
   140001db8:	90                   	nop
   140001db9:	90                   	nop
   140001dba:	90                   	nop
   140001dbb:	90                   	nop
   140001dbc:	90                   	nop
   140001dbd:	90                   	nop
   140001dbe:	90                   	nop
   140001dbf:	90                   	nop

0000000140001dc0 <_fpreset>:
   140001dc0:	db e3                	fninit
   140001dc2:	c3                   	ret
   140001dc3:	90                   	nop
   140001dc4:	90                   	nop
   140001dc5:	90                   	nop
   140001dc6:	90                   	nop
   140001dc7:	90                   	nop
   140001dc8:	90                   	nop
   140001dc9:	90                   	nop
   140001dca:	90                   	nop
   140001dcb:	90                   	nop
   140001dcc:	90                   	nop
   140001dcd:	90                   	nop
   140001dce:	90                   	nop
   140001dcf:	90                   	nop

0000000140001dd0 <__report_error>:
   140001dd0:	56                   	push   rsi
   140001dd1:	53                   	push   rbx
   140001dd2:	48 83 ec 38          	sub    rsp,0x38
   140001dd6:	48 8d 44 24 58       	lea    rax,[rsp+0x58]
   140001ddb:	48 89 cb             	mov    rbx,rcx
   140001dde:	b9 02 00 00 00       	mov    ecx,0x2
   140001de3:	48 89 54 24 58       	mov    QWORD PTR [rsp+0x58],rdx
   140001de8:	4c 89 44 24 60       	mov    QWORD PTR [rsp+0x60],r8
   140001ded:	4c 89 4c 24 68       	mov    QWORD PTR [rsp+0x68],r9
   140001df2:	48 89 44 24 28       	mov    QWORD PTR [rsp+0x28],rax
   140001df7:	e8 94 10 00 00       	call   140002e90 <__acrt_iob_func>
   140001dfc:	41 b8 1b 00 00 00    	mov    r8d,0x1b
   140001e02:	ba 01 00 00 00       	mov    edx,0x1
   140001e07:	48 8d 0d 92 34 00 00 	lea    rcx,[rip+0x3492]        # 1400052a0 <.rdata>
   140001e0e:	49 89 c1             	mov    r9,rax
   140001e11:	e8 b2 10 00 00       	call   140002ec8 <fwrite>
   140001e16:	48 8b 74 24 28       	mov    rsi,QWORD PTR [rsp+0x28]
   140001e1b:	b9 02 00 00 00       	mov    ecx,0x2
   140001e20:	e8 6b 10 00 00       	call   140002e90 <__acrt_iob_func>
   140001e25:	48 89 da             	mov    rdx,rbx
   140001e28:	48 89 c1             	mov    rcx,rax
   140001e2b:	49 89 f0             	mov    r8,rsi
   140001e2e:	e8 9d 0d 00 00       	call   140002bd0 <vfprintf>
   140001e33:	e8 00 11 00 00       	call   140002f38 <abort>
   140001e38:	90                   	nop
   140001e39:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000140001e40 <mark_section_writable>:
   140001e40:	57                   	push   rdi
   140001e41:	56                   	push   rsi
   140001e42:	53                   	push   rbx
   140001e43:	48 83 ec 50          	sub    rsp,0x50
   140001e47:	48 63 35 56 62 00 00 	movsxd rsi,DWORD PTR [rip+0x6256]        # 1400080a4 <maxSections>
   140001e4e:	85 f6                	test   esi,esi
   140001e50:	48 89 cb             	mov    rbx,rcx
   140001e53:	0f 8e 17 01 00 00    	jle    140001f70 <mark_section_writable+0x130>
   140001e59:	48 8b 05 48 62 00 00 	mov    rax,QWORD PTR [rip+0x6248]        # 1400080a8 <the_secs>
   140001e60:	45 31 c9             	xor    r9d,r9d
   140001e63:	48 83 c0 18          	add    rax,0x18
   140001e67:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   140001e6e:	00 00 
   140001e70:	4c 8b 00             	mov    r8,QWORD PTR [rax]
   140001e73:	4c 39 c3             	cmp    rbx,r8
   140001e76:	72 13                	jb     140001e8b <mark_section_writable+0x4b>
   140001e78:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
   140001e7c:	8b 52 08             	mov    edx,DWORD PTR [rdx+0x8]
   140001e7f:	49 01 d0             	add    r8,rdx
   140001e82:	4c 39 c3             	cmp    rbx,r8
   140001e85:	0f 82 8a 00 00 00    	jb     140001f15 <mark_section_writable+0xd5>
   140001e8b:	41 83 c1 01          	add    r9d,0x1
   140001e8f:	48 83 c0 28          	add    rax,0x28
   140001e93:	41 39 f1             	cmp    r9d,esi
   140001e96:	75 d8                	jne    140001e70 <mark_section_writable+0x30>
   140001e98:	48 89 d9             	mov    rcx,rbx
   140001e9b:	e8 10 0a 00 00       	call   1400028b0 <__mingw_GetSectionForAddress>
   140001ea0:	48 85 c0             	test   rax,rax
   140001ea3:	48 89 c7             	mov    rdi,rax
   140001ea6:	0f 84 e6 00 00 00    	je     140001f92 <mark_section_writable+0x152>
   140001eac:	48 8b 05 f5 61 00 00 	mov    rax,QWORD PTR [rip+0x61f5]        # 1400080a8 <the_secs>
   140001eb3:	48 8d 1c b6          	lea    rbx,[rsi+rsi*4]
   140001eb7:	48 c1 e3 03          	shl    rbx,0x3
   140001ebb:	48 01 d8             	add    rax,rbx
   140001ebe:	48 89 78 20          	mov    QWORD PTR [rax+0x20],rdi
   140001ec2:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
   140001ec8:	e8 23 0b 00 00       	call   1400029f0 <_GetPEImageBase>
   140001ecd:	8b 57 0c             	mov    edx,DWORD PTR [rdi+0xc]
   140001ed0:	41 b8 30 00 00 00    	mov    r8d,0x30
   140001ed6:	48 8d 0c 10          	lea    rcx,[rax+rdx*1]
   140001eda:	48 8b 05 c7 61 00 00 	mov    rax,QWORD PTR [rip+0x61c7]        # 1400080a8 <the_secs>
   140001ee1:	48 8d 54 24 20       	lea    rdx,[rsp+0x20]
   140001ee6:	48 89 4c 18 18       	mov    QWORD PTR [rax+rbx*1+0x18],rcx
   140001eeb:	ff 15 ff 73 00 00    	call   QWORD PTR [rip+0x73ff]        # 1400092f0 <__imp_VirtualQuery>
   140001ef1:	48 85 c0             	test   rax,rax
   140001ef4:	0f 84 7d 00 00 00    	je     140001f77 <mark_section_writable+0x137>
   140001efa:	8b 44 24 44          	mov    eax,DWORD PTR [rsp+0x44]
   140001efe:	8d 50 c0             	lea    edx,[rax-0x40]
   140001f01:	83 e2 bf             	and    edx,0xffffffbf
   140001f04:	74 08                	je     140001f0e <mark_section_writable+0xce>
   140001f06:	8d 50 fc             	lea    edx,[rax-0x4]
   140001f09:	83 e2 fb             	and    edx,0xfffffffb
   140001f0c:	75 12                	jne    140001f20 <mark_section_writable+0xe0>
   140001f0e:	83 05 8f 61 00 00 01 	add    DWORD PTR [rip+0x618f],0x1        # 1400080a4 <maxSections>
   140001f15:	48 83 c4 50          	add    rsp,0x50
   140001f19:	5b                   	pop    rbx
   140001f1a:	5e                   	pop    rsi
   140001f1b:	5f                   	pop    rdi
   140001f1c:	c3                   	ret
   140001f1d:	0f 1f 00             	nop    DWORD PTR [rax]
   140001f20:	83 f8 02             	cmp    eax,0x2
   140001f23:	41 b8 40 00 00 00    	mov    r8d,0x40
   140001f29:	b8 04 00 00 00       	mov    eax,0x4
   140001f2e:	48 8b 4c 24 20       	mov    rcx,QWORD PTR [rsp+0x20]
   140001f33:	44 0f 44 c0          	cmove  r8d,eax
   140001f37:	48 8b 54 24 38       	mov    rdx,QWORD PTR [rsp+0x38]
   140001f3c:	48 03 1d 65 61 00 00 	add    rbx,QWORD PTR [rip+0x6165]        # 1400080a8 <the_secs>
   140001f43:	49 89 d9             	mov    r9,rbx
   140001f46:	48 89 4b 08          	mov    QWORD PTR [rbx+0x8],rcx
   140001f4a:	48 89 53 10          	mov    QWORD PTR [rbx+0x10],rdx
   140001f4e:	ff 15 94 73 00 00    	call   QWORD PTR [rip+0x7394]        # 1400092e8 <__imp_VirtualProtect>
   140001f54:	85 c0                	test   eax,eax
   140001f56:	75 b6                	jne    140001f0e <mark_section_writable+0xce>
   140001f58:	ff 15 5a 73 00 00    	call   QWORD PTR [rip+0x735a]        # 1400092b8 <__imp_GetLastError>
   140001f5e:	48 8d 0d b3 33 00 00 	lea    rcx,[rip+0x33b3]        # 140005318 <.rdata+0x78>
   140001f65:	89 c2                	mov    edx,eax
   140001f67:	e8 64 fe ff ff       	call   140001dd0 <__report_error>
   140001f6c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140001f70:	31 f6                	xor    esi,esi
   140001f72:	e9 21 ff ff ff       	jmp    140001e98 <mark_section_writable+0x58>
   140001f77:	48 8b 05 2a 61 00 00 	mov    rax,QWORD PTR [rip+0x612a]        # 1400080a8 <the_secs>
   140001f7e:	48 8d 0d 5b 33 00 00 	lea    rcx,[rip+0x335b]        # 1400052e0 <.rdata+0x40>
   140001f85:	8b 57 08             	mov    edx,DWORD PTR [rdi+0x8]
   140001f88:	4c 8b 44 18 18       	mov    r8,QWORD PTR [rax+rbx*1+0x18]
   140001f8d:	e8 3e fe ff ff       	call   140001dd0 <__report_error>
   140001f92:	48 8d 0d 27 33 00 00 	lea    rcx,[rip+0x3327]        # 1400052c0 <.rdata+0x20>
   140001f99:	48 89 da             	mov    rdx,rbx
   140001f9c:	e8 2f fe ff ff       	call   140001dd0 <__report_error>
   140001fa1:	90                   	nop
   140001fa2:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   140001fa9:	00 00 00 00 
   140001fad:	0f 1f 00             	nop    DWORD PTR [rax]

0000000140001fb0 <_pei386_runtime_relocator>:
   140001fb0:	55                   	push   rbp
   140001fb1:	41 57                	push   r15
   140001fb3:	41 56                	push   r14
   140001fb5:	41 55                	push   r13
   140001fb7:	41 54                	push   r12
   140001fb9:	57                   	push   rdi
   140001fba:	56                   	push   rsi
   140001fbb:	53                   	push   rbx
   140001fbc:	48 83 ec 48          	sub    rsp,0x48
   140001fc0:	48 8d 6c 24 40       	lea    rbp,[rsp+0x40]
   140001fc5:	8b 3d d5 60 00 00    	mov    edi,DWORD PTR [rip+0x60d5]        # 1400080a0 <was_init.0>
   140001fcb:	85 ff                	test   edi,edi
   140001fcd:	74 11                	je     140001fe0 <_pei386_runtime_relocator+0x30>
   140001fcf:	48 8d 65 08          	lea    rsp,[rbp+0x8]
   140001fd3:	5b                   	pop    rbx
   140001fd4:	5e                   	pop    rsi
   140001fd5:	5f                   	pop    rdi
   140001fd6:	41 5c                	pop    r12
   140001fd8:	41 5d                	pop    r13
   140001fda:	41 5e                	pop    r14
   140001fdc:	41 5f                	pop    r15
   140001fde:	5d                   	pop    rbp
   140001fdf:	c3                   	ret
   140001fe0:	c7 05 b6 60 00 00 01 	mov    DWORD PTR [rip+0x60b6],0x1        # 1400080a0 <was_init.0>
   140001fe7:	00 00 00 
   140001fea:	e8 41 09 00 00       	call   140002930 <__mingw_GetSectionCount>
   140001fef:	48 98                	cdqe
   140001ff1:	48 8d 04 80          	lea    rax,[rax+rax*4]
   140001ff5:	48 8d 04 c5 0f 00 00 	lea    rax,[rax*8+0xf]
   140001ffc:	00 
   140001ffd:	48 83 e0 f0          	and    rax,0xfffffffffffffff0
   140002001:	e8 8a 0b 00 00       	call   140002b90 <___chkstk_ms>
   140002006:	4c 8b 2d 73 34 00 00 	mov    r13,QWORD PTR [rip+0x3473]        # 140005480 <.refptr.__RUNTIME_PSEUDO_RELOC_LIST_END__>
   14000200d:	c7 05 8d 60 00 00 00 	mov    DWORD PTR [rip+0x608d],0x0        # 1400080a4 <maxSections>
   140002014:	00 00 00 
   140002017:	48 8b 1d 72 34 00 00 	mov    rbx,QWORD PTR [rip+0x3472]        # 140005490 <.refptr.__RUNTIME_PSEUDO_RELOC_LIST__>
   14000201e:	48 29 c4             	sub    rsp,rax
   140002021:	48 8d 44 24 30       	lea    rax,[rsp+0x30]
   140002026:	48 89 05 7b 60 00 00 	mov    QWORD PTR [rip+0x607b],rax        # 1400080a8 <the_secs>
   14000202d:	4c 89 e8             	mov    rax,r13
   140002030:	48 29 d8             	sub    rax,rbx
   140002033:	48 83 f8 07          	cmp    rax,0x7
   140002037:	7e 96                	jle    140001fcf <_pei386_runtime_relocator+0x1f>
   140002039:	48 83 f8 0b          	cmp    rax,0xb
   14000203d:	8b 13                	mov    edx,DWORD PTR [rbx]
   14000203f:	0f 8f 83 01 00 00    	jg     1400021c8 <_pei386_runtime_relocator+0x218>
   140002045:	8b 03                	mov    eax,DWORD PTR [rbx]
   140002047:	85 c0                	test   eax,eax
   140002049:	0f 85 71 02 00 00    	jne    1400022c0 <_pei386_runtime_relocator+0x310>
   14000204f:	8b 43 04             	mov    eax,DWORD PTR [rbx+0x4]
   140002052:	85 c0                	test   eax,eax
   140002054:	0f 85 66 02 00 00    	jne    1400022c0 <_pei386_runtime_relocator+0x310>
   14000205a:	8b 53 08             	mov    edx,DWORD PTR [rbx+0x8]
   14000205d:	83 fa 01             	cmp    edx,0x1
   140002060:	0f 85 9c 02 00 00    	jne    140002302 <_pei386_runtime_relocator+0x352>
   140002066:	48 83 c3 0c          	add    rbx,0xc
   14000206a:	4c 39 eb             	cmp    rbx,r13
   14000206d:	0f 83 5c ff ff ff    	jae    140001fcf <_pei386_runtime_relocator+0x1f>
   140002073:	4c 8b 25 36 34 00 00 	mov    r12,QWORD PTR [rip+0x3436]        # 1400054b0 <.refptr.__image_base__>
   14000207a:	49 bf ff ff ff 7f ff 	movabs r15,0xffffffff7fffffff
   140002081:	ff ff ff 
   140002084:	eb 5d                	jmp    1400020e3 <_pei386_runtime_relocator+0x133>
   140002086:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   14000208d:	00 00 00 
   140002090:	41 0f b6 36          	movzx  esi,BYTE PTR [r14]
   140002094:	81 e1 c0 00 00 00    	and    ecx,0xc0
   14000209a:	40 84 f6             	test   sil,sil
   14000209d:	0f 89 05 02 00 00    	jns    1400022a8 <_pei386_runtime_relocator+0x2f8>
   1400020a3:	48 81 ce 00 ff ff ff 	or     rsi,0xffffffffffffff00
   1400020aa:	48 29 c6             	sub    rsi,rax
   1400020ad:	4c 01 ce             	add    rsi,r9
   1400020b0:	85 c9                	test   ecx,ecx
   1400020b2:	75 17                	jne    1400020cb <_pei386_runtime_relocator+0x11b>
   1400020b4:	48 81 fe ff 00 00 00 	cmp    rsi,0xff
   1400020bb:	0f 8f 4e 01 00 00    	jg     14000220f <_pei386_runtime_relocator+0x25f>
   1400020c1:	48 83 fe 80          	cmp    rsi,0xffffffffffffff80
   1400020c5:	0f 8c 44 01 00 00    	jl     14000220f <_pei386_runtime_relocator+0x25f>
   1400020cb:	4c 89 f1             	mov    rcx,r14
   1400020ce:	e8 6d fd ff ff       	call   140001e40 <mark_section_writable>
   1400020d3:	41 88 36             	mov    BYTE PTR [r14],sil
   1400020d6:	48 83 c3 0c          	add    rbx,0xc
   1400020da:	4c 39 eb             	cmp    rbx,r13
   1400020dd:	0f 83 8d 00 00 00    	jae    140002170 <_pei386_runtime_relocator+0x1c0>
   1400020e3:	8b 4b 08             	mov    ecx,DWORD PTR [rbx+0x8]
   1400020e6:	8b 03                	mov    eax,DWORD PTR [rbx]
   1400020e8:	44 8b 43 04          	mov    r8d,DWORD PTR [rbx+0x4]
   1400020ec:	0f b6 d1             	movzx  edx,cl
   1400020ef:	4c 01 e0             	add    rax,r12
   1400020f2:	83 fa 20             	cmp    edx,0x20
   1400020f5:	4c 8b 08             	mov    r9,QWORD PTR [rax]
   1400020f8:	4f 8d 34 20          	lea    r14,[r8+r12*1]
   1400020fc:	0f 84 26 01 00 00    	je     140002228 <_pei386_runtime_relocator+0x278>
   140002102:	0f 87 e8 00 00 00    	ja     1400021f0 <_pei386_runtime_relocator+0x240>
   140002108:	83 fa 08             	cmp    edx,0x8
   14000210b:	74 83                	je     140002090 <_pei386_runtime_relocator+0xe0>
   14000210d:	83 fa 10             	cmp    edx,0x10
   140002110:	0f 85 e0 01 00 00    	jne    1400022f6 <_pei386_runtime_relocator+0x346>
   140002116:	41 0f b7 36          	movzx  esi,WORD PTR [r14]
   14000211a:	81 e1 c0 00 00 00    	and    ecx,0xc0
   140002120:	66 85 f6             	test   si,si
   140002123:	0f 89 67 01 00 00    	jns    140002290 <_pei386_runtime_relocator+0x2e0>
   140002129:	48 81 ce 00 00 ff ff 	or     rsi,0xffffffffffff0000
   140002130:	48 29 c6             	sub    rsi,rax
   140002133:	4c 01 ce             	add    rsi,r9
   140002136:	85 c9                	test   ecx,ecx
   140002138:	75 1a                	jne    140002154 <_pei386_runtime_relocator+0x1a4>
   14000213a:	48 81 fe 00 80 ff ff 	cmp    rsi,0xffffffffffff8000
   140002141:	0f 8c c8 00 00 00    	jl     14000220f <_pei386_runtime_relocator+0x25f>
   140002147:	48 81 fe ff ff 00 00 	cmp    rsi,0xffff
   14000214e:	0f 8f bb 00 00 00    	jg     14000220f <_pei386_runtime_relocator+0x25f>
   140002154:	4c 89 f1             	mov    rcx,r14
   140002157:	48 83 c3 0c          	add    rbx,0xc
   14000215b:	e8 e0 fc ff ff       	call   140001e40 <mark_section_writable>
   140002160:	4c 39 eb             	cmp    rbx,r13
   140002163:	66 41 89 36          	mov    WORD PTR [r14],si
   140002167:	0f 82 76 ff ff ff    	jb     1400020e3 <_pei386_runtime_relocator+0x133>
   14000216d:	0f 1f 00             	nop    DWORD PTR [rax]
   140002170:	8b 15 2e 5f 00 00    	mov    edx,DWORD PTR [rip+0x5f2e]        # 1400080a4 <maxSections>
   140002176:	85 d2                	test   edx,edx
   140002178:	0f 8e 51 fe ff ff    	jle    140001fcf <_pei386_runtime_relocator+0x1f>
   14000217e:	48 8b 35 63 71 00 00 	mov    rsi,QWORD PTR [rip+0x7163]        # 1400092e8 <__imp_VirtualProtect>
   140002185:	4c 8d 65 fc          	lea    r12,[rbp-0x4]
   140002189:	31 db                	xor    ebx,ebx
   14000218b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140002190:	48 8b 05 11 5f 00 00 	mov    rax,QWORD PTR [rip+0x5f11]        # 1400080a8 <the_secs>
   140002197:	48 01 d8             	add    rax,rbx
   14000219a:	44 8b 00             	mov    r8d,DWORD PTR [rax]
   14000219d:	45 85 c0             	test   r8d,r8d
   1400021a0:	74 0d                	je     1400021af <_pei386_runtime_relocator+0x1ff>
   1400021a2:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
   1400021a6:	4d 89 e1             	mov    r9,r12
   1400021a9:	48 8b 48 08          	mov    rcx,QWORD PTR [rax+0x8]
   1400021ad:	ff d6                	call   rsi
   1400021af:	83 c7 01             	add    edi,0x1
   1400021b2:	48 83 c3 28          	add    rbx,0x28
   1400021b6:	3b 3d e8 5e 00 00    	cmp    edi,DWORD PTR [rip+0x5ee8]        # 1400080a4 <maxSections>
   1400021bc:	7c d2                	jl     140002190 <_pei386_runtime_relocator+0x1e0>
   1400021be:	e9 0c fe ff ff       	jmp    140001fcf <_pei386_runtime_relocator+0x1f>
   1400021c3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   1400021c8:	85 d2                	test   edx,edx
   1400021ca:	0f 85 f0 00 00 00    	jne    1400022c0 <_pei386_runtime_relocator+0x310>
   1400021d0:	8b 43 04             	mov    eax,DWORD PTR [rbx+0x4]
   1400021d3:	89 c2                	mov    edx,eax
   1400021d5:	0b 53 08             	or     edx,DWORD PTR [rbx+0x8]
   1400021d8:	0f 85 74 fe ff ff    	jne    140002052 <_pei386_runtime_relocator+0xa2>
   1400021de:	48 83 c3 0c          	add    rbx,0xc
   1400021e2:	e9 5e fe ff ff       	jmp    140002045 <_pei386_runtime_relocator+0x95>
   1400021e7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   1400021ee:	00 00 
   1400021f0:	83 fa 40             	cmp    edx,0x40
   1400021f3:	0f 85 fd 00 00 00    	jne    1400022f6 <_pei386_runtime_relocator+0x346>
   1400021f9:	49 8b 36             	mov    rsi,QWORD PTR [r14]
   1400021fc:	48 29 c6             	sub    rsi,rax
   1400021ff:	4c 01 ce             	add    rsi,r9
   140002202:	81 e1 c0 00 00 00    	and    ecx,0xc0
   140002208:	75 66                	jne    140002270 <_pei386_runtime_relocator+0x2c0>
   14000220a:	48 85 f6             	test   rsi,rsi
   14000220d:	78 61                	js     140002270 <_pei386_runtime_relocator+0x2c0>
   14000220f:	48 89 74 24 20       	mov    QWORD PTR [rsp+0x20],rsi
   140002214:	48 8d 0d 8d 31 00 00 	lea    rcx,[rip+0x318d]        # 1400053a8 <.rdata+0x108>
   14000221b:	4d 89 f0             	mov    r8,r14
   14000221e:	e8 ad fb ff ff       	call   140001dd0 <__report_error>
   140002223:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140002228:	41 8b 36             	mov    esi,DWORD PTR [r14]
   14000222b:	81 e1 c0 00 00 00    	and    ecx,0xc0
   140002231:	85 f6                	test   esi,esi
   140002233:	79 4b                	jns    140002280 <_pei386_runtime_relocator+0x2d0>
   140002235:	49 bb 00 00 00 00 ff 	movabs r11,0xffffffff00000000
   14000223c:	ff ff ff 
   14000223f:	4c 09 de             	or     rsi,r11
   140002242:	48 29 c6             	sub    rsi,rax
   140002245:	4c 01 ce             	add    rsi,r9
   140002248:	85 c9                	test   ecx,ecx
   14000224a:	75 0f                	jne    14000225b <_pei386_runtime_relocator+0x2ab>
   14000224c:	4c 39 fe             	cmp    rsi,r15
   14000224f:	7e be                	jle    14000220f <_pei386_runtime_relocator+0x25f>
   140002251:	b8 ff ff ff ff       	mov    eax,0xffffffff
   140002256:	48 39 c6             	cmp    rsi,rax
   140002259:	7f b4                	jg     14000220f <_pei386_runtime_relocator+0x25f>
   14000225b:	4c 89 f1             	mov    rcx,r14
   14000225e:	e8 dd fb ff ff       	call   140001e40 <mark_section_writable>
   140002263:	41 89 36             	mov    DWORD PTR [r14],esi
   140002266:	e9 6b fe ff ff       	jmp    1400020d6 <_pei386_runtime_relocator+0x126>
   14000226b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140002270:	4c 89 f1             	mov    rcx,r14
   140002273:	e8 c8 fb ff ff       	call   140001e40 <mark_section_writable>
   140002278:	49 89 36             	mov    QWORD PTR [r14],rsi
   14000227b:	e9 56 fe ff ff       	jmp    1400020d6 <_pei386_runtime_relocator+0x126>
   140002280:	48 29 c6             	sub    rsi,rax
   140002283:	4c 01 ce             	add    rsi,r9
   140002286:	85 c9                	test   ecx,ecx
   140002288:	74 c2                	je     14000224c <_pei386_runtime_relocator+0x29c>
   14000228a:	eb cf                	jmp    14000225b <_pei386_runtime_relocator+0x2ab>
   14000228c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140002290:	48 29 c6             	sub    rsi,rax
   140002293:	4c 01 ce             	add    rsi,r9
   140002296:	85 c9                	test   ecx,ecx
   140002298:	0f 84 9c fe ff ff    	je     14000213a <_pei386_runtime_relocator+0x18a>
   14000229e:	e9 b1 fe ff ff       	jmp    140002154 <_pei386_runtime_relocator+0x1a4>
   1400022a3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   1400022a8:	48 29 c6             	sub    rsi,rax
   1400022ab:	4c 01 ce             	add    rsi,r9
   1400022ae:	85 c9                	test   ecx,ecx
   1400022b0:	0f 84 fe fd ff ff    	je     1400020b4 <_pei386_runtime_relocator+0x104>
   1400022b6:	e9 10 fe ff ff       	jmp    1400020cb <_pei386_runtime_relocator+0x11b>
   1400022bb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   1400022c0:	4c 39 eb             	cmp    rbx,r13
   1400022c3:	0f 83 06 fd ff ff    	jae    140001fcf <_pei386_runtime_relocator+0x1f>
   1400022c9:	4c 8b 35 e0 31 00 00 	mov    r14,QWORD PTR [rip+0x31e0]        # 1400054b0 <.refptr.__image_base__>
   1400022d0:	8b 73 04             	mov    esi,DWORD PTR [rbx+0x4]
   1400022d3:	48 83 c3 08          	add    rbx,0x8
   1400022d7:	44 8b 63 f8          	mov    r12d,DWORD PTR [rbx-0x8]
   1400022db:	4c 01 f6             	add    rsi,r14
   1400022de:	44 03 26             	add    r12d,DWORD PTR [rsi]
   1400022e1:	48 89 f1             	mov    rcx,rsi
   1400022e4:	e8 57 fb ff ff       	call   140001e40 <mark_section_writable>
   1400022e9:	4c 39 eb             	cmp    rbx,r13
   1400022ec:	44 89 26             	mov    DWORD PTR [rsi],r12d
   1400022ef:	72 df                	jb     1400022d0 <_pei386_runtime_relocator+0x320>
   1400022f1:	e9 7a fe ff ff       	jmp    140002170 <_pei386_runtime_relocator+0x1c0>
   1400022f6:	48 8d 0d 7b 30 00 00 	lea    rcx,[rip+0x307b]        # 140005378 <.rdata+0xd8>
   1400022fd:	e8 ce fa ff ff       	call   140001dd0 <__report_error>
   140002302:	48 8d 0d 37 30 00 00 	lea    rcx,[rip+0x3037]        # 140005340 <.rdata+0xa0>
   140002309:	e8 c2 fa ff ff       	call   140001dd0 <__report_error>
   14000230e:	90                   	nop
   14000230f:	90                   	nop

0000000140002310 <__mingw_raise_matherr>:
   140002310:	48 83 ec 58          	sub    rsp,0x58
   140002314:	48 8b 05 95 5d 00 00 	mov    rax,QWORD PTR [rip+0x5d95]        # 1400080b0 <stUserMathErr>
   14000231b:	48 85 c0             	test   rax,rax
   14000231e:	66 0f 14 d3          	unpcklpd xmm2,xmm3
   140002322:	74 25                	je     140002349 <__mingw_raise_matherr+0x39>
   140002324:	f2 0f 10 84 24 80 00 	movsd  xmm0,QWORD PTR [rsp+0x80]
   14000232b:	00 00 
   14000232d:	89 4c 24 20          	mov    DWORD PTR [rsp+0x20],ecx
   140002331:	48 8d 4c 24 20       	lea    rcx,[rsp+0x20]
   140002336:	48 89 54 24 28       	mov    QWORD PTR [rsp+0x28],rdx
   14000233b:	0f 29 54 24 30       	movaps XMMWORD PTR [rsp+0x30],xmm2
   140002340:	f2 0f 11 44 24 40    	movsd  QWORD PTR [rsp+0x40],xmm0
   140002346:	ff d0                	call   rax
   140002348:	90                   	nop
   140002349:	48 83 c4 58          	add    rsp,0x58
   14000234d:	c3                   	ret
   14000234e:	66 90                	xchg   ax,ax

0000000140002350 <__mingw_setusermatherr>:
   140002350:	48 89 0d 59 5d 00 00 	mov    QWORD PTR [rip+0x5d59],rcx        # 1400080b0 <stUserMathErr>
   140002357:	e9 04 0c 00 00       	jmp    140002f60 <__setusermatherr>
   14000235c:	90                   	nop
   14000235d:	90                   	nop
   14000235e:	90                   	nop
   14000235f:	90                   	nop

0000000140002360 <_gnu_exception_handler>:
   140002360:	53                   	push   rbx
   140002361:	48 83 ec 20          	sub    rsp,0x20
   140002365:	48 8b 11             	mov    rdx,QWORD PTR [rcx]
   140002368:	8b 02                	mov    eax,DWORD PTR [rdx]
   14000236a:	48 89 cb             	mov    rbx,rcx
   14000236d:	89 c1                	mov    ecx,eax
   14000236f:	81 e1 ff ff ff 20    	and    ecx,0x20ffffff
   140002375:	81 f9 43 43 47 20    	cmp    ecx,0x20474343
   14000237b:	0f 84 9f 00 00 00    	je     140002420 <_gnu_exception_handler+0xc0>
   140002381:	3d 96 00 00 c0       	cmp    eax,0xc0000096
   140002386:	77 77                	ja     1400023ff <_gnu_exception_handler+0x9f>
   140002388:	3d 8b 00 00 c0       	cmp    eax,0xc000008b
   14000238d:	76 21                	jbe    1400023b0 <_gnu_exception_handler+0x50>
   14000238f:	05 73 ff ff 3f       	add    eax,0x3fffff73
   140002394:	83 f8 09             	cmp    eax,0x9
   140002397:	77 54                	ja     1400023ed <_gnu_exception_handler+0x8d>
   140002399:	48 8d 15 60 30 00 00 	lea    rdx,[rip+0x3060]        # 140005400 <.rdata>
   1400023a0:	48 63 04 82          	movsxd rax,DWORD PTR [rdx+rax*4]
   1400023a4:	48 01 d0             	add    rax,rdx
   1400023a7:	ff e0                	jmp    rax
   1400023a9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   1400023b0:	3d 05 00 00 c0       	cmp    eax,0xc0000005
   1400023b5:	0f 84 d5 00 00 00    	je     140002490 <_gnu_exception_handler+0x130>
   1400023bb:	76 3b                	jbe    1400023f8 <_gnu_exception_handler+0x98>
   1400023bd:	3d 08 00 00 c0       	cmp    eax,0xc0000008
   1400023c2:	74 29                	je     1400023ed <_gnu_exception_handler+0x8d>
   1400023c4:	3d 1d 00 00 c0       	cmp    eax,0xc000001d
   1400023c9:	75 34                	jne    1400023ff <_gnu_exception_handler+0x9f>
   1400023cb:	31 d2                	xor    edx,edx
   1400023cd:	b9 04 00 00 00       	mov    ecx,0x4
   1400023d2:	e8 69 0b 00 00       	call   140002f40 <signal>
   1400023d7:	48 83 f8 01          	cmp    rax,0x1
   1400023db:	0f 84 d6 00 00 00    	je     1400024b7 <_gnu_exception_handler+0x157>
   1400023e1:	48 85 c0             	test   rax,rax
   1400023e4:	74 19                	je     1400023ff <_gnu_exception_handler+0x9f>
   1400023e6:	b9 04 00 00 00       	mov    ecx,0x4
   1400023eb:	ff d0                	call   rax
   1400023ed:	b8 ff ff ff ff       	mov    eax,0xffffffff
   1400023f2:	48 83 c4 20          	add    rsp,0x20
   1400023f6:	5b                   	pop    rbx
   1400023f7:	c3                   	ret
   1400023f8:	3d 02 00 00 80       	cmp    eax,0x80000002
   1400023fd:	74 ee                	je     1400023ed <_gnu_exception_handler+0x8d>
   1400023ff:	48 8b 05 ca 5c 00 00 	mov    rax,QWORD PTR [rip+0x5cca]        # 1400080d0 <__mingw_oldexcpt_handler>
   140002406:	48 85 c0             	test   rax,rax
   140002409:	74 25                	je     140002430 <_gnu_exception_handler+0xd0>
   14000240b:	48 89 d9             	mov    rcx,rbx
   14000240e:	48 83 c4 20          	add    rsp,0x20
   140002412:	5b                   	pop    rbx
   140002413:	48 ff e0             	rex.W jmp rax
   140002416:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   14000241d:	00 00 00 
   140002420:	f6 42 04 01          	test   BYTE PTR [rdx+0x4],0x1
   140002424:	0f 85 57 ff ff ff    	jne    140002381 <_gnu_exception_handler+0x21>
   14000242a:	eb c1                	jmp    1400023ed <_gnu_exception_handler+0x8d>
   14000242c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140002430:	31 c0                	xor    eax,eax
   140002432:	48 83 c4 20          	add    rsp,0x20
   140002436:	5b                   	pop    rbx
   140002437:	c3                   	ret
   140002438:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   14000243f:	00 
   140002440:	31 d2                	xor    edx,edx
   140002442:	b9 08 00 00 00       	mov    ecx,0x8
   140002447:	e8 f4 0a 00 00       	call   140002f40 <signal>
   14000244c:	48 83 f8 01          	cmp    rax,0x1
   140002450:	0f 84 89 00 00 00    	je     1400024df <_gnu_exception_handler+0x17f>
   140002456:	48 85 c0             	test   rax,rax
   140002459:	74 a4                	je     1400023ff <_gnu_exception_handler+0x9f>
   14000245b:	b9 08 00 00 00       	mov    ecx,0x8
   140002460:	ff d0                	call   rax
   140002462:	eb 89                	jmp    1400023ed <_gnu_exception_handler+0x8d>
   140002464:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140002468:	31 d2                	xor    edx,edx
   14000246a:	b9 08 00 00 00       	mov    ecx,0x8
   14000246f:	e8 cc 0a 00 00       	call   140002f40 <signal>
   140002474:	48 83 f8 01          	cmp    rax,0x1
   140002478:	75 dc                	jne    140002456 <_gnu_exception_handler+0xf6>
   14000247a:	ba 01 00 00 00       	mov    edx,0x1
   14000247f:	b9 08 00 00 00       	mov    ecx,0x8
   140002484:	e8 b7 0a 00 00       	call   140002f40 <signal>
   140002489:	e9 5f ff ff ff       	jmp    1400023ed <_gnu_exception_handler+0x8d>
   14000248e:	66 90                	xchg   ax,ax
   140002490:	31 d2                	xor    edx,edx
   140002492:	b9 0b 00 00 00       	mov    ecx,0xb
   140002497:	e8 a4 0a 00 00       	call   140002f40 <signal>
   14000249c:	48 83 f8 01          	cmp    rax,0x1
   1400024a0:	74 29                	je     1400024cb <_gnu_exception_handler+0x16b>
   1400024a2:	48 85 c0             	test   rax,rax
   1400024a5:	0f 84 54 ff ff ff    	je     1400023ff <_gnu_exception_handler+0x9f>
   1400024ab:	b9 0b 00 00 00       	mov    ecx,0xb
   1400024b0:	ff d0                	call   rax
   1400024b2:	e9 36 ff ff ff       	jmp    1400023ed <_gnu_exception_handler+0x8d>
   1400024b7:	ba 01 00 00 00       	mov    edx,0x1
   1400024bc:	b9 04 00 00 00       	mov    ecx,0x4
   1400024c1:	e8 7a 0a 00 00       	call   140002f40 <signal>
   1400024c6:	e9 22 ff ff ff       	jmp    1400023ed <_gnu_exception_handler+0x8d>
   1400024cb:	ba 01 00 00 00       	mov    edx,0x1
   1400024d0:	b9 0b 00 00 00       	mov    ecx,0xb
   1400024d5:	e8 66 0a 00 00       	call   140002f40 <signal>
   1400024da:	e9 0e ff ff ff       	jmp    1400023ed <_gnu_exception_handler+0x8d>
   1400024df:	ba 01 00 00 00       	mov    edx,0x1
   1400024e4:	b9 08 00 00 00       	mov    ecx,0x8
   1400024e9:	e8 52 0a 00 00       	call   140002f40 <signal>
   1400024ee:	e8 cd f8 ff ff       	call   140001dc0 <_fpreset>
   1400024f3:	e9 f5 fe ff ff       	jmp    1400023ed <_gnu_exception_handler+0x8d>
   1400024f8:	90                   	nop
   1400024f9:	90                   	nop
   1400024fa:	90                   	nop
   1400024fb:	90                   	nop
   1400024fc:	90                   	nop
   1400024fd:	90                   	nop
   1400024fe:	90                   	nop
   1400024ff:	90                   	nop

0000000140002500 <__mingwthr_run_key_dtors.part.0>:
   140002500:	41 54                	push   r12
   140002502:	55                   	push   rbp
   140002503:	57                   	push   rdi
   140002504:	56                   	push   rsi
   140002505:	53                   	push   rbx
   140002506:	48 83 ec 20          	sub    rsp,0x20
   14000250a:	4c 8d 25 ef 5b 00 00 	lea    r12,[rip+0x5bef]        # 140008100 <__mingwthr_cs>
   140002511:	4c 89 e1             	mov    rcx,r12
   140002514:	ff 15 96 6d 00 00    	call   QWORD PTR [rip+0x6d96]        # 1400092b0 <__imp_EnterCriticalSection>
   14000251a:	48 8b 1d bf 5b 00 00 	mov    rbx,QWORD PTR [rip+0x5bbf]        # 1400080e0 <key_dtor_list>
   140002521:	48 85 db             	test   rbx,rbx
   140002524:	74 36                	je     14000255c <__mingwthr_run_key_dtors.part.0+0x5c>
   140002526:	48 8b 2d b3 6d 00 00 	mov    rbp,QWORD PTR [rip+0x6db3]        # 1400092e0 <__imp_TlsGetValue>
   14000252d:	48 8b 3d 84 6d 00 00 	mov    rdi,QWORD PTR [rip+0x6d84]        # 1400092b8 <__imp_GetLastError>
   140002534:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140002538:	8b 0b                	mov    ecx,DWORD PTR [rbx]
   14000253a:	ff d5                	call   rbp
   14000253c:	48 89 c6             	mov    rsi,rax
   14000253f:	ff d7                	call   rdi
   140002541:	85 c0                	test   eax,eax
   140002543:	75 0e                	jne    140002553 <__mingwthr_run_key_dtors.part.0+0x53>
   140002545:	48 85 f6             	test   rsi,rsi
   140002548:	74 09                	je     140002553 <__mingwthr_run_key_dtors.part.0+0x53>
   14000254a:	48 8b 43 08          	mov    rax,QWORD PTR [rbx+0x8]
   14000254e:	48 89 f1             	mov    rcx,rsi
   140002551:	ff d0                	call   rax
   140002553:	48 8b 5b 10          	mov    rbx,QWORD PTR [rbx+0x10]
   140002557:	48 85 db             	test   rbx,rbx
   14000255a:	75 dc                	jne    140002538 <__mingwthr_run_key_dtors.part.0+0x38>
   14000255c:	4c 89 e1             	mov    rcx,r12
   14000255f:	48 83 c4 20          	add    rsp,0x20
   140002563:	5b                   	pop    rbx
   140002564:	5e                   	pop    rsi
   140002565:	5f                   	pop    rdi
   140002566:	5d                   	pop    rbp
   140002567:	41 5c                	pop    r12
   140002569:	48 ff 25 58 6d 00 00 	rex.W jmp QWORD PTR [rip+0x6d58]        # 1400092c8 <__imp_LeaveCriticalSection>

0000000140002570 <___w64_mingwthr_add_key_dtor>:
   140002570:	57                   	push   rdi
   140002571:	56                   	push   rsi
   140002572:	53                   	push   rbx
   140002573:	48 83 ec 20          	sub    rsp,0x20
   140002577:	8b 05 6b 5b 00 00    	mov    eax,DWORD PTR [rip+0x5b6b]        # 1400080e8 <__mingwthr_cs_init>
   14000257d:	85 c0                	test   eax,eax
   14000257f:	89 cf                	mov    edi,ecx
   140002581:	48 89 d6             	mov    rsi,rdx
   140002584:	75 0a                	jne    140002590 <___w64_mingwthr_add_key_dtor+0x20>
   140002586:	31 c0                	xor    eax,eax
   140002588:	48 83 c4 20          	add    rsp,0x20
   14000258c:	5b                   	pop    rbx
   14000258d:	5e                   	pop    rsi
   14000258e:	5f                   	pop    rdi
   14000258f:	c3                   	ret
   140002590:	ba 18 00 00 00       	mov    edx,0x18
   140002595:	b9 01 00 00 00       	mov    ecx,0x1
   14000259a:	e8 d9 09 00 00       	call   140002f78 <calloc>
   14000259f:	48 85 c0             	test   rax,rax
   1400025a2:	48 89 c3             	mov    rbx,rax
   1400025a5:	74 33                	je     1400025da <___w64_mingwthr_add_key_dtor+0x6a>
   1400025a7:	48 89 70 08          	mov    QWORD PTR [rax+0x8],rsi
   1400025ab:	48 8d 35 4e 5b 00 00 	lea    rsi,[rip+0x5b4e]        # 140008100 <__mingwthr_cs>
   1400025b2:	89 38                	mov    DWORD PTR [rax],edi
   1400025b4:	48 89 f1             	mov    rcx,rsi
   1400025b7:	ff 15 f3 6c 00 00    	call   QWORD PTR [rip+0x6cf3]        # 1400092b0 <__imp_EnterCriticalSection>
   1400025bd:	48 8b 05 1c 5b 00 00 	mov    rax,QWORD PTR [rip+0x5b1c]        # 1400080e0 <key_dtor_list>
   1400025c4:	48 89 f1             	mov    rcx,rsi
   1400025c7:	48 89 1d 12 5b 00 00 	mov    QWORD PTR [rip+0x5b12],rbx        # 1400080e0 <key_dtor_list>
   1400025ce:	48 89 43 10          	mov    QWORD PTR [rbx+0x10],rax
   1400025d2:	ff 15 f0 6c 00 00    	call   QWORD PTR [rip+0x6cf0]        # 1400092c8 <__imp_LeaveCriticalSection>
   1400025d8:	eb ac                	jmp    140002586 <___w64_mingwthr_add_key_dtor+0x16>
   1400025da:	83 c8 ff             	or     eax,0xffffffff
   1400025dd:	eb a9                	jmp    140002588 <___w64_mingwthr_add_key_dtor+0x18>
   1400025df:	90                   	nop

00000001400025e0 <___w64_mingwthr_remove_key_dtor>:
   1400025e0:	56                   	push   rsi
   1400025e1:	53                   	push   rbx
   1400025e2:	48 83 ec 28          	sub    rsp,0x28
   1400025e6:	8b 05 fc 5a 00 00    	mov    eax,DWORD PTR [rip+0x5afc]        # 1400080e8 <__mingwthr_cs_init>
   1400025ec:	85 c0                	test   eax,eax
   1400025ee:	89 cb                	mov    ebx,ecx
   1400025f0:	75 0e                	jne    140002600 <___w64_mingwthr_remove_key_dtor+0x20>
   1400025f2:	31 c0                	xor    eax,eax
   1400025f4:	48 83 c4 28          	add    rsp,0x28
   1400025f8:	5b                   	pop    rbx
   1400025f9:	5e                   	pop    rsi
   1400025fa:	c3                   	ret
   1400025fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140002600:	48 8d 35 f9 5a 00 00 	lea    rsi,[rip+0x5af9]        # 140008100 <__mingwthr_cs>
   140002607:	48 89 f1             	mov    rcx,rsi
   14000260a:	ff 15 a0 6c 00 00    	call   QWORD PTR [rip+0x6ca0]        # 1400092b0 <__imp_EnterCriticalSection>
   140002610:	48 8b 0d c9 5a 00 00 	mov    rcx,QWORD PTR [rip+0x5ac9]        # 1400080e0 <key_dtor_list>
   140002617:	48 85 c9             	test   rcx,rcx
   14000261a:	74 27                	je     140002643 <___w64_mingwthr_remove_key_dtor+0x63>
   14000261c:	31 d2                	xor    edx,edx
   14000261e:	eb 0b                	jmp    14000262b <___w64_mingwthr_remove_key_dtor+0x4b>
   140002620:	48 85 c0             	test   rax,rax
   140002623:	48 89 ca             	mov    rdx,rcx
   140002626:	74 1b                	je     140002643 <___w64_mingwthr_remove_key_dtor+0x63>
   140002628:	48 89 c1             	mov    rcx,rax
   14000262b:	8b 01                	mov    eax,DWORD PTR [rcx]
   14000262d:	39 d8                	cmp    eax,ebx
   14000262f:	48 8b 41 10          	mov    rax,QWORD PTR [rcx+0x10]
   140002633:	75 eb                	jne    140002620 <___w64_mingwthr_remove_key_dtor+0x40>
   140002635:	48 85 d2             	test   rdx,rdx
   140002638:	74 1e                	je     140002658 <___w64_mingwthr_remove_key_dtor+0x78>
   14000263a:	48 89 42 10          	mov    QWORD PTR [rdx+0x10],rax
   14000263e:	e8 3d 09 00 00       	call   140002f80 <free>
   140002643:	48 89 f1             	mov    rcx,rsi
   140002646:	ff 15 7c 6c 00 00    	call   QWORD PTR [rip+0x6c7c]        # 1400092c8 <__imp_LeaveCriticalSection>
   14000264c:	31 c0                	xor    eax,eax
   14000264e:	48 83 c4 28          	add    rsp,0x28
   140002652:	5b                   	pop    rbx
   140002653:	5e                   	pop    rsi
   140002654:	c3                   	ret
   140002655:	0f 1f 00             	nop    DWORD PTR [rax]
   140002658:	48 89 05 81 5a 00 00 	mov    QWORD PTR [rip+0x5a81],rax        # 1400080e0 <key_dtor_list>
   14000265f:	eb dd                	jmp    14000263e <___w64_mingwthr_remove_key_dtor+0x5e>
   140002661:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   140002668:	00 00 00 00 
   14000266c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000140002670 <__mingw_TLScallback>:
   140002670:	53                   	push   rbx
   140002671:	48 83 ec 20          	sub    rsp,0x20
   140002675:	83 fa 02             	cmp    edx,0x2
   140002678:	0f 84 b2 00 00 00    	je     140002730 <__mingw_TLScallback+0xc0>
   14000267e:	77 30                	ja     1400026b0 <__mingw_TLScallback+0x40>
   140002680:	85 d2                	test   edx,edx
   140002682:	74 4c                	je     1400026d0 <__mingw_TLScallback+0x60>
   140002684:	8b 05 5e 5a 00 00    	mov    eax,DWORD PTR [rip+0x5a5e]        # 1400080e8 <__mingwthr_cs_init>
   14000268a:	85 c0                	test   eax,eax
   14000268c:	0f 84 be 00 00 00    	je     140002750 <__mingw_TLScallback+0xe0>
   140002692:	c7 05 4c 5a 00 00 01 	mov    DWORD PTR [rip+0x5a4c],0x1        # 1400080e8 <__mingwthr_cs_init>
   140002699:	00 00 00 
   14000269c:	b8 01 00 00 00       	mov    eax,0x1
   1400026a1:	48 83 c4 20          	add    rsp,0x20
   1400026a5:	5b                   	pop    rbx
   1400026a6:	c3                   	ret
   1400026a7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   1400026ae:	00 00 
   1400026b0:	83 fa 03             	cmp    edx,0x3
   1400026b3:	75 e7                	jne    14000269c <__mingw_TLScallback+0x2c>
   1400026b5:	8b 05 2d 5a 00 00    	mov    eax,DWORD PTR [rip+0x5a2d]        # 1400080e8 <__mingwthr_cs_init>
   1400026bb:	85 c0                	test   eax,eax
   1400026bd:	74 dd                	je     14000269c <__mingw_TLScallback+0x2c>
   1400026bf:	e8 3c fe ff ff       	call   140002500 <__mingwthr_run_key_dtors.part.0>
   1400026c4:	eb d6                	jmp    14000269c <__mingw_TLScallback+0x2c>
   1400026c6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   1400026cd:	00 00 00 
   1400026d0:	8b 05 12 5a 00 00    	mov    eax,DWORD PTR [rip+0x5a12]        # 1400080e8 <__mingwthr_cs_init>
   1400026d6:	85 c0                	test   eax,eax
   1400026d8:	75 66                	jne    140002740 <__mingw_TLScallback+0xd0>
   1400026da:	8b 05 08 5a 00 00    	mov    eax,DWORD PTR [rip+0x5a08]        # 1400080e8 <__mingwthr_cs_init>
   1400026e0:	83 f8 01             	cmp    eax,0x1
   1400026e3:	75 b7                	jne    14000269c <__mingw_TLScallback+0x2c>
   1400026e5:	48 8b 1d f4 59 00 00 	mov    rbx,QWORD PTR [rip+0x59f4]        # 1400080e0 <key_dtor_list>
   1400026ec:	48 85 db             	test   rbx,rbx
   1400026ef:	74 18                	je     140002709 <__mingw_TLScallback+0x99>
   1400026f1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   1400026f8:	48 89 d9             	mov    rcx,rbx
   1400026fb:	48 8b 5b 10          	mov    rbx,QWORD PTR [rbx+0x10]
   1400026ff:	e8 7c 08 00 00       	call   140002f80 <free>
   140002704:	48 85 db             	test   rbx,rbx
   140002707:	75 ef                	jne    1400026f8 <__mingw_TLScallback+0x88>
   140002709:	48 8d 0d f0 59 00 00 	lea    rcx,[rip+0x59f0]        # 140008100 <__mingwthr_cs>
   140002710:	48 c7 05 c5 59 00 00 	mov    QWORD PTR [rip+0x59c5],0x0        # 1400080e0 <key_dtor_list>
   140002717:	00 00 00 00 
   14000271b:	c7 05 c3 59 00 00 00 	mov    DWORD PTR [rip+0x59c3],0x0        # 1400080e8 <__mingwthr_cs_init>
   140002722:	00 00 00 
   140002725:	ff 15 7d 6b 00 00    	call   QWORD PTR [rip+0x6b7d]        # 1400092a8 <__IAT_start__>
   14000272b:	e9 6c ff ff ff       	jmp    14000269c <__mingw_TLScallback+0x2c>
   140002730:	e8 8b f6 ff ff       	call   140001dc0 <_fpreset>
   140002735:	b8 01 00 00 00       	mov    eax,0x1
   14000273a:	48 83 c4 20          	add    rsp,0x20
   14000273e:	5b                   	pop    rbx
   14000273f:	c3                   	ret
   140002740:	e8 bb fd ff ff       	call   140002500 <__mingwthr_run_key_dtors.part.0>
   140002745:	eb 93                	jmp    1400026da <__mingw_TLScallback+0x6a>
   140002747:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   14000274e:	00 00 
   140002750:	48 8d 0d a9 59 00 00 	lea    rcx,[rip+0x59a9]        # 140008100 <__mingwthr_cs>
   140002757:	ff 15 63 6b 00 00    	call   QWORD PTR [rip+0x6b63]        # 1400092c0 <__imp_InitializeCriticalSection>
   14000275d:	e9 30 ff ff ff       	jmp    140002692 <__mingw_TLScallback+0x22>
   140002762:	90                   	nop
   140002763:	90                   	nop
   140002764:	90                   	nop
   140002765:	90                   	nop
   140002766:	90                   	nop
   140002767:	90                   	nop
   140002768:	90                   	nop
   140002769:	90                   	nop
   14000276a:	90                   	nop
   14000276b:	90                   	nop
   14000276c:	90                   	nop
   14000276d:	90                   	nop
   14000276e:	90                   	nop
   14000276f:	90                   	nop

0000000140002770 <exit>:
   140002770:	48 83 ec 28          	sub    rsp,0x28
   140002774:	48 8b 05 75 2d 00 00 	mov    rax,QWORD PTR [rip+0x2d75]        # 1400054f0 <.refptr.__imp_exit>
   14000277b:	ff 10                	call   QWORD PTR [rax]
   14000277d:	90                   	nop
   14000277e:	66 90                	xchg   ax,ax

0000000140002780 <_exit>:
   140002780:	48 83 ec 28          	sub    rsp,0x28
   140002784:	48 8b 05 45 2d 00 00 	mov    rax,QWORD PTR [rip+0x2d45]        # 1400054d0 <.refptr.__imp__exit>
   14000278b:	ff 10                	call   QWORD PTR [rax]
   14000278d:	90                   	nop
   14000278e:	90                   	nop
   14000278f:	90                   	nop

0000000140002790 <_ValidateImageBase>:
   140002790:	31 c0                	xor    eax,eax
   140002792:	66 81 39 4d 5a       	cmp    WORD PTR [rcx],0x5a4d
   140002797:	75 0f                	jne    1400027a8 <_ValidateImageBase+0x18>
   140002799:	48 63 51 3c          	movsxd rdx,DWORD PTR [rcx+0x3c]
   14000279d:	48 01 d1             	add    rcx,rdx
   1400027a0:	81 39 50 45 00 00    	cmp    DWORD PTR [rcx],0x4550
   1400027a6:	74 08                	je     1400027b0 <_ValidateImageBase+0x20>
   1400027a8:	c3                   	ret
   1400027a9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   1400027b0:	31 c0                	xor    eax,eax
   1400027b2:	66 81 79 18 0b 02    	cmp    WORD PTR [rcx+0x18],0x20b
   1400027b8:	0f 94 c0             	sete   al
   1400027bb:	c3                   	ret
   1400027bc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000001400027c0 <_FindPESection>:
   1400027c0:	48 63 41 3c          	movsxd rax,DWORD PTR [rcx+0x3c]
   1400027c4:	48 01 c1             	add    rcx,rax
   1400027c7:	44 0f b7 41 06       	movzx  r8d,WORD PTR [rcx+0x6]
   1400027cc:	0f b7 41 14          	movzx  eax,WORD PTR [rcx+0x14]
   1400027d0:	66 45 85 c0          	test   r8w,r8w
   1400027d4:	48 8d 44 01 18       	lea    rax,[rcx+rax*1+0x18]
   1400027d9:	74 32                	je     14000280d <_FindPESection+0x4d>
   1400027db:	41 8d 48 ff          	lea    ecx,[r8-0x1]
   1400027df:	48 8d 0c 89          	lea    rcx,[rcx+rcx*4]
   1400027e3:	4c 8d 4c c8 28       	lea    r9,[rax+rcx*8+0x28]
   1400027e8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   1400027ef:	00 
   1400027f0:	44 8b 40 0c          	mov    r8d,DWORD PTR [rax+0xc]
   1400027f4:	4c 39 c2             	cmp    rdx,r8
   1400027f7:	4c 89 c1             	mov    rcx,r8
   1400027fa:	72 08                	jb     140002804 <_FindPESection+0x44>
   1400027fc:	03 48 08             	add    ecx,DWORD PTR [rax+0x8]
   1400027ff:	48 39 ca             	cmp    rdx,rcx
   140002802:	72 0b                	jb     14000280f <_FindPESection+0x4f>
   140002804:	48 83 c0 28          	add    rax,0x28
   140002808:	4c 39 c8             	cmp    rax,r9
   14000280b:	75 e3                	jne    1400027f0 <_FindPESection+0x30>
   14000280d:	31 c0                	xor    eax,eax
   14000280f:	c3                   	ret

0000000140002810 <_FindPESectionByName>:
   140002810:	57                   	push   rdi
   140002811:	56                   	push   rsi
   140002812:	53                   	push   rbx
   140002813:	48 83 ec 20          	sub    rsp,0x20
   140002817:	48 89 ce             	mov    rsi,rcx
   14000281a:	e8 61 06 00 00       	call   140002e80 <strlen>
   14000281f:	48 83 f8 08          	cmp    rax,0x8
   140002823:	77 7b                	ja     1400028a0 <_FindPESectionByName+0x90>
   140002825:	48 8b 15 84 2c 00 00 	mov    rdx,QWORD PTR [rip+0x2c84]        # 1400054b0 <.refptr.__image_base__>
   14000282c:	31 db                	xor    ebx,ebx
   14000282e:	66 81 3a 4d 5a       	cmp    WORD PTR [rdx],0x5a4d
   140002833:	75 59                	jne    14000288e <_FindPESectionByName+0x7e>
   140002835:	48 63 42 3c          	movsxd rax,DWORD PTR [rdx+0x3c]
   140002839:	48 01 d0             	add    rax,rdx
   14000283c:	81 38 50 45 00 00    	cmp    DWORD PTR [rax],0x4550
   140002842:	75 4a                	jne    14000288e <_FindPESectionByName+0x7e>
   140002844:	66 81 78 18 0b 02    	cmp    WORD PTR [rax+0x18],0x20b
   14000284a:	75 42                	jne    14000288e <_FindPESectionByName+0x7e>
   14000284c:	0f b7 50 14          	movzx  edx,WORD PTR [rax+0x14]
   140002850:	48 8d 5c 10 18       	lea    rbx,[rax+rdx*1+0x18]
   140002855:	0f b7 50 06          	movzx  edx,WORD PTR [rax+0x6]
   140002859:	66 85 d2             	test   dx,dx
   14000285c:	74 42                	je     1400028a0 <_FindPESectionByName+0x90>
   14000285e:	8d 42 ff             	lea    eax,[rdx-0x1]
   140002861:	48 8d 04 80          	lea    rax,[rax+rax*4]
   140002865:	48 8d 7c c3 28       	lea    rdi,[rbx+rax*8+0x28]
   14000286a:	eb 0d                	jmp    140002879 <_FindPESectionByName+0x69>
   14000286c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
   140002870:	48 83 c3 28          	add    rbx,0x28
   140002874:	48 39 fb             	cmp    rbx,rdi
   140002877:	74 27                	je     1400028a0 <_FindPESectionByName+0x90>
   140002879:	41 b8 08 00 00 00    	mov    r8d,0x8
   14000287f:	48 89 f2             	mov    rdx,rsi
   140002882:	48 89 d9             	mov    rcx,rbx
   140002885:	e8 fe 05 00 00       	call   140002e88 <strncmp>
   14000288a:	85 c0                	test   eax,eax
   14000288c:	75 e2                	jne    140002870 <_FindPESectionByName+0x60>
   14000288e:	48 89 d8             	mov    rax,rbx
   140002891:	48 83 c4 20          	add    rsp,0x20
   140002895:	5b                   	pop    rbx
   140002896:	5e                   	pop    rsi
   140002897:	5f                   	pop    rdi
   140002898:	c3                   	ret
   140002899:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   1400028a0:	31 db                	xor    ebx,ebx
   1400028a2:	48 89 d8             	mov    rax,rbx
   1400028a5:	48 83 c4 20          	add    rsp,0x20
   1400028a9:	5b                   	pop    rbx
   1400028aa:	5e                   	pop    rsi
   1400028ab:	5f                   	pop    rdi
   1400028ac:	c3                   	ret
   1400028ad:	0f 1f 00             	nop    DWORD PTR [rax]

00000001400028b0 <__mingw_GetSectionForAddress>:
   1400028b0:	48 8b 15 f9 2b 00 00 	mov    rdx,QWORD PTR [rip+0x2bf9]        # 1400054b0 <.refptr.__image_base__>
   1400028b7:	31 c0                	xor    eax,eax
   1400028b9:	66 81 3a 4d 5a       	cmp    WORD PTR [rdx],0x5a4d
   1400028be:	75 10                	jne    1400028d0 <__mingw_GetSectionForAddress+0x20>
   1400028c0:	4c 63 42 3c          	movsxd r8,DWORD PTR [rdx+0x3c]
   1400028c4:	49 01 d0             	add    r8,rdx
   1400028c7:	41 81 38 50 45 00 00 	cmp    DWORD PTR [r8],0x4550
   1400028ce:	74 08                	je     1400028d8 <__mingw_GetSectionForAddress+0x28>
   1400028d0:	c3                   	ret
   1400028d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   1400028d8:	66 41 81 78 18 0b 02 	cmp    WORD PTR [r8+0x18],0x20b
   1400028df:	75 ef                	jne    1400028d0 <__mingw_GetSectionForAddress+0x20>
   1400028e1:	41 0f b7 40 14       	movzx  eax,WORD PTR [r8+0x14]
   1400028e6:	48 29 d1             	sub    rcx,rdx
   1400028e9:	49 8d 44 00 18       	lea    rax,[r8+rax*1+0x18]
   1400028ee:	45 0f b7 40 06       	movzx  r8d,WORD PTR [r8+0x6]
   1400028f3:	66 45 85 c0          	test   r8w,r8w
   1400028f7:	74 34                	je     14000292d <__mingw_GetSectionForAddress+0x7d>
   1400028f9:	41 8d 50 ff          	lea    edx,[r8-0x1]
   1400028fd:	48 8d 14 92          	lea    rdx,[rdx+rdx*4]
   140002901:	4c 8d 4c d0 28       	lea    r9,[rax+rdx*8+0x28]
   140002906:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   14000290d:	00 00 00 
   140002910:	44 8b 40 0c          	mov    r8d,DWORD PTR [rax+0xc]
   140002914:	4c 39 c1             	cmp    rcx,r8
   140002917:	4c 89 c2             	mov    rdx,r8
   14000291a:	72 08                	jb     140002924 <__mingw_GetSectionForAddress+0x74>
   14000291c:	03 50 08             	add    edx,DWORD PTR [rax+0x8]
   14000291f:	48 39 d1             	cmp    rcx,rdx
   140002922:	72 ac                	jb     1400028d0 <__mingw_GetSectionForAddress+0x20>
   140002924:	48 83 c0 28          	add    rax,0x28
   140002928:	4c 39 c8             	cmp    rax,r9
   14000292b:	75 e3                	jne    140002910 <__mingw_GetSectionForAddress+0x60>
   14000292d:	31 c0                	xor    eax,eax
   14000292f:	c3                   	ret

0000000140002930 <__mingw_GetSectionCount>:
   140002930:	48 8b 05 79 2b 00 00 	mov    rax,QWORD PTR [rip+0x2b79]        # 1400054b0 <.refptr.__image_base__>
   140002937:	31 c9                	xor    ecx,ecx
   140002939:	66 81 38 4d 5a       	cmp    WORD PTR [rax],0x5a4d
   14000293e:	75 0f                	jne    14000294f <__mingw_GetSectionCount+0x1f>
   140002940:	48 63 50 3c          	movsxd rdx,DWORD PTR [rax+0x3c]
   140002944:	48 01 d0             	add    rax,rdx
   140002947:	81 38 50 45 00 00    	cmp    DWORD PTR [rax],0x4550
   14000294d:	74 09                	je     140002958 <__mingw_GetSectionCount+0x28>
   14000294f:	89 c8                	mov    eax,ecx
   140002951:	c3                   	ret
   140002952:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
   140002958:	66 81 78 18 0b 02    	cmp    WORD PTR [rax+0x18],0x20b
   14000295e:	75 ef                	jne    14000294f <__mingw_GetSectionCount+0x1f>
   140002960:	0f b7 48 06          	movzx  ecx,WORD PTR [rax+0x6]
   140002964:	89 c8                	mov    eax,ecx
   140002966:	c3                   	ret
   140002967:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
   14000296e:	00 00 

0000000140002970 <_FindPESectionExec>:
   140002970:	4c 8b 05 39 2b 00 00 	mov    r8,QWORD PTR [rip+0x2b39]        # 1400054b0 <.refptr.__image_base__>
   140002977:	31 c0                	xor    eax,eax
   140002979:	66 41 81 38 4d 5a    	cmp    WORD PTR [r8],0x5a4d
   14000297f:	75 0f                	jne    140002990 <_FindPESectionExec+0x20>
   140002981:	49 63 50 3c          	movsxd rdx,DWORD PTR [r8+0x3c]
   140002985:	4c 01 c2             	add    rdx,r8
   140002988:	81 3a 50 45 00 00    	cmp    DWORD PTR [rdx],0x4550
   14000298e:	74 08                	je     140002998 <_FindPESectionExec+0x28>
   140002990:	c3                   	ret
   140002991:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   140002998:	66 81 7a 18 0b 02    	cmp    WORD PTR [rdx+0x18],0x20b
   14000299e:	75 f0                	jne    140002990 <_FindPESectionExec+0x20>
   1400029a0:	44 0f b7 42 06       	movzx  r8d,WORD PTR [rdx+0x6]
   1400029a5:	0f b7 42 14          	movzx  eax,WORD PTR [rdx+0x14]
   1400029a9:	66 45 85 c0          	test   r8w,r8w
   1400029ad:	48 8d 44 02 18       	lea    rax,[rdx+rax*1+0x18]
   1400029b2:	74 2c                	je     1400029e0 <_FindPESectionExec+0x70>
   1400029b4:	41 8d 50 ff          	lea    edx,[r8-0x1]
   1400029b8:	48 8d 14 92          	lea    rdx,[rdx+rdx*4]
   1400029bc:	48 8d 54 d0 28       	lea    rdx,[rax+rdx*8+0x28]
   1400029c1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   1400029c8:	f6 40 27 20          	test   BYTE PTR [rax+0x27],0x20
   1400029cc:	74 09                	je     1400029d7 <_FindPESectionExec+0x67>
   1400029ce:	48 85 c9             	test   rcx,rcx
   1400029d1:	74 bd                	je     140002990 <_FindPESectionExec+0x20>
   1400029d3:	48 83 e9 01          	sub    rcx,0x1
   1400029d7:	48 83 c0 28          	add    rax,0x28
   1400029db:	48 39 d0             	cmp    rax,rdx
   1400029de:	75 e8                	jne    1400029c8 <_FindPESectionExec+0x58>
   1400029e0:	31 c0                	xor    eax,eax
   1400029e2:	c3                   	ret
   1400029e3:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   1400029ea:	00 00 00 00 
   1400029ee:	66 90                	xchg   ax,ax

00000001400029f0 <_GetPEImageBase>:
   1400029f0:	48 8b 05 b9 2a 00 00 	mov    rax,QWORD PTR [rip+0x2ab9]        # 1400054b0 <.refptr.__image_base__>
   1400029f7:	31 d2                	xor    edx,edx
   1400029f9:	66 81 38 4d 5a       	cmp    WORD PTR [rax],0x5a4d
   1400029fe:	75 0f                	jne    140002a0f <_GetPEImageBase+0x1f>
   140002a00:	48 63 48 3c          	movsxd rcx,DWORD PTR [rax+0x3c]
   140002a04:	48 01 c1             	add    rcx,rax
   140002a07:	81 39 50 45 00 00    	cmp    DWORD PTR [rcx],0x4550
   140002a0d:	74 09                	je     140002a18 <_GetPEImageBase+0x28>
   140002a0f:	48 89 d0             	mov    rax,rdx
   140002a12:	c3                   	ret
   140002a13:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
   140002a18:	66 81 79 18 0b 02    	cmp    WORD PTR [rcx+0x18],0x20b
   140002a1e:	48 0f 44 d0          	cmove  rdx,rax
   140002a22:	48 89 d0             	mov    rax,rdx
   140002a25:	c3                   	ret
   140002a26:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   140002a2d:	00 00 00 

0000000140002a30 <_IsNonwritableInCurrentImage>:
   140002a30:	48 8b 15 79 2a 00 00 	mov    rdx,QWORD PTR [rip+0x2a79]        # 1400054b0 <.refptr.__image_base__>
   140002a37:	31 c0                	xor    eax,eax
   140002a39:	66 81 3a 4d 5a       	cmp    WORD PTR [rdx],0x5a4d
   140002a3e:	75 10                	jne    140002a50 <_IsNonwritableInCurrentImage+0x20>
   140002a40:	4c 63 42 3c          	movsxd r8,DWORD PTR [rdx+0x3c]
   140002a44:	49 01 d0             	add    r8,rdx
   140002a47:	41 81 38 50 45 00 00 	cmp    DWORD PTR [r8],0x4550
   140002a4e:	74 08                	je     140002a58 <_IsNonwritableInCurrentImage+0x28>
   140002a50:	c3                   	ret
   140002a51:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
   140002a58:	66 41 81 78 18 0b 02 	cmp    WORD PTR [r8+0x18],0x20b
   140002a5f:	75 ef                	jne    140002a50 <_IsNonwritableInCurrentImage+0x20>
   140002a61:	45 0f b7 48 06       	movzx  r9d,WORD PTR [r8+0x6]
   140002a66:	48 29 d1             	sub    rcx,rdx
   140002a69:	41 0f b7 50 14       	movzx  edx,WORD PTR [r8+0x14]
   140002a6e:	66 45 85 c9          	test   r9w,r9w
   140002a72:	49 8d 54 10 18       	lea    rdx,[r8+rdx*1+0x18]
   140002a77:	74 d7                	je     140002a50 <_IsNonwritableInCurrentImage+0x20>
   140002a79:	41 8d 41 ff          	lea    eax,[r9-0x1]
   140002a7d:	48 8d 04 80          	lea    rax,[rax+rax*4]
   140002a81:	4c 8d 4c c2 28       	lea    r9,[rdx+rax*8+0x28]
   140002a86:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   140002a8d:	00 00 00 
   140002a90:	44 8b 42 0c          	mov    r8d,DWORD PTR [rdx+0xc]
   140002a94:	4c 39 c1             	cmp    rcx,r8
   140002a97:	4c 89 c0             	mov    rax,r8
   140002a9a:	72 08                	jb     140002aa4 <_IsNonwritableInCurrentImage+0x74>
   140002a9c:	03 42 08             	add    eax,DWORD PTR [rdx+0x8]
   140002a9f:	48 39 c1             	cmp    rcx,rax
   140002aa2:	72 0c                	jb     140002ab0 <_IsNonwritableInCurrentImage+0x80>
   140002aa4:	48 83 c2 28          	add    rdx,0x28
   140002aa8:	49 39 d1             	cmp    r9,rdx
   140002aab:	75 e3                	jne    140002a90 <_IsNonwritableInCurrentImage+0x60>
   140002aad:	31 c0                	xor    eax,eax
   140002aaf:	c3                   	ret
   140002ab0:	8b 42 24             	mov    eax,DWORD PTR [rdx+0x24]
   140002ab3:	f7 d0                	not    eax
   140002ab5:	c1 e8 1f             	shr    eax,0x1f
   140002ab8:	c3                   	ret
   140002ab9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000140002ac0 <__mingw_enum_import_library_names>:
   140002ac0:	4c 8b 1d e9 29 00 00 	mov    r11,QWORD PTR [rip+0x29e9]        # 1400054b0 <.refptr.__image_base__>
   140002ac7:	45 31 c9             	xor    r9d,r9d
   140002aca:	66 41 81 3b 4d 5a    	cmp    WORD PTR [r11],0x5a4d
   140002ad0:	75 10                	jne    140002ae2 <__mingw_enum_import_library_names+0x22>
   140002ad2:	4d 63 43 3c          	movsxd r8,DWORD PTR [r11+0x3c]
   140002ad6:	4d 01 d8             	add    r8,r11
   140002ad9:	41 81 38 50 45 00 00 	cmp    DWORD PTR [r8],0x4550
   140002ae0:	74 0e                	je     140002af0 <__mingw_enum_import_library_names+0x30>
   140002ae2:	4c 89 c8             	mov    rax,r9
   140002ae5:	c3                   	ret
   140002ae6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   140002aed:	00 00 00 
   140002af0:	66 41 81 78 18 0b 02 	cmp    WORD PTR [r8+0x18],0x20b
   140002af7:	75 e9                	jne    140002ae2 <__mingw_enum_import_library_names+0x22>
   140002af9:	41 8b 80 90 00 00 00 	mov    eax,DWORD PTR [r8+0x90]
   140002b00:	85 c0                	test   eax,eax
   140002b02:	74 de                	je     140002ae2 <__mingw_enum_import_library_names+0x22>
   140002b04:	45 0f b7 50 06       	movzx  r10d,WORD PTR [r8+0x6]
   140002b09:	41 0f b7 50 14       	movzx  edx,WORD PTR [r8+0x14]
   140002b0e:	66 45 85 d2          	test   r10w,r10w
   140002b12:	49 8d 54 10 18       	lea    rdx,[r8+rdx*1+0x18]
   140002b17:	74 c9                	je     140002ae2 <__mingw_enum_import_library_names+0x22>
   140002b19:	45 8d 42 ff          	lea    r8d,[r10-0x1]
   140002b1d:	4f 8d 04 80          	lea    r8,[r8+r8*4]
   140002b21:	4e 8d 54 c2 28       	lea    r10,[rdx+r8*8+0x28]
   140002b26:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   140002b2d:	00 00 00 
   140002b30:	44 8b 4a 0c          	mov    r9d,DWORD PTR [rdx+0xc]
   140002b34:	4c 39 c8             	cmp    rax,r9
   140002b37:	4d 89 c8             	mov    r8,r9
   140002b3a:	72 09                	jb     140002b45 <__mingw_enum_import_library_names+0x85>
   140002b3c:	44 03 42 08          	add    r8d,DWORD PTR [rdx+0x8]
   140002b40:	4c 39 c0             	cmp    rax,r8
   140002b43:	72 13                	jb     140002b58 <__mingw_enum_import_library_names+0x98>
   140002b45:	48 83 c2 28          	add    rdx,0x28
   140002b49:	4c 39 d2             	cmp    rdx,r10
   140002b4c:	75 e2                	jne    140002b30 <__mingw_enum_import_library_names+0x70>
   140002b4e:	45 31 c9             	xor    r9d,r9d
   140002b51:	4c 89 c8             	mov    rax,r9
   140002b54:	c3                   	ret
   140002b55:	0f 1f 00             	nop    DWORD PTR [rax]
   140002b58:	4c 01 d8             	add    rax,r11
   140002b5b:	eb 0a                	jmp    140002b67 <__mingw_enum_import_library_names+0xa7>
   140002b5d:	0f 1f 00             	nop    DWORD PTR [rax]
   140002b60:	83 e9 01             	sub    ecx,0x1
   140002b63:	48 83 c0 14          	add    rax,0x14
   140002b67:	44 8b 40 04          	mov    r8d,DWORD PTR [rax+0x4]
   140002b6b:	45 85 c0             	test   r8d,r8d
   140002b6e:	75 07                	jne    140002b77 <__mingw_enum_import_library_names+0xb7>
   140002b70:	8b 50 0c             	mov    edx,DWORD PTR [rax+0xc]
   140002b73:	85 d2                	test   edx,edx
   140002b75:	74 d7                	je     140002b4e <__mingw_enum_import_library_names+0x8e>
   140002b77:	85 c9                	test   ecx,ecx
   140002b79:	7f e5                	jg     140002b60 <__mingw_enum_import_library_names+0xa0>
   140002b7b:	44 8b 48 0c          	mov    r9d,DWORD PTR [rax+0xc]
   140002b7f:	4d 01 d9             	add    r9,r11
   140002b82:	4c 89 c8             	mov    rax,r9
   140002b85:	c3                   	ret
   140002b86:	90                   	nop
   140002b87:	90                   	nop
   140002b88:	90                   	nop
   140002b89:	90                   	nop
   140002b8a:	90                   	nop
   140002b8b:	90                   	nop
   140002b8c:	90                   	nop
   140002b8d:	90                   	nop
   140002b8e:	90                   	nop
   140002b8f:	90                   	nop

0000000140002b90 <___chkstk_ms>:
   140002b90:	51                   	push   rcx
   140002b91:	50                   	push   rax
   140002b92:	48 3d 00 10 00 00    	cmp    rax,0x1000
   140002b98:	48 8d 4c 24 18       	lea    rcx,[rsp+0x18]
   140002b9d:	72 19                	jb     140002bb8 <___chkstk_ms+0x28>
   140002b9f:	48 81 e9 00 10 00 00 	sub    rcx,0x1000
   140002ba6:	48 83 09 00          	or     QWORD PTR [rcx],0x0
   140002baa:	48 2d 00 10 00 00    	sub    rax,0x1000
   140002bb0:	48 3d 00 10 00 00    	cmp    rax,0x1000
   140002bb6:	77 e7                	ja     140002b9f <___chkstk_ms+0xf>
   140002bb8:	48 29 c1             	sub    rcx,rax
   140002bbb:	48 83 09 00          	or     QWORD PTR [rcx],0x0
   140002bbf:	58                   	pop    rax
   140002bc0:	59                   	pop    rcx
   140002bc1:	c3                   	ret
   140002bc2:	90                   	nop
   140002bc3:	90                   	nop
   140002bc4:	90                   	nop
   140002bc5:	90                   	nop
   140002bc6:	90                   	nop
   140002bc7:	90                   	nop
   140002bc8:	90                   	nop
   140002bc9:	90                   	nop
   140002bca:	90                   	nop
   140002bcb:	90                   	nop
   140002bcc:	90                   	nop
   140002bcd:	90                   	nop
   140002bce:	90                   	nop
   140002bcf:	90                   	nop

0000000140002bd0 <vfprintf>:
   140002bd0:	48 83 ec 38          	sub    rsp,0x38
   140002bd4:	45 31 c9             	xor    r9d,r9d
   140002bd7:	4c 89 44 24 20       	mov    QWORD PTR [rsp+0x20],r8
   140002bdc:	49 89 d0             	mov    r8,rdx
   140002bdf:	48 89 ca             	mov    rdx,rcx
   140002be2:	31 c9                	xor    ecx,ecx
   140002be4:	e8 bf 02 00 00       	call   140002ea8 <__stdio_common_vfprintf>
   140002be9:	48 83 c4 38          	add    rsp,0x38
   140002bed:	c3                   	ret
   140002bee:	90                   	nop
   140002bef:	90                   	nop

0000000140002bf0 <fprintf>:
   140002bf0:	48 83 ec 48          	sub    rsp,0x48
   140002bf4:	48 8d 44 24 60       	lea    rax,[rsp+0x60]
   140002bf9:	4c 89 44 24 60       	mov    QWORD PTR [rsp+0x60],r8
   140002bfe:	49 89 d0             	mov    r8,rdx
   140002c01:	48 89 ca             	mov    rdx,rcx
   140002c04:	4c 89 4c 24 68       	mov    QWORD PTR [rsp+0x68],r9
   140002c09:	31 c9                	xor    ecx,ecx
   140002c0b:	45 31 c9             	xor    r9d,r9d
   140002c0e:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
   140002c13:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
   140002c18:	e8 8b 02 00 00       	call   140002ea8 <__stdio_common_vfprintf>
   140002c1d:	48 83 c4 48          	add    rsp,0x48
   140002c21:	c3                   	ret
   140002c22:	90                   	nop
   140002c23:	90                   	nop
   140002c24:	90                   	nop
   140002c25:	90                   	nop
   140002c26:	90                   	nop
   140002c27:	90                   	nop
   140002c28:	90                   	nop
   140002c29:	90                   	nop
   140002c2a:	90                   	nop
   140002c2b:	90                   	nop
   140002c2c:	90                   	nop
   140002c2d:	90                   	nop
   140002c2e:	90                   	nop
   140002c2f:	90                   	nop

0000000140002c30 <_get_output_format>:
   140002c30:	31 c0                	xor    eax,eax
   140002c32:	c3                   	ret
   140002c33:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   140002c3a:	00 00 00 00 
   140002c3e:	66 90                	xchg   ax,ax

0000000140002c40 <__getmainargs>:
   140002c40:	41 54                	push   r12
   140002c42:	55                   	push   rbp
   140002c43:	57                   	push   rdi
   140002c44:	56                   	push   rsi
   140002c45:	53                   	push   rbx
   140002c46:	48 83 ec 20          	sub    rsp,0x20
   140002c4a:	4c 8b 64 24 70       	mov    r12,QWORD PTR [rsp+0x70]
   140002c4f:	44 89 cd             	mov    ebp,r9d
   140002c52:	48 89 d6             	mov    rsi,rdx
   140002c55:	4c 89 c3             	mov    rbx,r8
   140002c58:	48 89 cf             	mov    rdi,rcx
   140002c5b:	e8 b0 02 00 00       	call   140002f10 <_initialize_narrow_environment>
   140002c60:	83 fd 01             	cmp    ebp,0x1
   140002c63:	b9 01 00 00 00       	mov    ecx,0x1
   140002c68:	83 d9 ff             	sbb    ecx,0xffffffff
   140002c6b:	e8 80 02 00 00       	call   140002ef0 <_configure_narrow_argv>
   140002c70:	e8 5b 02 00 00       	call   140002ed0 <__p___argc>
   140002c75:	8b 00                	mov    eax,DWORD PTR [rax]
   140002c77:	89 07                	mov    DWORD PTR [rdi],eax
   140002c79:	e8 5a 02 00 00       	call   140002ed8 <__p___argv>
   140002c7e:	48 8b 00             	mov    rax,QWORD PTR [rax]
   140002c81:	48 89 06             	mov    QWORD PTR [rsi],rax
   140002c84:	e8 17 03 00 00       	call   140002fa0 <__p__environ>
   140002c89:	4d 85 e4             	test   r12,r12
   140002c8c:	48 8b 00             	mov    rax,QWORD PTR [rax]
   140002c8f:	48 89 03             	mov    QWORD PTR [rbx],rax
   140002c92:	74 09                	je     140002c9d <__getmainargs+0x5d>
   140002c94:	41 8b 0c 24          	mov    ecx,DWORD PTR [r12]
   140002c98:	e8 d3 02 00 00       	call   140002f70 <_set_new_mode>
   140002c9d:	31 c0                	xor    eax,eax
   140002c9f:	48 83 c4 20          	add    rsp,0x20
   140002ca3:	5b                   	pop    rbx
   140002ca4:	5e                   	pop    rsi
   140002ca5:	5f                   	pop    rdi
   140002ca6:	5d                   	pop    rbp
   140002ca7:	41 5c                	pop    r12
   140002ca9:	c3                   	ret
   140002caa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000140002cb0 <__wgetmainargs>:
   140002cb0:	41 54                	push   r12
   140002cb2:	55                   	push   rbp
   140002cb3:	57                   	push   rdi
   140002cb4:	56                   	push   rsi
   140002cb5:	53                   	push   rbx
   140002cb6:	48 83 ec 20          	sub    rsp,0x20
   140002cba:	4c 8b 64 24 70       	mov    r12,QWORD PTR [rsp+0x70]
   140002cbf:	44 89 cd             	mov    ebp,r9d
   140002cc2:	48 89 d6             	mov    rsi,rdx
   140002cc5:	4c 89 c3             	mov    rbx,r8
   140002cc8:	48 89 cf             	mov    rdi,rcx
   140002ccb:	e8 48 02 00 00       	call   140002f18 <_initialize_wide_environment>
   140002cd0:	83 fd 01             	cmp    ebp,0x1
   140002cd3:	b9 01 00 00 00       	mov    ecx,0x1
   140002cd8:	83 d9 ff             	sbb    ecx,0xffffffff
   140002cdb:	e8 18 02 00 00       	call   140002ef8 <_configure_wide_argv>
   140002ce0:	e8 eb 01 00 00       	call   140002ed0 <__p___argc>
   140002ce5:	8b 00                	mov    eax,DWORD PTR [rax]
   140002ce7:	89 07                	mov    DWORD PTR [rdi],eax
   140002ce9:	e8 f2 01 00 00       	call   140002ee0 <__p___wargv>
   140002cee:	48 8b 00             	mov    rax,QWORD PTR [rax]
   140002cf1:	48 89 06             	mov    QWORD PTR [rsi],rax
   140002cf4:	e8 af 02 00 00       	call   140002fa8 <__p__wenviron>
   140002cf9:	4d 85 e4             	test   r12,r12
   140002cfc:	48 8b 00             	mov    rax,QWORD PTR [rax]
   140002cff:	48 89 03             	mov    QWORD PTR [rbx],rax
   140002d02:	74 09                	je     140002d0d <__wgetmainargs+0x5d>
   140002d04:	41 8b 0c 24          	mov    ecx,DWORD PTR [r12]
   140002d08:	e8 63 02 00 00       	call   140002f70 <_set_new_mode>
   140002d0d:	31 c0                	xor    eax,eax
   140002d0f:	48 83 c4 20          	add    rsp,0x20
   140002d13:	5b                   	pop    rbx
   140002d14:	5e                   	pop    rsi
   140002d15:	5f                   	pop    rdi
   140002d16:	5d                   	pop    rbp
   140002d17:	41 5c                	pop    r12
   140002d19:	c3                   	ret
   140002d1a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000140002d20 <_onexit>:
   140002d20:	53                   	push   rbx
   140002d21:	48 83 ec 20          	sub    rsp,0x20
   140002d25:	48 89 cb             	mov    rbx,rcx
   140002d28:	e8 db 01 00 00       	call   140002f08 <_crt_atexit>
   140002d2d:	85 c0                	test   eax,eax
   140002d2f:	b8 00 00 00 00       	mov    eax,0x0
   140002d34:	48 0f 44 c3          	cmove  rax,rbx
   140002d38:	48 83 c4 20          	add    rsp,0x20
   140002d3c:	5b                   	pop    rbx
   140002d3d:	c3                   	ret
   140002d3e:	66 90                	xchg   ax,ax

0000000140002d40 <at_quick_exit>:
   140002d40:	48 8b 05 f9 27 00 00 	mov    rax,QWORD PTR [rip+0x27f9]        # 140005540 <.refptr.__mingw_module_is_dll>
   140002d47:	80 38 00             	cmp    BYTE PTR [rax],0x0
   140002d4a:	74 04                	je     140002d50 <at_quick_exit+0x10>
   140002d4c:	31 c0                	xor    eax,eax
   140002d4e:	c3                   	ret
   140002d4f:	90                   	nop
   140002d50:	e9 ab 01 00 00       	jmp    140002f00 <_crt_at_quick_exit>
   140002d55:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   140002d5c:	00 00 00 00 

0000000140002d60 <_amsg_exit>:
   140002d60:	53                   	push   rbx
   140002d61:	48 83 ec 20          	sub    rsp,0x20
   140002d65:	89 cb                	mov    ebx,ecx
   140002d67:	b9 02 00 00 00       	mov    ecx,0x2
   140002d6c:	e8 1f 01 00 00       	call   140002e90 <__acrt_iob_func>
   140002d71:	48 8d 15 b8 26 00 00 	lea    rdx,[rip+0x26b8]        # 140005430 <.rdata>
   140002d78:	41 89 d8             	mov    r8d,ebx
   140002d7b:	48 89 c1             	mov    rcx,rax
   140002d7e:	e8 6d fe ff ff       	call   140002bf0 <fprintf>
   140002d83:	48 8b 05 46 27 00 00 	mov    rax,QWORD PTR [rip+0x2746]        # 1400054d0 <.refptr.__imp__exit>
   140002d8a:	b9 ff 00 00 00       	mov    ecx,0xff
   140002d8f:	ff 10                	call   QWORD PTR [rax]
   140002d91:	90                   	nop
   140002d92:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   140002d99:	00 00 00 00 
   140002d9d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000140002da0 <__ms_fwprintf>:
   140002da0:	48 83 ec 48          	sub    rsp,0x48
   140002da4:	48 8d 44 24 60       	lea    rax,[rsp+0x60]
   140002da9:	4c 89 44 24 60       	mov    QWORD PTR [rsp+0x60],r8
   140002dae:	49 89 d0             	mov    r8,rdx
   140002db1:	48 89 ca             	mov    rdx,rcx
   140002db4:	4c 89 4c 24 68       	mov    QWORD PTR [rsp+0x68],r9
   140002db9:	b9 04 00 00 00       	mov    ecx,0x4
   140002dbe:	45 31 c9             	xor    r9d,r9d
   140002dc1:	48 89 44 24 20       	mov    QWORD PTR [rsp+0x20],rax
   140002dc6:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
   140002dcb:	e8 e0 00 00 00       	call   140002eb0 <__stdio_common_vfwprintf>
   140002dd0:	48 83 c4 48          	add    rsp,0x48
   140002dd4:	c3                   	ret
   140002dd5:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
   140002ddc:	00 00 00 00 

0000000140002de0 <tzset>:
   140002de0:	48 83 ec 28          	sub    rsp,0x28
   140002de4:	48 8b 05 f5 26 00 00 	mov    rax,QWORD PTR [rip+0x26f5]        # 1400054e0 <.refptr.__imp__tzset>
   140002deb:	ff 10                	call   QWORD PTR [rax]
   140002ded:	e8 7e 00 00 00       	call   140002e70 <__tzname>
   140002df2:	48 89 05 c7 12 00 00 	mov    QWORD PTR [rip+0x12c7],rax        # 1400040c0 <__imp_tzname>
   140002df9:	e8 6a 00 00 00       	call   140002e68 <__timezone>
   140002dfe:	48 89 05 b3 12 00 00 	mov    QWORD PTR [rip+0x12b3],rax        # 1400040b8 <__imp_timezone>
   140002e05:	e8 56 00 00 00       	call   140002e60 <__daylight>
   140002e0a:	48 89 05 9f 12 00 00 	mov    QWORD PTR [rip+0x129f],rax        # 1400040b0 <__imp_daylight>
   140002e11:	48 83 c4 28          	add    rsp,0x28
   140002e15:	c3                   	ret
   140002e16:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
   140002e1d:	00 00 00 

0000000140002e20 <_tzset>:
   140002e20:	48 83 ec 28          	sub    rsp,0x28
   140002e24:	48 8b 05 b5 26 00 00 	mov    rax,QWORD PTR [rip+0x26b5]        # 1400054e0 <.refptr.__imp__tzset>
   140002e2b:	ff 10                	call   QWORD PTR [rax]
   140002e2d:	e8 3e 00 00 00       	call   140002e70 <__tzname>
   140002e32:	48 89 05 87 12 00 00 	mov    QWORD PTR [rip+0x1287],rax        # 1400040c0 <__imp_tzname>
   140002e39:	e8 2a 00 00 00       	call   140002e68 <__timezone>
   140002e3e:	48 89 05 73 12 00 00 	mov    QWORD PTR [rip+0x1273],rax        # 1400040b8 <__imp_timezone>
   140002e45:	e8 16 00 00 00       	call   140002e60 <__daylight>
   140002e4a:	48 89 05 5f 12 00 00 	mov    QWORD PTR [rip+0x125f],rax        # 1400040b0 <__imp_daylight>
   140002e51:	48 83 c4 28          	add    rsp,0x28
   140002e55:	c3                   	ret
   140002e56:	90                   	nop
   140002e57:	90                   	nop
   140002e58:	90                   	nop
   140002e59:	90                   	nop
   140002e5a:	90                   	nop
   140002e5b:	90                   	nop
   140002e5c:	90                   	nop
   140002e5d:	90                   	nop
   140002e5e:	90                   	nop
   140002e5f:	90                   	nop

0000000140002e60 <__daylight>:
   140002e60:	ff 25 fa 65 00 00    	jmp    QWORD PTR [rip+0x65fa]        # 140009460 <__imp___daylight>
   140002e66:	90                   	nop
   140002e67:	90                   	nop

0000000140002e68 <__timezone>:
   140002e68:	ff 25 fa 65 00 00    	jmp    QWORD PTR [rip+0x65fa]        # 140009468 <__imp___timezone>
   140002e6e:	90                   	nop
   140002e6f:	90                   	nop

0000000140002e70 <__tzname>:
   140002e70:	ff 25 fa 65 00 00    	jmp    QWORD PTR [rip+0x65fa]        # 140009470 <__imp___tzname>
   140002e76:	90                   	nop
   140002e77:	90                   	nop

0000000140002e78 <.text>:
   140002e78:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   140002e7f:	00 

0000000140002e80 <strlen>:
   140002e80:	ff 25 c2 65 00 00    	jmp    QWORD PTR [rip+0x65c2]        # 140009448 <__imp_strlen>
   140002e86:	90                   	nop
   140002e87:	90                   	nop

0000000140002e88 <strncmp>:
   140002e88:	ff 25 c2 65 00 00    	jmp    QWORD PTR [rip+0x65c2]        # 140009450 <__imp_strncmp>
   140002e8e:	90                   	nop
   140002e8f:	90                   	nop

0000000140002e90 <__acrt_iob_func>:
   140002e90:	ff 25 6a 65 00 00    	jmp    QWORD PTR [rip+0x656a]        # 140009400 <__imp___acrt_iob_func>
   140002e96:	90                   	nop
   140002e97:	90                   	nop

0000000140002e98 <__p__commode>:
   140002e98:	ff 25 6a 65 00 00    	jmp    QWORD PTR [rip+0x656a]        # 140009408 <__imp___p__commode>
   140002e9e:	90                   	nop
   140002e9f:	90                   	nop

0000000140002ea0 <__p__fmode>:
   140002ea0:	ff 25 6a 65 00 00    	jmp    QWORD PTR [rip+0x656a]        # 140009410 <__imp___p__fmode>
   140002ea6:	90                   	nop
   140002ea7:	90                   	nop

0000000140002ea8 <__stdio_common_vfprintf>:
   140002ea8:	ff 25 6a 65 00 00    	jmp    QWORD PTR [rip+0x656a]        # 140009418 <__imp___stdio_common_vfprintf>
   140002eae:	90                   	nop
   140002eaf:	90                   	nop

0000000140002eb0 <__stdio_common_vfwprintf>:
   140002eb0:	ff 25 6a 65 00 00    	jmp    QWORD PTR [rip+0x656a]        # 140009420 <__imp___stdio_common_vfwprintf>
   140002eb6:	90                   	nop
   140002eb7:	90                   	nop

0000000140002eb8 <fclose>:
   140002eb8:	ff 25 6a 65 00 00    	jmp    QWORD PTR [rip+0x656a]        # 140009428 <__imp_fclose>
   140002ebe:	90                   	nop
   140002ebf:	90                   	nop

0000000140002ec0 <fopen>:
   140002ec0:	ff 25 6a 65 00 00    	jmp    QWORD PTR [rip+0x656a]        # 140009430 <__imp_fopen>
   140002ec6:	90                   	nop
   140002ec7:	90                   	nop

0000000140002ec8 <fwrite>:
   140002ec8:	ff 25 6a 65 00 00    	jmp    QWORD PTR [rip+0x656a]        # 140009438 <__imp_fwrite>
   140002ece:	90                   	nop
   140002ecf:	90                   	nop

0000000140002ed0 <__p___argc>:
   140002ed0:	ff 25 9a 64 00 00    	jmp    QWORD PTR [rip+0x649a]        # 140009370 <__imp___p___argc>
   140002ed6:	90                   	nop
   140002ed7:	90                   	nop

0000000140002ed8 <__p___argv>:
   140002ed8:	ff 25 9a 64 00 00    	jmp    QWORD PTR [rip+0x649a]        # 140009378 <__imp___p___argv>
   140002ede:	90                   	nop
   140002edf:	90                   	nop

0000000140002ee0 <__p___wargv>:
   140002ee0:	ff 25 9a 64 00 00    	jmp    QWORD PTR [rip+0x649a]        # 140009380 <__imp___p___wargv>
   140002ee6:	90                   	nop
   140002ee7:	90                   	nop

0000000140002ee8 <_cexit>:
   140002ee8:	ff 25 9a 64 00 00    	jmp    QWORD PTR [rip+0x649a]        # 140009388 <__imp__cexit>
   140002eee:	90                   	nop
   140002eef:	90                   	nop

0000000140002ef0 <_configure_narrow_argv>:
   140002ef0:	ff 25 9a 64 00 00    	jmp    QWORD PTR [rip+0x649a]        # 140009390 <__imp__configure_narrow_argv>
   140002ef6:	90                   	nop
   140002ef7:	90                   	nop

0000000140002ef8 <_configure_wide_argv>:
   140002ef8:	ff 25 9a 64 00 00    	jmp    QWORD PTR [rip+0x649a]        # 140009398 <__imp__configure_wide_argv>
   140002efe:	90                   	nop
   140002eff:	90                   	nop

0000000140002f00 <_crt_at_quick_exit>:
   140002f00:	ff 25 9a 64 00 00    	jmp    QWORD PTR [rip+0x649a]        # 1400093a0 <__imp__crt_at_quick_exit>
   140002f06:	90                   	nop
   140002f07:	90                   	nop

0000000140002f08 <_crt_atexit>:
   140002f08:	ff 25 9a 64 00 00    	jmp    QWORD PTR [rip+0x649a]        # 1400093a8 <__imp__crt_atexit>
   140002f0e:	90                   	nop
   140002f0f:	90                   	nop

0000000140002f10 <_initialize_narrow_environment>:
   140002f10:	ff 25 a2 64 00 00    	jmp    QWORD PTR [rip+0x64a2]        # 1400093b8 <__imp__initialize_narrow_environment>
   140002f16:	90                   	nop
   140002f17:	90                   	nop

0000000140002f18 <_initialize_wide_environment>:
   140002f18:	ff 25 a2 64 00 00    	jmp    QWORD PTR [rip+0x64a2]        # 1400093c0 <__imp__initialize_wide_environment>
   140002f1e:	90                   	nop
   140002f1f:	90                   	nop

0000000140002f20 <_initterm>:
   140002f20:	ff 25 a2 64 00 00    	jmp    QWORD PTR [rip+0x64a2]        # 1400093c8 <__imp__initterm>
   140002f26:	90                   	nop
   140002f27:	90                   	nop

0000000140002f28 <__set_app_type>:
   140002f28:	ff 25 a2 64 00 00    	jmp    QWORD PTR [rip+0x64a2]        # 1400093d0 <__imp___set_app_type>
   140002f2e:	90                   	nop
   140002f2f:	90                   	nop

0000000140002f30 <_set_invalid_parameter_handler>:
   140002f30:	ff 25 a2 64 00 00    	jmp    QWORD PTR [rip+0x64a2]        # 1400093d8 <__imp__set_invalid_parameter_handler>
   140002f36:	90                   	nop
   140002f37:	90                   	nop

0000000140002f38 <abort>:
   140002f38:	ff 25 a2 64 00 00    	jmp    QWORD PTR [rip+0x64a2]        # 1400093e0 <__imp_abort>
   140002f3e:	90                   	nop
   140002f3f:	90                   	nop

0000000140002f40 <signal>:
   140002f40:	ff 25 aa 64 00 00    	jmp    QWORD PTR [rip+0x64aa]        # 1400093f0 <__imp_signal>
   140002f46:	90                   	nop
   140002f47:	90                   	nop
   140002f48:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   140002f4f:	00 

0000000140002f50 <__C_specific_handler>:
   140002f50:	ff 25 02 64 00 00    	jmp    QWORD PTR [rip+0x6402]        # 140009358 <__imp___C_specific_handler>
   140002f56:	90                   	nop
   140002f57:	90                   	nop

0000000140002f58 <memcpy>:
   140002f58:	ff 25 02 64 00 00    	jmp    QWORD PTR [rip+0x6402]        # 140009360 <__imp_memcpy>
   140002f5e:	90                   	nop
   140002f5f:	90                   	nop

0000000140002f60 <__setusermatherr>:
   140002f60:	ff 25 e2 63 00 00    	jmp    QWORD PTR [rip+0x63e2]        # 140009348 <__imp___setusermatherr>
   140002f66:	90                   	nop
   140002f67:	90                   	nop
   140002f68:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   140002f6f:	00 

0000000140002f70 <_set_new_mode>:
   140002f70:	ff 25 a2 63 00 00    	jmp    QWORD PTR [rip+0x63a2]        # 140009318 <__imp__set_new_mode>
   140002f76:	90                   	nop
   140002f77:	90                   	nop

0000000140002f78 <calloc>:
   140002f78:	ff 25 a2 63 00 00    	jmp    QWORD PTR [rip+0x63a2]        # 140009320 <__imp_calloc>
   140002f7e:	90                   	nop
   140002f7f:	90                   	nop

0000000140002f80 <free>:
   140002f80:	ff 25 a2 63 00 00    	jmp    QWORD PTR [rip+0x63a2]        # 140009328 <__imp_free>
   140002f86:	90                   	nop
   140002f87:	90                   	nop

0000000140002f88 <malloc>:
   140002f88:	ff 25 a2 63 00 00    	jmp    QWORD PTR [rip+0x63a2]        # 140009330 <__imp_malloc>
   140002f8e:	90                   	nop
   140002f8f:	90                   	nop

0000000140002f90 <realloc>:
   140002f90:	ff 25 a2 63 00 00    	jmp    QWORD PTR [rip+0x63a2]        # 140009338 <__imp_realloc>
   140002f96:	90                   	nop
   140002f97:	90                   	nop
   140002f98:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
   140002f9f:	00 

0000000140002fa0 <__p__environ>:
   140002fa0:	ff 25 5a 63 00 00    	jmp    QWORD PTR [rip+0x635a]        # 140009300 <__imp___p__environ>
   140002fa6:	90                   	nop
   140002fa7:	90                   	nop

0000000140002fa8 <__p__wenviron>:
   140002fa8:	ff 25 5a 63 00 00    	jmp    QWORD PTR [rip+0x635a]        # 140009308 <__imp___p__wenviron>
   140002fae:	90                   	nop
   140002faf:	90                   	nop

0000000140002fb0 <VirtualQuery>:
   140002fb0:	ff 25 3a 63 00 00    	jmp    QWORD PTR [rip+0x633a]        # 1400092f0 <__imp_VirtualQuery>
   140002fb6:	90                   	nop
   140002fb7:	90                   	nop

0000000140002fb8 <VirtualProtect>:
   140002fb8:	ff 25 2a 63 00 00    	jmp    QWORD PTR [rip+0x632a]        # 1400092e8 <__imp_VirtualProtect>
   140002fbe:	90                   	nop
   140002fbf:	90                   	nop

0000000140002fc0 <TlsGetValue>:
   140002fc0:	ff 25 1a 63 00 00    	jmp    QWORD PTR [rip+0x631a]        # 1400092e0 <__imp_TlsGetValue>
   140002fc6:	90                   	nop
   140002fc7:	90                   	nop

0000000140002fc8 <Sleep>:
   140002fc8:	ff 25 0a 63 00 00    	jmp    QWORD PTR [rip+0x630a]        # 1400092d8 <__imp_Sleep>
   140002fce:	90                   	nop
   140002fcf:	90                   	nop

0000000140002fd0 <SetUnhandledExceptionFilter>:
   140002fd0:	ff 25 fa 62 00 00    	jmp    QWORD PTR [rip+0x62fa]        # 1400092d0 <__imp_SetUnhandledExceptionFilter>
   140002fd6:	90                   	nop
   140002fd7:	90                   	nop

0000000140002fd8 <LeaveCriticalSection>:
   140002fd8:	ff 25 ea 62 00 00    	jmp    QWORD PTR [rip+0x62ea]        # 1400092c8 <__imp_LeaveCriticalSection>
   140002fde:	90                   	nop
   140002fdf:	90                   	nop

0000000140002fe0 <InitializeCriticalSection>:
   140002fe0:	ff 25 da 62 00 00    	jmp    QWORD PTR [rip+0x62da]        # 1400092c0 <__imp_InitializeCriticalSection>
   140002fe6:	90                   	nop
   140002fe7:	90                   	nop

0000000140002fe8 <GetLastError>:
   140002fe8:	ff 25 ca 62 00 00    	jmp    QWORD PTR [rip+0x62ca]        # 1400092b8 <__imp_GetLastError>
   140002fee:	90                   	nop
   140002fef:	90                   	nop

0000000140002ff0 <EnterCriticalSection>:
   140002ff0:	ff 25 ba 62 00 00    	jmp    QWORD PTR [rip+0x62ba]        # 1400092b0 <__imp_EnterCriticalSection>
   140002ff6:	90                   	nop
   140002ff7:	90                   	nop

0000000140002ff8 <DeleteCriticalSection>:
   140002ff8:	ff 25 aa 62 00 00    	jmp    QWORD PTR [rip+0x62aa]        # 1400092a8 <__IAT_start__>
   140002ffe:	90                   	nop
   140002fff:	90                   	nop

0000000140003000 <register_frame_ctor>:
   140003000:	e9 2b e4 ff ff       	jmp    140001430 <__gcc_register_frame>
   140003005:	90                   	nop
   140003006:	90                   	nop
   140003007:	90                   	nop
   140003008:	90                   	nop
   140003009:	90                   	nop
   14000300a:	90                   	nop
   14000300b:	90                   	nop
   14000300c:	90                   	nop
   14000300d:	90                   	nop
   14000300e:	90                   	nop
   14000300f:	90                   	nop

0000000140003010 <__CTOR_LIST__>:
   140003010:	ff                   	(bad)
   140003011:	ff                   	(bad)
   140003012:	ff                   	(bad)
   140003013:	ff                   	(bad)
   140003014:	ff                   	(bad)
   140003015:	ff                   	(bad)
   140003016:	ff                   	(bad)
   140003017:	ff                 	inc    DWORD PTR [rax]

0000000140003018 <.ctors.65535>:
   140003018:	00 30                	add    BYTE PTR [rax],dh
   14000301a:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

0000000140003028 <__DTOR_LIST__>:
   140003028:	ff                   	(bad)
   140003029:	ff                   	(bad)
   14000302a:	ff                   	(bad)
   14000302b:	ff                   	(bad)
   14000302c:	ff                   	(bad)
   14000302d:	ff                   	(bad)
   14000302e:	ff                   	(bad)
   14000302f:	ff 00                	inc    DWORD PTR [rax]
   140003031:	00 00                	add    BYTE PTR [rax],al
   140003033:	00 00                	add    BYTE PTR [rax],al
   140003035:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000140004000 <__data_start__>:
   140004000:	30 30                	xor    BYTE PTR [rax],dh
   140004002:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

0000000140004010 <__native_vcclrit_reason>:
   140004010:	ff                   	(bad)
   140004011:	ff                   	(bad)
   140004012:	ff                   	(bad)
   140004013:	ff                   	(bad)

0000000140004014 <__native_dllmain_reason>:
   140004014:	ff                   	(bad)
   140004015:	ff                   	(bad)
   140004016:	ff                   	(bad)
   140004017:	ff 00                	inc    DWORD PTR [rax]
   140004019:	00 00                	add    BYTE PTR [rax],al
   14000401b:	00 00                	add    BYTE PTR [rax],al
   14000401d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140004020 <_dowildcard>:
   140004020:	ff                   	(bad)
   140004021:	ff                   	(bad)
   140004022:	ff                   	(bad)
   140004023:	ff 00                	inc    DWORD PTR [rax]
	...

0000000140004030 <_CRT_MT>:
   140004030:	02 00                	add    al,BYTE PTR [rax]
	...

0000000140004040 <_MINGW_INSTALL_DEBUG_MATHERR>:
   140004040:	ff                   	(bad)
   140004041:	ff                   	(bad)
   140004042:	ff                   	(bad)
   140004043:	ff 00                	inc    DWORD PTR [rax]
	...

0000000140004050 <__imp_vfprintf>:
   140004050:	d0 2b                	shr    BYTE PTR [rbx],1
   140004052:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

0000000140004060 <__imp_fprintf>:
   140004060:	f0 2b 00             	lock sub eax,DWORD PTR [rax]
   140004063:	40 01 00             	rex add DWORD PTR [rax],eax
	...

0000000140004070 <__imp___winitenv>:
   140004070:	70 81                	jo     140003ff3 <__DTOR_LIST__+0xfcb>
   140004072:	00 40 01             	add    BYTE PTR [rax+0x1],al
   140004075:	00 00                	add    BYTE PTR [rax],al
	...

0000000140004078 <__imp___initenv>:
   140004078:	78 81                	js     140003ffb <__DTOR_LIST__+0xfd3>
   14000407a:	00 40 01             	add    BYTE PTR [rax+0x1],al
   14000407d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140004080 <__imp___ms_fwprintf>:
   140004080:	a0 2d 00 40 01 00 00 	movabs al,ds:0xe00000000140002d
   140004087:	00  

0000000140004088 <__imp_tzset>:
   140004088:	e0 2d                	loopne 1400040b7 <__imp_daylight+0x7>
   14000408a:	00 40 01             	add    BYTE PTR [rax+0x1],al
   14000408d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140004090 <__imp__get_output_format>:
   140004090:	30 2c 00             	xor    BYTE PTR [rax+rax*1],ch
   140004093:	40 01 00             	rex add DWORD PTR [rax],eax
	...

0000000140004098 <__imp__amsg_exit>:
   140004098:	60                   	(bad)
   140004099:	2d 00 40 01 00       	sub    eax,0x14000
	...

00000001400040a0 <__imp___wgetmainargs>:
   1400040a0:	b0 2c                	mov    al,0x2c
   1400040a2:	00 40 01             	add    BYTE PTR [rax+0x1],al
   1400040a5:	00 00                	add    BYTE PTR [rax],al
	...

00000001400040a8 <__imp___getmainargs>:
   1400040a8:	40 2c 00             	rex sub al,0x0
   1400040ab:	40 01 00             	rex add DWORD PTR [rax],eax
	...

00000001400040b0 <__imp_daylight>:
   1400040b0:	c8 40 00 40          	enter  0x40,0x40
   1400040b4:	01 00                	add    DWORD PTR [rax],eax
	...

00000001400040b8 <__imp_timezone>:
   1400040b8:	cc                   	int3
   1400040b9:	40 00 40 01          	rex add BYTE PTR [rax+0x1],al
   1400040bd:	00 00                	add    BYTE PTR [rax],al
	...

00000001400040c0 <__imp_tzname>:
   1400040c0:	d0 40 00             	rol    BYTE PTR [rax+0x0],1
   1400040c3:	40 01 00             	rex add DWORD PTR [rax],eax
	...

00000001400040c8 <initial_daylight>:
   1400040c8:	01 00                	add    DWORD PTR [rax],eax
	...

00000001400040cc <initial_timezone>:
   1400040cc:	80 70 00 00          	xor    BYTE PTR [rax+0x0],0x0

00000001400040d0 <initial_tznames>:
   1400040d0:	e4 40                	in     al,0x40
   1400040d2:	00 40 01             	add    BYTE PTR [rax+0x1],al
   1400040d5:	00 00                	add    BYTE PTR [rax],al
   1400040d7:	00 e0                	add    al,ah
   1400040d9:	40 00 40 01          	rex add BYTE PTR [rax+0x1],al
   1400040dd:	00 00                	add    BYTE PTR [rax],al
	...

00000001400040e0 <initial_tzname1>:
   1400040e0:	50                   	push   rax
   1400040e1:	44 54                	rex.R push rsp
	...

00000001400040e4 <initial_tzname0>:
   1400040e4:	50                   	push   rax
   1400040e5:	53                   	push   rbx
   1400040e6:	54                   	push   rsp
	...

00000001400040e8 <__imp_at_quick_exit>:
   1400040e8:	40 2d 00 40 01 00    	rex sub eax,0x14000
	...

00000001400040f0 <__imp__onexit>:
   1400040f0:	20 2d 00 40 01 00    	and    BYTE PTR [rip+0x14000],ch        # 1400180f6 <.debug_line_str+0x3f7d>
	...

Disassembly of section .rdata:

0000000140005000 <.rdata>:
   140005000:	77 72                	ja     140005074 <.rdata+0x54>
   140005002:	61                   	(bad)
   140005003:	70 41                	jo     140005046 <.rdata+0x26>
   140005005:	6c                   	ins    BYTE PTR es:[rdi],dx
   140005006:	6c                   	ins    BYTE PTR es:[rdi],dx
   140005007:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140005008:	63 4c 6f 67          	movsxd ecx,DWORD PTR [rdi+rbp*2+0x67]
   14000500c:	4f 75 74             	rex.WRXB jne 140005083 <.rdata+0x63>
   14000500f:	46 69 6c 65 2e 74 78 	imul   r13d,DWORD PTR [rbp+r12*2+0x2e],0x747874
   140005016:	74 00 
	...

0000000140005020 <.rdata>:
   140005020:	77 00                	ja     140005022 <.rdata+0x2>
   140005022:	00 00                	add    BYTE PTR [rax],al
   140005024:	00 00                	add    BYTE PTR [rax],al
   140005026:	00 00                	add    BYTE PTR [rax],al
   140005028:	46 55                	rex.RX push rbp
   14000502a:	4e                   	rex.WRX
   14000502b:	43 20 20             	rex.XB and BYTE PTR [r8],spl
   14000502e:	20 20                	and    BYTE PTR [rax],ah
   140005030:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140005031:	75 74                	jne    1400050a7 <.rdata+0x87>
   140005033:	20 70 6f             	and    BYTE PTR [rax+0x6f],dh
   140005036:	69 6e 74 65 72 20 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20207265
   14000503d:	20 20                	and    BYTE PTR [rax],ah
   14000503f:	20 20                	and    BYTE PTR [rax],ah
   140005041:	69 6e 20 70 6f 69 6e 	imul   ebp,DWORD PTR [rsi+0x20],0x6e696f70
   140005048:	74 65                	je     1400050af <.rdata+0x8f>
   14000504a:	72 20                	jb     14000506c <.rdata+0x4c>
   14000504c:	20 20                	and    BYTE PTR [rax],ah
   14000504e:	20 20                	and    BYTE PTR [rax],ah
   140005050:	20 20                	and    BYTE PTR [rax],ah
   140005052:	61                   	(bad)
   140005053:	6c                   	ins    BYTE PTR es:[rdi],dx
   140005054:	6c                   	ins    BYTE PTR es:[rdi],dx
   140005055:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140005056:	63 20                	movsxd esp,DWORD PTR [rax]
   140005058:	73 69                	jae    1400050c3 <.rdata+0xa3>
   14000505a:	7a 65                	jp     1400050c1 <.rdata+0xa1>
   14000505c:	20 20                	and    BYTE PTR [rax],ah
   14000505e:	20 20                	and    BYTE PTR [rax],ah
   140005060:	20 20                	and    BYTE PTR [rax],ah
   140005062:	20 66 69             	and    BYTE PTR [rsi+0x69],ah
   140005065:	6c                   	ins    BYTE PTR es:[rdi],dx
   140005066:	6c                   	ins    BYTE PTR es:[rdi],dx
   140005067:	20 6e 75             	and    BYTE PTR [rsi+0x75],ch
   14000506a:	6d                   	ins    DWORD PTR es:[rdi],dx
   14000506b:	20 20                	and    BYTE PTR [rax],ah
   14000506d:	20 20                	and    BYTE PTR [rax],ah
   14000506f:	20 20                	and    BYTE PTR [rax],ah
   140005071:	20 20                	and    BYTE PTR [rax],ah
   140005073:	45                   	rex.RB
   140005074:	4e                   	rex.WRX
   140005075:	44 0a 00             	or     r8b,BYTE PTR [rax]
   140005078:	4d                   	rex.WRB
   140005079:	41                   	rex.B
   14000507a:	4c                   	rex.WR
   14000507b:	4c                   	rex.WR
   14000507c:	4f                   	rex.WRXB
   14000507d:	43 20 20             	rex.XB and BYTE PTR [r8],spl
   140005080:	25 70 20 25 70       	and    eax,0x70252070
   140005085:	20 25 30 31 36 6c    	and    BYTE PTR [rip+0x6c363130],ah        # 1ac3681bb <.debug_line_str+0x6c354042>
   14000508b:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000508c:	58                   	pop    rax
   14000508d:	20 25 30 31 36 6c    	and    BYTE PTR [rip+0x6c363130],ah        # 1ac3681c3 <.debug_line_str+0x6c35404a>
   140005093:	6c                   	ins    BYTE PTR es:[rdi],dx
   140005094:	58                   	pop    rax
   140005095:	0a 00                	or     al,BYTE PTR [rax]
   140005097:	00 43 41             	add    BYTE PTR [rbx+0x41],al
   14000509a:	4c                   	rex.WR
   14000509b:	4c                   	rex.WR
   14000509c:	4f                   	rex.WRXB
   14000509d:	43 20 20             	rex.XB and BYTE PTR [r8],spl
   1400050a0:	25 70 20 25 70       	and    eax,0x70252070
   1400050a5:	20 25 30 31 36 6c    	and    BYTE PTR [rip+0x6c363130],ah        # 1ac3681db <.debug_line_str+0x6c354062>
   1400050ab:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400050ac:	58                   	pop    rax
   1400050ad:	20 25 30 31 36 6c    	and    BYTE PTR [rip+0x6c363130],ah        # 1ac3681e3 <.debug_line_str+0x6c35406a>
   1400050b3:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400050b4:	58                   	pop    rax
   1400050b5:	0a 00                	or     al,BYTE PTR [rax]
   1400050b7:	00 52 45             	add    BYTE PTR [rdx+0x45],dl
   1400050ba:	41                   	rex.B
   1400050bb:	4c                   	rex.WR
   1400050bc:	4c                   	rex.WR
   1400050bd:	4f                   	rex.WRXB
   1400050be:	43 20 25 70 20 25 70 	rex.XB and BYTE PTR [rip+0x70252070],spl        # 1b0257135 <.debug_line_str+0x70242fbc>
   1400050c5:	20 25 30 31 36 6c    	and    BYTE PTR [rip+0x6c363130],ah        # 1ac3681fb <.debug_line_str+0x6c354082>
   1400050cb:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400050cc:	58                   	pop    rax
   1400050cd:	20 25 30 31 36 6c    	and    BYTE PTR [rip+0x6c363130],ah        # 1ac368203 <.debug_line_str+0x6c35408a>
   1400050d3:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400050d4:	58                   	pop    rax
   1400050d5:	0a 00                	or     al,BYTE PTR [rax]
   1400050d7:	00 46 52             	add    BYTE PTR [rsi+0x52],al
   1400050da:	45                   	rex.RB
   1400050db:	45 20 20             	and    BYTE PTR [r8],r12b
   1400050de:	20 20                	and    BYTE PTR [rax],ah
   1400050e0:	25 70 20 25 70       	and    eax,0x70252070
   1400050e5:	20 25 30 31 36 6c    	and    BYTE PTR [rip+0x6c363130],ah        # 1ac36821b <.debug_line_str+0x6c3540a2>
   1400050eb:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400050ec:	58                   	pop    rax
   1400050ed:	20 25 30 31 36 6c    	and    BYTE PTR [rip+0x6c363130],ah        # 1ac368223 <.debug_line_str+0x6c3540aa>
   1400050f3:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400050f4:	58                   	pop    rax
   1400050f5:	0a 00                	or     al,BYTE PTR [rax]
	...

0000000140005100 <__dyn_tls_init_callback>:
   140005100:	20 1c 00             	and    BYTE PTR [rax+rax*1],bl
   140005103:	40 01 00             	rex add DWORD PTR [rax],eax
	...

0000000140005120 <_tls_used>:
   140005120:	00 b0 00 40 01 00    	add    BYTE PTR [rax+0x14000],dh
   140005126:	00 00                	add    BYTE PTR [rax],al
   140005128:	08 b0 00 40 01 00    	or     BYTE PTR [rax+0x14000],dh
   14000512e:	00 00                	add    BYTE PTR [rax],al
   140005130:	7c 80                	jl     1400050b2 <.rdata+0x92>
   140005132:	00 40 01             	add    BYTE PTR [rax+0x1],al
   140005135:	00 00                	add    BYTE PTR [rax],al
   140005137:	00 38                	add    BYTE PTR [rax],bh
   140005139:	a0 00 40 01 00 00 00 	movabs al,ds:0x14000
   140005140:	00 00 
	...

0000000140005160 <.rdata>:
   140005160:	41 72 67             	rex.B jb 1400051ca <.rdata+0x6a>
   140005163:	75 6d                	jne    1400051d2 <.rdata+0x72>
   140005165:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   140005167:	74 20                	je     140005189 <.rdata+0x29>
   140005169:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
   14000516b:	6d                   	ins    DWORD PTR es:[rdi],dx
   14000516c:	61                   	(bad)
   14000516d:	69 6e 20 65 72 72 6f 	imul   ebp,DWORD PTR [rsi+0x20],0x6f727265
   140005174:	72 20                	jb     140005196 <.rdata+0x36>
   140005176:	28 44 4f 4d          	sub    BYTE PTR [rdi+rcx*2+0x4d],al
   14000517a:	41                   	rex.B
   14000517b:	49                   	rex.WB
   14000517c:	4e 29 00             	rex.WRX sub QWORD PTR [rax],r8
   14000517f:	41 72 67             	rex.B jb 1400051e9 <.rdata+0x89>
   140005182:	75 6d                	jne    1400051f1 <.rdata+0x91>
   140005184:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   140005186:	74 20                	je     1400051a8 <.rdata+0x48>
   140005188:	73 69                	jae    1400051f3 <.rdata+0x93>
   14000518a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000518b:	67 75 6c             	addr32 jne 1400051fa <.rdata+0x9a>
   14000518e:	61                   	(bad)
   14000518f:	72 69                	jb     1400051fa <.rdata+0x9a>
   140005191:	74 79                	je     14000520c <.rdata+0xac>
   140005193:	20 28                	and    BYTE PTR [rax],ch
   140005195:	53                   	push   rbx
   140005196:	49                   	rex.WB
   140005197:	47                   	rex.RXB
   140005198:	4e 29 00             	rex.WRX sub QWORD PTR [rax],r8
   14000519b:	00 00                	add    BYTE PTR [rax],al
   14000519d:	00 00                	add    BYTE PTR [rax],al
   14000519f:	00 4f 76             	add    BYTE PTR [rdi+0x76],cl
   1400051a2:	65 72 66             	gs jb  14000520b <.rdata+0xab>
   1400051a5:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400051a6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400051a7:	77 20                	ja     1400051c9 <.rdata+0x69>
   1400051a9:	72 61                	jb     14000520c <.rdata+0xac>
   1400051ab:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400051ac:	67 65 20 65 72       	and    BYTE PTR gs:[ebp+0x72],ah
   1400051b1:	72 6f                	jb     140005222 <.rdata+0xc2>
   1400051b3:	72 20                	jb     1400051d5 <.rdata+0x75>
   1400051b5:	28 4f 56             	sub    BYTE PTR [rdi+0x56],cl
   1400051b8:	45 52                	rex.RB push r10
   1400051ba:	46                   	rex.RX
   1400051bb:	4c                   	rex.WR
   1400051bc:	4f 57                	rex.WRXB push r15
   1400051be:	29 00                	sub    DWORD PTR [rax],eax
   1400051c0:	50                   	push   rax
   1400051c1:	61                   	(bad)
   1400051c2:	72 74                	jb     140005238 <.rdata+0xd8>
   1400051c4:	69 61 6c 20 6c 6f 73 	imul   esp,DWORD PTR [rcx+0x6c],0x736f6c20
   1400051cb:	73 20                	jae    1400051ed <.rdata+0x8d>
   1400051cd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400051ce:	66 20 73 69          	data16 and BYTE PTR [rbx+0x69],dh
   1400051d2:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   1400051d4:	69 66 69 63 61 6e 63 	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
   1400051db:	65 20 28             	and    BYTE PTR gs:[rax],ch
   1400051de:	50                   	push   rax
   1400051df:	4c                   	rex.WR
   1400051e0:	4f 53                	rex.WRXB push r11
   1400051e2:	53                   	push   rbx
   1400051e3:	29 00                	sub    DWORD PTR [rax],eax
   1400051e5:	00 00                	add    BYTE PTR [rax],al
   1400051e7:	00 54 6f 74          	add    BYTE PTR [rdi+rbp*2+0x74],dl
   1400051eb:	61                   	(bad)
   1400051ec:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400051ed:	20 6c 6f 73          	and    BYTE PTR [rdi+rbp*2+0x73],ch
   1400051f1:	73 20                	jae    140005213 <.rdata+0xb3>
   1400051f3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400051f4:	66 20 73 69          	data16 and BYTE PTR [rbx+0x69],dh
   1400051f8:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   1400051fa:	69 66 69 63 61 6e 63 	imul   esp,DWORD PTR [rsi+0x69],0x636e6163
   140005201:	65 20 28             	and    BYTE PTR gs:[rax],ch
   140005204:	54                   	push   rsp
   140005205:	4c                   	rex.WR
   140005206:	4f 53                	rex.WRXB push r11
   140005208:	53                   	push   rbx
   140005209:	29 00                	sub    DWORD PTR [rax],eax
   14000520b:	00 00                	add    BYTE PTR [rax],al
   14000520d:	00 00                	add    BYTE PTR [rax],al
   14000520f:	00 54 68 65          	add    BYTE PTR [rax+rbp*2+0x65],dl
   140005213:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
   140005216:	73 75                	jae    14000528d <.rdata+0x12d>
   140005218:	6c                   	ins    BYTE PTR es:[rdi],dx
   140005219:	74 20                	je     14000523b <.rdata+0xdb>
   14000521b:	69 73 20 74 6f 6f 20 	imul   esi,DWORD PTR [rbx+0x20],0x206f6f74
   140005222:	73 6d                	jae    140005291 <.rdata+0x131>
   140005224:	61                   	(bad)
   140005225:	6c                   	ins    BYTE PTR es:[rdi],dx
   140005226:	6c                   	ins    BYTE PTR es:[rdi],dx
   140005227:	20 74 6f 20          	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14000522b:	62 65                	(bad)
   14000522d:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
   140005230:	70 72                	jo     1400052a4 <.rdata+0x4>
   140005232:	65 73 65             	gs jae 14000529a <.rdata+0x13a>
   140005235:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140005236:	74 65                	je     14000529d <.rdata+0x13d>
   140005238:	64 20 28             	and    BYTE PTR fs:[rax],ch
   14000523b:	55                   	push   rbp
   14000523c:	4e                   	rex.WRX
   14000523d:	44                   	rex.R
   14000523e:	45 52                	rex.RB push r10
   140005240:	46                   	rex.RX
   140005241:	4c                   	rex.WR
   140005242:	4f 57                	rex.WRXB push r15
   140005244:	29 00                	sub    DWORD PTR [rax],eax
   140005246:	55                   	push   rbp
   140005247:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140005248:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14000524c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000524d:	20 65 72             	and    BYTE PTR [rbp+0x72],ah
   140005250:	72 6f                	jb     1400052c1 <.rdata+0x21>
   140005252:	72 00                	jb     140005254 <.rdata+0xf4>
   140005254:	00 00                	add    BYTE PTR [rax],al
   140005256:	00 00                	add    BYTE PTR [rax],al
   140005258:	5f                   	pop    rdi
   140005259:	6d                   	ins    DWORD PTR es:[rdi],dx
   14000525a:	61                   	(bad)
   14000525b:	74 68                	je     1400052c5 <.rdata+0x25>
   14000525d:	65 72 72             	gs jb  1400052d2 <.rdata+0x32>
   140005260:	28 29                	sub    BYTE PTR [rcx],ch
   140005262:	3a 20                	cmp    ah,BYTE PTR [rax]
   140005264:	25 73 20 69 6e       	and    eax,0x6e692073
   140005269:	20 25 73 28 25 67    	and    BYTE PTR [rip+0x67252873],ah        # 1a7257ae2 <.debug_line_str+0x67243969>
   14000526f:	2c 20                	sub    al,0x20
   140005271:	25 67 29 20 20       	and    eax,0x20202967
   140005276:	28 72 65             	sub    BYTE PTR [rdx+0x65],dh
   140005279:	74 76                	je     1400052f1 <.rdata+0x51>
   14000527b:	61                   	(bad)
   14000527c:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000527d:	3d 25 67 29 0a       	cmp    eax,0xa296725
   140005282:	00 00                	add    BYTE PTR [rax],al
   140005284:	28 cb                	sub    bl,cl
   140005286:	ff                   	(bad)
   140005287:	ff                   	(bad)
   140005288:	dc ca                	fmul   st(2),st
   14000528a:	ff                   	(bad)
   14000528b:	ff 74 ca ff          	push   QWORD PTR [rdx+rcx*8-0x1]
   14000528f:	ff                   	(bad)
   140005290:	fc                   	cld
   140005291:	ca ff ff             	retf   0xffff
   140005294:	0c cb                	or     al,0xcb
   140005296:	ff                   	(bad)
   140005297:	ff 1c cb             	call   FWORD PTR [rbx+rcx*8]
   14000529a:	ff                   	(bad)
   14000529b:	ff                   	(bad)
   14000529c:	ec                   	in     al,dx
   14000529d:	ca ff ff             	retf   0xffff

00000001400052a0 <.rdata>:
   1400052a0:	4d 69 6e 67 77 2d 77 	imul   r13,QWORD PTR [r14+0x67],0x36772d77
   1400052a7:	36 
   1400052a8:	34 20                	xor    al,0x20
   1400052aa:	72 75                	jb     140005321 <.rdata+0x81>
   1400052ac:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400052ad:	74 69                	je     140005318 <.rdata+0x78>
   1400052af:	6d                   	ins    DWORD PTR es:[rdi],dx
   1400052b0:	65 20 66 61          	and    BYTE PTR gs:[rsi+0x61],ah
   1400052b4:	69 6c 75 72 65 3a 0a 	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0xa3a65
   1400052bb:	00 
   1400052bc:	00 00                	add    BYTE PTR [rax],al
   1400052be:	00 00                	add    BYTE PTR [rax],al
   1400052c0:	41                   	rex.B
   1400052c1:	64 64 72 65          	fs fs jb 14000532a <.rdata+0x8a>
   1400052c5:	73 73                	jae    14000533a <.rdata+0x9a>
   1400052c7:	20 25 70 20 68 61    	and    BYTE PTR [rip+0x61682070],ah        # 1a168733d <.debug_line_str+0x616731c4>
   1400052cd:	73 20                	jae    1400052ef <.rdata+0x4f>
   1400052cf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400052d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400052d1:	20 69 6d             	and    BYTE PTR [rcx+0x6d],ch
   1400052d4:	61                   	(bad)
   1400052d5:	67 65 2d 73 65 63 74 	addr32 gs sub eax,0x74636573
   1400052dc:	69 6f 6e 00 20 20 56 	imul   ebp,DWORD PTR [rdi+0x6e],0x56202000
   1400052e3:	69 72 74 75 61 6c 51 	imul   esi,DWORD PTR [rdx+0x74],0x516c6175
   1400052ea:	75 65                	jne    140005351 <.rdata+0xb1>
   1400052ec:	72 79                	jb     140005367 <.rdata+0xc7>
   1400052ee:	20 66 61             	and    BYTE PTR [rsi+0x61],ah
   1400052f1:	69 6c 65 64 20 66 6f 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x726f6620
   1400052f8:	72 
   1400052f9:	20 25 64 20 62 79    	and    BYTE PTR [rip+0x79622064],ah        # 1b9627363 <.debug_line_str+0x796131ea>
   1400052ff:	74 65                	je     140005366 <.rdata+0xc6>
   140005301:	73 20                	jae    140005323 <.rdata+0x83>
   140005303:	61                   	(bad)
   140005304:	74 20                	je     140005326 <.rdata+0x86>
   140005306:	61                   	(bad)
   140005307:	64 64 72 65          	fs fs jb 140005370 <.rdata+0xd0>
   14000530b:	73 73                	jae    140005380 <.rdata+0xe0>
   14000530d:	20 25 70 00 00 00    	and    BYTE PTR [rip+0x70],ah        # 140005383 <.rdata+0xe3>
   140005313:	00 00                	add    BYTE PTR [rax],al
   140005315:	00 00                	add    BYTE PTR [rax],al
   140005317:	00 20                	add    BYTE PTR [rax],ah
   140005319:	20 56 69             	and    BYTE PTR [rsi+0x69],dl
   14000531c:	72 74                	jb     140005392 <.rdata+0xf2>
   14000531e:	75 61                	jne    140005381 <.rdata+0xe1>
   140005320:	6c                   	ins    BYTE PTR es:[rdi],dx
   140005321:	50                   	push   rax
   140005322:	72 6f                	jb     140005393 <.rdata+0xf3>
   140005324:	74 65                	je     14000538b <.rdata+0xeb>
   140005326:	63 74 20 66          	movsxd esi,DWORD PTR [rax+riz*1+0x66]
   14000532a:	61                   	(bad)
   14000532b:	69 6c 65 64 20 77 69 	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x74697720
   140005332:	74 
   140005333:	68 20 63 6f 64       	push   0x646f6320
   140005338:	65 20 30             	and    BYTE PTR gs:[rax],dh
   14000533b:	78 25                	js     140005362 <.rdata+0xc2>
   14000533d:	78 00                	js     14000533f <.rdata+0x9f>
   14000533f:	00 20                	add    BYTE PTR [rax],ah
   140005341:	20 55 6e             	and    BYTE PTR [rbp+0x6e],dl
   140005344:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   140005348:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140005349:	20 70 73             	and    BYTE PTR [rax+0x73],dh
   14000534c:	65 75 64             	gs jne 1400053b3 <.rdata+0x113>
   14000534f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140005350:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
   140005353:	6c                   	ins    BYTE PTR es:[rdi],dx
   140005354:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140005355:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
   140005358:	69 6f 6e 20 70 72 6f 	imul   ebp,DWORD PTR [rdi+0x6e],0x6f727020
   14000535f:	74 6f                	je     1400053d0 <.rdata+0x130>
   140005361:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
   140005364:	20 76 65             	and    BYTE PTR [rsi+0x65],dh
   140005367:	72 73                	jb     1400053dc <.rdata+0x13c>
   140005369:	69 6f 6e 20 25 64 2e 	imul   ebp,DWORD PTR [rdi+0x6e],0x2e642520
   140005370:	0a 00                	or     al,BYTE PTR [rax]
   140005372:	00 00                	add    BYTE PTR [rax],al
   140005374:	00 00                	add    BYTE PTR [rax],al
   140005376:	00 00                	add    BYTE PTR [rax],al
   140005378:	20 20                	and    BYTE PTR [rax],ah
   14000537a:	55                   	push   rbp
   14000537b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000537c:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   140005380:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140005381:	20 70 73             	and    BYTE PTR [rax+0x73],dh
   140005384:	65 75 64             	gs jne 1400053eb <.rdata+0x14b>
   140005387:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140005388:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
   14000538b:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000538c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000538d:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
   140005390:	69 6f 6e 20 62 69 74 	imul   ebp,DWORD PTR [rdi+0x6e],0x74696220
   140005397:	20 73 69             	and    BYTE PTR [rbx+0x69],dh
   14000539a:	7a 65                	jp     140005401 <.rdata+0x1>
   14000539c:	20 25 64 2e 0a 00    	and    BYTE PTR [rip+0xa2e64],ah        # 1400a8206 <.debug_line_str+0x9408d>
   1400053a2:	00 00                	add    BYTE PTR [rax],al
   1400053a4:	00 00                	add    BYTE PTR [rax],al
   1400053a6:	00 00                	add    BYTE PTR [rax],al
   1400053a8:	25 64 20 62 69       	and    eax,0x69622064
   1400053ad:	74 20                	je     1400053cf <.rdata+0x12f>
   1400053af:	70 73                	jo     140005424 <.rdata+0x24>
   1400053b1:	65 75 64             	gs jne 140005418 <.rdata+0x18>
   1400053b4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400053b5:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
   1400053b8:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400053b9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400053ba:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
   1400053bd:	69 6f 6e 20 61 74 20 	imul   ebp,DWORD PTR [rdi+0x6e],0x20746120
   1400053c4:	25 70 20 6f 75       	and    eax,0x756f2070
   1400053c9:	74 20                	je     1400053eb <.rdata+0x14b>
   1400053cb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400053cc:	66 20 72 61          	data16 and BYTE PTR [rdx+0x61],dh
   1400053d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400053d1:	67 65 2c 20          	addr32 gs sub al,0x20
   1400053d5:	74 61                	je     140005438 <.rdata+0x8>
   1400053d7:	72 67                	jb     140005440 <.rdata+0x10>
   1400053d9:	65 74 69             	gs je  140005445 <.rdata+0x15>
   1400053dc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400053dd:	67 20 25 70 2c 20 79 	and    BYTE PTR [eip+0x79202c70],ah        # 1b9208054 <.debug_line_str+0x791f3edb>
   1400053e4:	69 65 6c 64 69 6e 67 	imul   esp,DWORD PTR [rbp+0x6c],0x676e6964
   1400053eb:	20 74 68 65          	and    BYTE PTR [rax+rbp*2+0x65],dh
   1400053ef:	20 76 61             	and    BYTE PTR [rsi+0x61],dh
   1400053f2:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400053f3:	75 65                	jne    14000545a <.refptr._CRT_MT+0xa>
   1400053f5:	20 25 70 2e 0a 00    	and    BYTE PTR [rip+0xa2e70],ah        # 1400a826b <.debug_line_str+0x940f2>
   1400053fb:	00 00                	add    BYTE PTR [rax],al
   1400053fd:	00 00                	add    BYTE PTR [rax],al
	...

0000000140005400 <.rdata>:
   140005400:	40 d0 ff             	sar    dil,1
   140005403:	ff 40 d0             	inc    DWORD PTR [rax-0x30]
   140005406:	ff                   	(bad)
   140005407:	ff 40 d0             	inc    DWORD PTR [rax-0x30]
   14000540a:	ff                   	(bad)
   14000540b:	ff 40 d0             	inc    DWORD PTR [rax-0x30]
   14000540e:	ff                   	(bad)
   14000540f:	ff 40 d0             	inc    DWORD PTR [rax-0x30]
   140005412:	ff                   	(bad)
   140005413:	ff                   	(bad)
   140005414:	ed                   	in     eax,dx
   140005415:	cf                   	iret
   140005416:	ff                   	(bad)
   140005417:	ff 40 d0             	inc    DWORD PTR [rax-0x30]
   14000541a:	ff                   	(bad)
   14000541b:	ff 68 d0             	jmp    FWORD PTR [rax-0x30]
   14000541e:	ff                   	(bad)
   14000541f:	ff                   	(bad)
   140005420:	ed                   	in     eax,dx
   140005421:	cf                   	iret
   140005422:	ff                   	(bad)
   140005423:	ff cb                	dec    ebx
   140005425:	cf                   	iret
   140005426:	ff                   	(bad)
   140005427:	ff 00                	inc    DWORD PTR [rax]
   140005429:	00 00                	add    BYTE PTR [rax],al
   14000542b:	00 00                	add    BYTE PTR [rax],al
   14000542d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140005430 <.rdata>:
   140005430:	72 75                	jb     1400054a7 <.refptr.__dyn_tls_init_callback+0x7>
   140005432:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140005433:	74 69                	je     14000549e <.refptr.__RUNTIME_PSEUDO_RELOC_LIST__+0xe>
   140005435:	6d                   	ins    DWORD PTR es:[rdi],dx
   140005436:	65 20 65 72          	and    BYTE PTR gs:[rbp+0x72],ah
   14000543a:	72 6f                	jb     1400054ab <.refptr.__dyn_tls_init_callback+0xb>
   14000543c:	72 20                	jb     14000545e <.refptr._CRT_MT+0xe>
   14000543e:	25 64 0a 00 00       	and    eax,0xa64
	...

0000000140005450 <.refptr._CRT_MT>:
   140005450:	30 40 00             	xor    BYTE PTR [rax+0x0],al
   140005453:	40 01 00             	rex add DWORD PTR [rax],eax
	...

0000000140005460 <.refptr._MINGW_INSTALL_DEBUG_MATHERR>:
   140005460:	40                   	rex
   140005461:	40 00 40 01          	rex add BYTE PTR [rax+0x1],al
	...

0000000140005470 <.refptr.__CTOR_LIST__>:
   140005470:	10 30                	adc    BYTE PTR [rax],dh
   140005472:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

0000000140005480 <.refptr.__RUNTIME_PSEUDO_RELOC_LIST_END__>:
   140005480:	60                   	(bad)
   140005481:	57                   	push   rdi
   140005482:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

0000000140005490 <.refptr.__RUNTIME_PSEUDO_RELOC_LIST__>:
   140005490:	60                   	(bad)
   140005491:	57                   	push   rdi
   140005492:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

00000001400054a0 <.refptr.__dyn_tls_init_callback>:
   1400054a0:	00 51 00             	add    BYTE PTR [rcx+0x0],dl
   1400054a3:	40 01 00             	rex add DWORD PTR [rax],eax
	...

00000001400054b0 <.refptr.__image_base__>:
   1400054b0:	00 00                	add    BYTE PTR [rax],al
   1400054b2:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

00000001400054c0 <.refptr.__imp___initenv>:
   1400054c0:	78 40                	js     140005502 <.refptr.__mingw_app_type+0x2>
   1400054c2:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

00000001400054d0 <.refptr.__imp__exit>:
   1400054d0:	b0 93                	mov    al,0x93
   1400054d2:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

00000001400054e0 <.refptr.__imp__tzset>:
   1400054e0:	78 94                	js     140005476 <.refptr.__CTOR_LIST__+0x6>
   1400054e2:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

00000001400054f0 <.refptr.__imp_exit>:
   1400054f0:	e8 93 00 40 01       	call   141405588 <.debug_line_str+0x13f140f>
	...

0000000140005500 <.refptr.__mingw_app_type>:
   140005500:	90                   	nop
   140005501:	80 00 40             	add    BYTE PTR [rax],0x40
   140005504:	01 00                	add    DWORD PTR [rax],eax
	...

0000000140005510 <.refptr.__mingw_initltsdrot_force>:
   140005510:	78 80                	js     140005492 <.refptr.__RUNTIME_PSEUDO_RELOC_LIST__+0x2>
   140005512:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

0000000140005520 <.refptr.__mingw_initltsdyn_force>:
   140005520:	74 80                	je     1400054a2 <.refptr.__dyn_tls_init_callback+0x2>
   140005522:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

0000000140005530 <.refptr.__mingw_initltssuo_force>:
   140005530:	70 80                	jo     1400054b2 <.refptr.__image_base__+0x2>
   140005532:	00 40 01             	add    BYTE PTR [rax+0x1],al
	...

0000000140005540 <.refptr.__mingw_module_is_dll>:
   140005540:	00 80 00 40 01 00    	add    BYTE PTR [rax+0x14000],al
	...

0000000140005550 <.refptr.__mingw_oldexcpt_handler>:
   140005550:	d0 80 00 40 01 00    	rol    BYTE PTR [rax+0x14000],1
	...

0000000140005560 <.refptr.__native_startup_lock>:
   140005560:	50                   	push   rax
   140005561:	80 00 40             	add    BYTE PTR [rax],0x40
   140005564:	01 00                	add    DWORD PTR [rax],eax
	...

0000000140005570 <.refptr.__native_startup_state>:
   140005570:	58                   	pop    rax
   140005571:	80 00 40             	add    BYTE PTR [rax],0x40
   140005574:	01 00                	add    DWORD PTR [rax],eax
	...

0000000140005580 <.refptr.__xc_a>:
   140005580:	00 a0 00 40 01 00    	add    BYTE PTR [rax+0x14000],ah
	...

0000000140005590 <.refptr.__xc_z>:
   140005590:	10 a0 00 40 01 00    	adc    BYTE PTR [rax+0x14000],ah
	...

00000001400055a0 <.refptr.__xi_a>:
   1400055a0:	18 a0 00 40 01 00    	sbb    BYTE PTR [rax+0x14000],ah
	...

00000001400055b0 <.refptr.__xi_z>:
   1400055b0:	28 a0 00 40 01 00    	sub    BYTE PTR [rax+0x14000],ah
	...

00000001400055c0 <.refptr._commode>:
   1400055c0:	80 80 00 40 01 00 00 	add    BYTE PTR [rax+0x14000],0x0
	...

00000001400055d0 <.refptr._dowildcard>:
   1400055d0:	20 40 00             	and    BYTE PTR [rax+0x0],al
   1400055d3:	40 01 00             	rex add DWORD PTR [rax],eax
	...

00000001400055e0 <.refptr._fmode>:
   1400055e0:	c0 80 00 40 01 00 00 	rol    BYTE PTR [rax+0x14000],0x0
	...

00000001400055f0 <.refptr._gnu_exception_handler>:
   1400055f0:	60                   	(bad)
   1400055f1:	23 00                	and    eax,DWORD PTR [rax]
   1400055f3:	40 01 00             	rex add DWORD PTR [rax],eax
	...

0000000140005600 <.refptr._matherr>:
   140005600:	c0 1c 00 40          	rcr    BYTE PTR [rax+rax*1],0x40
   140005604:	01 00                	add    DWORD PTR [rax],eax
	...

0000000140005610 <.refptr._newmode>:
   140005610:	60                   	(bad)
   140005611:	80 00 40             	add    BYTE PTR [rax],0x40
   140005614:	01 00                	add    DWORD PTR [rax],eax
	...

0000000140005620 <.rdata$zzz>:
   140005620:	47                   	rex.RXB
   140005621:	43                   	rex.XB
   140005622:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   140005625:	28 78 38             	sub    BYTE PTR [rax+0x38],bh
   140005628:	36 5f                	ss pop rdi
   14000562a:	36 34 2d             	ss xor al,0x2d
   14000562d:	77 69                	ja     140005698 <.rdata$zzz+0x28>
   14000562f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140005630:	33 32                	xor    esi,DWORD PTR [rdx]
   140005632:	2d 73 65 68 2d       	sub    eax,0x2d686573
   140005637:	72 65                	jb     14000569e <.rdata$zzz+0x2e>
   140005639:	76 31                	jbe    14000566c <.rdata$zzz+0x4c>
   14000563b:	2c 20                	sub    al,0x20
   14000563d:	42 75 69             	rex.X jne 1400056a9 <.rdata$zzz+0x39>
   140005640:	6c                   	ins    BYTE PTR es:[rdi],dx
   140005641:	74 20                	je     140005663 <.rdata$zzz+0x43>
   140005643:	62                   	(bad)
   140005644:	79 20                	jns    140005666 <.rdata$zzz+0x46>
   140005646:	4d 69 6e 47 57 2d 42 	imul   r13,QWORD PTR [r14+0x47],0x75422d57
   14000564d:	75 
   14000564e:	69 6c 64 73 20 70 72 	imul   ebp,DWORD PTR [rsp+riz*2+0x73],0x6f727020
   140005655:	6f 
   140005656:	6a 65                	push   0x65
   140005658:	63 74 29 20          	movsxd esi,DWORD PTR [rcx+rbp*1+0x20]
   14000565c:	31 33                	xor    DWORD PTR [rbx],esi
   14000565e:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   140005661:	30 00                	xor    BYTE PTR [rax],al
	...

0000000140005670 <.rdata$zzz>:
   140005670:	47                   	rex.RXB
   140005671:	43                   	rex.XB
   140005672:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   140005675:	28 78 38             	sub    BYTE PTR [rax+0x38],bh
   140005678:	36 5f                	ss pop rdi
   14000567a:	36 34 2d             	ss xor al,0x2d
   14000567d:	77 69                	ja     1400056e8 <.rdata$zzz+0x28>
   14000567f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140005680:	33 32                	xor    esi,DWORD PTR [rdx]
   140005682:	2d 73 65 68 2d       	sub    eax,0x2d686573
   140005687:	72 65                	jb     1400056ee <.rdata$zzz+0x2e>
   140005689:	76 31                	jbe    1400056bc <.rdata$zzz+0x4c>
   14000568b:	2c 20                	sub    al,0x20
   14000568d:	42 75 69             	rex.X jne 1400056f9 <.rdata$zzz+0x39>
   140005690:	6c                   	ins    BYTE PTR es:[rdi],dx
   140005691:	74 20                	je     1400056b3 <.rdata$zzz+0x43>
   140005693:	62                   	(bad)
   140005694:	79 20                	jns    1400056b6 <.rdata$zzz+0x46>
   140005696:	4d 69 6e 47 57 2d 42 	imul   r13,QWORD PTR [r14+0x47],0x75422d57
   14000569d:	75 
   14000569e:	69 6c 64 73 20 70 72 	imul   ebp,DWORD PTR [rsp+riz*2+0x73],0x6f727020
   1400056a5:	6f 
   1400056a6:	6a 65                	push   0x65
   1400056a8:	63 74 29 20          	movsxd esi,DWORD PTR [rcx+rbp*1+0x20]
   1400056ac:	31 33                	xor    DWORD PTR [rbx],esi
   1400056ae:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   1400056b1:	30 00                	xor    BYTE PTR [rax],al
	...

00000001400056c0 <.rdata$zzz>:
   1400056c0:	47                   	rex.RXB
   1400056c1:	43                   	rex.XB
   1400056c2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   1400056c5:	28 78 38             	sub    BYTE PTR [rax+0x38],bh
   1400056c8:	36 5f                	ss pop rdi
   1400056ca:	36 34 2d             	ss xor al,0x2d
   1400056cd:	77 69                	ja     140005738 <.rdata$zzz+0x28>
   1400056cf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400056d0:	33 32                	xor    esi,DWORD PTR [rdx]
   1400056d2:	2d 73 65 68 2d       	sub    eax,0x2d686573
   1400056d7:	72 65                	jb     14000573e <.rdata$zzz+0x2e>
   1400056d9:	76 31                	jbe    14000570c <.rdata$zzz+0x4c>
   1400056db:	2c 20                	sub    al,0x20
   1400056dd:	42 75 69             	rex.X jne 140005749 <.rdata$zzz+0x39>
   1400056e0:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400056e1:	74 20                	je     140005703 <.rdata$zzz+0x43>
   1400056e3:	62                   	(bad)
   1400056e4:	79 20                	jns    140005706 <.rdata$zzz+0x46>
   1400056e6:	4d 69 6e 47 57 2d 42 	imul   r13,QWORD PTR [r14+0x47],0x75422d57
   1400056ed:	75 
   1400056ee:	69 6c 64 73 20 70 72 	imul   ebp,DWORD PTR [rsp+riz*2+0x73],0x6f727020
   1400056f5:	6f 
   1400056f6:	6a 65                	push   0x65
   1400056f8:	63 74 29 20          	movsxd esi,DWORD PTR [rcx+rbp*1+0x20]
   1400056fc:	31 33                	xor    DWORD PTR [rbx],esi
   1400056fe:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   140005701:	30 00                	xor    BYTE PTR [rax],al
	...

0000000140005710 <.rdata$zzz>:
   140005710:	47                   	rex.RXB
   140005711:	43                   	rex.XB
   140005712:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   140005715:	28 78 38             	sub    BYTE PTR [rax+0x38],bh
   140005718:	36 5f                	ss pop rdi
   14000571a:	36 34 2d             	ss xor al,0x2d
   14000571d:	77 69                	ja     140005788 <__RUNTIME_PSEUDO_RELOC_LIST_END__+0x28>
   14000571f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140005720:	33 32                	xor    esi,DWORD PTR [rdx]
   140005722:	2d 73 65 68 2d       	sub    eax,0x2d686573
   140005727:	72 65                	jb     14000578e <__RUNTIME_PSEUDO_RELOC_LIST_END__+0x2e>
   140005729:	76 31                	jbe    14000575c <.rdata$zzz+0x4c>
   14000572b:	2c 20                	sub    al,0x20
   14000572d:	42 75 69             	rex.X jne 140005799 <__RUNTIME_PSEUDO_RELOC_LIST_END__+0x39>
   140005730:	6c                   	ins    BYTE PTR es:[rdi],dx
   140005731:	74 20                	je     140005753 <.rdata$zzz+0x43>
   140005733:	62                   	(bad)
   140005734:	79 20                	jns    140005756 <.rdata$zzz+0x46>
   140005736:	4d 69 6e 47 57 2d 42 	imul   r13,QWORD PTR [r14+0x47],0x75422d57
   14000573d:	75 
   14000573e:	69 6c 64 73 20 70 72 	imul   ebp,DWORD PTR [rsp+riz*2+0x73],0x6f727020
   140005745:	6f 
   140005746:	6a 65                	push   0x65
   140005748:	63 74 29 20          	movsxd esi,DWORD PTR [rcx+rbp*1+0x20]
   14000574c:	31 33                	xor    DWORD PTR [rbx],esi
   14000574e:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   140005751:	30 00                	xor    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

0000000140006000 <.pdata>:
   140006000:	00 10                	add    BYTE PTR [rax],dl
   140006002:	00 00                	add    BYTE PTR [rax],al
   140006004:	01 10                	add    DWORD PTR [rax],edx
   140006006:	00 00                	add    BYTE PTR [rax],al
   140006008:	00 70 00             	add    BYTE PTR [rax+0x0],dh
   14000600b:	00 10                	add    BYTE PTR [rax],dl
   14000600d:	10 00                	adc    BYTE PTR [rax],al
   14000600f:	00 2e                	add    BYTE PTR [rsi],ch
   140006011:	11 00                	adc    DWORD PTR [rax],eax
   140006013:	00 04 70             	add    BYTE PTR [rax+rsi*2],al
   140006016:	00 00                	add    BYTE PTR [rax],al
   140006018:	30 11                	xor    BYTE PTR [rcx],dl
   14000601a:	00 00                	add    BYTE PTR [rax],al
   14000601c:	79 11                	jns    14000602f <.pdata+0x2f>
   14000601e:	00 00                	add    BYTE PTR [rax],al
   140006020:	0c 70                	or     al,0x70
   140006022:	00 00                	add    BYTE PTR [rax],al
   140006024:	80 11 00             	adc    BYTE PTR [rcx],0x0
   140006027:	00 d0                	add    al,dl
   140006029:	13 00                	adc    eax,DWORD PTR [rax]
   14000602b:	00 14 70             	add    BYTE PTR [rax+rsi*2],dl
   14000602e:	00 00                	add    BYTE PTR [rax],al
   140006030:	d0 13                	rcl    BYTE PTR [rbx],1
   140006032:	00 00                	add    BYTE PTR [rax],al
   140006034:	ed                   	in     eax,dx
   140006035:	13 00                	adc    eax,DWORD PTR [rax]
   140006037:	00 24 70             	add    BYTE PTR [rax+rsi*2],ah
   14000603a:	00 00                	add    BYTE PTR [rax],al
   14000603c:	f0 13 00             	lock adc eax,DWORD PTR [rax]
   14000603f:	00 0d 14 00 00 44    	add    BYTE PTR [rip+0x44000014],cl        # 184006059 <.debug_line_str+0x43ff1ee0>
   140006045:	70 00                	jo     140006047 <.pdata+0x47>
   140006047:	00 10                	add    BYTE PTR [rax],dl
   140006049:	14 00                	adc    al,0x0
   14000604b:	00 24 14             	add    BYTE PTR [rsp+rdx*1],ah
   14000604e:	00 00                	add    BYTE PTR [rax],al
   140006050:	64 70 00             	fs jo  140006053 <.pdata+0x53>
	...

0000000140006054 <.pdata>:
   140006054:	30 14 00             	xor    BYTE PTR [rax+rax*1],dl
   140006057:	00 3c 14             	add    BYTE PTR [rsp+rdx*1],bh
   14000605a:	00 00                	add    BYTE PTR [rax],al
   14000605c:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000605d:	70 00                	jo     14000605f <.pdata+0xb>
   14000605f:	00 40 14             	add    BYTE PTR [rax+0x14],al
   140006062:	00 00                	add    BYTE PTR [rax],al
   140006064:	41 14 00             	rex.B adc al,0x0
   140006067:	00 70 70             	add    BYTE PTR [rax+0x70],dh
	...

000000014000606c <.pdata>:
   14000606c:	50                   	push   rax
   14000606d:	14 00                	adc    al,0x0
   14000606f:	00 bb 14 00 00 74    	add    BYTE PTR [rbx+0x74000014],bh
   140006075:	70 00                	jo     140006077 <.pdata+0xb>
	...

0000000140006078 <.pdata>:
   140006078:	c0 14 00 00          	rcl    BYTE PTR [rax+rax*1],0x0
   14000607c:	e6 14                	out    0x14,al
   14000607e:	00 00                	add    BYTE PTR [rax],al
   140006080:	80 70 00 00          	xor    BYTE PTR [rax+0x0],0x0
   140006084:	f0 14 00             	lock adc al,0x0
   140006087:	00 40 15             	add    BYTE PTR [rax+0x15],al
   14000608a:	00 00                	add    BYTE PTR [rax],al
   14000608c:	88 70 00             	mov    BYTE PTR [rax+0x0],dh
   14000608f:	00 40 15             	add    BYTE PTR [rax+0x15],al
   140006092:	00 00                	add    BYTE PTR [rax],al
   140006094:	b5 15                	mov    ch,0x15
   140006096:	00 00                	add    BYTE PTR [rax],al
   140006098:	94                   	xchg   esp,eax
   140006099:	70 00                	jo     14000609b <.pdata+0x23>
   14000609b:	00 c0                	add    al,al
   14000609d:	15 00 00 6d 16       	adc    eax,0x166d0000
   1400060a2:	00 00                	add    BYTE PTR [rax],al
   1400060a4:	a0 70 00 00 70 16 00 	movabs al,ds:0xba00001670000070
   1400060ab:	00 ba 
   1400060ad:	16                   	(bad)
   1400060ae:	00 00                	add    BYTE PTR [rax],al
   1400060b0:	ac                   	lods   al,BYTE PTR ds:[rsi]
   1400060b1:	70 00                	jo     1400060b3 <.pdata+0x3b>
   1400060b3:	00 c0                	add    al,al
   1400060b5:	16                   	(bad)
   1400060b6:	00 00                	add    BYTE PTR [rax],al
   1400060b8:	f3 16                	repz (bad)
   1400060ba:	00 00                	add    BYTE PTR [rax],al
   1400060bc:	b8 70 00 00 00       	mov    eax,0x70
   1400060c1:	17                   	(bad)
   1400060c2:	00 00                	add    BYTE PTR [rax],al
   1400060c4:	41 17                	rex.B (bad)
   1400060c6:	00 00                	add    BYTE PTR [rax],al
   1400060c8:	bc 70 00 00 50       	mov    esp,0x50000070
   1400060cd:	17                   	(bad)
   1400060ce:	00 00                	add    BYTE PTR [rax],al
   1400060d0:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400060d1:	17                   	(bad)
   1400060d2:	00 00                	add    BYTE PTR [rax],al
   1400060d4:	c8 70 00 00          	enter  0x70,0x0
   1400060d8:	b0 17                	mov    al,0x17
   1400060da:	00 00                	add    BYTE PTR [rax],al
   1400060dc:	be 17 00 00 d4       	mov    esi,0xd4000017
   1400060e1:	70 00                	jo     1400060e3 <.pdata+0x6b>
   1400060e3:	00 c0                	add    al,al
   1400060e5:	17                   	(bad)
   1400060e6:	00 00                	add    BYTE PTR [rax],al
   1400060e8:	5d                   	pop    rbp
   1400060e9:	18 00                	sbb    BYTE PTR [rax],al
   1400060eb:	00 d8                	add    al,bl
   1400060ed:	70 00                	jo     1400060ef <.pdata+0x77>
	...

00000001400060f0 <.pdata>:
   1400060f0:	60                   	(bad)
   1400060f1:	18 00                	sbb    BYTE PTR [rax],al
   1400060f3:	00 71 18             	add    BYTE PTR [rcx+0x18],dh
   1400060f6:	00 00                	add    BYTE PTR [rax],al
   1400060f8:	e4 70                	in     al,0x70
   1400060fa:	00 00                	add    BYTE PTR [rax],al
   1400060fc:	80 18 00             	sbb    BYTE PTR [rax],0x0
   1400060ff:	00 93 18 00 00 e8    	add    BYTE PTR [rbx-0x17ffffe8],dl
   140006105:	70 00                	jo     140006107 <.pdata+0x17>
   140006107:	00 a0 18 00 00 a9    	add    BYTE PTR [rax-0x56ffffe8],ah
   14000610d:	18 00                	sbb    BYTE PTR [rax],al
   14000610f:	00 ec                	add    ah,ch
   140006111:	70 00                	jo     140006113 <.pdata+0x23>
   140006113:	00 b0 18 00 00 c6    	add    BYTE PTR [rax-0x39ffffe8],dh
   140006119:	18 00                	sbb    BYTE PTR [rax],al
   14000611b:	00 f0                	add    al,dh
   14000611d:	70 00                	jo     14000611f <.pdata+0x2f>
   14000611f:	00 d0                	add    al,dl
   140006121:	18 00                	sbb    BYTE PTR [rax],al
   140006123:	00 de                	add    dh,bl
   140006125:	18 00                	sbb    BYTE PTR [rax],al
   140006127:	00 f4                	add    ah,dh
   140006129:	70 00                	jo     14000612b <.pdata+0x3b>
   14000612b:	00 e0                	add    al,ah
   14000612d:	18 00                	sbb    BYTE PTR [rax],al
   14000612f:	00 f6                	add    dh,dh
   140006131:	18 00                	sbb    BYTE PTR [rax],al
   140006133:	00 f8                	add    al,bh
   140006135:	70 00                	jo     140006137 <.pdata+0x47>
   140006137:	00 00                	add    BYTE PTR [rax],al
   140006139:	19 00                	sbb    DWORD PTR [rax],eax
   14000613b:	00 0a                	add    BYTE PTR [rdx],cl
   14000613d:	19 00                	sbb    DWORD PTR [rax],eax
   14000613f:	00 fc                	add    ah,bh
   140006141:	70 00                	jo     140006143 <.pdata+0x53>
   140006143:	00 10                	add    BYTE PTR [rax],dl
   140006145:	19 00                	sbb    DWORD PTR [rax],eax
   140006147:	00 82 19 00 00 00    	add    BYTE PTR [rdx+0x19],al
   14000614d:	71 00                	jno    14000614f <.pdata+0x5f>
	...

0000000140006150 <.pdata>:
   140006150:	90                   	nop
   140006151:	19 00                	sbb    DWORD PTR [rax],eax
   140006153:	00 ac 19 00 00 04 71 	add    BYTE PTR [rcx+rbx*1+0x71040000],ch
   14000615a:	00 00                	add    BYTE PTR [rax],al
   14000615c:	b0 19                	mov    al,0x19
   14000615e:	00 00                	add    BYTE PTR [rax],al
   140006160:	bc 19 00 00 0c       	mov    esp,0xc000019
   140006165:	71 00                	jno    140006167 <.pdata+0x17>
   140006167:	00 c0                	add    al,al
   140006169:	19 00                	sbb    DWORD PTR [rax],eax
   14000616b:	00 de                	add    dh,bl
   14000616d:	19 00                	sbb    DWORD PTR [rax],eax
   14000616f:	00 10                	add    BYTE PTR [rax],dl
   140006171:	71 00                	jno    140006173 <.pdata+0x23>
   140006173:	00 e0                	add    al,ah
   140006175:	19 00                	sbb    DWORD PTR [rax],eax
   140006177:	00 22                	add    BYTE PTR [rdx],ah
   140006179:	1a 00                	sbb    al,BYTE PTR [rax]
   14000617b:	00 14 71             	add    BYTE PTR [rcx+rsi*2],dl
   14000617e:	00 00                	add    BYTE PTR [rax],al
   140006180:	30 1a                	xor    BYTE PTR [rdx],bl
   140006182:	00 00                	add    BYTE PTR [rax],al
   140006184:	73 1a                	jae    1400061a0 <.pdata+0x50>
   140006186:	00 00                	add    BYTE PTR [rax],al
   140006188:	20 71 00             	and    BYTE PTR [rcx+0x0],dh
   14000618b:	00 80 1a 00 00 c7    	add    BYTE PTR [rax-0x38ffffe6],al
   140006191:	1a 00                	sbb    al,BYTE PTR [rax]
   140006193:	00 2c 71             	add    BYTE PTR [rcx+rsi*2],ch
   140006196:	00 00                	add    BYTE PTR [rax],al
   140006198:	d0 1a                	rcr    BYTE PTR [rdx],1
   14000619a:	00 00                	add    BYTE PTR [rax],al
   14000619c:	0f 1b 00             	bndstx [rax],bnd0
   14000619f:	00 38                	add    BYTE PTR [rax],bh
   1400061a1:	71 00                	jno    1400061a3 <.pdata+0x53>
	...

00000001400061a4 <.pdata>:
   1400061a4:	10 1b                	adc    BYTE PTR [rbx],bl
   1400061a6:	00 00                	add    BYTE PTR [rax],al
   1400061a8:	4a 1b 00             	rex.WX sbb rax,QWORD PTR [rax]
   1400061ab:	00 40 71             	add    BYTE PTR [rax+0x71],al
   1400061ae:	00 00                	add    BYTE PTR [rax],al
   1400061b0:	50                   	push   rax
   1400061b1:	1b 00                	sbb    eax,DWORD PTR [rax]
   1400061b3:	00 ba 1b 00 00 48    	add    BYTE PTR [rdx+0x4800001b],bh
   1400061b9:	71 00                	jno    1400061bb <.pdata+0x17>
   1400061bb:	00 c0                	add    al,al
   1400061bd:	1b 00                	sbb    eax,DWORD PTR [rax]
   1400061bf:	00 df                	add    bh,bl
   1400061c1:	1b 00                	sbb    eax,DWORD PTR [rax]
   1400061c3:	00 54 71 00          	add    BYTE PTR [rcx+rsi*2+0x0],dl
	...

00000001400061c8 <.pdata>:
   1400061c8:	e0 1b                	loopne 1400061e5 <.pdata+0x11>
   1400061ca:	00 00                	add    BYTE PTR [rax],al
   1400061cc:	e3 1b                	jrcxz  1400061e9 <.pdata+0x15>
   1400061ce:	00 00                	add    BYTE PTR [rax],al
   1400061d0:	58                   	pop    rax
   1400061d1:	71 00                	jno    1400061d3 <.pdata+0xb>
	...

00000001400061d4 <.pdata>:
   1400061d4:	f0 1b 00             	lock sbb eax,DWORD PTR [rax]
   1400061d7:	00 1f                	add    BYTE PTR [rdi],bl
   1400061d9:	1c 00                	sbb    al,0x0
   1400061db:	00 5c 71 00          	add    BYTE PTR [rcx+rsi*2+0x0],bl
   1400061df:	00 20                	add    BYTE PTR [rax],ah
   1400061e1:	1c 00                	sbb    al,0x0
   1400061e3:	00 a1 1c 00 00 64    	add    BYTE PTR [rcx+0x6400001c],ah
   1400061e9:	71 00                	jno    1400061eb <.pdata+0x17>
   1400061eb:	00 b0 1c 00 00 b3    	add    BYTE PTR [rax-0x4cffffe4],dh
   1400061f1:	1c 00                	sbb    al,0x0
   1400061f3:	00 70 71             	add    BYTE PTR [rax+0x71],dh
	...

00000001400061f8 <.pdata>:
   1400061f8:	c0 1c 00 00          	rcr    BYTE PTR [rax+rax*1],0x0
   1400061fc:	b8 1d 00 00 74       	mov    eax,0x7400001d
   140006201:	71 00                	jno    140006203 <.pdata+0xb>
	...

0000000140006204 <.pdata>:
   140006204:	c0 1d 00 00 c3 1d 00 	rcr    BYTE PTR [rip+0x1dc30000],0x0        # 15dc3620b <.debug_line_str+0x1dc22092>
   14000620b:	00 8c 71 00 00   	add    BYTE PTR [rcx+rsi*2+0x1dd00000],cl

0000000140006210 <.pdata>:
   140006210:	d0 1d 00 00 39 1e    	rcr    BYTE PTR [rip+0x1e390000],1        # 15e396216 <.debug_line_str+0x1e38209d>
   140006216:	00 00                	add    BYTE PTR [rax],al
   140006218:	90                   	nop
   140006219:	71 00                	jno    14000621b <.pdata+0xb>
   14000621b:	00 40 1e             	add    BYTE PTR [rax+0x1e],al
   14000621e:	00 00                	add    BYTE PTR [rax],al
   140006220:	a2 1f 00 00 9c 71 00 	movabs ds:0xb00000719c00001f,al
   140006227:	00 b0 
   140006229:	1f                   	(bad)
   14000622a:	00 00                	add    BYTE PTR [rax],al
   14000622c:	0f 23 00             	mov    dr0,rax
   14000622f:	00 a8 71 00 00     	add    BYTE PTR [rax+0x10000071],ch

0000000140006234 <.pdata>:
   140006234:	10 23                	adc    BYTE PTR [rbx],ah
   140006236:	00 00                	add    BYTE PTR [rax],al
   140006238:	4e 23 00             	rex.WRX and r8,QWORD PTR [rax]
   14000623b:	00 c0                	add    al,al
   14000623d:	71 00                	jno    14000623f <.pdata+0xb>
   14000623f:	00 50 23             	add    BYTE PTR [rax+0x23],dl
   140006242:	00 00                	add    BYTE PTR [rax],al
   140006244:	5c                   	pop    rsp
   140006245:	23 00                	and    eax,DWORD PTR [rax]
   140006247:	00 c8                	add    al,cl
   140006249:	71 00                	jno    14000624b <.pdata+0x17>
	...

000000014000624c <.pdata>:
   14000624c:	60                   	(bad)
   14000624d:	23 00                	and    eax,DWORD PTR [rax]
   14000624f:	00 f8                	add    al,bh
   140006251:	24 00                	and    al,0x0
   140006253:	00 cc                	add    ah,cl
   140006255:	71 00                	jno    140006257 <.pdata+0xb>
	...

0000000140006258 <.pdata>:
   140006258:	00 25 00 00 70 25    	add    BYTE PTR [rip+0x25700000],ah        # 16570625e <.debug_line_str+0x256f20e5>
   14000625e:	00 00                	add    BYTE PTR [rax],al
   140006260:	d4                   	(bad)
   140006261:	71 00                	jno    140006263 <.pdata+0xb>
   140006263:	00 70 25             	add    BYTE PTR [rax+0x25],dh
   140006266:	00 00                	add    BYTE PTR [rax],al
   140006268:	df 25 00 00 e4 71    	fbld   TBYTE PTR [rip+0x71e40000]        # 1b1e4626e <.debug_line_str+0x71e320f5>
   14000626e:	00 00                	add    BYTE PTR [rax],al
   140006270:	e0 25                	loopne 140006297 <.pdata+0xf>
   140006272:	00 00                	add    BYTE PTR [rax],al
   140006274:	61                   	(bad)
   140006275:	26 00 00             	es add BYTE PTR [rax],al
   140006278:	f0 71 00             	lock jno 14000627b <.pdata+0x23>
   14000627b:	00 70 26             	add    BYTE PTR [rax+0x26],dh
   14000627e:	00 00                	add    BYTE PTR [rax],al
   140006280:	62                   	(bad)
   140006281:	27                   	(bad)
   140006282:	00 00                	add    BYTE PTR [rax],al
   140006284:	fc                   	cld
   140006285:	71 00                	jno    140006287 <.pdata+0x2f>
	...

0000000140006288 <.pdata>:
   140006288:	70 27                	jo     1400062b1 <.pdata+0x11>
   14000628a:	00 00                	add    BYTE PTR [rax],al
   14000628c:	7e 27                	jle    1400062b5 <.pdata+0x15>
   14000628e:	00 00                	add    BYTE PTR [rax],al
   140006290:	04 72                	add    al,0x72
   140006292:	00 00                	add    BYTE PTR [rax],al
   140006294:	80 27 00             	and    BYTE PTR [rdi],0x0
   140006297:	00 8e 27 00 00 0c    	add    BYTE PTR [rsi+0xc000027],cl
   14000629d:	72 00                	jb     14000629f <.pdata+0x17>
	...

00000001400062a0 <.pdata>:
   1400062a0:	90                   	nop
   1400062a1:	27                   	(bad)
   1400062a2:	00 00                	add    BYTE PTR [rax],al
   1400062a4:	bc 27 00 00 14       	mov    esp,0x14000027
   1400062a9:	72 00                	jb     1400062ab <.pdata+0xb>
   1400062ab:	00 c0                	add    al,al
   1400062ad:	27                   	(bad)
   1400062ae:	00 00                	add    BYTE PTR [rax],al
   1400062b0:	10 28                	adc    BYTE PTR [rax],ch
   1400062b2:	00 00                	add    BYTE PTR [rax],al
   1400062b4:	18 72 00             	sbb    BYTE PTR [rdx+0x0],dh
   1400062b7:	00 10                	add    BYTE PTR [rax],dl
   1400062b9:	28 00                	sub    BYTE PTR [rax],al
   1400062bb:	00 ad 28 00 00 1c    	add    BYTE PTR [rbp+0x1c000028],ch
   1400062c1:	72 00                	jb     1400062c3 <.pdata+0x23>
   1400062c3:	00 b0 28 00 00 30    	add    BYTE PTR [rax+0x30000028],dh
   1400062c9:	29 00                	sub    DWORD PTR [rax],eax
   1400062cb:	00 28                	add    BYTE PTR [rax],ch
   1400062cd:	72 00                	jb     1400062cf <.pdata+0x2f>
   1400062cf:	00 30                	add    BYTE PTR [rax],dh
   1400062d1:	29 00                	sub    DWORD PTR [rax],eax
   1400062d3:	00 67 29             	add    BYTE PTR [rdi+0x29],ah
   1400062d6:	00 00                	add    BYTE PTR [rax],al
   1400062d8:	2c 72                	sub    al,0x72
   1400062da:	00 00                	add    BYTE PTR [rax],al
   1400062dc:	70 29                	jo     140006307 <.pdata+0x67>
   1400062de:	00 00                	add    BYTE PTR [rax],al
   1400062e0:	e3 29                	jrcxz  14000630b <.pdata+0x6b>
   1400062e2:	00 00                	add    BYTE PTR [rax],al
   1400062e4:	30 72 00             	xor    BYTE PTR [rdx+0x0],dh
   1400062e7:	00 f0                	add    al,dh
   1400062e9:	29 00                	sub    DWORD PTR [rax],eax
   1400062eb:	00 26                	add    BYTE PTR [rsi],ah
   1400062ed:	2a 00                	sub    al,BYTE PTR [rax]
   1400062ef:	00 34 72             	add    BYTE PTR [rdx+rsi*2],dh
   1400062f2:	00 00                	add    BYTE PTR [rax],al
   1400062f4:	30 2a                	xor    BYTE PTR [rdx],ch
   1400062f6:	00 00                	add    BYTE PTR [rax],al
   1400062f8:	b9 2a 00 00 38       	mov    ecx,0x3800002a
   1400062fd:	72 00                	jb     1400062ff <.pdata+0x5f>
   1400062ff:	00 c0                	add    al,al
   140006301:	2a 00                	sub    al,BYTE PTR [rax]
   140006303:	00 86 2b 00 00 3c    	add    BYTE PTR [rsi+0x3c00002b],al
   140006309:	72 00                	jb     14000630b <.pdata+0x6b>
	...

000000014000630c <.pdata>:
   14000630c:	d0 2b                	shr    BYTE PTR [rbx],1
   14000630e:	00 00                	add    BYTE PTR [rax],al
   140006310:	ee                   	out    dx,al
   140006311:	2b 00                	sub    eax,DWORD PTR [rax]
   140006313:	00 40 72             	add    BYTE PTR [rax+0x72],al
	...

0000000140006318 <.pdata>:
   140006318:	f0 2b 00             	lock sub eax,DWORD PTR [rax]
   14000631b:	00 22                	add    BYTE PTR [rdx],ah
   14000631d:	2c 00                	sub    al,0x0
   14000631f:	00 48 72             	add    BYTE PTR [rax+0x72],cl
	...

0000000140006324 <.pdata>:
   140006324:	30 2c 00             	xor    BYTE PTR [rax+rax*1],ch
   140006327:	00 33                	add    BYTE PTR [rbx],dh
   140006329:	2c 00                	sub    al,0x0
   14000632b:	00 50 72             	add    BYTE PTR [rax+0x72],dl
   14000632e:	00 00                	add    BYTE PTR [rax],al
   140006330:	40 2c 00             	rex sub al,0x0
   140006333:	00 aa 2c 00 00 54    	add    BYTE PTR [rdx+0x5400002c],ch
   140006339:	72 00                	jb     14000633b <.pdata+0x17>
   14000633b:	00 b0 2c 00 00 1a    	add    BYTE PTR [rax+0x1a00002c],dh
   140006341:	2d 00 00 64 72       	sub    eax,0x72640000
   140006346:	00 00                	add    BYTE PTR [rax],al
   140006348:	20 2d 00 00 3e 2d    	and    BYTE PTR [rip+0x2d3e0000],ch        # 16d3e634e <.debug_line_str+0x2d3d21d5>
   14000634e:	00 00                	add    BYTE PTR [rax],al
   140006350:	74 72                	je     1400063c4 <.pdata.startup+0x34>
   140006352:	00 00                	add    BYTE PTR [rax],al
   140006354:	40 2d 00 00 55 2d    	rex sub eax,0x2d550000
   14000635a:	00 00                	add    BYTE PTR [rax],al
   14000635c:	7c 72                	jl     1400063d0 <.pdata.startup+0x40>
   14000635e:	00 00                	add    BYTE PTR [rax],al
   140006360:	60                   	(bad)
   140006361:	2d 00 00 92 2d       	sub    eax,0x2d920000
   140006366:	00 00                	add    BYTE PTR [rax],al
   140006368:	80 72 00 00          	xor    BYTE PTR [rdx+0x0],0x0
   14000636c:	a0 2d 00 00 d5 2d 00 	movabs al,ds:0x8800002dd500002d
   140006373:	00 88 
   140006375:	72 00                	jb     140006377 <.pdata+0x53>
   140006377:	00 e0                	add    al,ah
   140006379:	2d 00 00 16 2e       	sub    eax,0x2e160000
   14000637e:	00 00                	add    BYTE PTR [rax],al
   140006380:	90                   	nop
   140006381:	72 00                	jb     140006383 <.pdata+0x5f>
   140006383:	00 20                	add    BYTE PTR [rax],ah
   140006385:	2e 00 00             	cs add BYTE PTR [rax],al
   140006388:	56                   	push   rsi
   140006389:	2e 00 00             	cs add BYTE PTR [rax],al
   14000638c:	98                   	cwde
   14000638d:	72 00                	jb     14000638f <.pdata+0x6b>
	...

0000000140006390 <.pdata.startup>:
   140006390:	00 30                	add    BYTE PTR [rax],dh
   140006392:	00 00                	add    BYTE PTR [rax],al
   140006394:	05 30 00 00 a0       	add    eax,0xa0000030
   140006399:	72 00                	jb     14000639b <.pdata.startup+0xb>
	...

Disassembly of section .xdata:

0000000140007000 <.xdata>:
   140007000:	01 00                	add    DWORD PTR [rax],eax
   140007002:	00 00                	add    BYTE PTR [rax],al
   140007004:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   140007007:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
   14000700a:	00 00                	add    BYTE PTR [rax],al
   14000700c:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   14000700f:	00 04 62             	add    BYTE PTR [rdx+riz*2],al
   140007012:	00 00                	add    BYTE PTR [rax],al
   140007014:	01 0a                	add    DWORD PTR [rdx],ecx
   140007016:	06                   	(bad)
   140007017:	00 0a                	add    BYTE PTR [rdx],cl
   140007019:	32 06                	xor    al,BYTE PTR [rsi]
   14000701b:	30 05 60 04 70 03    	xor    BYTE PTR [rip+0x3700460],al        # 143707481 <.debug_line_str+0x36f3308>
   140007021:	50                   	push   rax
   140007022:	02 c0                	add    al,al
   140007024:	09 04 01             	or     DWORD PTR [rcx+rax*1],eax
   140007027:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
   14000702a:	00 00                	add    BYTE PTR [rax],al
   14000702c:	50                   	push   rax
   14000702d:	2f                   	(bad)
   14000702e:	00 00                	add    BYTE PTR [rax],al
   140007030:	01 00                	add    DWORD PTR [rax],eax
   140007032:	00 00                	add    BYTE PTR [rax],al
   140007034:	d4                   	(bad)
   140007035:	13 00                	adc    eax,DWORD PTR [rax]
   140007037:	00 e7                	add    bh,ah
   140007039:	13 00                	adc    eax,DWORD PTR [rax]
   14000703b:	00 60 23             	add    BYTE PTR [rax+0x23],ah
   14000703e:	00 00                	add    BYTE PTR [rax],al
   140007040:	e7 13                	out    0x13,eax
   140007042:	00 00                	add    BYTE PTR [rax],al
   140007044:	09 04 01             	or     DWORD PTR [rcx+rax*1],eax
   140007047:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
   14000704a:	00 00                	add    BYTE PTR [rax],al
   14000704c:	50                   	push   rax
   14000704d:	2f                   	(bad)
   14000704e:	00 00                	add    BYTE PTR [rax],al
   140007050:	01 00                	add    DWORD PTR [rax],eax
   140007052:	00 00                	add    BYTE PTR [rax],al
   140007054:	f4                   	hlt
   140007055:	13 00                	adc    eax,DWORD PTR [rax]
   140007057:	00 07                	add    BYTE PTR [rdi],al
   140007059:	14 00                	adc    al,0x0
   14000705b:	00 60 23             	add    BYTE PTR [rax+0x23],ah
   14000705e:	00 00                	add    BYTE PTR [rax],al
   140007060:	07                   	(bad)
   140007061:	14 00                	adc    al,0x0
   140007063:	00 01                	add    BYTE PTR [rcx],al
   140007065:	04 01                	add    al,0x1
   140007067:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
	...

000000014000706c <.xdata>:
   14000706c:	01 00                	add    DWORD PTR [rax],eax
   14000706e:	00 00                	add    BYTE PTR [rax],al
   140007070:	01 00                	add    DWORD PTR [rax],eax
	...

0000000140007074 <.xdata>:
   140007074:	01 08                	add    DWORD PTR [rax],ecx
   140007076:	03 05 08 52 04 03    	add    eax,DWORD PTR [rip+0x3045208]        # 14304c284 <.debug_line_str+0x303810b>
   14000707c:	01 50 00             	add    DWORD PTR [rax+0x0],edx
	...

0000000140007080 <.xdata>:
   140007080:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   140007083:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
   140007086:	00 00                	add    BYTE PTR [rax],al
   140007088:	01 07                	add    DWORD PTR [rdi],eax
   14000708a:	04 00                	add    al,0x0
   14000708c:	07                   	(bad)
   14000708d:	32 03                	xor    al,BYTE PTR [rbx]
   14000708f:	30 02                	xor    BYTE PTR [rdx],al
   140007091:	60                   	(bad)
   140007092:	01 70 01             	add    DWORD PTR [rax+0x1],esi
   140007095:	06                   	(bad)
   140007096:	03 00                	add    eax,DWORD PTR [rax]
   140007098:	06                   	(bad)
   140007099:	42 02 30             	rex.X add sil,BYTE PTR [rax]
   14000709c:	01 60 00             	add    DWORD PTR [rax+0x0],esp
   14000709f:	00 01                	add    BYTE PTR [rcx],al
   1400070a1:	07                   	(bad)
   1400070a2:	04 00                	add    al,0x0
   1400070a4:	07                   	(bad)
   1400070a5:	32 03                	xor    al,BYTE PTR [rbx]
   1400070a7:	30 02                	xor    BYTE PTR [rdx],al
   1400070a9:	60                   	(bad)
   1400070aa:	01 70 01             	add    DWORD PTR [rax+0x1],esi
   1400070ad:	07                   	(bad)
   1400070ae:	04 00                	add    al,0x0
   1400070b0:	07                   	(bad)
   1400070b1:	32 03                	xor    al,BYTE PTR [rbx]
   1400070b3:	30 02                	xor    BYTE PTR [rdx],al
   1400070b5:	60                   	(bad)
   1400070b6:	01 70 01             	add    DWORD PTR [rax+0x1],esi
   1400070b9:	00 00                	add    BYTE PTR [rax],al
   1400070bb:	00 01                	add    BYTE PTR [rcx],al
   1400070bd:	06                   	(bad)
   1400070be:	03 00                	add    eax,DWORD PTR [rax]
   1400070c0:	06                   	(bad)
   1400070c1:	42 02 30             	rex.X add sil,BYTE PTR [rax]
   1400070c4:	01 60 00             	add    DWORD PTR [rax+0x0],esp
   1400070c7:	00 01                	add    BYTE PTR [rcx],al
   1400070c9:	07                   	(bad)
   1400070ca:	04 00                	add    al,0x0
   1400070cc:	07                   	(bad)
   1400070cd:	32 03                	xor    al,BYTE PTR [rbx]
   1400070cf:	30 02                	xor    BYTE PTR [rdx],al
   1400070d1:	60                   	(bad)
   1400070d2:	01 70 01             	add    DWORD PTR [rax+0x1],esi
   1400070d5:	00 00                	add    BYTE PTR [rax],al
   1400070d7:	00 01                	add    BYTE PTR [rcx],al
   1400070d9:	07                   	(bad)
   1400070da:	04 00                	add    al,0x0
   1400070dc:	07                   	(bad)
   1400070dd:	32 03                	xor    al,BYTE PTR [rbx]
   1400070df:	30 02                	xor    BYTE PTR [rdx],al
   1400070e1:	60                   	(bad)
   1400070e2:	01 70              	add    DWORD PTR [rax+0x1],esi

00000001400070e4 <.xdata>:
   1400070e4:	01 00                	add    DWORD PTR [rax],eax
   1400070e6:	00 00                	add    BYTE PTR [rax],al
   1400070e8:	01 00                	add    DWORD PTR [rax],eax
   1400070ea:	00 00                	add    BYTE PTR [rax],al
   1400070ec:	01 00                	add    DWORD PTR [rax],eax
   1400070ee:	00 00                	add    BYTE PTR [rax],al
   1400070f0:	01 00                	add    DWORD PTR [rax],eax
   1400070f2:	00 00                	add    BYTE PTR [rax],al
   1400070f4:	01 00                	add    DWORD PTR [rax],eax
   1400070f6:	00 00                	add    BYTE PTR [rax],al
   1400070f8:	01 00                	add    DWORD PTR [rax],eax
   1400070fa:	00 00                	add    BYTE PTR [rax],al
   1400070fc:	01 00                	add    DWORD PTR [rax],eax
   1400070fe:	00 00                	add    BYTE PTR [rax],al
   140007100:	01 00                	add    DWORD PTR [rax],eax
	...

0000000140007104 <.xdata>:
   140007104:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   140007107:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
   14000710a:	00 00                	add    BYTE PTR [rax],al
   14000710c:	01 00                	add    DWORD PTR [rax],eax
   14000710e:	00 00                	add    BYTE PTR [rax],al
   140007110:	01 00                	add    DWORD PTR [rax],eax
   140007112:	00 00                	add    BYTE PTR [rax],al
   140007114:	01 06                	add    DWORD PTR [rsi],eax
   140007116:	03 00                	add    eax,DWORD PTR [rax]
   140007118:	06                   	(bad)
   140007119:	62 02                	(bad)
   14000711b:	30 01                	xor    BYTE PTR [rcx],al
   14000711d:	60                   	(bad)
   14000711e:	00 00                	add    BYTE PTR [rax],al
   140007120:	01 07                	add    DWORD PTR [rdi],eax
   140007122:	04 00                	add    al,0x0
   140007124:	07                   	(bad)
   140007125:	52                   	push   rdx
   140007126:	03 30                	add    esi,DWORD PTR [rax]
   140007128:	02 60 01             	add    ah,BYTE PTR [rax+0x1]
   14000712b:	70 01                	jo     14000712e <.xdata+0x2a>
   14000712d:	07                   	(bad)
   14000712e:	04 00                	add    al,0x0
   140007130:	07                   	(bad)
   140007131:	52                   	push   rdx
   140007132:	03 30                	add    esi,DWORD PTR [rax]
   140007134:	02 60 01             	add    ah,BYTE PTR [rax+0x1]
   140007137:	70 01                	jo     14000713a <.xdata+0x36>
   140007139:	05 02 00 05 52       	add    eax,0x52050002
   14000713e:	01 30                	add    DWORD PTR [rax],esi

0000000140007140 <.xdata>:
   140007140:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   140007143:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
   140007146:	00 00                	add    BYTE PTR [rax],al
   140007148:	01 06                	add    DWORD PTR [rsi],eax
   14000714a:	03 00                	add    eax,DWORD PTR [rax]
   14000714c:	06                   	(bad)
   14000714d:	42 02 30             	rex.X add sil,BYTE PTR [rax]
   140007150:	01 60 00             	add    DWORD PTR [rax+0x0],esp
   140007153:	00 01                	add    BYTE PTR [rcx],al
   140007155:	00 00                	add    BYTE PTR [rax],al
	...

0000000140007158 <.xdata>:
   140007158:	01 00                	add    DWORD PTR [rax],eax
	...

000000014000715c <.xdata>:
   14000715c:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   14000715f:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
   140007162:	00 00                	add    BYTE PTR [rax],al
   140007164:	01 06                	add    DWORD PTR [rsi],eax
   140007166:	03 00                	add    eax,DWORD PTR [rax]
   140007168:	06                   	(bad)
   140007169:	42 02 30             	rex.X add sil,BYTE PTR [rax]
   14000716c:	01 60 00             	add    DWORD PTR [rax+0x0],esp
   14000716f:	00 01                	add    BYTE PTR [rcx],al
   140007171:	00 00                	add    BYTE PTR [rax],al
	...

0000000140007174 <.xdata>:
   140007174:	01 16                	add    DWORD PTR [rsi],edx
   140007176:	09 00                	or     DWORD PTR [rax],eax
   140007178:	16                   	(bad)
   140007179:	88 06                	mov    BYTE PTR [rsi],al
   14000717b:	00 10                	add    BYTE PTR [rax],dl
   14000717d:	78 05                	js     140007184 <.xdata+0x10>
   14000717f:	00 0b                	add    BYTE PTR [rbx],cl
   140007181:	68 04 00 06 e2       	push   0xffffffffe2060004
   140007186:	02 30                	add    dh,BYTE PTR [rax]
   140007188:	01 60 00             	add    DWORD PTR [rax+0x0],esp
	...

000000014000718c <.xdata>:
   14000718c:	01 00                	add    DWORD PTR [rax],eax
	...

0000000140007190 <.xdata>:
   140007190:	01 06                	add    DWORD PTR [rsi],eax
   140007192:	03 00                	add    eax,DWORD PTR [rax]
   140007194:	06                   	(bad)
   140007195:	62 02                	(bad)
   140007197:	30 01                	xor    BYTE PTR [rcx],al
   140007199:	60                   	(bad)
   14000719a:	00 00                	add    BYTE PTR [rax],al
   14000719c:	01 07                	add    DWORD PTR [rdi],eax
   14000719e:	04 00                	add    al,0x0
   1400071a0:	07                   	(bad)
   1400071a1:	92                   	xchg   edx,eax
   1400071a2:	03 30                	add    esi,DWORD PTR [rax]
   1400071a4:	02 60 01             	add    ah,BYTE PTR [rax+0x1]
   1400071a7:	70 01                	jo     1400071aa <.xdata+0x1a>
   1400071a9:	15 0a 45 15 03       	adc    eax,0x315450a
   1400071ae:	10 82 0c 30 0b 60    	adc    BYTE PTR [rdx+0x600b300c],al
   1400071b4:	0a 70 09             	or     dh,BYTE PTR [rax+0x9]
   1400071b7:	c0 07 d0             	rol    BYTE PTR [rdi],0xd0
   1400071ba:	05 e0 03 f0 01       	add    eax,0x1f003e0
   1400071bf:	50                   	push   rax

00000001400071c0 <.xdata>:
   1400071c0:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   1400071c3:	00 04 a2             	add    BYTE PTR [rdx+riz*4],al
   1400071c6:	00 00                	add    BYTE PTR [rax],al
   1400071c8:	01 00                	add    DWORD PTR [rax],eax
	...

00000001400071cc <.xdata>:
   1400071cc:	01 05 02 00 05 32    	add    DWORD PTR [rip+0x32050002],eax        # 1720571d4 <.debug_line_str+0x3204305b>
   1400071d2:	01 30                	add    DWORD PTR [rax],esi

00000001400071d4 <.xdata>:
   1400071d4:	01 0a                	add    DWORD PTR [rdx],ecx
   1400071d6:	06                   	(bad)
   1400071d7:	00 0a                	add    BYTE PTR [rdx],cl
   1400071d9:	32 06                	xor    al,BYTE PTR [rsi]
   1400071db:	30 05 60 04 70 03    	xor    BYTE PTR [rip+0x3700460],al        # 143707641 <.debug_line_str+0x36f34c8>
   1400071e1:	50                   	push   rax
   1400071e2:	02 c0                	add    al,al
   1400071e4:	01 07                	add    DWORD PTR [rdi],eax
   1400071e6:	04 00                	add    al,0x0
   1400071e8:	07                   	(bad)
   1400071e9:	32 03                	xor    al,BYTE PTR [rbx]
   1400071eb:	30 02                	xor    BYTE PTR [rdx],al
   1400071ed:	60                   	(bad)
   1400071ee:	01 70 01             	add    DWORD PTR [rax+0x1],esi
   1400071f1:	06                   	(bad)
   1400071f2:	03 00                	add    eax,DWORD PTR [rax]
   1400071f4:	06                   	(bad)
   1400071f5:	42 02 30             	rex.X add sil,BYTE PTR [rax]
   1400071f8:	01 60 00             	add    DWORD PTR [rax+0x0],esp
   1400071fb:	00 01                	add    BYTE PTR [rcx],al
   1400071fd:	05 02 00 05 32       	add    eax,0x32050002
   140007202:	01 30                	add    DWORD PTR [rax],esi

0000000140007204 <.xdata>:
   140007204:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   140007207:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
   14000720a:	00 00                	add    BYTE PTR [rax],al
   14000720c:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   14000720f:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
	...

0000000140007214 <.xdata>:
   140007214:	01 00                	add    DWORD PTR [rax],eax
   140007216:	00 00                	add    BYTE PTR [rax],al
   140007218:	01 00                	add    DWORD PTR [rax],eax
   14000721a:	00 00                	add    BYTE PTR [rax],al
   14000721c:	01 07                	add    DWORD PTR [rdi],eax
   14000721e:	04 00                	add    al,0x0
   140007220:	07                   	(bad)
   140007221:	32 03                	xor    al,BYTE PTR [rbx]
   140007223:	30 02                	xor    BYTE PTR [rdx],al
   140007225:	60                   	(bad)
   140007226:	01 70 01             	add    DWORD PTR [rax+0x1],esi
   140007229:	00 00                	add    BYTE PTR [rax],al
   14000722b:	00 01                	add    BYTE PTR [rcx],al
   14000722d:	00 00                	add    BYTE PTR [rax],al
   14000722f:	00 01                	add    BYTE PTR [rcx],al
   140007231:	00 00                	add    BYTE PTR [rax],al
   140007233:	00 01                	add    BYTE PTR [rcx],al
   140007235:	00 00                	add    BYTE PTR [rax],al
   140007237:	00 01                	add    BYTE PTR [rcx],al
   140007239:	00 00                	add    BYTE PTR [rax],al
   14000723b:	00 01                	add    BYTE PTR [rcx],al
   14000723d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140007240 <.xdata>:
   140007240:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   140007243:	00 04 62             	add    BYTE PTR [rdx+riz*2],al
	...

0000000140007248 <.xdata>:
   140007248:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   14000724b:	00 04 82             	add    BYTE PTR [rdx+rax*4],al
	...

0000000140007250 <.xdata>:
   140007250:	01 00                	add    DWORD PTR [rax],eax
   140007252:	00 00                	add    BYTE PTR [rax],al
   140007254:	01 0a                	add    DWORD PTR [rdx],ecx
   140007256:	06                   	(bad)
   140007257:	00 0a                	add    BYTE PTR [rdx],cl
   140007259:	32 06                	xor    al,BYTE PTR [rsi]
   14000725b:	30 05 60 04 70 03    	xor    BYTE PTR [rip+0x3700460],al        # 1437076c1 <.debug_line_str+0x36f3548>
   140007261:	50                   	push   rax
   140007262:	02 c0                	add    al,al
   140007264:	01 0a                	add    DWORD PTR [rdx],ecx
   140007266:	06                   	(bad)
   140007267:	00 0a                	add    BYTE PTR [rdx],cl
   140007269:	32 06                	xor    al,BYTE PTR [rsi]
   14000726b:	30 05 60 04 70 03    	xor    BYTE PTR [rip+0x3700460],al        # 1437076d1 <.debug_line_str+0x36f3558>
   140007271:	50                   	push   rax
   140007272:	02 c0                	add    al,al
   140007274:	01 05 02 00 05 32    	add    DWORD PTR [rip+0x32050002],eax        # 17205727c <.debug_line_str+0x32043103>
   14000727a:	01 30                	add    DWORD PTR [rax],esi
   14000727c:	01 00                	add    DWORD PTR [rax],eax
   14000727e:	00 00                	add    BYTE PTR [rax],al
   140007280:	01 05 02 00 05 32    	add    DWORD PTR [rip+0x32050002],eax        # 172057288 <.debug_line_str+0x3204310f>
   140007286:	01 30                	add    DWORD PTR [rax],esi
   140007288:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   14000728b:	00 04 82             	add    BYTE PTR [rdx+rax*4],al
   14000728e:	00 00                	add    BYTE PTR [rax],al
   140007290:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   140007293:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
   140007296:	00 00                	add    BYTE PTR [rax],al
   140007298:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
   14000729b:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
	...

00000001400072a0 <.xdata.startup>:
   1400072a0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .bss:

0000000140008000 <__bss_start__>:
   140008000:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008004 <startinfo>:
   140008004:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008008 <has_cctor>:
   140008008:	00 00                	add    BYTE PTR [rax],al
	...

000000014000800c <managedapp>:
   14000800c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008010 <mainret>:
	...

0000000140008018 <envp>:
	...

0000000140008020 <argv>:
	...

0000000140008028 <argc>:
	...

0000000140008030 <WRAP_ALLOC_FILE_POINTER>:
	...

0000000140008040 <initialized>:
	...

0000000140008050 <__native_startup_lock>:
	...

0000000140008058 <__native_startup_state>:
	...

0000000140008060 <_newmode>:
	...

0000000140008070 <__mingw_initltssuo_force>:
   140008070:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008074 <__mingw_initltsdyn_force>:
   140008074:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008078 <__mingw_initltsdrot_force>:
   140008078:	00 00                	add    BYTE PTR [rax],al
	...

000000014000807c <_tls_index>:
   14000807c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140008080 <_commode>:
	...

0000000140008090 <__mingw_app_type>:
	...

00000001400080a0 <was_init.0>:
   1400080a0:	00 00                	add    BYTE PTR [rax],al
	...

00000001400080a4 <maxSections>:
   1400080a4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400080a8 <the_secs>:
	...

00000001400080b0 <stUserMathErr>:
	...

00000001400080c0 <_fmode>:
	...

00000001400080d0 <__mingw_oldexcpt_handler>:
	...

00000001400080e0 <key_dtor_list>:
	...

00000001400080e8 <__mingwthr_cs_init>:
	...

0000000140008100 <__mingwthr_cs>:
	...

0000000140008140 <.bss>:
	...

0000000140008150 <.bss>:
	...

0000000140008170 <local__winitenv>:
	...

0000000140008178 <local__initenv>:
	...

Disassembly of section .idata:

0000000140009000 <_head_lib64_libkernel32_a>:
   140009000:	c8 90 00 00          	enter  0x90,0x0
	...
   14000900c:	fc                   	cld
   14000900d:	97                   	xchg   edi,eax
   14000900e:	00 00                	add    BYTE PTR [rax],al
   140009010:	a8 92                	test   al,0x92
	...

0000000140009014 <_head_lib64_libapi_ms_win_crt_environment_l1_1_0_a>:
   140009014:	20 91 00 00 00 00    	and    BYTE PTR [rcx+0x0],dl
   14000901a:	00 00                	add    BYTE PTR [rax],al
   14000901c:	00 00                	add    BYTE PTR [rax],al
   14000901e:	00 00                	add    BYTE PTR [rax],al
   140009020:	14 98                	adc    al,0x98
   140009022:	00 00                	add    BYTE PTR [rax],al
   140009024:	00 93 00 00      	add    BYTE PTR [rbx-0x6ec80000],dl

0000000140009028 <_head_lib64_libapi_ms_win_crt_heap_l1_1_0_a>:
   140009028:	38 91 00 00 00 00    	cmp    BYTE PTR [rcx+0x0],dl
   14000902e:	00 00                	add    BYTE PTR [rax],al
   140009030:	00 00                	add    BYTE PTR [rax],al
   140009032:	00 00                	add    BYTE PTR [rax],al
   140009034:	50                   	push   rax
   140009035:	98                   	cwde
   140009036:	00 00                	add    BYTE PTR [rax],al
   140009038:	18 93 00 00      	sbb    BYTE PTR [rbx-0x6e980000],dl

000000014000903c <_head_lib64_libapi_ms_win_crt_math_l1_1_0_a>:
   14000903c:	68 91 00 00 00       	push   0x91
   140009041:	00 00                	add    BYTE PTR [rax],al
   140009043:	00 00                	add    BYTE PTR [rax],al
   140009045:	00 00                	add    BYTE PTR [rax],al
   140009047:	00 74 98 00          	add    BYTE PTR [rax+rbx*4+0x0],dh
   14000904b:	00 48 93             	add    BYTE PTR [rax-0x6d],cl
	...

0000000140009050 <_head_lib64_libapi_ms_win_crt_private_l1_1_0_a>:
   140009050:	78 91                	js     140008fe3 <__bss_end__+0xe63>
	...
   14000905a:	00 00                	add    BYTE PTR [rax],al
   14000905c:	9c                   	pushf
   14000905d:	98                   	cwde
   14000905e:	00 00                	add    BYTE PTR [rax],al
   140009060:	58                   	pop    rax
   140009061:	93                   	xchg   ebx,eax
	...

0000000140009064 <_head_lib64_libapi_ms_win_crt_runtime_l1_1_0_a>:
   140009064:	90                   	nop
   140009065:	91                   	xchg   ecx,eax
	...
   14000906e:	00 00                	add    BYTE PTR [rax],al
   140009070:	04 99                	add    al,0x99
   140009072:	00 00                	add    BYTE PTR [rax],al
   140009074:	70 93                	jo     140009009 <_head_lib64_libkernel32_a+0x9>
	...

0000000140009078 <_head_lib64_libapi_ms_win_crt_stdio_l1_1_0_a>:
   140009078:	20 92 00 00 00 00    	and    BYTE PTR [rdx+0x0],dl
   14000907e:	00 00                	add    BYTE PTR [rax],al
   140009080:	00 00                	add    BYTE PTR [rax],al
   140009082:	00 00                	add    BYTE PTR [rax],al
   140009084:	48 99                	cqo
   140009086:	00 00                	add    BYTE PTR [rax],al
   140009088:	00 94 00 00    	add    BYTE PTR [rax+rax*1+0x926800],dl

000000014000908c <_head_lib64_libapi_ms_win_crt_string_l1_1_0_a>:
   14000908c:	68 92 00 00 00       	push   0x92
   140009091:	00 00                	add    BYTE PTR [rax],al
   140009093:	00 00                	add    BYTE PTR [rax],al
   140009095:	00 00                	add    BYTE PTR [rax],al
   140009097:	00 70 99             	add    BYTE PTR [rax-0x67],dh
   14000909a:	00 00                	add    BYTE PTR [rax],al
   14000909c:	48 94                	xchg   rsp,rax
	...

00000001400090a0 <_head_lib64_libapi_ms_win_crt_time_l1_1_0_a>:
   1400090a0:	80 92 00 00 00 00 00 	adc    BYTE PTR [rdx+0x0],0x0
   1400090a7:	00 00                	add    BYTE PTR [rax],al
   1400090a9:	00 00                	add    BYTE PTR [rax],al
   1400090ab:	00 a4 99 00 00 60 94 	add    BYTE PTR [rcx+rbx*4-0x6ba00000],ah
	...

00000001400090c8 <hname>:
   1400090c8:	88 94 00 00 00 00 00 	mov    BYTE PTR [rax+rax*1+0x0],dl
	...

00000001400090d0 <.idata$4>:
   1400090d0:	a0 94 00 00 00 00 00 	movabs al,ds:0xb800000000000094
   1400090d7:	00  

00000001400090d8 <.idata$4>:
   1400090d8:	b8 94 00 00 00       	mov    eax,0x94
   1400090dd:	00 00                	add    BYTE PTR [rax],al
	...

00000001400090e0 <.idata$4>:
   1400090e0:	c8 94 00 00          	enter  0x94,0x0
   1400090e4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400090e8 <.idata$4>:
   1400090e8:	e4 94                	in     al,0x94
   1400090ea:	00 00                	add    BYTE PTR [rax],al
   1400090ec:	00 00                	add    BYTE PTR [rax],al
	...

00000001400090f0 <.idata$4>:
   1400090f0:	fc                   	cld
   1400090f1:	94                   	xchg   esp,eax
   1400090f2:	00 00                	add    BYTE PTR [rax],al
   1400090f4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400090f8 <.idata$4>:
   1400090f8:	1a 95 00 00 00 00    	sbb    dl,BYTE PTR [rbp+0x0]
	...

0000000140009100 <.idata$4>:
   140009100:	22 95 00 00 00 00    	and    dl,BYTE PTR [rbp+0x0]
	...

0000000140009108 <.idata$4>:
   140009108:	30 95 00 00 00 00    	xor    BYTE PTR [rbp+0x0],dl
	...

0000000140009110 <.idata$4>:
   140009110:	42 95                	rex.X xchg ebp,eax
   140009112:	00 00                	add    BYTE PTR [rax],al
   140009114:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009118 <.idata$4>:
	...

0000000140009120 <hname>:
   140009120:	52                   	push   rdx
   140009121:	95                   	xchg   ebp,eax
   140009122:	00 00                	add    BYTE PTR [rax],al
   140009124:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009128 <.idata$4>:
   140009128:	62 95                	(bad)
   14000912a:	00 00                	add    BYTE PTR [rax],al
   14000912c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009130 <.idata$4>:
	...

0000000140009138 <hname>:
   140009138:	72 95                	jb     1400090cf <hname+0x7>
   14000913a:	00 00                	add    BYTE PTR [rax],al
   14000913c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009140 <.idata$4>:
   140009140:	82                   	(bad)
   140009141:	95                   	xchg   ebp,eax
   140009142:	00 00                	add    BYTE PTR [rax],al
   140009144:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009148 <.idata$4>:
   140009148:	8c 95 00 00 00 00    	mov    WORD PTR [rbp+0x0],ss
	...

0000000140009150 <.idata$4>:
   140009150:	94                   	xchg   esp,eax
   140009151:	95                   	xchg   ebp,eax
   140009152:	00 00                	add    BYTE PTR [rax],al
   140009154:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009158 <.idata$4>:
   140009158:	9e                   	sahf
   140009159:	95                   	xchg   ebp,eax
   14000915a:	00 00                	add    BYTE PTR [rax],al
   14000915c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009160 <.idata$4>:
	...

0000000140009168 <hname>:
   140009168:	a8 95                	test   al,0x95
   14000916a:	00 00                	add    BYTE PTR [rax],al
   14000916c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009170 <.idata$4>:
	...

0000000140009178 <hname>:
   140009178:	bc 95 00 00 00       	mov    esp,0x95
   14000917d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009180 <.idata$4>:
   140009180:	d4                   	(bad)
   140009181:	95                   	xchg   ebp,eax
   140009182:	00 00                	add    BYTE PTR [rax],al
   140009184:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009188 <.idata$4>:
	...

0000000140009190 <hname>:
   140009190:	de 95 00 00 00 00    	ficom  WORD PTR [rbp+0x0]
	...

0000000140009198 <.idata$4>:
   140009198:	ec                   	in     al,dx
   140009199:	95                   	xchg   ebp,eax
   14000919a:	00 00                	add    BYTE PTR [rax],al
   14000919c:	00 00                	add    BYTE PTR [rax],al
	...

00000001400091a0 <.idata$4>:
   1400091a0:	fa                   	cli
   1400091a1:	95                   	xchg   ebp,eax
   1400091a2:	00 00                	add    BYTE PTR [rax],al
   1400091a4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400091a8 <.idata$4>:
   1400091a8:	08 96 00 00 00 00    	or     BYTE PTR [rsi+0x0],dl
	...

00000001400091b0 <.idata$4>:
   1400091b0:	12 96 00 00 00 00    	adc    dl,BYTE PTR [rsi+0x0]
	...

00000001400091b8 <.idata$4>:
   1400091b8:	2c 96                	sub    al,0x96
   1400091ba:	00 00                	add    BYTE PTR [rax],al
   1400091bc:	00 00                	add    BYTE PTR [rax],al
	...

00000001400091c0 <.idata$4>:
   1400091c0:	44 96                	rex.R xchg esi,eax
   1400091c2:	00 00                	add    BYTE PTR [rax],al
   1400091c4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400091c8 <.idata$4>:
   1400091c8:	5a                   	pop    rdx
   1400091c9:	96                   	xchg   esi,eax
   1400091ca:	00 00                	add    BYTE PTR [rax],al
   1400091cc:	00 00                	add    BYTE PTR [rax],al
	...

00000001400091d0 <.idata$4>:
   1400091d0:	68 96 00 00 00       	push   0x96
   1400091d5:	00 00                	add    BYTE PTR [rax],al
	...

00000001400091d8 <.idata$4>:
   1400091d8:	70 96                	jo     140009170 <.idata$4>
   1400091da:	00 00                	add    BYTE PTR [rax],al
   1400091dc:	00 00                	add    BYTE PTR [rax],al
	...

00000001400091e0 <.idata$4>:
   1400091e0:	92                   	xchg   edx,eax
   1400091e1:	96                   	xchg   esi,eax
   1400091e2:	00 00                	add    BYTE PTR [rax],al
   1400091e4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400091e8 <.idata$4>:
   1400091e8:	b2 96                	mov    dl,0x96
   1400091ea:	00 00                	add    BYTE PTR [rax],al
   1400091ec:	00 00                	add    BYTE PTR [rax],al
	...

00000001400091f0 <.idata$4>:
   1400091f0:	be 96 00 00 00       	mov    esi,0x96
   1400091f5:	00 00                	add    BYTE PTR [rax],al
	...

00000001400091f8 <.idata$4>:
   1400091f8:	ce                   	(bad)
   1400091f9:	96                   	xchg   esi,eax
   1400091fa:	00 00                	add    BYTE PTR [rax],al
   1400091fc:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009200 <.idata$4>:
   140009200:	f0 96                	lock xchg esi,eax
   140009202:	00 00                	add    BYTE PTR [rax],al
   140009204:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009208 <.idata$4>:
   140009208:	f8                   	clc
   140009209:	96                   	xchg   esi,eax
   14000920a:	00 00                	add    BYTE PTR [rax],al
   14000920c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009210 <.idata$4>:
   140009210:	00 97 00 00 00 00    	add    BYTE PTR [rdi+0x0],dl
	...

0000000140009218 <.idata$4>:
	...

0000000140009220 <hname>:
   140009220:	0a 97 00 00 00 00    	or     dl,BYTE PTR [rdi+0x0]
	...

0000000140009228 <.idata$4>:
   140009228:	1c 97                	sbb    al,0x97
   14000922a:	00 00                	add    BYTE PTR [rax],al
   14000922c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009230 <.idata$4>:
   140009230:	2c 97                	sub    al,0x97
   140009232:	00 00                	add    BYTE PTR [rax],al
   140009234:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009238 <.idata$4>:
   140009238:	3a 97 00 00 00 00    	cmp    dl,BYTE PTR [rdi+0x0]
	...

0000000140009240 <.idata$4>:
   140009240:	54                   	push   rsp
   140009241:	97                   	xchg   edi,eax
   140009242:	00 00                	add    BYTE PTR [rax],al
   140009244:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009248 <.idata$4>:
   140009248:	70 97                	jo     1400091e1 <.idata$4+0x1>
   14000924a:	00 00                	add    BYTE PTR [rax],al
   14000924c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009250 <.idata$4>:
   140009250:	7a 97                	jp     1400091e9 <.idata$4+0x1>
   140009252:	00 00                	add    BYTE PTR [rax],al
   140009254:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009258 <.idata$4>:
   140009258:	82                   	(bad)
   140009259:	97                   	xchg   edi,eax
   14000925a:	00 00                	add    BYTE PTR [rax],al
   14000925c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009260 <.idata$4>:
	...

0000000140009268 <hname>:
   140009268:	8c 97 00 00 00 00    	mov    WORD PTR [rdi+0x0],ss
	...

0000000140009270 <.idata$4>:
   140009270:	96                   	xchg   esi,eax
   140009271:	97                   	xchg   edi,eax
   140009272:	00 00                	add    BYTE PTR [rax],al
   140009274:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009278 <.idata$4>:
	...

0000000140009280 <hname>:
   140009280:	a0 97 00 00 00 00 00 	movabs al,ds:0xae00000000000097
   140009287:	00  

0000000140009288 <.idata$4>:
   140009288:	ae                   	scas   al,BYTE PTR es:[rdi]
   140009289:	97                   	xchg   edi,eax
   14000928a:	00 00                	add    BYTE PTR [rax],al
   14000928c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009290 <.idata$4>:
   140009290:	bc 97 00 00 00       	mov    esp,0x97
   140009295:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009298 <.idata$4>:
   140009298:	c8 97 00 00          	enter  0x97,0x0
   14000929c:	00 00                	add    BYTE PTR [rax],al
	...

00000001400092a0 <.idata$4>:
	...

00000001400092a8 <__IAT_start__>:
   1400092a8:	88 94 00 00 00 00 00 	mov    BYTE PTR [rax+rax*1+0x0],dl
	...

00000001400092b0 <__imp_EnterCriticalSection>:
   1400092b0:	a0 94 00 00 00 00 00 	movabs al,ds:0xb800000000000094
   1400092b7:	00  

00000001400092b8 <__imp_GetLastError>:
   1400092b8:	b8 94 00 00 00       	mov    eax,0x94
   1400092bd:	00 00                	add    BYTE PTR [rax],al
	...

00000001400092c0 <__imp_InitializeCriticalSection>:
   1400092c0:	c8 94 00 00          	enter  0x94,0x0
   1400092c4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400092c8 <__imp_LeaveCriticalSection>:
   1400092c8:	e4 94                	in     al,0x94
   1400092ca:	00 00                	add    BYTE PTR [rax],al
   1400092cc:	00 00                	add    BYTE PTR [rax],al
	...

00000001400092d0 <__imp_SetUnhandledExceptionFilter>:
   1400092d0:	fc                   	cld
   1400092d1:	94                   	xchg   esp,eax
   1400092d2:	00 00                	add    BYTE PTR [rax],al
   1400092d4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400092d8 <__imp_Sleep>:
   1400092d8:	1a 95 00 00 00 00    	sbb    dl,BYTE PTR [rbp+0x0]
	...

00000001400092e0 <__imp_TlsGetValue>:
   1400092e0:	22 95 00 00 00 00    	and    dl,BYTE PTR [rbp+0x0]
	...

00000001400092e8 <__imp_VirtualProtect>:
   1400092e8:	30 95 00 00 00 00    	xor    BYTE PTR [rbp+0x0],dl
	...

00000001400092f0 <__imp_VirtualQuery>:
   1400092f0:	42 95                	rex.X xchg ebp,eax
   1400092f2:	00 00                	add    BYTE PTR [rax],al
   1400092f4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400092f8 <.idata$5>:
	...

0000000140009300 <__imp___p__environ>:
   140009300:	52                   	push   rdx
   140009301:	95                   	xchg   ebp,eax
   140009302:	00 00                	add    BYTE PTR [rax],al
   140009304:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009308 <__imp___p__wenviron>:
   140009308:	62 95                	(bad)
   14000930a:	00 00                	add    BYTE PTR [rax],al
   14000930c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009310 <.idata$5>:
	...

0000000140009318 <__imp__set_new_mode>:
   140009318:	72 95                	jb     1400092af <__IAT_start__+0x7>
   14000931a:	00 00                	add    BYTE PTR [rax],al
   14000931c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009320 <__imp_calloc>:
   140009320:	82                   	(bad)
   140009321:	95                   	xchg   ebp,eax
   140009322:	00 00                	add    BYTE PTR [rax],al
   140009324:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009328 <__imp_free>:
   140009328:	8c 95 00 00 00 00    	mov    WORD PTR [rbp+0x0],ss
	...

0000000140009330 <__imp_malloc>:
   140009330:	94                   	xchg   esp,eax
   140009331:	95                   	xchg   ebp,eax
   140009332:	00 00                	add    BYTE PTR [rax],al
   140009334:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009338 <__imp_realloc>:
   140009338:	9e                   	sahf
   140009339:	95                   	xchg   ebp,eax
   14000933a:	00 00                	add    BYTE PTR [rax],al
   14000933c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009340 <.idata$5>:
	...

0000000140009348 <__imp___setusermatherr>:
   140009348:	a8 95                	test   al,0x95
   14000934a:	00 00                	add    BYTE PTR [rax],al
   14000934c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009350 <.idata$5>:
	...

0000000140009358 <__imp___C_specific_handler>:
   140009358:	bc 95 00 00 00       	mov    esp,0x95
   14000935d:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009360 <__imp_memcpy>:
   140009360:	d4                   	(bad)
   140009361:	95                   	xchg   ebp,eax
   140009362:	00 00                	add    BYTE PTR [rax],al
   140009364:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009368 <.idata$5>:
	...

0000000140009370 <__imp___p___argc>:
   140009370:	de 95 00 00 00 00    	ficom  WORD PTR [rbp+0x0]
	...

0000000140009378 <__imp___p___argv>:
   140009378:	ec                   	in     al,dx
   140009379:	95                   	xchg   ebp,eax
   14000937a:	00 00                	add    BYTE PTR [rax],al
   14000937c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009380 <__imp___p___wargv>:
   140009380:	fa                   	cli
   140009381:	95                   	xchg   ebp,eax
   140009382:	00 00                	add    BYTE PTR [rax],al
   140009384:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009388 <__imp__cexit>:
   140009388:	08 96 00 00 00 00    	or     BYTE PTR [rsi+0x0],dl
	...

0000000140009390 <__imp__configure_narrow_argv>:
   140009390:	12 96 00 00 00 00    	adc    dl,BYTE PTR [rsi+0x0]
	...

0000000140009398 <__imp__configure_wide_argv>:
   140009398:	2c 96                	sub    al,0x96
   14000939a:	00 00                	add    BYTE PTR [rax],al
   14000939c:	00 00                	add    BYTE PTR [rax],al
	...

00000001400093a0 <__imp__crt_at_quick_exit>:
   1400093a0:	44 96                	rex.R xchg esi,eax
   1400093a2:	00 00                	add    BYTE PTR [rax],al
   1400093a4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400093a8 <__imp__crt_atexit>:
   1400093a8:	5a                   	pop    rdx
   1400093a9:	96                   	xchg   esi,eax
   1400093aa:	00 00                	add    BYTE PTR [rax],al
   1400093ac:	00 00                	add    BYTE PTR [rax],al
	...

00000001400093b0 <__imp__exit>:
   1400093b0:	68 96 00 00 00       	push   0x96
   1400093b5:	00 00                	add    BYTE PTR [rax],al
	...

00000001400093b8 <__imp__initialize_narrow_environment>:
   1400093b8:	70 96                	jo     140009350 <.idata$5>
   1400093ba:	00 00                	add    BYTE PTR [rax],al
   1400093bc:	00 00                	add    BYTE PTR [rax],al
	...

00000001400093c0 <__imp__initialize_wide_environment>:
   1400093c0:	92                   	xchg   edx,eax
   1400093c1:	96                   	xchg   esi,eax
   1400093c2:	00 00                	add    BYTE PTR [rax],al
   1400093c4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400093c8 <__imp__initterm>:
   1400093c8:	b2 96                	mov    dl,0x96
   1400093ca:	00 00                	add    BYTE PTR [rax],al
   1400093cc:	00 00                	add    BYTE PTR [rax],al
	...

00000001400093d0 <__imp___set_app_type>:
   1400093d0:	be 96 00 00 00       	mov    esi,0x96
   1400093d5:	00 00                	add    BYTE PTR [rax],al
	...

00000001400093d8 <__imp__set_invalid_parameter_handler>:
   1400093d8:	ce                   	(bad)
   1400093d9:	96                   	xchg   esi,eax
   1400093da:	00 00                	add    BYTE PTR [rax],al
   1400093dc:	00 00                	add    BYTE PTR [rax],al
	...

00000001400093e0 <__imp_abort>:
   1400093e0:	f0 96                	lock xchg esi,eax
   1400093e2:	00 00                	add    BYTE PTR [rax],al
   1400093e4:	00 00                	add    BYTE PTR [rax],al
	...

00000001400093e8 <__imp_exit>:
   1400093e8:	f8                   	clc
   1400093e9:	96                   	xchg   esi,eax
   1400093ea:	00 00                	add    BYTE PTR [rax],al
   1400093ec:	00 00                	add    BYTE PTR [rax],al
	...

00000001400093f0 <__imp_signal>:
   1400093f0:	00 97 00 00 00 00    	add    BYTE PTR [rdi+0x0],dl
	...

00000001400093f8 <.idata$5>:
	...

0000000140009400 <__imp___acrt_iob_func>:
   140009400:	0a 97 00 00 00 00    	or     dl,BYTE PTR [rdi+0x0]
	...

0000000140009408 <__imp___p__commode>:
   140009408:	1c 97                	sbb    al,0x97
   14000940a:	00 00                	add    BYTE PTR [rax],al
   14000940c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009410 <__imp___p__fmode>:
   140009410:	2c 97                	sub    al,0x97
   140009412:	00 00                	add    BYTE PTR [rax],al
   140009414:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009418 <__imp___stdio_common_vfprintf>:
   140009418:	3a 97 00 00 00 00    	cmp    dl,BYTE PTR [rdi+0x0]
	...

0000000140009420 <__imp___stdio_common_vfwprintf>:
   140009420:	54                   	push   rsp
   140009421:	97                   	xchg   edi,eax
   140009422:	00 00                	add    BYTE PTR [rax],al
   140009424:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009428 <__imp_fclose>:
   140009428:	70 97                	jo     1400093c1 <__imp__initialize_wide_environment+0x1>
   14000942a:	00 00                	add    BYTE PTR [rax],al
   14000942c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009430 <__imp_fopen>:
   140009430:	7a 97                	jp     1400093c9 <__imp__initterm+0x1>
   140009432:	00 00                	add    BYTE PTR [rax],al
   140009434:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009438 <__imp_fwrite>:
   140009438:	82                   	(bad)
   140009439:	97                   	xchg   edi,eax
   14000943a:	00 00                	add    BYTE PTR [rax],al
   14000943c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009440 <.idata$5>:
	...

0000000140009448 <__imp_strlen>:
   140009448:	8c 97 00 00 00 00    	mov    WORD PTR [rdi+0x0],ss
	...

0000000140009450 <__imp_strncmp>:
   140009450:	96                   	xchg   esi,eax
   140009451:	97                   	xchg   edi,eax
   140009452:	00 00                	add    BYTE PTR [rax],al
   140009454:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009458 <.idata$5>:
	...

0000000140009460 <__imp___daylight>:
   140009460:	a0 97 00 00 00 00 00 	movabs al,ds:0xae00000000000097
   140009467:	00  

0000000140009468 <__imp___timezone>:
   140009468:	ae                   	scas   al,BYTE PTR es:[rdi]
   140009469:	97                   	xchg   edi,eax
   14000946a:	00 00                	add    BYTE PTR [rax],al
   14000946c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009470 <__imp___tzname>:
   140009470:	bc 97 00 00 00       	mov    esp,0x97
   140009475:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009478 <__imp__tzset>:
   140009478:	c8 97 00 00          	enter  0x97,0x0
   14000947c:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009480 <.idata$5>:
	...

0000000140009488 <__IAT_end__>:
   140009488:	19 01                	sbb    DWORD PTR [rcx],eax
   14000948a:	44                   	rex.R
   14000948b:	65 6c                	gs ins BYTE PTR es:[rdi],dx
   14000948d:	65 74 65             	gs je  1400094f5 <.idata$6+0x11>
   140009490:	43 72 69             	rex.XB jb 1400094fc <.idata$6>
   140009493:	74 69                	je     1400094fe <.idata$6+0x2>
   140009495:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
   140009498:	53                   	push   rbx
   140009499:	65 63 74 69 6f       	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14000949e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
	...

00000001400094a0 <.idata$6>:
   1400094a0:	3d 01 45 6e 74       	cmp    eax,0x746e4501
   1400094a5:	65 72 43             	gs jb  1400094eb <.idata$6+0x7>
   1400094a8:	72 69                	jb     140009513 <.idata$6+0x17>
   1400094aa:	74 69                	je     140009515 <.idata$6+0x19>
   1400094ac:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
   1400094af:	53                   	push   rbx
   1400094b0:	65 63 74 69 6f       	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400094b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
	...

00000001400094b8 <.idata$6>:
   1400094b8:	74 02                	je     1400094bc <.idata$6+0x4>
   1400094ba:	47                   	rex.RXB
   1400094bb:	65 74 4c             	gs je  14000950a <.idata$6+0xe>
   1400094be:	61                   	(bad)
   1400094bf:	73 74                	jae    140009535 <.idata$6+0x5>
   1400094c1:	45 72 72             	rex.RB jb 140009536 <.idata$6+0x6>
   1400094c4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400094c5:	72 00                	jb     1400094c7 <.idata$6+0xf>
	...

00000001400094c8 <.idata$6>:
   1400094c8:	7a 03                	jp     1400094cd <.idata$6+0x5>
   1400094ca:	49 6e                	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400094cc:	69 74 69 61 6c 69 7a 	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400094d3:	65 
   1400094d4:	43 72 69             	rex.XB jb 140009540 <.idata$6+0x10>
   1400094d7:	74 69                	je     140009542 <.idata$6>
   1400094d9:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
   1400094dc:	53                   	push   rbx
   1400094dd:	65 63 74 69 6f       	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400094e2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
	...

00000001400094e4 <.idata$6>:
   1400094e4:	d6                   	(bad)
   1400094e5:	03 4c 65 61          	add    ecx,DWORD PTR [rbp+riz*2+0x61]
   1400094e9:	76 65                	jbe    140009550 <.idata$6+0xe>
   1400094eb:	43 72 69             	rex.XB jb 140009557 <.idata$6+0x5>
   1400094ee:	74 69                	je     140009559 <.idata$6+0x7>
   1400094f0:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
   1400094f3:	53                   	push   rbx
   1400094f4:	65 63 74 69 6f       	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400094f9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
	...

00000001400094fc <.idata$6>:
   1400094fc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400094fd:	05 53 65 74 55       	add    eax,0x55746553
   140009502:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140009503:	68 61 6e 64 6c       	push   0x6c646e61
   140009508:	65 64 45 78 63       	gs fs rex.RB js 140009570 <.idata$6+0xe>
   14000950d:	65 70 74             	gs jo  140009584 <.idata$6+0x2>
   140009510:	69 6f 6e 46 69 6c 74 	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140009517:	65 72 00             	gs jb  14000951a <.idata$6>

000000014000951a <.idata$6>:
   14000951a:	7f 05                	jg     140009521 <.idata$6+0x7>
   14000951c:	53                   	push   rbx
   14000951d:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000951e:	65 65 70 00          	gs gs jo 140009522 <.idata$6>

0000000140009522 <.idata$6>:
   140009522:	a2 05 54 6c 73 47 65 	movabs ds:0x56746547736c5405,al
   140009529:	74 56 
   14000952b:	61                   	(bad)
   14000952c:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000952d:	75 65                	jne    140009594 <.idata$6>
	...

0000000140009530 <.idata$6>:
   140009530:	d1 05 56 69 72 74    	rol    DWORD PTR [rip+0x74726956],1        # 1b472fe8c <.debug_line_str+0x7471bd13>
   140009536:	75 61                	jne    140009599 <.idata$6+0x5>
   140009538:	6c                   	ins    BYTE PTR es:[rdi],dx
   140009539:	50                   	push   rax
   14000953a:	72 6f                	jb     1400095ab <.idata$6+0x3>
   14000953c:	74 65                	je     1400095a3 <.idata$6+0x5>
   14000953e:	63 74 00 00          	movsxd esi,DWORD PTR [rax+rax*1+0x0]

0000000140009542 <.idata$6>:
   140009542:	d3 05 56 69 72 74    	rol    DWORD PTR [rip+0x74726956],cl        # 1b472fe9e <.debug_line_str+0x7471bd25>
   140009548:	75 61                	jne    1400095ab <.idata$6+0x3>
   14000954a:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000954b:	51                   	push   rcx
   14000954c:	75 65                	jne    1400095b3 <.idata$6+0xb>
   14000954e:	72 79                	jb     1400095c9 <.idata$6+0xd>
	...

0000000140009552 <.idata$6>:
   140009552:	01 00                	add    DWORD PTR [rax],eax
   140009554:	5f                   	pop    rdi
   140009555:	5f                   	pop    rdi
   140009556:	70 5f                	jo     1400095b7 <.idata$6+0xf>
   140009558:	5f                   	pop    rdi
   140009559:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   14000955b:	76 69                	jbe    1400095c6 <.idata$6+0xa>
   14000955d:	72 6f                	jb     1400095ce <.idata$6+0x12>
   14000955f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
	...

0000000140009562 <.idata$6>:
   140009562:	02 00                	add    al,BYTE PTR [rax]
   140009564:	5f                   	pop    rdi
   140009565:	5f                   	pop    rdi
   140009566:	70 5f                	jo     1400095c7 <.idata$6+0xb>
   140009568:	5f                   	pop    rdi
   140009569:	77 65                	ja     1400095d0 <.idata$6+0x14>
   14000956b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000956c:	76 69                	jbe    1400095d7 <.idata$6+0x3>
   14000956e:	72 6f                	jb     1400095df <.idata$6+0x1>
   140009570:	6e                   	outs   dx,BYTE PTR ds:[rsi]
	...

0000000140009572 <.idata$6>:
   140009572:	18 00                	sbb    BYTE PTR [rax],al
   140009574:	5f                   	pop    rdi
   140009575:	73 65                	jae    1400095dc <.idata$6+0x8>
   140009577:	74 5f                	je     1400095d8 <.idata$6+0x4>
   140009579:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000957a:	65 77 5f             	gs ja  1400095dc <.idata$6+0x8>
   14000957d:	6d                   	ins    DWORD PTR es:[rdi],dx
   14000957e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000957f:	64 65 00           	fs add BYTE PTR gs:[rcx],bl

0000000140009582 <.idata$6>:
   140009582:	19 00                	sbb    DWORD PTR [rax],eax
   140009584:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
   140009587:	6c                   	ins    BYTE PTR es:[rdi],dx
   140009588:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140009589:	63 00                	movsxd eax,DWORD PTR [rax]
	...

000000014000958c <.idata$6>:
   14000958c:	1a 00                	sbb    al,BYTE PTR [rax]
   14000958e:	66 72 65             	data16 jb 1400095f6 <.idata$6+0xa>
   140009591:	65 00 00             	add    BYTE PTR gs:[rax],al

0000000140009594 <.idata$6>:
   140009594:	1b 00                	sbb    eax,DWORD PTR [rax]
   140009596:	6d                   	ins    DWORD PTR es:[rdi],dx
   140009597:	61                   	(bad)
   140009598:	6c                   	ins    BYTE PTR es:[rdi],dx
   140009599:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000959a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000959b:	63 00                	movsxd eax,DWORD PTR [rax]
	...

000000014000959e <.idata$6>:
   14000959e:	1c 00                	sbb    al,0x0
   1400095a0:	72 65                	jb     140009607 <.idata$6+0xd>
   1400095a2:	61                   	(bad)
   1400095a3:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400095a4:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400095a5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400095a6:	63 00                	movsxd eax,DWORD PTR [rax]

00000001400095a8 <.idata$6>:
   1400095a8:	0a 00                	or     al,BYTE PTR [rax]
   1400095aa:	5f                   	pop    rdi
   1400095ab:	5f                   	pop    rdi
   1400095ac:	73 65                	jae    140009613 <.idata$6+0x1>
   1400095ae:	74 75                	je     140009625 <.idata$6+0x13>
   1400095b0:	73 65                	jae    140009617 <.idata$6+0x5>
   1400095b2:	72 6d                	jb     140009621 <.idata$6+0xf>
   1400095b4:	61                   	(bad)
   1400095b5:	74 68                	je     14000961f <.idata$6+0xd>
   1400095b7:	65 72 72             	gs jb  14000962c <.idata$6>
	...

00000001400095bc <.idata$6>:
   1400095bc:	10 00                	adc    BYTE PTR [rax],al
   1400095be:	5f                   	pop    rdi
   1400095bf:	5f                   	pop    rdi
   1400095c0:	43 5f                	rex.XB pop r15
   1400095c2:	73 70                	jae    140009634 <.idata$6+0x8>
   1400095c4:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   1400095c8:	69 63 5f 68 61 6e 64 	imul   esp,DWORD PTR [rbx+0x5f],0x646e6168
   1400095cf:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400095d0:	65 72 00             	gs jb  1400095d3 <.idata$6+0x17>
	...

00000001400095d4 <.idata$6>:
   1400095d4:	78 04                	js     1400095da <.idata$6+0x6>
   1400095d6:	6d                   	ins    DWORD PTR es:[rdi],dx
   1400095d7:	65 6d                	gs ins DWORD PTR es:[rdi],dx
   1400095d9:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
	...

00000001400095de <.idata$6>:
   1400095de:	05 00 5f 5f 70       	add    eax,0x705f5f00
   1400095e3:	5f                   	pop    rdi
   1400095e4:	5f                   	pop    rdi
   1400095e5:	5f                   	pop    rdi
   1400095e6:	61                   	(bad)
   1400095e7:	72 67                	jb     140009650 <.idata$6+0xc>
   1400095e9:	63 00                	movsxd eax,DWORD PTR [rax]
	...

00000001400095ec <.idata$6>:
   1400095ec:	06                   	(bad)
   1400095ed:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
   1400095f0:	70 5f                	jo     140009651 <.idata$6+0xd>
   1400095f2:	5f                   	pop    rdi
   1400095f3:	5f                   	pop    rdi
   1400095f4:	61                   	(bad)
   1400095f5:	72 67                	jb     14000965e <.idata$6+0x4>
   1400095f7:	76 00                	jbe    1400095f9 <.idata$6+0xd>
	...

00000001400095fa <.idata$6>:
   1400095fa:	07                   	(bad)
   1400095fb:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
   1400095fe:	70 5f                	jo     14000965f <.idata$6+0x5>
   140009600:	5f                   	pop    rdi
   140009601:	5f                   	pop    rdi
   140009602:	77 61                	ja     140009665 <.idata$6+0xb>
   140009604:	72 67                	jb     14000966d <.idata$6+0x5>
   140009606:	76 00                	jbe    140009608 <.idata$6>

0000000140009608 <.idata$6>:
   140009608:	17                   	(bad)
   140009609:	00 5f 63             	add    BYTE PTR [rdi+0x63],bl
   14000960c:	65 78 69             	gs js  140009678 <.idata$6+0x8>
   14000960f:	74 00                	je     140009611 <.idata$6+0x9>
	...

0000000140009612 <.idata$6>:
   140009612:	19 00                	sbb    DWORD PTR [rax],eax
   140009614:	5f                   	pop    rdi
   140009615:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
   140009618:	66 69 67 75 72 65    	imul   sp,WORD PTR [rdi+0x75],0x6572
   14000961e:	5f                   	pop    rdi
   14000961f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140009620:	61                   	(bad)
   140009621:	72 72                	jb     140009695 <.idata$6+0x3>
   140009623:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140009624:	77 5f                	ja     140009685 <.idata$6+0x15>
   140009626:	61                   	(bad)
   140009627:	72 67                	jb     140009690 <.idata$6+0x20>
   140009629:	76 00                	jbe    14000962b <.idata$6+0x19>
	...

000000014000962c <.idata$6>:
   14000962c:	1a 00                	sbb    al,BYTE PTR [rax]
   14000962e:	5f                   	pop    rdi
   14000962f:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
   140009632:	66 69 67 75 72 65    	imul   sp,WORD PTR [rdi+0x75],0x6572
   140009638:	5f                   	pop    rdi
   140009639:	77 69                	ja     1400096a4 <.idata$6+0x12>
   14000963b:	64 65 5f             	fs gs pop rdi
   14000963e:	61                   	(bad)
   14000963f:	72 67                	jb     1400096a8 <.idata$6+0x16>
   140009641:	76 00                	jbe    140009643 <.idata$6+0x17>
	...

0000000140009644 <.idata$6>:
   140009644:	1e                   	(bad)
   140009645:	00 5f 63             	add    BYTE PTR [rdi+0x63],bl
   140009648:	72 74                	jb     1400096be <.idata$6>
   14000964a:	5f                   	pop    rdi
   14000964b:	61                   	(bad)
   14000964c:	74 5f                	je     1400096ad <.idata$6+0x1b>
   14000964e:	71 75                	jno    1400096c5 <.idata$6+0x7>
   140009650:	69 63 6b 5f 65 78 69 	imul   esp,DWORD PTR [rbx+0x6b],0x6978655f
   140009657:	74 00                	je     140009659 <.idata$6+0x15>
	...

000000014000965a <.idata$6>:
   14000965a:	1f                   	(bad)
   14000965b:	00 5f 63             	add    BYTE PTR [rdi+0x63],bl
   14000965e:	72 74                	jb     1400096d4 <.idata$6+0x6>
   140009660:	5f                   	pop    rdi
   140009661:	61                   	(bad)
   140009662:	74 65                	je     1400096c9 <.idata$6+0xb>
   140009664:	78 69                	js     1400096cf <.idata$6+0x1>
   140009666:	74 00                	je     140009668 <.idata$6>

0000000140009668 <.idata$6>:
   140009668:	25 00 5f 65 78       	and    eax,0x78655f00
   14000966d:	69 74 00     	imul   esi,DWORD PTR [rax+rax*1+0x36],0x6e695f00
   140009674:	 

0000000140009670 <.idata$6>:
   140009670:	36 00 5f 69          	ss add BYTE PTR [rdi+0x69],bl
   140009674:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140009675:	69 74 69 61 6c 69 7a 	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14000967c:	65 
   14000967d:	5f                   	pop    rdi
   14000967e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000967f:	61                   	(bad)
   140009680:	72 72                	jb     1400096f4 <.idata$6+0x4>
   140009682:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140009683:	77 5f                	ja     1400096e4 <.idata$6+0x16>
   140009685:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   140009687:	76 69                	jbe    1400096f2 <.idata$6+0x2>
   140009689:	72 6f                	jb     1400096fa <.idata$6+0x2>
   14000968b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000968c:	6d                   	ins    DWORD PTR es:[rdi],dx
   14000968d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   14000968f:	74 00                	je     140009691 <.idata$6+0x21>
	...

0000000140009692 <.idata$6>:
   140009692:	38 00                	cmp    BYTE PTR [rax],al
   140009694:	5f                   	pop    rdi
   140009695:	69 6e 69 74 69 61 6c 	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14000969c:	69 7a 65 5f 77 69 64 	imul   edi,DWORD PTR [rdx+0x65],0x6469775f
   1400096a3:	65 5f                	gs pop rdi
   1400096a5:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   1400096a7:	76 69                	jbe    140009712 <.idata$6+0x8>
   1400096a9:	72 6f                	jb     14000971a <.idata$6+0x10>
   1400096ab:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400096ac:	6d                   	ins    DWORD PTR es:[rdi],dx
   1400096ad:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   1400096af:	74 00                	je     1400096b1 <.idata$6+0x1f>
	...

00000001400096b2 <.idata$6>:
   1400096b2:	39 00                	cmp    DWORD PTR [rax],eax
   1400096b4:	5f                   	pop    rdi
   1400096b5:	69 6e 69 74 74 65 72 	imul   ebp,DWORD PTR [rsi+0x69],0x72657474
   1400096bc:	6d                   	ins    DWORD PTR es:[rdi],dx
	...

00000001400096be <.idata$6>:
   1400096be:	45 00 5f 73          	add    BYTE PTR [r15+0x73],r11b
   1400096c2:	65 74 5f             	gs je  140009724 <.idata$6+0x8>
   1400096c5:	61                   	(bad)
   1400096c6:	70 70                	jo     140009738 <.idata$6+0xc>
   1400096c8:	5f                   	pop    rdi
   1400096c9:	74 79                	je     140009744 <.idata$6+0xa>
   1400096cb:	70 65                	jo     140009732 <.idata$6+0x6>
	...

00000001400096ce <.idata$6>:
   1400096ce:	4b 00 5f 73          	rex.WXB add BYTE PTR [r15+0x73],bl
   1400096d2:	65 74 5f             	gs je  140009734 <.idata$6+0x8>
   1400096d5:	69 6e 76 61 6c 69 64 	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   1400096dc:	5f                   	pop    rdi
   1400096dd:	70 61                	jo     140009740 <.idata$6+0x6>
   1400096df:	72 61                	jb     140009742 <.idata$6+0x8>
   1400096e1:	6d                   	ins    DWORD PTR es:[rdi],dx
   1400096e2:	65 74 65             	gs je  14000974a <.idata$6+0x10>
   1400096e5:	72 5f                	jb     140009746 <.idata$6+0xc>
   1400096e7:	68 61 6e 64 6c       	push   0x6c646e61
   1400096ec:	65 72 00             	gs jb  1400096ef <.idata$6+0x21>
	...

00000001400096f0 <.idata$6>:
   1400096f0:	58                   	pop    rax
   1400096f1:	00 61 62             	add    BYTE PTR [rcx+0x62],ah
   1400096f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400096f5:	72 74                	jb     14000976b <.idata$6+0x17>
	...

00000001400096f8 <.idata$6>:
   1400096f8:	59                   	pop    rcx
   1400096f9:	00 65 78             	add    BYTE PTR [rbp+0x78],ah
   1400096fc:	69 74 00 00    	imul   esi,DWORD PTR [rax+rax*1+0x0],0x69730067
   140009703:	 

0000000140009700 <.idata$6>:
   140009700:	67 00 73 69          	add    BYTE PTR [ebx+0x69],dh
   140009704:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   140009706:	61                   	(bad)
   140009707:	6c                   	ins    BYTE PTR es:[rdi],dx
	...

000000014000970a <.idata$6>:
   14000970a:	01 00                	add    DWORD PTR [rax],eax
   14000970c:	5f                   	pop    rdi
   14000970d:	5f                   	pop    rdi
   14000970e:	61                   	(bad)
   14000970f:	63 72 74             	movsxd esi,DWORD PTR [rdx+0x74]
   140009712:	5f                   	pop    rdi
   140009713:	69 6f 62 5f 66 75 6e 	imul   ebp,DWORD PTR [rdi+0x62],0x6e75665f
   14000971a:	63 00                	movsxd eax,DWORD PTR [rax]

000000014000971c <.idata$6>:
   14000971c:	02 00                	add    al,BYTE PTR [rax]
   14000971e:	5f                   	pop    rdi
   14000971f:	5f                   	pop    rdi
   140009720:	70 5f                	jo     140009781 <.idata$6+0x7>
   140009722:	5f                   	pop    rdi
   140009723:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
   140009726:	6d                   	ins    DWORD PTR es:[rdi],dx
   140009727:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140009728:	64 65 00 00          	fs add BYTE PTR gs:[rax],al

000000014000972c <.idata$6>:
   14000972c:	03 00                	add    eax,DWORD PTR [rax]
   14000972e:	5f                   	pop    rdi
   14000972f:	5f                   	pop    rdi
   140009730:	70 5f                	jo     140009791 <.idata$6+0x5>
   140009732:	5f                   	pop    rdi
   140009733:	66 6d                	ins    WORD PTR es:[rdi],dx
   140009735:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140009736:	64 65 00 00          	fs add BYTE PTR gs:[rax],al

000000014000973a <.idata$6>:
   14000973a:	04 00                	add    al,0x0
   14000973c:	5f                   	pop    rdi
   14000973d:	5f                   	pop    rdi
   14000973e:	73 74                	jae    1400097b4 <.idata$6+0x6>
   140009740:	64 69 6f 5f 63 6f 6d 	imul   ebp,DWORD PTR fs:[rdi+0x5f],0x6d6d6f63
   140009747:	6d 
   140009748:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140009749:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000974a:	5f                   	pop    rdi
   14000974b:	76 66                	jbe    1400097b3 <.idata$6+0x5>
   14000974d:	70 72                	jo     1400097c1 <.idata$6+0x5>
   14000974f:	69 6e 74 66 00   	imul   ebp,DWORD PTR [rsi+0x74],0x80066

0000000140009754 <.idata$6>:
   140009754:	08 00                	or     BYTE PTR [rax],al
   140009756:	5f                   	pop    rdi
   140009757:	5f                   	pop    rdi
   140009758:	73 74                	jae    1400097ce <.idata$6+0x6>
   14000975a:	64 69 6f 5f 63 6f 6d 	imul   ebp,DWORD PTR fs:[rdi+0x5f],0x6d6d6f63
   140009761:	6d 
   140009762:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140009763:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140009764:	5f                   	pop    rdi
   140009765:	76 66                	jbe    1400097cd <.idata$6+0x5>
   140009767:	77 70                	ja     1400097d9 <.idata$7+0x1>
   140009769:	72 69                	jb     1400097d4 <.idata$7>
   14000976b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000976c:	74 66                	je     1400097d4 <.idata$7>
	...

0000000140009770 <.idata$6>:
   140009770:	93                   	xchg   ebx,eax
   140009771:	00 66 63             	add    BYTE PTR [rsi+0x63],ah
   140009774:	6c                   	ins    BYTE PTR es:[rdi],dx
   140009775:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140009776:	73 65                	jae    1400097dd <.idata$7+0x1>
	...

000000014000977a <.idata$6>:
   14000977a:	9c                   	pushf
   14000977b:	00 66 6f             	add    BYTE PTR [rsi+0x6f],ah
   14000977e:	70 65                	jo     1400097e5 <.idata$7+0x1>
   140009780:	6e                   	outs   dx,BYTE PTR ds:[rsi]
	...

0000000140009782 <.idata$6>:
   140009782:	a9 00 66 77 72       	test   eax,0x72776600
   140009787:	69 74 65 00 00   	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x7300a800
   14000978e:	 

000000014000978c <.idata$6>:
   14000978c:	a8 00                	test   al,0x0
   14000978e:	73 74                	jae    140009804 <__lib64_libkernel32_a_iname+0x8>
   140009790:	72 6c                	jb     1400097fe <__lib64_libkernel32_a_iname+0x2>
   140009792:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
	...

0000000140009796 <.idata$6>:
   140009796:	ab                   	stos   DWORD PTR es:[rdi],eax
   140009797:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
   14000979a:	72 6e                	jb     14000980a <__lib64_libkernel32_a_iname+0xe>
   14000979c:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
	...

00000001400097a0 <.idata$6>:
   1400097a0:	09 00                	or     DWORD PTR [rax],eax
   1400097a2:	5f                   	pop    rdi
   1400097a3:	5f                   	pop    rdi
   1400097a4:	64 61                	fs (bad)
   1400097a6:	79 6c                	jns    140009814 <__lib64_libapi_ms_win_crt_environment_l1_1_0_a_iname>
   1400097a8:	69 67 68 74 00 00  	imul   esp,DWORD PTR [rdi+0x68],0xb000074

00000001400097ae <.idata$6>:
   1400097ae:	0b 00                	or     eax,DWORD PTR [rax]
   1400097b0:	5f                   	pop    rdi
   1400097b1:	5f                   	pop    rdi
   1400097b2:	74 69                	je     14000981d <__lib64_libapi_ms_win_crt_environment_l1_1_0_a_iname+0x9>
   1400097b4:	6d                   	ins    DWORD PTR es:[rdi],dx
   1400097b5:	65 7a 6f             	gs jp  140009827 <__lib64_libapi_ms_win_crt_environment_l1_1_0_a_iname+0x13>
   1400097b8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400097b9:	65 00 00             	add    BYTE PTR gs:[rax],al

00000001400097bc <.idata$6>:
   1400097bc:	0c 00                	or     al,0x0
   1400097be:	5f                   	pop    rdi
   1400097bf:	5f                   	pop    rdi
   1400097c0:	74 7a                	je     14000983c <.idata$7>
   1400097c2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   1400097c3:	61                   	(bad)
   1400097c4:	6d                   	ins    DWORD PTR es:[rdi],dx
   1400097c5:	65 00 00             	add    BYTE PTR gs:[rax],al

00000001400097c8 <.idata$6>:
   1400097c8:	3c 00                	cmp    al,0x0
   1400097ca:	5f                   	pop    rdi
   1400097cb:	74 7a                	je     140009847 <.idata$7+0x3>
   1400097cd:	73 65                	jae    140009834 <__lib64_libapi_ms_win_crt_environment_l1_1_0_a_iname+0x20>
   1400097cf:	74 00                	je     1400097d1 <.idata$6+0x9>
   1400097d1:	00 00                	add    BYTE PTR [rax],al
	...

00000001400097d4 <.idata$7>:
   1400097d4:	00 90 00 00      	add    BYTE PTR [rax-0x70000000],dl

00000001400097d8 <.idata$7>:
   1400097d8:	00 90 00 00      	add    BYTE PTR [rax-0x70000000],dl

00000001400097dc <.idata$7>:
   1400097dc:	00 90 00 00      	add    BYTE PTR [rax-0x70000000],dl

00000001400097e0 <.idata$7>:
   1400097e0:	00 90 00 00      	add    BYTE PTR [rax-0x70000000],dl

00000001400097e4 <.idata$7>:
   1400097e4:	00 90 00 00      	add    BYTE PTR [rax-0x70000000],dl

00000001400097e8 <.idata$7>:
   1400097e8:	00 90 00 00      	add    BYTE PTR [rax-0x70000000],dl

00000001400097ec <.idata$7>:
   1400097ec:	00 90 00 00      	add    BYTE PTR [rax-0x70000000],dl

00000001400097f0 <.idata$7>:
   1400097f0:	00 90 00 00      	add    BYTE PTR [rax-0x70000000],dl

00000001400097f4 <.idata$7>:
   1400097f4:	00 90 00 00      	add    BYTE PTR [rax-0x70000000],dl

00000001400097f8 <.idata$7>:
   1400097f8:	00 90 00 00      	add    BYTE PTR [rax+0x454b0000],dl

00000001400097fc <__lib64_libkernel32_a_iname>:
   1400097fc:	4b                   	rex.WXB
   1400097fd:	45 52                	rex.RB push r10
   1400097ff:	4e                   	rex.WRX
   140009800:	45                   	rex.RB
   140009801:	4c 33 32             	xor    r14,QWORD PTR [rdx]
   140009804:	2e 64 6c             	cs fs ins BYTE PTR es:[rdi],dx
   140009807:	6c                   	ins    BYTE PTR es:[rdi],dx
   140009808:	00 00                	add    BYTE PTR [rax],al
	...

000000014000980c <.idata$7>:
   14000980c:	14 90                	adc    al,0x90
	...

0000000140009810 <.idata$7>:
   140009810:	14 90                	adc    al,0x90
	...

0000000140009814 <__lib64_libapi_ms_win_crt_environment_l1_1_0_a_iname>:
   140009814:	61                   	(bad)
   140009815:	70 69                	jo     140009880 <__lib64_libapi_ms_win_crt_math_l1_1_0_a_iname+0xc>
   140009817:	2d 6d 73 2d 77       	sub    eax,0x772d736d
   14000981c:	69 6e 2d 63 72 74 2d 	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   140009823:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   140009825:	76 69                	jbe    140009890 <__lib64_libapi_ms_win_crt_math_l1_1_0_a_iname+0x1c>
   140009827:	72 6f                	jb     140009898 <.idata$7>
   140009829:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000982a:	6d                   	ins    DWORD PTR es:[rdi],dx
   14000982b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
   14000982d:	74 2d                	je     14000985c <__lib64_libapi_ms_win_crt_heap_l1_1_0_a_iname+0xc>
   14000982f:	6c                   	ins    BYTE PTR es:[rdi],dx
   140009830:	31 2d 31 2d 30 2e    	xor    DWORD PTR [rip+0x2e302d31],ebp        # 16e30c567 <.debug_line_str+0x2e2f83ee>
   140009836:	64 6c                	fs ins BYTE PTR es:[rdi],dx
   140009838:	6c                   	ins    BYTE PTR es:[rdi],dx
   140009839:	00 00                	add    BYTE PTR [rax],al
	...

000000014000983c <.idata$7>:
   14000983c:	28 90 00 00      	sub    BYTE PTR [rax-0x6fd80000],dl

0000000140009840 <.idata$7>:
   140009840:	28 90 00 00      	sub    BYTE PTR [rax-0x6fd80000],dl

0000000140009844 <.idata$7>:
   140009844:	28 90 00 00      	sub    BYTE PTR [rax-0x6fd80000],dl

0000000140009848 <.idata$7>:
   140009848:	28 90 00 00      	sub    BYTE PTR [rax-0x6fd80000],dl

000000014000984c <.idata$7>:
   14000984c:	28 90 00 00      	sub    BYTE PTR [rax+0x70610000],dl

0000000140009850 <__lib64_libapi_ms_win_crt_heap_l1_1_0_a_iname>:
   140009850:	61                   	(bad)
   140009851:	70 69                	jo     1400098bc <__lib64_libapi_ms_win_crt_private_l1_1_0_a_iname+0x20>
   140009853:	2d 6d 73 2d 77       	sub    eax,0x772d736d
   140009858:	69 6e 2d 63 72 74 2d 	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   14000985f:	68 65 61 70 2d       	push   0x2d706165
   140009864:	6c                   	ins    BYTE PTR es:[rdi],dx
   140009865:	31 2d 31 2d 30 2e    	xor    DWORD PTR [rip+0x2e302d31],ebp        # 16e30c59c <.debug_line_str+0x2e2f8423>
   14000986b:	64 6c                	fs ins BYTE PTR es:[rdi],dx
   14000986d:	6c                   	ins    BYTE PTR es:[rdi],dx
	...

0000000140009870 <.idata$7>:
   140009870:	3c 90                	cmp    al,0x90
	...

0000000140009874 <__lib64_libapi_ms_win_crt_math_l1_1_0_a_iname>:
   140009874:	61                   	(bad)
   140009875:	70 69                	jo     1400098e0 <.idata$7>
   140009877:	2d 6d 73 2d 77       	sub    eax,0x772d736d
   14000987c:	69 6e 2d 63 72 74 2d 	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   140009883:	6d                   	ins    DWORD PTR es:[rdi],dx
   140009884:	61                   	(bad)
   140009885:	74 68                	je     1400098ef <.idata$7+0x3>
   140009887:	2d 6c 31 2d 31       	sub    eax,0x312d316c
   14000988c:	2d 30 2e 64 6c       	sub    eax,0x6c642e30
   140009891:	6c                   	ins    BYTE PTR es:[rdi],dx
	...

0000000140009894 <.idata$7>:
   140009894:	50                   	push   rax
   140009895:	90                   	nop
	...

0000000140009898 <.idata$7>:
   140009898:	50                   	push   rax
   140009899:	90                   	nop
	...

000000014000989c <__lib64_libapi_ms_win_crt_private_l1_1_0_a_iname>:
   14000989c:	61                   	(bad)
   14000989d:	70 69                	jo     140009908 <__lib64_libapi_ms_win_crt_runtime_l1_1_0_a_iname+0x4>
   14000989f:	2d 6d 73 2d 77       	sub    eax,0x772d736d
   1400098a4:	69 6e 2d 63 72 74 2d 	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   1400098ab:	70 72                	jo     14000991f <__lib64_libapi_ms_win_crt_runtime_l1_1_0_a_iname+0x1b>
   1400098ad:	69 76 61 74 65 2d 6c 	imul   esi,DWORD PTR [rsi+0x61],0x6c2d6574
   1400098b4:	31 2d 31 2d 30 2e    	xor    DWORD PTR [rip+0x2e302d31],ebp        # 16e30c5eb <.debug_line_str+0x2e2f8472>
   1400098ba:	64 6c                	fs ins BYTE PTR es:[rdi],dx
   1400098bc:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400098bd:	00 00                	add    BYTE PTR [rax],al
	...

00000001400098c0 <.idata$7>:
   1400098c0:	64 90                	fs nop
	...

00000001400098c4 <.idata$7>:
   1400098c4:	64 90                	fs nop
	...

00000001400098c8 <.idata$7>:
   1400098c8:	64 90                	fs nop
	...

00000001400098cc <.idata$7>:
   1400098cc:	64 90                	fs nop
	...

00000001400098d0 <.idata$7>:
   1400098d0:	64 90                	fs nop
	...

00000001400098d4 <.idata$7>:
   1400098d4:	64 90                	fs nop
	...

00000001400098d8 <.idata$7>:
   1400098d8:	64 90                	fs nop
	...

00000001400098dc <.idata$7>:
   1400098dc:	64 90                	fs nop
	...

00000001400098e0 <.idata$7>:
   1400098e0:	64 90                	fs nop
	...

00000001400098e4 <.idata$7>:
   1400098e4:	64 90                	fs nop
	...

00000001400098e8 <.idata$7>:
   1400098e8:	64 90                	fs nop
	...

00000001400098ec <.idata$7>:
   1400098ec:	64 90                	fs nop
	...

00000001400098f0 <.idata$7>:
   1400098f0:	64 90                	fs nop
	...

00000001400098f4 <.idata$7>:
   1400098f4:	64 90                	fs nop
	...

00000001400098f8 <.idata$7>:
   1400098f8:	64 90                	fs nop
	...

00000001400098fc <.idata$7>:
   1400098fc:	64 90                	fs nop
	...

0000000140009900 <.idata$7>:
   140009900:	64 90                	fs nop
	...

0000000140009904 <__lib64_libapi_ms_win_crt_runtime_l1_1_0_a_iname>:
   140009904:	61                   	(bad)
   140009905:	70 69                	jo     140009970 <__lib64_libapi_ms_win_crt_string_l1_1_0_a_iname>
   140009907:	2d 6d 73 2d 77       	sub    eax,0x772d736d
   14000990c:	69 6e 2d 63 72 74 2d 	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   140009913:	72 75                	jb     14000998a <__lib64_libapi_ms_win_crt_string_l1_1_0_a_iname+0x1a>
   140009915:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140009916:	74 69                	je     140009981 <__lib64_libapi_ms_win_crt_string_l1_1_0_a_iname+0x11>
   140009918:	6d                   	ins    DWORD PTR es:[rdi],dx
   140009919:	65 2d 6c 31 2d 31    	gs sub eax,0x312d316c
   14000991f:	2d 30 2e 64 6c       	sub    eax,0x6c642e30
   140009924:	6c                   	ins    BYTE PTR es:[rdi],dx
   140009925:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009928 <.idata$7>:
   140009928:	78 90                	js     1400098ba <__lib64_libapi_ms_win_crt_private_l1_1_0_a_iname+0x1e>
	...

000000014000992c <.idata$7>:
   14000992c:	78 90                	js     1400098be <__lib64_libapi_ms_win_crt_private_l1_1_0_a_iname+0x22>
	...

0000000140009930 <.idata$7>:
   140009930:	78 90                	js     1400098c2 <.idata$7+0x2>
	...

0000000140009934 <.idata$7>:
   140009934:	78 90                	js     1400098c6 <.idata$7+0x2>
	...

0000000140009938 <.idata$7>:
   140009938:	78 90                	js     1400098ca <.idata$7+0x2>
	...

000000014000993c <.idata$7>:
   14000993c:	78 90                	js     1400098ce <.idata$7+0x2>
	...

0000000140009940 <.idata$7>:
   140009940:	78 90                	js     1400098d2 <.idata$7+0x2>
	...

0000000140009944 <.idata$7>:
   140009944:	78 90                	js     1400098d6 <.idata$7+0x2>
	...

0000000140009948 <__lib64_libapi_ms_win_crt_stdio_l1_1_0_a_iname>:
   140009948:	61                   	(bad)
   140009949:	70 69                	jo     1400099b4 <__lib64_libapi_ms_win_crt_time_l1_1_0_a_iname+0x10>
   14000994b:	2d 6d 73 2d 77       	sub    eax,0x772d736d
   140009950:	69 6e 2d 63 72 74 2d 	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   140009957:	73 74                	jae    1400099cd <__lib64_libapi_ms_win_crt_time_l1_1_0_a_iname+0x29>
   140009959:	64 69 6f 2d 6c 31 2d 	imul   ebp,DWORD PTR fs:[rdi+0x2d],0x312d316c
   140009960:	31 
   140009961:	2d 30 2e 64 6c       	sub    eax,0x6c642e30
   140009966:	6c                   	ins    BYTE PTR es:[rdi],dx
	...

0000000140009968 <.idata$7>:
   140009968:	8c 90 00 00      	mov    WORD PTR [rax-0x6f740000],ss

000000014000996c <.idata$7>:
   14000996c:	8c 90 00 00      	mov    WORD PTR [rax+0x70610000],ss

0000000140009970 <__lib64_libapi_ms_win_crt_string_l1_1_0_a_iname>:
   140009970:	61                   	(bad)
   140009971:	70 69                	jo     1400099dc <__lib64_libapi_ms_win_crt_time_l1_1_0_a_iname+0x38>
   140009973:	2d 6d 73 2d 77       	sub    eax,0x772d736d
   140009978:	69 6e 2d 63 72 74 2d 	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   14000997f:	73 74                	jae    1400099f5 <__lib64_libapi_ms_win_crt_time_l1_1_0_a_iname+0x51>
   140009981:	72 69                	jb     1400099ec <__lib64_libapi_ms_win_crt_time_l1_1_0_a_iname+0x48>
   140009983:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140009984:	67 2d 6c 31 2d 31    	addr32 sub eax,0x312d316c
   14000998a:	2d 30 2e 64 6c       	sub    eax,0x6c642e30
   14000998f:	6c                   	ins    BYTE PTR es:[rdi],dx
   140009990:	00 00                	add    BYTE PTR [rax],al
	...

0000000140009994 <.idata$7>:
   140009994:	a0 90 00 00    	movabs al,ds:0xa0000090a0000090
   14000999b:	  

0000000140009998 <.idata$7>:
   140009998:	a0 90 00 00    	movabs al,ds:0xa0000090a0000090
   14000999f:	  

000000014000999c <.idata$7>:
   14000999c:	a0 90 00 00    	movabs al,ds:0x61000090a0000090
   1400099a3:	  

00000001400099a0 <.idata$7>:
   1400099a0:	a0 90 00 00    	movabs al,ds:0x6d2d697061000090
   1400099a7:	  

00000001400099a4 <__lib64_libapi_ms_win_crt_time_l1_1_0_a_iname>:
   1400099a4:	61                   	(bad)
   1400099a5:	70 69                	jo     140009a10 <__lib64_libapi_ms_win_crt_time_l1_1_0_a_iname+0x6c>
   1400099a7:	2d 6d 73 2d 77       	sub    eax,0x772d736d
   1400099ac:	69 6e 2d 63 72 74 2d 	imul   ebp,DWORD PTR [rsi+0x2d],0x2d747263
   1400099b3:	74 69                	je     140009a1e <__lib64_libapi_ms_win_crt_time_l1_1_0_a_iname+0x7a>
   1400099b5:	6d                   	ins    DWORD PTR es:[rdi],dx
   1400099b6:	65 2d 6c 31 2d 31    	gs sub eax,0x312d316c
   1400099bc:	2d 30 2e 64 6c       	sub    eax,0x6c642e30
   1400099c1:	6c                   	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .CRT:

000000014000a000 <___crt_xc_start__>:
	...

000000014000a008 <__mingw_pcppinit>:
   14000a008:	30 11                	xor    BYTE PTR [rcx],dl
   14000a00a:	00 40 01             	add    BYTE PTR [rax+0x1],al
   14000a00d:	00 00                	add    BYTE PTR [rax],al
	...

000000014000a010 <__xc_z>:
	...

000000014000a018 <___crt_xc_end__>:
	...

000000014000a020 <__mingw_pcinit>:
   14000a020:	10 10                	adc    BYTE PTR [rax],dl
   14000a022:	00 40 01             	add    BYTE PTR [rax+0x1],al
   14000a025:	00 00                	add    BYTE PTR [rax],al
	...

000000014000a028 <__xi_z>:
	...

000000014000a030 <___crt_xi_end__>:
	...

000000014000a038 <__xl_c>:
   14000a038:	20 1c 00             	and    BYTE PTR [rax+rax*1],bl
   14000a03b:	40 01 00             	rex add DWORD PTR [rax],eax
	...

000000014000a040 <__xl_d>:
   14000a040:	f0 1b 00             	lock sbb eax,DWORD PTR [rax]
   14000a043:	40 01 00             	rex add DWORD PTR [rax],eax
	...

000000014000a048 <__xl_z>:
	...

000000014000a050 <___crt_xp_end__>:
	...

000000014000a058 <__xd_z>:
	...

Disassembly of section .tls:

000000014000b000 <___tls_start__>:
	...

000000014000b008 <_tls_end>:
	...

Disassembly of section .reloc:

000000014000c000 <.reloc>:
   14000c000:	00 30                	add    BYTE PTR [rax],dh
   14000c002:	00 00                	add    BYTE PTR [rax],al
   14000c004:	0c 00                	or     al,0x0
   14000c006:	00 00                	add    BYTE PTR [rax],al
   14000c008:	18 a0 00 00 00 40    	sbb    BYTE PTR [rax+0x40000000],ah
   14000c00e:	00 00                	add    BYTE PTR [rax],al
   14000c010:	2c 00                	sub    al,0x0
   14000c012:	00 00                	add    BYTE PTR [rax],al
   14000c014:	00 a0 50 a0 60 a0    	add    BYTE PTR [rax-0x5f9f5fb0],ah
   14000c01a:	70 a0                	jo     14000bfbc <___tls_end__+0xfac>
   14000c01c:	78 a0                	js     14000bfbe <___tls_end__+0xfae>
   14000c01e:	80 a0 88 a0 90 a0 98 	and    BYTE PTR [rax-0x5f6f5f78],0x98
   14000c025:	a0 a0 a0 a8 a0 b0 a0 	movabs al,ds:0xa0b8a0b0a0a8a0a0
   14000c02c:	b8 a0 
   14000c02e:	c0 a0 d0 a0 d8 a0 e8 	shl    BYTE PTR [rax-0x5f275f30],0xe8
   14000c035:	a0 f0 a0 00 50 00 00 	movabs al,ds:0x4c00005000a0f0
   14000c03c:	4c 00 
   14000c03e:	00 00                	add    BYTE PTR [rax],al
   14000c040:	00 a1 20 a1 28 a1    	add    BYTE PTR [rcx-0x5ed75ee0],ah
   14000c046:	30 a1 38 a1 50 a4    	xor    BYTE PTR [rcx-0x5baf5ec8],ah
   14000c04c:	60                   	(bad)
   14000c04d:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14000c04e:	70 a4                	jo     14000bff4 <___tls_end__+0xfe4>
   14000c050:	80 a4 90 a4 a0 a4 b0 	and    BYTE PTR [rax+rdx*4-0x4f5b5f5c],0xa4
   14000c057:	a4 
   14000c058:	c0 a4 d0 a4 e0 a4 f0 	shl    BYTE PTR [rax+rdx*8-0xf5b1f5c],0xa4
   14000c05f:	a4 
   14000c060:	00 a5 10 a5 20 a5    	add    BYTE PTR [rbp-0x5adf5af0],ah
   14000c066:	30 a5 40 a5 50 a5    	xor    BYTE PTR [rbp-0x5aaf5ac0],ah
   14000c06c:	60                   	(bad)
   14000c06d:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c06e:	70 a5                	jo     14000c015 <.reloc+0x15>
   14000c070:	80 a5 90 a5 a0 a5 b0 	and    BYTE PTR [rbp-0x5a5f5a70],0xb0
   14000c077:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c078:	c0 a5 d0 a5 e0 a5 f0 	shl    BYTE PTR [rbp-0x5a1f5a30],0xf0
   14000c07f:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14000c080:	00 a6 10 a6 00 a0    	add    BYTE PTR [rsi-0x5fff59f0],ah
   14000c086:	00 00                	add    BYTE PTR [rax],al
   14000c088:	10 00                	adc    BYTE PTR [rax],al
   14000c08a:	00 00                	add    BYTE PTR [rax],al
   14000c08c:	08 a0 20 a0 38 a0    	or     BYTE PTR [rax-0x5fc75fe0],ah
   14000c092:	40                   	rex
   14000c093:	a0                   	.byte 0xa0

Disassembly of section .debug_aranges:

000000014000d000 <.debug_aranges>:
   14000d000:	2c 00                	sub    al,0x0
   14000d002:	00 00                	add    BYTE PTR [rax],al
   14000d004:	02 00                	add    al,BYTE PTR [rax]
   14000d006:	00 00                	add    BYTE PTR [rax],al
   14000d008:	00 00                	add    BYTE PTR [rax],al
   14000d00a:	08 00                	or     BYTE PTR [rax],al
   14000d00c:	00 00                	add    BYTE PTR [rax],al
   14000d00e:	00 00                	add    BYTE PTR [rax],al
   14000d010:	50                   	push   rax
   14000d011:	14 00                	adc    al,0x0
   14000d013:	40 01 00             	rex add DWORD PTR [rax],eax
   14000d016:	00 00                	add    BYTE PTR [rax],al
   14000d018:	6b 00 00             	imul   eax,DWORD PTR [rax],0x0
	...

000000014000d030 <.debug_aranges>:
   14000d030:	2c 00                	sub    al,0x0
   14000d032:	00 00                	add    BYTE PTR [rax],al
   14000d034:	02 00                	add    al,BYTE PTR [rax]
   14000d036:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000d037:	02 00                	add    al,BYTE PTR [rax]
   14000d039:	00 08                	add    BYTE PTR [rax],cl
   14000d03b:	00 00                	add    BYTE PTR [rax],al
   14000d03d:	00 00                	add    BYTE PTR [rax],al
   14000d03f:	00 90 2b 00 40 01    	add    BYTE PTR [rax+0x140002b],dl
   14000d045:	00 00                	add    BYTE PTR [rax],al
   14000d047:	00 32                	add    BYTE PTR [rdx],dh
	...

000000014000d060 <.debug_aranges>:
   14000d060:	1c 00                	sbb    al,0x0
   14000d062:	00 00                	add    BYTE PTR [rax],al
   14000d064:	02 00                	add    al,BYTE PTR [rax]
   14000d066:	97                   	xchg   edi,eax
   14000d067:	02 00                	add    al,BYTE PTR [rax]
   14000d069:	00 08                	add    BYTE PTR [rax],cl
	...

Disassembly of section .debug_info:

000000014000e000 <.debug_info>:
   14000e000:	6b 02 00             	imul   eax,DWORD PTR [rdx],0x0
   14000e003:	00 05 00 01 08 00    	add    BYTE PTR [rip+0x80100],al        # 14008e109 <.debug_line_str+0x79f90>
   14000e009:	00 00                	add    BYTE PTR [rax],al
   14000e00b:	00 09                	add    BYTE PTR [rcx],cl
   14000e00d:	47                   	rex.RXB
   14000e00e:	4e 55                	rex.WRX push rbp
   14000e010:	20 43 31             	and    BYTE PTR [rbx+0x31],al
   14000e013:	37                   	(bad)
   14000e014:	20 31                	and    BYTE PTR [rcx],dh
   14000e016:	33 2e                	xor    ebp,DWORD PTR [rsi]
   14000e018:	32 2e                	xor    ch,BYTE PTR [rsi]
   14000e01a:	30 20                	xor    BYTE PTR [rax],ah
   14000e01c:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
   14000e021:	65 3d 63 6f 72 65    	gs cmp eax,0x65726f63
   14000e027:	32 20                	xor    ah,BYTE PTR [rax]
   14000e029:	2d 6d 61 72 63       	sub    eax,0x6372616d
   14000e02e:	68 3d 6e 6f 63       	push   0x636f6e3d
   14000e033:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000e034:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000e035:	61                   	(bad)
   14000e036:	20 2d 67 00 1d 31    	and    BYTE PTR [rip+0x311d0067],ch        # 1711de0a3 <.debug_line_str+0x311c9f2a>
   14000e03c:	00 00                	add    BYTE PTR [rax],al
   14000e03e:	00 00                	add    BYTE PTR [rax],al
   14000e040:	00 00                	add    BYTE PTR [rax],al
   14000e042:	00 50 14             	add    BYTE PTR [rax+0x14],dl
   14000e045:	00 40 01             	add    BYTE PTR [rax+0x1],al
   14000e048:	00 00                	add    BYTE PTR [rax],al
   14000e04a:	00 6b 00             	add    BYTE PTR [rbx+0x0],ch
	...
   14000e055:	00 00                	add    BYTE PTR [rax],al
   14000e057:	01 01                	add    DWORD PTR [rcx],eax
   14000e059:	06                   	(bad)
   14000e05a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
   14000e05d:	72 00                	jb     14000e05f <.debug_info+0x5f>
   14000e05f:	0a 57 00             	or     dl,BYTE PTR [rdi+0x0]
   14000e062:	00 00                	add    BYTE PTR [rax],al
   14000e064:	01 08                	add    DWORD PTR [rax],ecx
   14000e066:	07                   	(bad)
   14000e067:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000e068:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000e069:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000e06a:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
   14000e06f:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
   14000e073:	73 69                	jae    14000e0de <.debug_info+0xde>
   14000e075:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000e077:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
   14000e07c:	74 00                	je     14000e07e <.debug_info+0x7e>
   14000e07e:	01 08                	add    DWORD PTR [rax],ecx
   14000e080:	05 6c 6f 6e 67       	add    eax,0x676e6f6c
   14000e085:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14000e089:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
   14000e08d:	74 00                	je     14000e08f <.debug_info+0x8f>
   14000e08f:	01 02                	add    DWORD PTR [rdx],eax
   14000e091:	07                   	(bad)
   14000e092:	73 68                	jae    14000e0fc <.debug_info+0xfc>
   14000e094:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000e095:	72 74                	jb     14000e10b <.debug_info+0x10b>
   14000e097:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
   14000e09a:	73 69                	jae    14000e105 <.debug_info+0x105>
   14000e09c:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000e09e:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
   14000e0a3:	74 00                	je     14000e0a5 <.debug_info+0xa5>
   14000e0a5:	01 04 05 69 6e 74 00 	add    DWORD PTR [rax*1+0x746e69],eax
   14000e0ac:	01 04 05 6c 6f 6e 67 	add    DWORD PTR [rax*1+0x676e6f6c],eax
   14000e0b3:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
   14000e0b6:	74 00                	je     14000e0b8 <.debug_info+0xb8>
   14000e0b8:	01 04 07             	add    DWORD PTR [rdi+rax*1],eax
   14000e0bb:	75 6e                	jne    14000e12b <.debug_info+0x12b>
   14000e0bd:	73 69                	jae    14000e128 <.debug_info+0x128>
   14000e0bf:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000e0c1:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
   14000e0c6:	74 00                	je     14000e0c8 <.debug_info+0xc8>
   14000e0c8:	0b 08                	or     ecx,DWORD PTR [rax]
   14000e0ca:	02 65 72             	add    ah,BYTE PTR [rbp+0x72]
   14000e0cd:	72 00                	jb     14000e0cf <.debug_info+0xcf>
   14000e0cf:	02 04 0d a5 00 00 00 	add    al,BYTE PTR [rcx*1+0xa5]
   14000e0d6:	02 4c 49 53          	add    cl,BYTE PTR [rcx+rcx*2+0x53]
   14000e0da:	54                   	push   rsp
   14000e0db:	00 03                	add    BYTE PTR [rbx],al
   14000e0dd:	04 1c                	add    al,0x1c
   14000e0df:	e3 00                	jrcxz  14000e0e1 <.debug_info+0xe1>
   14000e0e1:	00 00                	add    BYTE PTR [rax],al
   14000e0e3:	06                   	(bad)
   14000e0e4:	74 61                	je     14000e147 <.debug_info+0x147>
   14000e0e6:	67 4c                	addr32 rex.WR
   14000e0e8:	49 53                	rex.WB push r11
   14000e0ea:	54                   	push   rsp
   14000e0eb:	00 0a                	add    BYTE PTR [rdx],cl
   14000e0ed:	18 01                	sbb    BYTE PTR [rcx],al
   14000e0ef:	00 00                	add    BYTE PTR [rax],al
   14000e0f1:	03 6c 65 6e          	add    ebp,DWORD PTR [rbp+riz*2+0x6e]
   14000e0f5:	67 74 68             	addr32 je 14000e160 <.debug_info+0x160>
   14000e0f8:	00 0c ac             	add    BYTE PTR [rsp+rbp*4],cl
   14000e0fb:	00 00                	add    BYTE PTR [rax],al
   14000e0fd:	00 00                	add    BYTE PTR [rax],al
   14000e0ff:	03 62 65             	add    esp,DWORD PTR [rdx+0x65]
   14000e102:	67 69 6e 00 0d 8d 01 	imul   ebp,DWORD PTR [esi+0x0],0x18d0d
   14000e109:	00 
   14000e10a:	00 08                	add    BYTE PTR [rax],cl
   14000e10c:	03 65 6e             	add    esp,DWORD PTR [rbp+0x6e]
   14000e10f:	64 00 0e             	add    BYTE PTR fs:[rsi],cl
   14000e112:	8d 01                	lea    eax,[rcx]
   14000e114:	00 00                	add    BYTE PTR [rax],al
   14000e116:	10 00                	adc    BYTE PTR [rax],al
   14000e118:	02 4c 49 53          	add    cl,BYTE PTR [rcx+rcx*2+0x53]
   14000e11c:	54                   	push   rsp
   14000e11d:	4e                   	rex.WRX
   14000e11e:	4f                   	rex.WRXB
   14000e11f:	44                   	rex.R
   14000e120:	45 00 03             	add    BYTE PTR [r11],r8b
   14000e123:	05 1c 29 01 00       	add    eax,0x1291c
   14000e128:	00 06                	add    BYTE PTR [rsi],al
   14000e12a:	74 61                	je     14000e18d <.debug_info+0x18d>
   14000e12c:	67 4c                	addr32 rex.WR
   14000e12e:	49 53                	rex.WB push r11
   14000e130:	54                   	push   rsp
   14000e131:	4e                   	rex.WRX
   14000e132:	4f                   	rex.WRXB
   14000e133:	44                   	rex.R
   14000e134:	45 00 11             	add    BYTE PTR [r9],r10b
   14000e137:	60                   	(bad)
   14000e138:	01 00                	add    DWORD PTR [rax],eax
   14000e13a:	00 03                	add    BYTE PTR [rbx],al
   14000e13c:	69 74 65 6d 00 13 80 	imul   esi,DWORD PTR [rbp+riz*2+0x6d],0x1801300
   14000e143:	01 
   14000e144:	00 00                	add    BYTE PTR [rax],al
   14000e146:	00 03                	add    BYTE PTR [rbx],al
   14000e148:	70 72                	jo     14000e1bc <.debug_info+0x1bc>
   14000e14a:	65 76 00             	gs jbe 14000e14d <.debug_info+0x14d>
   14000e14d:	14 8d                	adc    al,0x8d
   14000e14f:	01 00                	add    DWORD PTR [rax],eax
   14000e151:	00 08                	add    BYTE PTR [rax],cl
   14000e153:	03 6e 65             	add    ebp,DWORD PTR [rsi+0x65]
   14000e156:	78 74                	js     14000e1cc <.debug_info+0x1cc>
   14000e158:	00 15 8d 01 00 00    	add    BYTE PTR [rip+0x18d],dl        # 14000e2eb <.debug_info+0x54>
   14000e15e:	10 00                	adc    BYTE PTR [rax],al
   14000e160:	02 4c 69 73          	add    cl,BYTE PTR [rcx+rbp*2+0x73]
   14000e164:	74 00                	je     14000e166 <.debug_info+0x166>
   14000e166:	03 06                	add    eax,DWORD PTR [rsi]
   14000e168:	0f 6d                	(bad)
   14000e16a:	01 00                	add    DWORD PTR [rax],eax
   14000e16c:	00 05 d6 00 00 00    	add    BYTE PTR [rip+0xd6],al        # 14000e248 <.debug_info+0x248>
   14000e172:	02 49 6e             	add    cl,BYTE PTR [rcx+0x6e]
   14000e175:	64 65 78 00          	fs gs js 14000e179 <.debug_info+0x179>
   14000e179:	03 07                	add    eax,DWORD PTR [rdi]
   14000e17b:	0f ac 00 00          	shrd   DWORD PTR [rax],eax,0x0
   14000e17f:	00 02                	add    BYTE PTR [rdx],al
   14000e181:	49 74 65             	rex.WB je 14000e1e9 <.debug_info+0x1e9>
   14000e184:	6d                   	ins    DWORD PTR es:[rdi],dx
   14000e185:	00 03                	add    BYTE PTR [rbx],al
   14000e187:	08 0f                	or     BYTE PTR [rdi],cl
   14000e189:	c8 00 00 00          	enter  0x0,0x0
   14000e18d:	05 18 01 00 00       	add    eax,0x118
   14000e192:	01 10                	add    DWORD PTR [rax],edx
   14000e194:	04 6c                	add    al,0x6c
   14000e196:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000e197:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000e198:	67 20 64 6f 75       	and    BYTE PTR [edi+ebp*2+0x75],ah
   14000e19d:	62                   	(bad)
   14000e19e:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000e19f:	65 00 0c 77          	add    BYTE PTR gs:[rdi+rsi*2],cl
   14000e1a3:	72 61                	jb     14000e206 <.debug_info+0x206>
   14000e1a5:	70 5f                	jo     14000e206 <.debug_info+0x206>
   14000e1a7:	61                   	(bad)
   14000e1a8:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000e1a9:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000e1aa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000e1ab:	63 5f 66             	movsxd ebx,DWORD PTR [rdi+0x66]
   14000e1ae:	69 6e 69 00 05 0b 06 	imul   ebp,DWORD PTR [rsi+0x69],0x60b0500
   14000e1b5:	07                   	(bad)
   14000e1b6:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000e1b7:	69 73 74 44 65 6c 65 	imul   esi,DWORD PTR [rbx+0x74],0x656c6544
   14000e1be:	74 65                	je     14000e225 <.debug_info+0x225>
   14000e1c0:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
   14000e1c3:	09 ce                	or     esi,ecx
   14000e1c5:	01 00                	add    DWORD PTR [rax],eax
   14000e1c7:	00 04 60             	add    BYTE PTR [rax+riz*2],al
   14000e1ca:	01 00                	add    DWORD PTR [rax],eax
   14000e1cc:	00 00                	add    BYTE PTR [rax],al
   14000e1ce:	08 6c 69 73          	or     BYTE PTR [rcx+rbp*2+0x73],ch
   14000e1d2:	74 44                	je     14000e218 <.debug_info+0x218>
   14000e1d4:	65 6c                	gs ins BYTE PTR es:[rdi],dx
   14000e1d6:	00 0a                	add    BYTE PTR [rdx],cl
   14000e1d8:	ca 00 00             	retf   0x0
   14000e1db:	00 eb                	add    bl,ch
   14000e1dd:	01 00                	add    DWORD PTR [rax],eax
   14000e1df:	00 04 60             	add    BYTE PTR [rax+riz*2],al
   14000e1e2:	01 00                	add    DWORD PTR [rax],eax
   14000e1e4:	00 04 72             	add    BYTE PTR [rdx+rsi*2],al
   14000e1e7:	01 00                	add    DWORD PTR [rax],eax
   14000e1e9:	00 00                	add    BYTE PTR [rax],al
   14000e1eb:	08 6c 69 73          	or     BYTE PTR [rcx+rbp*2+0x73],ch
   14000e1ef:	74 41                	je     14000e232 <.debug_info+0x232>
   14000e1f1:	64 64 00 09          	fs add BYTE PTR fs:[rcx],cl
   14000e1f5:	ca 00 00             	retf   0x0
   14000e1f8:	00 08                	add    BYTE PTR [rax],cl
   14000e1fa:	02 00                	add    al,BYTE PTR [rax]
   14000e1fc:	00 04 60             	add    BYTE PTR [rax+riz*2],al
   14000e1ff:	01 00                	add    DWORD PTR [rax],eax
   14000e201:	00 04 80             	add    BYTE PTR [rax+rax*4],al
   14000e204:	01 00                	add    DWORD PTR [rax],eax
   14000e206:	00 00                	add    BYTE PTR [rax],al
   14000e208:	0d 6c 69 73 74       	or     eax,0x7473696c
   14000e20d:	43 72 65             	rex.XB jb 14000e275 <.debug_info+0x6>
   14000e210:	61                   	(bad)
   14000e211:	74 65                	je     14000e278 <.debug_info+0x9>
   14000e213:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
   14000e216:	09 60 01             	or     DWORD PTR [rax+0x1],esp
   14000e219:	00 00                	add    BYTE PTR [rax],al
   14000e21b:	07                   	(bad)
   14000e21c:	77 72                	ja     14000e290 <.debug_info+0x21>
   14000e21e:	61                   	(bad)
   14000e21f:	70 5f                	jo     14000e280 <.debug_info+0x11>
   14000e221:	61                   	(bad)
   14000e222:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000e223:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000e224:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000e225:	63 5f 69             	movsxd ebx,DWORD PTR [rdi+0x69]
   14000e228:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000e229:	69 74 00 05 0a 06 39 	imul   esi,DWORD PTR [rax+rax*1+0x5],0x239060a
   14000e230:	02 
   14000e231:	00 00                	add    BYTE PTR [rax],al
   14000e233:	04 39                	add    al,0x39
   14000e235:	02 00                	add    al,BYTE PTR [rax]
   14000e237:	00 00                	add    BYTE PTR [rax],al
   14000e239:	05 5f 00 00 00       	add    eax,0x5f
   14000e23e:	0e                   	(bad)
   14000e23f:	6d                   	ins    DWORD PTR es:[rdi],dx
   14000e240:	61                   	(bad)
   14000e241:	69 6e 00 01 04 05 a5 	imul   ebp,DWORD PTR [rsi+0x0],0xa5050401
   14000e248:	00 00                	add    BYTE PTR [rax],al
   14000e24a:	00 50 14             	add    BYTE PTR [rax+0x14],dl
   14000e24d:	00 40 01             	add    BYTE PTR [rax+0x1],al
   14000e250:	00 00                	add    BYTE PTR [rax],al
   14000e252:	00 6b 00             	add    BYTE PTR [rbx+0x0],ch
   14000e255:	00 00                	add    BYTE PTR [rax],al
   14000e257:	00 00                	add    BYTE PTR [rax],al
   14000e259:	00 00                	add    BYTE PTR [rax],al
   14000e25b:	01 9c 0f 6c 69 73 74 	add    DWORD PTR [rdi+rcx*1+0x7473696c],ebx
   14000e262:	00 01                	add    BYTE PTR [rcx],al
   14000e264:	08 08                	or     BYTE PTR [rax],cl
   14000e266:	60                   	(bad)
   14000e267:	01 00                	add    DWORD PTR [rax],eax
   14000e269:	00 02                	add    BYTE PTR [rdx],al
   14000e26b:	91                   	xchg   ecx,eax
   14000e26c:	68 00 00         	push   0x240000

000000014000e26f <.debug_info>:
   14000e26f:	24 00                	and    al,0x0
   14000e271:	00 00                	add    BYTE PTR [rax],al
   14000e273:	05 00 01 08 f6       	add    eax,0xf6080100
   14000e278:	00 00                	add    BYTE PTR [rax],al
   14000e27a:	00 01                	add    BYTE PTR [rcx],al
   14000e27c:	7f 00                	jg     14000e27e <.debug_info+0xf>
   14000e27e:	00 00                	add    BYTE PTR [rax],al
   14000e280:	90                   	nop
   14000e281:	2b 00                	sub    eax,DWORD PTR [rax]
   14000e283:	40 01 00             	rex add DWORD PTR [rax],eax
   14000e286:	00 00                	add    BYTE PTR [rax],al
   14000e288:	32 00                	xor    al,BYTE PTR [rax]
   14000e28a:	00 00                	add    BYTE PTR [rax],al
   14000e28c:	00 38                	add    BYTE PTR [rax],bh
   14000e28e:	00 00                	add    BYTE PTR [rax],al
   14000e290:	00 97 00 00 00 01    	add    BYTE PTR [rdi+0x1000000],dl
   14000e296:	80       	xor    BYTE PTR [rcx+0x500000f],0x0

000000014000e297 <.debug_info>:
   14000e297:	b1 0f                	mov    cl,0xf
   14000e299:	00 00                	add    BYTE PTR [rax],al
   14000e29b:	05 00 01 08 0a       	add    eax,0xa080100
   14000e2a0:	01 00                	add    DWORD PTR [rax],eax
   14000e2a2:	00 07                	add    BYTE PTR [rdi],al
   14000e2a4:	47                   	rex.RXB
   14000e2a5:	4e 55                	rex.WRX push rbp
   14000e2a7:	20 43 31             	and    BYTE PTR [rbx+0x31],al
   14000e2aa:	37                   	(bad)
   14000e2ab:	20 31                	and    BYTE PTR [rcx],dh
   14000e2ad:	33 2e                	xor    ebp,DWORD PTR [rsi]
   14000e2af:	32 2e                	xor    ch,BYTE PTR [rsi]
   14000e2b1:	30 20                	xor    BYTE PTR [rax],ah
   14000e2b3:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
   14000e2b8:	65 3d 63 6f 72 65    	gs cmp eax,0x65726f63
   14000e2be:	32 20                	xor    ah,BYTE PTR [rax]
   14000e2c0:	2d 6d 61 72 63       	sub    eax,0x6372616d
   14000e2c5:	68 3d 6e 6f 63       	push   0x636f6e3d
   14000e2ca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000e2cb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000e2cc:	61                   	(bad)
   14000e2cd:	20 2d 67 20 2d 67    	and    BYTE PTR [rip+0x672d2067],ch        # 1a72e033a <.debug_line_str+0x672cc1c1>
   14000e2d3:	20 2d 67 20 2d 4f    	and    BYTE PTR [rip+0x4f2d2067],ch        # 18f2e0340 <.debug_line_str+0x4f2cc1c7>
   14000e2d9:	32 20                	xor    ah,BYTE PTR [rax]
   14000e2db:	2d 4f 32 20 2d       	sub    eax,0x2d20324f
   14000e2e0:	4f 32 20             	rex.WRXB xor r12b,BYTE PTR [r8]
   14000e2e3:	2d 66 6e 6f 2d       	sub    eax,0x2d6f6e66
   14000e2e8:	69 64 65 6e 74 20 2d 	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x662d2074
   14000e2ef:	66 
   14000e2f0:	50                   	push   rax
   14000e2f1:	49                   	rex.WB
   14000e2f2:	43 20 2d 66 62 75 69 	rex.XB and BYTE PTR [rip+0x69756266],bpl        # 1a976455f <.debug_line_str+0x697503e6>
   14000e2f9:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000e2fa:	64 69 6e 67 2d 6c 69 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x62696c2d
   14000e301:	62 
   14000e302:	67 63 63 20          	movsxd esp,DWORD PTR [ebx+0x20]
   14000e306:	2d 66 6e 6f 2d       	sub    eax,0x2d6f6e66
   14000e30b:	73 74                	jae    14000e381 <.debug_info+0xea>
   14000e30d:	61                   	(bad)
   14000e30e:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
   14000e311:	70 72                	jo     14000e385 <.debug_info+0xee>
   14000e313:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000e314:	74 65                	je     14000e37b <.debug_info+0xe4>
   14000e316:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14000e31a:	00 1d 79 01 00 00    	add    BYTE PTR [rip+0x179],bl        # 14000e499 <.debug_info+0x202>
   14000e320:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000e321:	01 00                	add    DWORD PTR [rax],eax
   14000e323:	00 db                	add    bl,bl
   14000e325:	00 00                	add    BYTE PTR [rax],al
   14000e327:	00 02                	add    BYTE PTR [rdx],al
   14000e329:	01 06                	add    DWORD PTR [rsi],eax
   14000e32b:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
   14000e32e:	72 00                	jb     14000e330 <.debug_info+0x99>
   14000e330:	02 08                	add    cl,BYTE PTR [rax]
   14000e332:	07                   	(bad)
   14000e333:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000e334:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000e335:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000e336:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
   14000e33b:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
   14000e33f:	73 69                	jae    14000e3aa <.debug_info+0x113>
   14000e341:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000e343:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
   14000e348:	74 00                	je     14000e34a <.debug_info+0xb3>
   14000e34a:	02 08                	add    cl,BYTE PTR [rax]
   14000e34c:	05 6c 6f 6e 67       	add    eax,0x676e6f6c
   14000e351:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14000e355:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
   14000e359:	74 00                	je     14000e35b <.debug_info+0xc4>
   14000e35b:	02 02                	add    al,BYTE PTR [rdx]
   14000e35d:	07                   	(bad)
   14000e35e:	73 68                	jae    14000e3c8 <.debug_info+0x131>
   14000e360:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000e361:	72 74                	jb     14000e3d7 <.debug_info+0x140>
   14000e363:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
   14000e366:	73 69                	jae    14000e3d1 <.debug_info+0x13a>
   14000e368:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000e36a:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
   14000e36f:	74 00                	je     14000e371 <.debug_info+0xda>
   14000e371:	02 04 05 69 6e 74 00 	add    al,BYTE PTR [rax*1+0x746e69]
   14000e378:	02 04 05 6c 6f 6e 67 	add    al,BYTE PTR [rax*1+0x676e6f6c]
   14000e37f:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
   14000e382:	74 00                	je     14000e384 <.debug_info+0xed>
   14000e384:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
   14000e387:	75 6e                	jne    14000e3f7 <.debug_info+0x160>
   14000e389:	73 69                	jae    14000e3f4 <.debug_info+0x15d>
   14000e38b:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000e38d:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
   14000e392:	74 00                	je     14000e394 <.debug_info+0xfd>
   14000e394:	02 10                	add    dl,BYTE PTR [rax]
   14000e396:	04 6c                	add    al,0x6c
   14000e398:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000e399:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000e39a:	67 20 64 6f 75       	and    BYTE PTR [edi+ebp*2+0x75],ah
   14000e39f:	62                   	(bad)
   14000e3a0:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000e3a1:	65 00 02             	add    BYTE PTR gs:[rdx],al
   14000e3a4:	01 08                	add    DWORD PTR [rax],ecx
   14000e3a6:	75 6e                	jne    14000e416 <.debug_info+0x17f>
   14000e3a8:	73 69                	jae    14000e413 <.debug_info+0x17c>
   14000e3aa:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000e3ac:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
   14000e3b1:	61                   	(bad)
   14000e3b2:	72 00                	jb     14000e3b4 <.debug_info+0x11d>
   14000e3b4:	02 08                	add    cl,BYTE PTR [rax]
   14000e3b6:	04 64                	add    al,0x64
   14000e3b8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000e3b9:	75 62                	jne    14000e41d <.debug_info+0x186>
   14000e3bb:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000e3bc:	65 00 02             	add    BYTE PTR gs:[rdx],al
   14000e3bf:	04 04                	add    al,0x4
   14000e3c1:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
   14000e3c3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000e3c4:	61                   	(bad)
   14000e3c5:	74 00                	je     14000e3c7 <.debug_info+0x130>
   14000e3c7:	08 08                	or     BYTE PTR [rax],cl
   14000e3c9:	36 01 00             	ss add DWORD PTR [rax],eax
   14000e3cc:	00 09                	add    BYTE PTR [rcx],cl
   14000e3ce:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
   14000e3d1:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000e3d2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000e3d3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000e3d4:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
   14000e3d8:	73 69                	jae    14000e443 <.debug_info+0x1ac>
   14000e3da:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000e3dc:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
   14000e3e1:	74 00                	je     14000e3e3 <.debug_info+0x14c>
   14000e3e3:	02 02                	add    al,BYTE PTR [rdx]
   14000e3e5:	05 73 68 6f 72       	add    eax,0x726f6873
   14000e3ea:	74 20                	je     14000e40c <.debug_info+0x175>
   14000e3ec:	69 6e 74 00 03 69 78 	imul   ebp,DWORD PTR [rsi+0x74],0x78690300
   14000e3f3:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e3f5:	5f                   	pop    rdi
   14000e3f6:	74 75                	je     14000e46d <.debug_info+0x1d6>
   14000e3f8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000e3f9:	65 5f                	gs pop rdi
   14000e3fb:	69 6e 64 69 63 65 73 	imul   ebp,DWORD PTR [rsi+0x64],0x73656369
   14000e402:	00 ed                	add    ch,ch
   14000e404:	00 00                	add    BYTE PTR [rax],al
   14000e406:	00 21                	add    BYTE PTR [rcx],ah
   14000e408:	01 03                	add    DWORD PTR [rbx],eax
   14000e40a:	0e                   	(bad)
   14000e40b:	00 00                	add    BYTE PTR [rax],al
   14000e40d:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e410:	36 5f                	ss pop rdi
   14000e412:	54                   	push   rsp
   14000e413:	55                   	push   rbp
   14000e414:	4e                   	rex.WRX
   14000e415:	45 5f                	rex.RB pop r15
   14000e417:	53                   	push   rbx
   14000e418:	43                   	rex.XB
   14000e419:	48                   	rex.W
   14000e41a:	45                   	rex.RB
   14000e41b:	44 55                	rex.R push rbp
   14000e41d:	4c                   	rex.WR
   14000e41e:	45 00 00             	add    BYTE PTR [r8],r8b
   14000e421:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e424:	36 5f                	ss pop rdi
   14000e426:	54                   	push   rsp
   14000e427:	55                   	push   rbp
   14000e428:	4e                   	rex.WRX
   14000e429:	45 5f                	rex.RB pop r15
   14000e42b:	50                   	push   rax
   14000e42c:	41 52                	push   r10
   14000e42e:	54                   	push   rsp
   14000e42f:	49                   	rex.WB
   14000e430:	41                   	rex.B
   14000e431:	4c 5f                	rex.WR pop rdi
   14000e433:	52                   	push   rdx
   14000e434:	45                   	rex.RB
   14000e435:	47 5f                	rex.RXB pop r15
   14000e437:	44                   	rex.R
   14000e438:	45 50                	rex.RB push r8
   14000e43a:	45                   	rex.RB
   14000e43b:	4e                   	rex.WRX
   14000e43c:	44                   	rex.R
   14000e43d:	45                   	rex.RB
   14000e43e:	4e                   	rex.WRX
   14000e43f:	43 59                	rex.XB pop r9
   14000e441:	00 01                	add    BYTE PTR [rcx],al
   14000e443:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e446:	36 5f                	ss pop rdi
   14000e448:	54                   	push   rsp
   14000e449:	55                   	push   rbp
   14000e44a:	4e                   	rex.WRX
   14000e44b:	45 5f                	rex.RB pop r15
   14000e44d:	53                   	push   rbx
   14000e44e:	53                   	push   rbx
   14000e44f:	45 5f                	rex.RB pop r15
   14000e451:	50                   	push   rax
   14000e452:	41 52                	push   r10
   14000e454:	54                   	push   rsp
   14000e455:	49                   	rex.WB
   14000e456:	41                   	rex.B
   14000e457:	4c 5f                	rex.WR pop rdi
   14000e459:	52                   	push   rdx
   14000e45a:	45                   	rex.RB
   14000e45b:	47 5f                	rex.RXB pop r15
   14000e45d:	44                   	rex.R
   14000e45e:	45 50                	rex.RB push r8
   14000e460:	45                   	rex.RB
   14000e461:	4e                   	rex.WRX
   14000e462:	44                   	rex.R
   14000e463:	45                   	rex.RB
   14000e464:	4e                   	rex.WRX
   14000e465:	43 59                	rex.XB pop r9
   14000e467:	00 02                	add    BYTE PTR [rdx],al
   14000e469:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e46c:	36 5f                	ss pop rdi
   14000e46e:	54                   	push   rsp
   14000e46f:	55                   	push   rbp
   14000e470:	4e                   	rex.WRX
   14000e471:	45 5f                	rex.RB pop r15
   14000e473:	53                   	push   rbx
   14000e474:	53                   	push   rbx
   14000e475:	45 5f                	rex.RB pop r15
   14000e477:	50                   	push   rax
   14000e478:	41 52                	push   r10
   14000e47a:	54                   	push   rsp
   14000e47b:	49                   	rex.WB
   14000e47c:	41                   	rex.B
   14000e47d:	4c 5f                	rex.WR pop rdi
   14000e47f:	52                   	push   rdx
   14000e480:	45                   	rex.RB
   14000e481:	47 5f                	rex.RXB pop r15
   14000e483:	46 50                	rex.RX push rax
   14000e485:	5f                   	pop    rdi
   14000e486:	43                   	rex.XB
   14000e487:	4f                   	rex.WRXB
   14000e488:	4e 56                	rex.WRX push rsi
   14000e48a:	45 52                	rex.RB push r10
   14000e48c:	54                   	push   rsp
   14000e48d:	53                   	push   rbx
   14000e48e:	5f                   	pop    rdi
   14000e48f:	44                   	rex.R
   14000e490:	45 50                	rex.RB push r8
   14000e492:	45                   	rex.RB
   14000e493:	4e                   	rex.WRX
   14000e494:	44                   	rex.R
   14000e495:	45                   	rex.RB
   14000e496:	4e                   	rex.WRX
   14000e497:	43 59                	rex.XB pop r9
   14000e499:	00 03                	add    BYTE PTR [rbx],al
   14000e49b:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e49e:	36 5f                	ss pop rdi
   14000e4a0:	54                   	push   rsp
   14000e4a1:	55                   	push   rbp
   14000e4a2:	4e                   	rex.WRX
   14000e4a3:	45 5f                	rex.RB pop r15
   14000e4a5:	53                   	push   rbx
   14000e4a6:	53                   	push   rbx
   14000e4a7:	45 5f                	rex.RB pop r15
   14000e4a9:	50                   	push   rax
   14000e4aa:	41 52                	push   r10
   14000e4ac:	54                   	push   rsp
   14000e4ad:	49                   	rex.WB
   14000e4ae:	41                   	rex.B
   14000e4af:	4c 5f                	rex.WR pop rdi
   14000e4b1:	52                   	push   rdx
   14000e4b2:	45                   	rex.RB
   14000e4b3:	47 5f                	rex.RXB pop r15
   14000e4b5:	43                   	rex.XB
   14000e4b6:	4f                   	rex.WRXB
   14000e4b7:	4e 56                	rex.WRX push rsi
   14000e4b9:	45 52                	rex.RB push r10
   14000e4bb:	54                   	push   rsp
   14000e4bc:	53                   	push   rbx
   14000e4bd:	5f                   	pop    rdi
   14000e4be:	44                   	rex.R
   14000e4bf:	45 50                	rex.RB push r8
   14000e4c1:	45                   	rex.RB
   14000e4c2:	4e                   	rex.WRX
   14000e4c3:	44                   	rex.R
   14000e4c4:	45                   	rex.RB
   14000e4c5:	4e                   	rex.WRX
   14000e4c6:	43 59                	rex.XB pop r9
   14000e4c8:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
   14000e4cb:	58                   	pop    rax
   14000e4cc:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e4ce:	5f                   	pop    rdi
   14000e4cf:	54                   	push   rsp
   14000e4d0:	55                   	push   rbp
   14000e4d1:	4e                   	rex.WRX
   14000e4d2:	45 5f                	rex.RB pop r15
   14000e4d4:	44                   	rex.R
   14000e4d5:	45 53                	rex.RB push r11
   14000e4d7:	54                   	push   rsp
   14000e4d8:	5f                   	pop    rdi
   14000e4d9:	46                   	rex.RX
   14000e4da:	41                   	rex.B
   14000e4db:	4c 53                	rex.WR push rbx
   14000e4dd:	45 5f                	rex.RB pop r15
   14000e4df:	44                   	rex.R
   14000e4e0:	45 50                	rex.RB push r8
   14000e4e2:	5f                   	pop    rdi
   14000e4e3:	46                   	rex.RX
   14000e4e4:	4f 52                	rex.WRXB push r10
   14000e4e6:	5f                   	pop    rdi
   14000e4e7:	47                   	rex.RXB
   14000e4e8:	4c                   	rex.WR
   14000e4e9:	43 00 05 01 58 38 36 	rex.XB add BYTE PTR [rip+0x36385801],al        # 176393cf1 <.debug_line_str+0x3637fb78>
   14000e4f0:	5f                   	pop    rdi
   14000e4f1:	54                   	push   rsp
   14000e4f2:	55                   	push   rbp
   14000e4f3:	4e                   	rex.WRX
   14000e4f4:	45 5f                	rex.RB pop r15
   14000e4f6:	53                   	push   rbx
   14000e4f7:	53                   	push   rbx
   14000e4f8:	45 5f                	rex.RB pop r15
   14000e4fa:	53                   	push   rbx
   14000e4fb:	50                   	push   rax
   14000e4fc:	4c                   	rex.WR
   14000e4fd:	49 54                	rex.WB push r12
   14000e4ff:	5f                   	pop    rdi
   14000e500:	52                   	push   rdx
   14000e501:	45                   	rex.RB
   14000e502:	47 53                	rex.RXB push r11
   14000e504:	00 06                	add    BYTE PTR [rsi],al
   14000e506:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e509:	36 5f                	ss pop rdi
   14000e50b:	54                   	push   rsp
   14000e50c:	55                   	push   rbp
   14000e50d:	4e                   	rex.WRX
   14000e50e:	45 5f                	rex.RB pop r15
   14000e510:	50                   	push   rax
   14000e511:	41 52                	push   r10
   14000e513:	54                   	push   rsp
   14000e514:	49                   	rex.WB
   14000e515:	41                   	rex.B
   14000e516:	4c 5f                	rex.WR pop rdi
   14000e518:	46                   	rex.RX
   14000e519:	4c                   	rex.WR
   14000e51a:	41                   	rex.B
   14000e51b:	47 5f                	rex.RXB pop r15
   14000e51d:	52                   	push   rdx
   14000e51e:	45                   	rex.RB
   14000e51f:	47 5f                	rex.RXB pop r15
   14000e521:	53                   	push   rbx
   14000e522:	54                   	push   rsp
   14000e523:	41                   	rex.B
   14000e524:	4c                   	rex.WR
   14000e525:	4c 00 07             	rex.WR add BYTE PTR [rdi],r8b
   14000e528:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e52b:	36 5f                	ss pop rdi
   14000e52d:	54                   	push   rsp
   14000e52e:	55                   	push   rbp
   14000e52f:	4e                   	rex.WRX
   14000e530:	45 5f                	rex.RB pop r15
   14000e532:	4d                   	rex.WRB
   14000e533:	4f 56                	rex.WRXB push r14
   14000e535:	58                   	pop    rax
   14000e536:	00 08                	add    BYTE PTR [rax],cl
   14000e538:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e53b:	36 5f                	ss pop rdi
   14000e53d:	54                   	push   rsp
   14000e53e:	55                   	push   rbp
   14000e53f:	4e                   	rex.WRX
   14000e540:	45 5f                	rex.RB pop r15
   14000e542:	4d                   	rex.WRB
   14000e543:	45                   	rex.RB
   14000e544:	4d                   	rex.WRB
   14000e545:	4f 52                	rex.WRXB push r10
   14000e547:	59                   	pop    rcx
   14000e548:	5f                   	pop    rdi
   14000e549:	4d                   	rex.WRB
   14000e54a:	49 53                	rex.WB push r11
   14000e54c:	4d                   	rex.WRB
   14000e54d:	41 54                	push   r12
   14000e54f:	43                   	rex.XB
   14000e550:	48 5f                	rex.W pop rdi
   14000e552:	53                   	push   rbx
   14000e553:	54                   	push   rsp
   14000e554:	41                   	rex.B
   14000e555:	4c                   	rex.WR
   14000e556:	4c 00 09             	rex.WR add BYTE PTR [rcx],r9b
   14000e559:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e55c:	36 5f                	ss pop rdi
   14000e55e:	54                   	push   rsp
   14000e55f:	55                   	push   rbp
   14000e560:	4e                   	rex.WRX
   14000e561:	45 5f                	rex.RB pop r15
   14000e563:	46 55                	rex.RX push rbp
   14000e565:	53                   	push   rbx
   14000e566:	45 5f                	rex.RB pop r15
   14000e568:	43                   	rex.XB
   14000e569:	4d 50                	rex.WRB push r8
   14000e56b:	5f                   	pop    rdi
   14000e56c:	41                   	rex.B
   14000e56d:	4e                   	rex.WRX
   14000e56e:	44 5f                	rex.R pop rdi
   14000e570:	42 52                	rex.X push rdx
   14000e572:	41                   	rex.B
   14000e573:	4e                   	rex.WRX
   14000e574:	43                   	rex.XB
   14000e575:	48 5f                	rex.W pop rdi
   14000e577:	33 32                	xor    esi,DWORD PTR [rdx]
   14000e579:	00 0a                	add    BYTE PTR [rdx],cl
   14000e57b:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e57e:	36 5f                	ss pop rdi
   14000e580:	54                   	push   rsp
   14000e581:	55                   	push   rbp
   14000e582:	4e                   	rex.WRX
   14000e583:	45 5f                	rex.RB pop r15
   14000e585:	46 55                	rex.RX push rbp
   14000e587:	53                   	push   rbx
   14000e588:	45 5f                	rex.RB pop r15
   14000e58a:	43                   	rex.XB
   14000e58b:	4d 50                	rex.WRB push r8
   14000e58d:	5f                   	pop    rdi
   14000e58e:	41                   	rex.B
   14000e58f:	4e                   	rex.WRX
   14000e590:	44 5f                	rex.R pop rdi
   14000e592:	42 52                	rex.X push rdx
   14000e594:	41                   	rex.B
   14000e595:	4e                   	rex.WRX
   14000e596:	43                   	rex.XB
   14000e597:	48 5f                	rex.W pop rdi
   14000e599:	36 34 00             	ss xor al,0x0
   14000e59c:	0b 01                	or     eax,DWORD PTR [rcx]
   14000e59e:	58                   	pop    rax
   14000e59f:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e5a1:	5f                   	pop    rdi
   14000e5a2:	54                   	push   rsp
   14000e5a3:	55                   	push   rbp
   14000e5a4:	4e                   	rex.WRX
   14000e5a5:	45 5f                	rex.RB pop r15
   14000e5a7:	46 55                	rex.RX push rbp
   14000e5a9:	53                   	push   rbx
   14000e5aa:	45 5f                	rex.RB pop r15
   14000e5ac:	43                   	rex.XB
   14000e5ad:	4d 50                	rex.WRB push r8
   14000e5af:	5f                   	pop    rdi
   14000e5b0:	41                   	rex.B
   14000e5b1:	4e                   	rex.WRX
   14000e5b2:	44 5f                	rex.R pop rdi
   14000e5b4:	42 52                	rex.X push rdx
   14000e5b6:	41                   	rex.B
   14000e5b7:	4e                   	rex.WRX
   14000e5b8:	43                   	rex.XB
   14000e5b9:	48 5f                	rex.W pop rdi
   14000e5bb:	53                   	push   rbx
   14000e5bc:	4f                   	rex.WRXB
   14000e5bd:	46                   	rex.RX
   14000e5be:	4c                   	rex.WR
   14000e5bf:	41                   	rex.B
   14000e5c0:	47 53                	rex.RXB push r11
   14000e5c2:	00 0c 01             	add    BYTE PTR [rcx+rax*1],cl
   14000e5c5:	58                   	pop    rax
   14000e5c6:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e5c8:	5f                   	pop    rdi
   14000e5c9:	54                   	push   rsp
   14000e5ca:	55                   	push   rbp
   14000e5cb:	4e                   	rex.WRX
   14000e5cc:	45 5f                	rex.RB pop r15
   14000e5ce:	46 55                	rex.RX push rbp
   14000e5d0:	53                   	push   rbx
   14000e5d1:	45 5f                	rex.RB pop r15
   14000e5d3:	41                   	rex.B
   14000e5d4:	4c 55                	rex.WR push rbp
   14000e5d6:	5f                   	pop    rdi
   14000e5d7:	41                   	rex.B
   14000e5d8:	4e                   	rex.WRX
   14000e5d9:	44 5f                	rex.R pop rdi
   14000e5db:	42 52                	rex.X push rdx
   14000e5dd:	41                   	rex.B
   14000e5de:	4e                   	rex.WRX
   14000e5df:	43                   	rex.XB
   14000e5e0:	48 00 0d 01 58 38 36 	rex.W add BYTE PTR [rip+0x36385801],cl        # 176393de8 <.debug_line_str+0x3637fc6f>
   14000e5e7:	5f                   	pop    rdi
   14000e5e8:	54                   	push   rsp
   14000e5e9:	55                   	push   rbp
   14000e5ea:	4e                   	rex.WRX
   14000e5eb:	45 5f                	rex.RB pop r15
   14000e5ed:	41                   	rex.B
   14000e5ee:	43                   	rex.XB
   14000e5ef:	43 55                	rex.XB push r13
   14000e5f1:	4d 55                	rex.WRB push r13
   14000e5f3:	4c                   	rex.WR
   14000e5f4:	41 54                	push   r12
   14000e5f6:	45 5f                	rex.RB pop r15
   14000e5f8:	4f 55                	rex.WRXB push r13
   14000e5fa:	54                   	push   rsp
   14000e5fb:	47                   	rex.RXB
   14000e5fc:	4f                   	rex.WRXB
   14000e5fd:	49                   	rex.WB
   14000e5fe:	4e                   	rex.WRX
   14000e5ff:	47 5f                	rex.RXB pop r15
   14000e601:	41 52                	push   r10
   14000e603:	47 53                	rex.RXB push r11
   14000e605:	00 0e                	add    BYTE PTR [rsi],cl
   14000e607:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e60a:	36 5f                	ss pop rdi
   14000e60c:	54                   	push   rsp
   14000e60d:	55                   	push   rbp
   14000e60e:	4e                   	rex.WRX
   14000e60f:	45 5f                	rex.RB pop r15
   14000e611:	50                   	push   rax
   14000e612:	52                   	push   rdx
   14000e613:	4f                   	rex.WRXB
   14000e614:	4c                   	rex.WR
   14000e615:	4f                   	rex.WRXB
   14000e616:	47 55                	rex.RXB push r13
   14000e618:	45 5f                	rex.RB pop r15
   14000e61a:	55                   	push   rbp
   14000e61b:	53                   	push   rbx
   14000e61c:	49                   	rex.WB
   14000e61d:	4e                   	rex.WRX
   14000e61e:	47 5f                	rex.RXB pop r15
   14000e620:	4d                   	rex.WRB
   14000e621:	4f 56                	rex.WRXB push r14
   14000e623:	45 00 0f             	add    BYTE PTR [r15],r9b
   14000e626:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e629:	36 5f                	ss pop rdi
   14000e62b:	54                   	push   rsp
   14000e62c:	55                   	push   rbp
   14000e62d:	4e                   	rex.WRX
   14000e62e:	45 5f                	rex.RB pop r15
   14000e630:	45 50                	rex.RB push r8
   14000e632:	49                   	rex.WB
   14000e633:	4c                   	rex.WR
   14000e634:	4f                   	rex.WRXB
   14000e635:	47 55                	rex.RXB push r13
   14000e637:	45 5f                	rex.RB pop r15
   14000e639:	55                   	push   rbp
   14000e63a:	53                   	push   rbx
   14000e63b:	49                   	rex.WB
   14000e63c:	4e                   	rex.WRX
   14000e63d:	47 5f                	rex.RXB pop r15
   14000e63f:	4d                   	rex.WRB
   14000e640:	4f 56                	rex.WRXB push r14
   14000e642:	45 00 10             	add    BYTE PTR [r8],r10b
   14000e645:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e648:	36 5f                	ss pop rdi
   14000e64a:	54                   	push   rsp
   14000e64b:	55                   	push   rbp
   14000e64c:	4e                   	rex.WRX
   14000e64d:	45 5f                	rex.RB pop r15
   14000e64f:	55                   	push   rbp
   14000e650:	53                   	push   rbx
   14000e651:	45 5f                	rex.RB pop r15
   14000e653:	4c                   	rex.WR
   14000e654:	45                   	rex.RB
   14000e655:	41 56                	push   r14
   14000e657:	45 00 11             	add    BYTE PTR [r9],r10b
   14000e65a:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e65d:	36 5f                	ss pop rdi
   14000e65f:	54                   	push   rsp
   14000e660:	55                   	push   rbp
   14000e661:	4e                   	rex.WRX
   14000e662:	45 5f                	rex.RB pop r15
   14000e664:	50                   	push   rax
   14000e665:	55                   	push   rbp
   14000e666:	53                   	push   rbx
   14000e667:	48 5f                	rex.W pop rdi
   14000e669:	4d                   	rex.WRB
   14000e66a:	45                   	rex.RB
   14000e66b:	4d                   	rex.WRB
   14000e66c:	4f 52                	rex.WRXB push r10
   14000e66e:	59                   	pop    rcx
   14000e66f:	00 12                	add    BYTE PTR [rdx],dl
   14000e671:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e674:	36 5f                	ss pop rdi
   14000e676:	54                   	push   rsp
   14000e677:	55                   	push   rbp
   14000e678:	4e                   	rex.WRX
   14000e679:	45 5f                	rex.RB pop r15
   14000e67b:	53                   	push   rbx
   14000e67c:	49                   	rex.WB
   14000e67d:	4e                   	rex.WRX
   14000e67e:	47                   	rex.RXB
   14000e67f:	4c                   	rex.WR
   14000e680:	45 5f                	rex.RB pop r15
   14000e682:	50                   	push   rax
   14000e683:	55                   	push   rbp
   14000e684:	53                   	push   rbx
   14000e685:	48 00 13             	rex.W add BYTE PTR [rbx],dl
   14000e688:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e68b:	36 5f                	ss pop rdi
   14000e68d:	54                   	push   rsp
   14000e68e:	55                   	push   rbp
   14000e68f:	4e                   	rex.WRX
   14000e690:	45 5f                	rex.RB pop r15
   14000e692:	44                   	rex.R
   14000e693:	4f 55                	rex.WRXB push r13
   14000e695:	42                   	rex.X
   14000e696:	4c                   	rex.WR
   14000e697:	45 5f                	rex.RB pop r15
   14000e699:	50                   	push   rax
   14000e69a:	55                   	push   rbp
   14000e69b:	53                   	push   rbx
   14000e69c:	48 00 14 01          	rex.W add BYTE PTR [rcx+rax*1],dl
   14000e6a0:	58                   	pop    rax
   14000e6a1:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e6a3:	5f                   	pop    rdi
   14000e6a4:	54                   	push   rsp
   14000e6a5:	55                   	push   rbp
   14000e6a6:	4e                   	rex.WRX
   14000e6a7:	45 5f                	rex.RB pop r15
   14000e6a9:	53                   	push   rbx
   14000e6aa:	49                   	rex.WB
   14000e6ab:	4e                   	rex.WRX
   14000e6ac:	47                   	rex.RXB
   14000e6ad:	4c                   	rex.WR
   14000e6ae:	45 5f                	rex.RB pop r15
   14000e6b0:	50                   	push   rax
   14000e6b1:	4f 50                	rex.WRXB push r8
   14000e6b3:	00 15 01 58 38 36    	add    BYTE PTR [rip+0x36385801],dl        # 176393eba <.debug_line_str+0x3637fd41>
   14000e6b9:	5f                   	pop    rdi
   14000e6ba:	54                   	push   rsp
   14000e6bb:	55                   	push   rbp
   14000e6bc:	4e                   	rex.WRX
   14000e6bd:	45 5f                	rex.RB pop r15
   14000e6bf:	44                   	rex.R
   14000e6c0:	4f 55                	rex.WRXB push r13
   14000e6c2:	42                   	rex.X
   14000e6c3:	4c                   	rex.WR
   14000e6c4:	45 5f                	rex.RB pop r15
   14000e6c6:	50                   	push   rax
   14000e6c7:	4f 50                	rex.WRXB push r8
   14000e6c9:	00 16                	add    BYTE PTR [rsi],dl
   14000e6cb:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e6ce:	36 5f                	ss pop rdi
   14000e6d0:	54                   	push   rsp
   14000e6d1:	55                   	push   rbp
   14000e6d2:	4e                   	rex.WRX
   14000e6d3:	45 5f                	rex.RB pop r15
   14000e6d5:	50                   	push   rax
   14000e6d6:	41                   	rex.B
   14000e6d7:	44 5f                	rex.R pop rdi
   14000e6d9:	53                   	push   rbx
   14000e6da:	48                   	rex.W
   14000e6db:	4f 52                	rex.WRXB push r10
   14000e6dd:	54                   	push   rsp
   14000e6de:	5f                   	pop    rdi
   14000e6df:	46 55                	rex.RX push rbp
   14000e6e1:	4e                   	rex.WRX
   14000e6e2:	43 54                	rex.XB push r12
   14000e6e4:	49                   	rex.WB
   14000e6e5:	4f                   	rex.WRXB
   14000e6e6:	4e 00 17             	rex.WRX add BYTE PTR [rdi],r10b
   14000e6e9:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e6ec:	36 5f                	ss pop rdi
   14000e6ee:	54                   	push   rsp
   14000e6ef:	55                   	push   rbp
   14000e6f0:	4e                   	rex.WRX
   14000e6f1:	45 5f                	rex.RB pop r15
   14000e6f3:	50                   	push   rax
   14000e6f4:	41                   	rex.B
   14000e6f5:	44 5f                	rex.R pop rdi
   14000e6f7:	52                   	push   rdx
   14000e6f8:	45 54                	rex.RB push r12
   14000e6fa:	55                   	push   rbp
   14000e6fb:	52                   	push   rdx
   14000e6fc:	4e 53                	rex.WRX push rbx
   14000e6fe:	00 18                	add    BYTE PTR [rax],bl
   14000e700:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e703:	36 5f                	ss pop rdi
   14000e705:	54                   	push   rsp
   14000e706:	55                   	push   rbp
   14000e707:	4e                   	rex.WRX
   14000e708:	45 5f                	rex.RB pop r15
   14000e70a:	46                   	rex.RX
   14000e70b:	4f 55                	rex.WRXB push r13
   14000e70d:	52                   	push   rdx
   14000e70e:	5f                   	pop    rdi
   14000e70f:	4a 55                	rex.WX push rbp
   14000e711:	4d 50                	rex.WRB push r8
   14000e713:	5f                   	pop    rdi
   14000e714:	4c                   	rex.WR
   14000e715:	49                   	rex.WB
   14000e716:	4d                   	rex.WRB
   14000e717:	49 54                	rex.WB push r12
   14000e719:	00 19                	add    BYTE PTR [rcx],bl
   14000e71b:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e71e:	36 5f                	ss pop rdi
   14000e720:	54                   	push   rsp
   14000e721:	55                   	push   rbp
   14000e722:	4e                   	rex.WRX
   14000e723:	45 5f                	rex.RB pop r15
   14000e725:	53                   	push   rbx
   14000e726:	4f                   	rex.WRXB
   14000e727:	46 54                	rex.RX push rsp
   14000e729:	57                   	push   rdi
   14000e72a:	41 52                	push   r10
   14000e72c:	45 5f                	rex.RB pop r15
   14000e72e:	50                   	push   rax
   14000e72f:	52                   	push   rdx
   14000e730:	45                   	rex.RB
   14000e731:	46                   	rex.RX
   14000e732:	45 54                	rex.RB push r12
   14000e734:	43                   	rex.XB
   14000e735:	48                   	rex.W
   14000e736:	49                   	rex.WB
   14000e737:	4e                   	rex.WRX
   14000e738:	47 5f                	rex.RXB pop r15
   14000e73a:	42                   	rex.X
   14000e73b:	45                   	rex.RB
   14000e73c:	4e                   	rex.WRX
   14000e73d:	45                   	rex.RB
   14000e73e:	46                   	rex.RX
   14000e73f:	49                   	rex.WB
   14000e740:	43                   	rex.XB
   14000e741:	49                   	rex.WB
   14000e742:	41                   	rex.B
   14000e743:	4c 00 1a             	rex.WR add BYTE PTR [rdx],r11b
   14000e746:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e749:	36 5f                	ss pop rdi
   14000e74b:	54                   	push   rsp
   14000e74c:	55                   	push   rbp
   14000e74d:	4e                   	rex.WRX
   14000e74e:	45 5f                	rex.RB pop r15
   14000e750:	4c                   	rex.WR
   14000e751:	43 50                	rex.XB push r8
   14000e753:	5f                   	pop    rdi
   14000e754:	53                   	push   rbx
   14000e755:	54                   	push   rsp
   14000e756:	41                   	rex.B
   14000e757:	4c                   	rex.WR
   14000e758:	4c 00 1b             	rex.WR add BYTE PTR [rbx],r11b
   14000e75b:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e75e:	36 5f                	ss pop rdi
   14000e760:	54                   	push   rsp
   14000e761:	55                   	push   rbp
   14000e762:	4e                   	rex.WRX
   14000e763:	45 5f                	rex.RB pop r15
   14000e765:	52                   	push   rdx
   14000e766:	45                   	rex.RB
   14000e767:	41                   	rex.B
   14000e768:	44 5f                	rex.R pop rdi
   14000e76a:	4d                   	rex.WRB
   14000e76b:	4f                   	rex.WRXB
   14000e76c:	44                   	rex.R
   14000e76d:	49                   	rex.WB
   14000e76e:	46 59                	rex.RX pop rcx
   14000e770:	00 1c 01             	add    BYTE PTR [rcx+rax*1],bl
   14000e773:	58                   	pop    rax
   14000e774:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e776:	5f                   	pop    rdi
   14000e777:	54                   	push   rsp
   14000e778:	55                   	push   rbp
   14000e779:	4e                   	rex.WRX
   14000e77a:	45 5f                	rex.RB pop r15
   14000e77c:	55                   	push   rbp
   14000e77d:	53                   	push   rbx
   14000e77e:	45 5f                	rex.RB pop r15
   14000e780:	49                   	rex.WB
   14000e781:	4e                   	rex.WRX
   14000e782:	43                   	rex.XB
   14000e783:	44                   	rex.R
   14000e784:	45                   	rex.RB
   14000e785:	43 00 1d 01 58 38 36 	rex.XB add BYTE PTR [rip+0x36385801],bl        # 176393f8d <.debug_line_str+0x3637fe14>
   14000e78c:	5f                   	pop    rdi
   14000e78d:	54                   	push   rsp
   14000e78e:	55                   	push   rbp
   14000e78f:	4e                   	rex.WRX
   14000e790:	45 5f                	rex.RB pop r15
   14000e792:	49                   	rex.WB
   14000e793:	4e 54                	rex.WRX push rsp
   14000e795:	45                   	rex.RB
   14000e796:	47                   	rex.RXB
   14000e797:	45 52                	rex.RB push r10
   14000e799:	5f                   	pop    rdi
   14000e79a:	44                   	rex.R
   14000e79b:	46                   	rex.RX
   14000e79c:	4d                   	rex.WRB
   14000e79d:	4f                   	rex.WRXB
   14000e79e:	44                   	rex.R
   14000e79f:	45 5f                	rex.RB pop r15
   14000e7a1:	4d                   	rex.WRB
   14000e7a2:	4f 56                	rex.WRXB push r14
   14000e7a4:	45 53                	rex.RB push r11
   14000e7a6:	00 1e                	add    BYTE PTR [rsi],bl
   14000e7a8:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e7ab:	36 5f                	ss pop rdi
   14000e7ad:	54                   	push   rsp
   14000e7ae:	55                   	push   rbp
   14000e7af:	4e                   	rex.WRX
   14000e7b0:	45 5f                	rex.RB pop r15
   14000e7b2:	4f 50                	rex.WRXB push r8
   14000e7b4:	54                   	push   rsp
   14000e7b5:	5f                   	pop    rdi
   14000e7b6:	41                   	rex.B
   14000e7b7:	47 55                	rex.RXB push r13
   14000e7b9:	00 1f                	add    BYTE PTR [rdi],bl
   14000e7bb:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e7be:	36 5f                	ss pop rdi
   14000e7c0:	54                   	push   rsp
   14000e7c1:	55                   	push   rbp
   14000e7c2:	4e                   	rex.WRX
   14000e7c3:	45 5f                	rex.RB pop r15
   14000e7c5:	41 56                	push   r14
   14000e7c7:	4f                   	rex.WRXB
   14000e7c8:	49                   	rex.WB
   14000e7c9:	44 5f                	rex.R pop rdi
   14000e7cb:	4c                   	rex.WR
   14000e7cc:	45                   	rex.RB
   14000e7cd:	41 5f                	pop    r15
   14000e7cf:	46                   	rex.RX
   14000e7d0:	4f 52                	rex.WRXB push r10
   14000e7d2:	5f                   	pop    rdi
   14000e7d3:	41                   	rex.B
   14000e7d4:	44                   	rex.R
   14000e7d5:	44 52                	rex.R push rdx
   14000e7d7:	00 20                	add    BYTE PTR [rax],ah
   14000e7d9:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e7dc:	36 5f                	ss pop rdi
   14000e7de:	54                   	push   rsp
   14000e7df:	55                   	push   rbp
   14000e7e0:	4e                   	rex.WRX
   14000e7e1:	45 5f                	rex.RB pop r15
   14000e7e3:	53                   	push   rbx
   14000e7e4:	4c                   	rex.WR
   14000e7e5:	4f 57                	rex.WRXB push r15
   14000e7e7:	5f                   	pop    rdi
   14000e7e8:	49                   	rex.WB
   14000e7e9:	4d 55                	rex.WRB push r13
   14000e7eb:	4c 5f                	rex.WR pop rdi
   14000e7ed:	49                   	rex.WB
   14000e7ee:	4d                   	rex.WRB
   14000e7ef:	4d 33 32             	xor    r14,QWORD PTR [r10]
   14000e7f2:	5f                   	pop    rdi
   14000e7f3:	4d                   	rex.WRB
   14000e7f4:	45                   	rex.RB
   14000e7f5:	4d 00 21             	rex.WRB add BYTE PTR [r9],r12b
   14000e7f8:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e7fb:	36 5f                	ss pop rdi
   14000e7fd:	54                   	push   rsp
   14000e7fe:	55                   	push   rbp
   14000e7ff:	4e                   	rex.WRX
   14000e800:	45 5f                	rex.RB pop r15
   14000e802:	53                   	push   rbx
   14000e803:	4c                   	rex.WR
   14000e804:	4f 57                	rex.WRXB push r15
   14000e806:	5f                   	pop    rdi
   14000e807:	49                   	rex.WB
   14000e808:	4d 55                	rex.WRB push r13
   14000e80a:	4c 5f                	rex.WR pop rdi
   14000e80c:	49                   	rex.WB
   14000e80d:	4d                   	rex.WRB
   14000e80e:	4d 38 00             	rex.WRB cmp BYTE PTR [r8],r8b
   14000e811:	22 01                	and    al,BYTE PTR [rcx]
   14000e813:	58                   	pop    rax
   14000e814:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e816:	5f                   	pop    rdi
   14000e817:	54                   	push   rsp
   14000e818:	55                   	push   rbp
   14000e819:	4e                   	rex.WRX
   14000e81a:	45 5f                	rex.RB pop r15
   14000e81c:	41 56                	push   r14
   14000e81e:	4f                   	rex.WRXB
   14000e81f:	49                   	rex.WB
   14000e820:	44 5f                	rex.R pop rdi
   14000e822:	4d                   	rex.WRB
   14000e823:	45                   	rex.RB
   14000e824:	4d 5f                	rex.WRB pop r15
   14000e826:	4f 50                	rex.WRXB push r8
   14000e828:	4e                   	rex.WRX
   14000e829:	44 5f                	rex.R pop rdi
   14000e82b:	46                   	rex.RX
   14000e82c:	4f 52                	rex.WRXB push r10
   14000e82e:	5f                   	pop    rdi
   14000e82f:	43                   	rex.XB
   14000e830:	4d                   	rex.WRB
   14000e831:	4f 56                	rex.WRXB push r14
   14000e833:	45 00 23             	add    BYTE PTR [r11],r12b
   14000e836:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e839:	36 5f                	ss pop rdi
   14000e83b:	54                   	push   rsp
   14000e83c:	55                   	push   rbp
   14000e83d:	4e                   	rex.WRX
   14000e83e:	45 5f                	rex.RB pop r15
   14000e840:	53                   	push   rbx
   14000e841:	49                   	rex.WB
   14000e842:	4e                   	rex.WRX
   14000e843:	47                   	rex.RXB
   14000e844:	4c                   	rex.WR
   14000e845:	45 5f                	rex.RB pop r15
   14000e847:	53                   	push   rbx
   14000e848:	54                   	push   rsp
   14000e849:	52                   	push   rdx
   14000e84a:	49                   	rex.WB
   14000e84b:	4e                   	rex.WRX
   14000e84c:	47                   	rex.RXB
   14000e84d:	4f 50                	rex.WRXB push r8
   14000e84f:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
   14000e852:	58                   	pop    rax
   14000e853:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e855:	5f                   	pop    rdi
   14000e856:	54                   	push   rsp
   14000e857:	55                   	push   rbp
   14000e858:	4e                   	rex.WRX
   14000e859:	45 5f                	rex.RB pop r15
   14000e85b:	50                   	push   rax
   14000e85c:	52                   	push   rdx
   14000e85d:	45                   	rex.RB
   14000e85e:	46                   	rex.RX
   14000e85f:	45 52                	rex.RB push r10
   14000e861:	5f                   	pop    rdi
   14000e862:	4b                   	rex.WXB
   14000e863:	4e                   	rex.WRX
   14000e864:	4f 57                	rex.WRXB push r15
   14000e866:	4e 5f                	rex.WRX pop rdi
   14000e868:	52                   	push   rdx
   14000e869:	45 50                	rex.RB push r8
   14000e86b:	5f                   	pop    rdi
   14000e86c:	4d                   	rex.WRB
   14000e86d:	4f 56                	rex.WRXB push r14
   14000e86f:	53                   	push   rbx
   14000e870:	42 5f                	rex.X pop rdi
   14000e872:	53                   	push   rbx
   14000e873:	54                   	push   rsp
   14000e874:	4f 53                	rex.WRXB push r11
   14000e876:	42 00 25 01 58 38 36 	rex.X add BYTE PTR [rip+0x36385801],spl        # 17639407e <.debug_line_str+0x3637ff05>
   14000e87d:	5f                   	pop    rdi
   14000e87e:	54                   	push   rsp
   14000e87f:	55                   	push   rbp
   14000e880:	4e                   	rex.WRX
   14000e881:	45 5f                	rex.RB pop r15
   14000e883:	4d                   	rex.WRB
   14000e884:	49 53                	rex.WB push r11
   14000e886:	41                   	rex.B
   14000e887:	4c                   	rex.WR
   14000e888:	49                   	rex.WB
   14000e889:	47                   	rex.RXB
   14000e88a:	4e                   	rex.WRX
   14000e88b:	45                   	rex.RB
   14000e88c:	44 5f                	rex.R pop rdi
   14000e88e:	4d                   	rex.WRB
   14000e88f:	4f 56                	rex.WRXB push r14
   14000e891:	45 5f                	rex.RB pop r15
   14000e893:	53                   	push   rbx
   14000e894:	54                   	push   rsp
   14000e895:	52                   	push   rdx
   14000e896:	49                   	rex.WB
   14000e897:	4e                   	rex.WRX
   14000e898:	47 5f                	rex.RXB pop r15
   14000e89a:	50                   	push   rax
   14000e89b:	52                   	push   rdx
   14000e89c:	4f 5f                	rex.WRXB pop r15
   14000e89e:	45 50                	rex.RB push r8
   14000e8a0:	49                   	rex.WB
   14000e8a1:	4c                   	rex.WR
   14000e8a2:	4f                   	rex.WRXB
   14000e8a3:	47 55                	rex.RXB push r13
   14000e8a5:	45 53                	rex.RB push r11
   14000e8a7:	00 26                	add    BYTE PTR [rsi],ah
   14000e8a9:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e8ac:	36 5f                	ss pop rdi
   14000e8ae:	54                   	push   rsp
   14000e8af:	55                   	push   rbp
   14000e8b0:	4e                   	rex.WRX
   14000e8b1:	45 5f                	rex.RB pop r15
   14000e8b3:	55                   	push   rbp
   14000e8b4:	53                   	push   rbx
   14000e8b5:	45 5f                	rex.RB pop r15
   14000e8b7:	53                   	push   rbx
   14000e8b8:	41                   	rex.B
   14000e8b9:	48                   	rex.W
   14000e8ba:	46 00 27             	rex.RX add BYTE PTR [rdi],r12b
   14000e8bd:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e8c0:	36 5f                	ss pop rdi
   14000e8c2:	54                   	push   rsp
   14000e8c3:	55                   	push   rbp
   14000e8c4:	4e                   	rex.WRX
   14000e8c5:	45 5f                	rex.RB pop r15
   14000e8c7:	55                   	push   rbp
   14000e8c8:	53                   	push   rbx
   14000e8c9:	45 5f                	rex.RB pop r15
   14000e8cb:	43                   	rex.XB
   14000e8cc:	4c 54                	rex.WR push rsp
   14000e8ce:	44 00 28             	add    BYTE PTR [rax],r13b
   14000e8d1:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e8d4:	36 5f                	ss pop rdi
   14000e8d6:	54                   	push   rsp
   14000e8d7:	55                   	push   rbp
   14000e8d8:	4e                   	rex.WRX
   14000e8d9:	45 5f                	rex.RB pop r15
   14000e8db:	55                   	push   rbp
   14000e8dc:	53                   	push   rbx
   14000e8dd:	45 5f                	rex.RB pop r15
   14000e8df:	42 54                	rex.X push rsp
   14000e8e1:	00 29                	add    BYTE PTR [rcx],ch
   14000e8e3:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e8e6:	36 5f                	ss pop rdi
   14000e8e8:	54                   	push   rsp
   14000e8e9:	55                   	push   rbp
   14000e8ea:	4e                   	rex.WRX
   14000e8eb:	45 5f                	rex.RB pop r15
   14000e8ed:	41 56                	push   r14
   14000e8ef:	4f                   	rex.WRXB
   14000e8f0:	49                   	rex.WB
   14000e8f1:	44 5f                	rex.R pop rdi
   14000e8f3:	46                   	rex.RX
   14000e8f4:	41                   	rex.B
   14000e8f5:	4c 53                	rex.WR push rbx
   14000e8f7:	45 5f                	rex.RB pop r15
   14000e8f9:	44                   	rex.R
   14000e8fa:	45 50                	rex.RB push r8
   14000e8fc:	5f                   	pop    rdi
   14000e8fd:	46                   	rex.RX
   14000e8fe:	4f 52                	rex.WRXB push r10
   14000e900:	5f                   	pop    rdi
   14000e901:	42                   	rex.X
   14000e902:	4d                   	rex.WRB
   14000e903:	49 00 2a             	rex.WB add BYTE PTR [r10],bpl
   14000e906:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e909:	36 5f                	ss pop rdi
   14000e90b:	54                   	push   rsp
   14000e90c:	55                   	push   rbp
   14000e90d:	4e                   	rex.WRX
   14000e90e:	45 5f                	rex.RB pop r15
   14000e910:	41                   	rex.B
   14000e911:	44                   	rex.R
   14000e912:	4a 55                	rex.WX push rbp
   14000e914:	53                   	push   rbx
   14000e915:	54                   	push   rsp
   14000e916:	5f                   	pop    rdi
   14000e917:	55                   	push   rbp
   14000e918:	4e 52                	rex.WRX push rdx
   14000e91a:	4f                   	rex.WRXB
   14000e91b:	4c                   	rex.WR
   14000e91c:	4c 00 2b             	rex.WR add BYTE PTR [rbx],r13b
   14000e91f:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e922:	36 5f                	ss pop rdi
   14000e924:	54                   	push   rsp
   14000e925:	55                   	push   rbp
   14000e926:	4e                   	rex.WRX
   14000e927:	45 5f                	rex.RB pop r15
   14000e929:	4f                   	rex.WRXB
   14000e92a:	4e                   	rex.WRX
   14000e92b:	45 5f                	rex.RB pop r15
   14000e92d:	49                   	rex.WB
   14000e92e:	46 5f                	rex.RX pop rdi
   14000e930:	43                   	rex.XB
   14000e931:	4f                   	rex.WRXB
   14000e932:	4e 56                	rex.WRX push rsi
   14000e934:	5f                   	pop    rdi
   14000e935:	49                   	rex.WB
   14000e936:	4e 53                	rex.WRX push rbx
   14000e938:	4e 00 2c 01          	rex.WRX add BYTE PTR [rcx+r8*1],r13b
   14000e93c:	58                   	pop    rax
   14000e93d:	38 36                	cmp    BYTE PTR [rsi],dh
   14000e93f:	5f                   	pop    rdi
   14000e940:	54                   	push   rsp
   14000e941:	55                   	push   rbp
   14000e942:	4e                   	rex.WRX
   14000e943:	45 5f                	rex.RB pop r15
   14000e945:	41 56                	push   r14
   14000e947:	4f                   	rex.WRXB
   14000e948:	49                   	rex.WB
   14000e949:	44 5f                	rex.R pop rdi
   14000e94b:	4d                   	rex.WRB
   14000e94c:	46                   	rex.RX
   14000e94d:	45                   	rex.RB
   14000e94e:	4e                   	rex.WRX
   14000e94f:	43                   	rex.XB
   14000e950:	45 00 2d 01 58 38 36 	add    BYTE PTR [rip+0x36385801],r13b        # 176394158 <.debug_line_str+0x3637ffdf>
   14000e957:	5f                   	pop    rdi
   14000e958:	54                   	push   rsp
   14000e959:	55                   	push   rbp
   14000e95a:	4e                   	rex.WRX
   14000e95b:	45 5f                	rex.RB pop r15
   14000e95d:	45 58                	rex.RB pop r8
   14000e95f:	50                   	push   rax
   14000e960:	41                   	rex.B
   14000e961:	4e                   	rex.WRX
   14000e962:	44 5f                	rex.R pop rdi
   14000e964:	41                   	rex.B
   14000e965:	42 53                	rex.X push rbx
   14000e967:	00 2e                	add    BYTE PTR [rsi],ch
   14000e969:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e96c:	36 5f                	ss pop rdi
   14000e96e:	54                   	push   rsp
   14000e96f:	55                   	push   rbp
   14000e970:	4e                   	rex.WRX
   14000e971:	45 5f                	rex.RB pop r15
   14000e973:	55                   	push   rbp
   14000e974:	53                   	push   rbx
   14000e975:	45 5f                	rex.RB pop r15
   14000e977:	48                   	rex.W
   14000e978:	49                   	rex.WB
   14000e979:	4d                   	rex.WRB
   14000e97a:	4f                   	rex.WRXB
   14000e97b:	44                   	rex.R
   14000e97c:	45 5f                	rex.RB pop r15
   14000e97e:	46                   	rex.RX
   14000e97f:	49                   	rex.WB
   14000e980:	4f 50                	rex.WRXB push r8
   14000e982:	00 2f                	add    BYTE PTR [rdi],ch
   14000e984:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e987:	36 5f                	ss pop rdi
   14000e989:	54                   	push   rsp
   14000e98a:	55                   	push   rbp
   14000e98b:	4e                   	rex.WRX
   14000e98c:	45 5f                	rex.RB pop r15
   14000e98e:	55                   	push   rbp
   14000e98f:	53                   	push   rbx
   14000e990:	45 5f                	rex.RB pop r15
   14000e992:	53                   	push   rbx
   14000e993:	49                   	rex.WB
   14000e994:	4d                   	rex.WRB
   14000e995:	4f                   	rex.WRXB
   14000e996:	44                   	rex.R
   14000e997:	45 5f                	rex.RB pop r15
   14000e999:	46                   	rex.RX
   14000e99a:	49                   	rex.WB
   14000e99b:	4f 50                	rex.WRXB push r8
   14000e99d:	00 30                	add    BYTE PTR [rax],dh
   14000e99f:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e9a2:	36 5f                	ss pop rdi
   14000e9a4:	54                   	push   rsp
   14000e9a5:	55                   	push   rbp
   14000e9a6:	4e                   	rex.WRX
   14000e9a7:	45 5f                	rex.RB pop r15
   14000e9a9:	55                   	push   rbp
   14000e9aa:	53                   	push   rbx
   14000e9ab:	45 5f                	rex.RB pop r15
   14000e9ad:	46                   	rex.RX
   14000e9ae:	46 52                	rex.RX push rdx
   14000e9b0:	45                   	rex.RB
   14000e9b1:	45 50                	rex.RB push r8
   14000e9b3:	00 31                	add    BYTE PTR [rcx],dh
   14000e9b5:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e9b8:	36 5f                	ss pop rdi
   14000e9ba:	54                   	push   rsp
   14000e9bb:	55                   	push   rbp
   14000e9bc:	4e                   	rex.WRX
   14000e9bd:	45 5f                	rex.RB pop r15
   14000e9bf:	45 58                	rex.RB pop r8
   14000e9c1:	54                   	push   rsp
   14000e9c2:	5f                   	pop    rdi
   14000e9c3:	38 30                	cmp    BYTE PTR [rax],dh
   14000e9c5:	33 38                	xor    edi,DWORD PTR [rax]
   14000e9c7:	37                   	(bad)
   14000e9c8:	5f                   	pop    rdi
   14000e9c9:	43                   	rex.XB
   14000e9ca:	4f                   	rex.WRXB
   14000e9cb:	4e 53                	rex.WRX push rbx
   14000e9cd:	54                   	push   rsp
   14000e9ce:	41                   	rex.B
   14000e9cf:	4e 54                	rex.WRX push rsp
   14000e9d1:	53                   	push   rbx
   14000e9d2:	00 32                	add    BYTE PTR [rdx],dh
   14000e9d4:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e9d7:	36 5f                	ss pop rdi
   14000e9d9:	54                   	push   rsp
   14000e9da:	55                   	push   rbp
   14000e9db:	4e                   	rex.WRX
   14000e9dc:	45 5f                	rex.RB pop r15
   14000e9de:	47                   	rex.RXB
   14000e9df:	45                   	rex.RB
   14000e9e0:	4e                   	rex.WRX
   14000e9e1:	45 52                	rex.RB push r10
   14000e9e3:	41                   	rex.B
   14000e9e4:	4c 5f                	rex.WR pop rdi
   14000e9e6:	52                   	push   rdx
   14000e9e7:	45                   	rex.RB
   14000e9e8:	47 53                	rex.RXB push r11
   14000e9ea:	5f                   	pop    rdi
   14000e9eb:	53                   	push   rbx
   14000e9ec:	53                   	push   rbx
   14000e9ed:	45 5f                	rex.RB pop r15
   14000e9ef:	53                   	push   rbx
   14000e9f0:	50                   	push   rax
   14000e9f1:	49                   	rex.WB
   14000e9f2:	4c                   	rex.WR
   14000e9f3:	4c 00 33             	rex.WR add BYTE PTR [rbx],r14b
   14000e9f6:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000e9f9:	36 5f                	ss pop rdi
   14000e9fb:	54                   	push   rsp
   14000e9fc:	55                   	push   rbp
   14000e9fd:	4e                   	rex.WRX
   14000e9fe:	45 5f                	rex.RB pop r15
   14000ea00:	53                   	push   rbx
   14000ea01:	53                   	push   rbx
   14000ea02:	45 5f                	rex.RB pop r15
   14000ea04:	55                   	push   rbp
   14000ea05:	4e                   	rex.WRX
   14000ea06:	41                   	rex.B
   14000ea07:	4c                   	rex.WR
   14000ea08:	49                   	rex.WB
   14000ea09:	47                   	rex.RXB
   14000ea0a:	4e                   	rex.WRX
   14000ea0b:	45                   	rex.RB
   14000ea0c:	44 5f                	rex.R pop rdi
   14000ea0e:	4c                   	rex.WR
   14000ea0f:	4f                   	rex.WRXB
   14000ea10:	41                   	rex.B
   14000ea11:	44 5f                	rex.R pop rdi
   14000ea13:	4f 50                	rex.WRXB push r8
   14000ea15:	54                   	push   rsp
   14000ea16:	49                   	rex.WB
   14000ea17:	4d                   	rex.WRB
   14000ea18:	41                   	rex.B
   14000ea19:	4c 00 34 01          	rex.WR add BYTE PTR [rcx+rax*1],r14b
   14000ea1d:	58                   	pop    rax
   14000ea1e:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ea20:	5f                   	pop    rdi
   14000ea21:	54                   	push   rsp
   14000ea22:	55                   	push   rbp
   14000ea23:	4e                   	rex.WRX
   14000ea24:	45 5f                	rex.RB pop r15
   14000ea26:	53                   	push   rbx
   14000ea27:	53                   	push   rbx
   14000ea28:	45 5f                	rex.RB pop r15
   14000ea2a:	55                   	push   rbp
   14000ea2b:	4e                   	rex.WRX
   14000ea2c:	41                   	rex.B
   14000ea2d:	4c                   	rex.WR
   14000ea2e:	49                   	rex.WB
   14000ea2f:	47                   	rex.RXB
   14000ea30:	4e                   	rex.WRX
   14000ea31:	45                   	rex.RB
   14000ea32:	44 5f                	rex.R pop rdi
   14000ea34:	53                   	push   rbx
   14000ea35:	54                   	push   rsp
   14000ea36:	4f 52                	rex.WRXB push r10
   14000ea38:	45 5f                	rex.RB pop r15
   14000ea3a:	4f 50                	rex.WRXB push r8
   14000ea3c:	54                   	push   rsp
   14000ea3d:	49                   	rex.WB
   14000ea3e:	4d                   	rex.WRB
   14000ea3f:	41                   	rex.B
   14000ea40:	4c 00 35 01 58 38 36 	rex.WR add BYTE PTR [rip+0x36385801],r14b        # 176394248 <.debug_line_str+0x363800cf>
   14000ea47:	5f                   	pop    rdi
   14000ea48:	54                   	push   rsp
   14000ea49:	55                   	push   rbp
   14000ea4a:	4e                   	rex.WRX
   14000ea4b:	45 5f                	rex.RB pop r15
   14000ea4d:	53                   	push   rbx
   14000ea4e:	53                   	push   rbx
   14000ea4f:	45 5f                	rex.RB pop r15
   14000ea51:	50                   	push   rax
   14000ea52:	41                   	rex.B
   14000ea53:	43                   	rex.XB
   14000ea54:	4b                   	rex.WXB
   14000ea55:	45                   	rex.RB
   14000ea56:	44 5f                	rex.R pop rdi
   14000ea58:	53                   	push   rbx
   14000ea59:	49                   	rex.WB
   14000ea5a:	4e                   	rex.WRX
   14000ea5b:	47                   	rex.RXB
   14000ea5c:	4c                   	rex.WR
   14000ea5d:	45 5f                	rex.RB pop r15
   14000ea5f:	49                   	rex.WB
   14000ea60:	4e 53                	rex.WRX push rbx
   14000ea62:	4e 5f                	rex.WRX pop rdi
   14000ea64:	4f 50                	rex.WRXB push r8
   14000ea66:	54                   	push   rsp
   14000ea67:	49                   	rex.WB
   14000ea68:	4d                   	rex.WRB
   14000ea69:	41                   	rex.B
   14000ea6a:	4c 00 36             	rex.WR add BYTE PTR [rsi],r14b
   14000ea6d:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000ea70:	36 5f                	ss pop rdi
   14000ea72:	54                   	push   rsp
   14000ea73:	55                   	push   rbp
   14000ea74:	4e                   	rex.WRX
   14000ea75:	45 5f                	rex.RB pop r15
   14000ea77:	53                   	push   rbx
   14000ea78:	53                   	push   rbx
   14000ea79:	45 5f                	rex.RB pop r15
   14000ea7b:	54                   	push   rsp
   14000ea7c:	59                   	pop    rcx
   14000ea7d:	50                   	push   rax
   14000ea7e:	45                   	rex.RB
   14000ea7f:	4c                   	rex.WR
   14000ea80:	45 53                	rex.RB push r11
   14000ea82:	53                   	push   rbx
   14000ea83:	5f                   	pop    rdi
   14000ea84:	53                   	push   rbx
   14000ea85:	54                   	push   rsp
   14000ea86:	4f 52                	rex.WRXB push r10
   14000ea88:	45 53                	rex.RB push r11
   14000ea8a:	00 37                	add    BYTE PTR [rdi],dh
   14000ea8c:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000ea8f:	36 5f                	ss pop rdi
   14000ea91:	54                   	push   rsp
   14000ea92:	55                   	push   rbp
   14000ea93:	4e                   	rex.WRX
   14000ea94:	45 5f                	rex.RB pop r15
   14000ea96:	53                   	push   rbx
   14000ea97:	53                   	push   rbx
   14000ea98:	45 5f                	rex.RB pop r15
   14000ea9a:	4c                   	rex.WR
   14000ea9b:	4f                   	rex.WRXB
   14000ea9c:	41                   	rex.B
   14000ea9d:	44 30 5f 42          	xor    BYTE PTR [rdi+0x42],r11b
   14000eaa1:	59                   	pop    rcx
   14000eaa2:	5f                   	pop    rdi
   14000eaa3:	50                   	push   rax
   14000eaa4:	58                   	pop    rax
   14000eaa5:	4f 52                	rex.WRXB push r10
   14000eaa7:	00 38                	add    BYTE PTR [rax],bh
   14000eaa9:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000eaac:	36 5f                	ss pop rdi
   14000eaae:	54                   	push   rsp
   14000eaaf:	55                   	push   rbp
   14000eab0:	4e                   	rex.WRX
   14000eab1:	45 5f                	rex.RB pop r15
   14000eab3:	49                   	rex.WB
   14000eab4:	4e 54                	rex.WRX push rsp
   14000eab6:	45 52                	rex.RB push r10
   14000eab8:	5f                   	pop    rdi
   14000eab9:	55                   	push   rbp
   14000eaba:	4e                   	rex.WRX
   14000eabb:	49 54                	rex.WB push r12
   14000eabd:	5f                   	pop    rdi
   14000eabe:	4d                   	rex.WRB
   14000eabf:	4f 56                	rex.WRXB push r14
   14000eac1:	45 53                	rex.RB push r11
   14000eac3:	5f                   	pop    rdi
   14000eac4:	54                   	push   rsp
   14000eac5:	4f 5f                	rex.WRXB pop r15
   14000eac7:	56                   	push   rsi
   14000eac8:	45                   	rex.RB
   14000eac9:	43 00 39             	rex.XB add BYTE PTR [r9],dil
   14000eacc:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000eacf:	36 5f                	ss pop rdi
   14000ead1:	54                   	push   rsp
   14000ead2:	55                   	push   rbp
   14000ead3:	4e                   	rex.WRX
   14000ead4:	45 5f                	rex.RB pop r15
   14000ead6:	49                   	rex.WB
   14000ead7:	4e 54                	rex.WRX push rsp
   14000ead9:	45 52                	rex.RB push r10
   14000eadb:	5f                   	pop    rdi
   14000eadc:	55                   	push   rbp
   14000eadd:	4e                   	rex.WRX
   14000eade:	49 54                	rex.WB push r12
   14000eae0:	5f                   	pop    rdi
   14000eae1:	4d                   	rex.WRB
   14000eae2:	4f 56                	rex.WRXB push r14
   14000eae4:	45 53                	rex.RB push r11
   14000eae6:	5f                   	pop    rdi
   14000eae7:	46 52                	rex.RX push rdx
   14000eae9:	4f                   	rex.WRXB
   14000eaea:	4d 5f                	rex.WRB pop r15
   14000eaec:	56                   	push   rsi
   14000eaed:	45                   	rex.RB
   14000eaee:	43 00 3a             	rex.XB add BYTE PTR [r10],dil
   14000eaf1:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000eaf4:	36 5f                	ss pop rdi
   14000eaf6:	54                   	push   rsp
   14000eaf7:	55                   	push   rbp
   14000eaf8:	4e                   	rex.WRX
   14000eaf9:	45 5f                	rex.RB pop r15
   14000eafb:	49                   	rex.WB
   14000eafc:	4e 54                	rex.WRX push rsp
   14000eafe:	45 52                	rex.RB push r10
   14000eb00:	5f                   	pop    rdi
   14000eb01:	55                   	push   rbp
   14000eb02:	4e                   	rex.WRX
   14000eb03:	49 54                	rex.WB push r12
   14000eb05:	5f                   	pop    rdi
   14000eb06:	43                   	rex.XB
   14000eb07:	4f                   	rex.WRXB
   14000eb08:	4e 56                	rex.WRX push rsi
   14000eb0a:	45 52                	rex.RB push r10
   14000eb0c:	53                   	push   rbx
   14000eb0d:	49                   	rex.WB
   14000eb0e:	4f                   	rex.WRXB
   14000eb0f:	4e 53                	rex.WRX push rbx
   14000eb11:	00 3b                	add    BYTE PTR [rbx],bh
   14000eb13:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000eb16:	36 5f                	ss pop rdi
   14000eb18:	54                   	push   rsp
   14000eb19:	55                   	push   rbp
   14000eb1a:	4e                   	rex.WRX
   14000eb1b:	45 5f                	rex.RB pop r15
   14000eb1d:	53                   	push   rbx
   14000eb1e:	50                   	push   rax
   14000eb1f:	4c                   	rex.WR
   14000eb20:	49 54                	rex.WB push r12
   14000eb22:	5f                   	pop    rdi
   14000eb23:	4d                   	rex.WRB
   14000eb24:	45                   	rex.RB
   14000eb25:	4d 5f                	rex.WRB pop r15
   14000eb27:	4f 50                	rex.WRXB push r8
   14000eb29:	4e                   	rex.WRX
   14000eb2a:	44 5f                	rex.R pop rdi
   14000eb2c:	46                   	rex.RX
   14000eb2d:	4f 52                	rex.WRXB push r10
   14000eb2f:	5f                   	pop    rdi
   14000eb30:	46 50                	rex.RX push rax
   14000eb32:	5f                   	pop    rdi
   14000eb33:	43                   	rex.XB
   14000eb34:	4f                   	rex.WRXB
   14000eb35:	4e 56                	rex.WRX push rsi
   14000eb37:	45 52                	rex.RB push r10
   14000eb39:	54                   	push   rsp
   14000eb3a:	53                   	push   rbx
   14000eb3b:	00 3c 01             	add    BYTE PTR [rcx+rax*1],bh
   14000eb3e:	58                   	pop    rax
   14000eb3f:	38 36                	cmp    BYTE PTR [rsi],dh
   14000eb41:	5f                   	pop    rdi
   14000eb42:	54                   	push   rsp
   14000eb43:	55                   	push   rbp
   14000eb44:	4e                   	rex.WRX
   14000eb45:	45 5f                	rex.RB pop r15
   14000eb47:	55                   	push   rbp
   14000eb48:	53                   	push   rbx
   14000eb49:	45 5f                	rex.RB pop r15
   14000eb4b:	56                   	push   rsi
   14000eb4c:	45                   	rex.RB
   14000eb4d:	43 54                	rex.XB push r12
   14000eb4f:	4f 52                	rex.WRXB push r10
   14000eb51:	5f                   	pop    rdi
   14000eb52:	46 50                	rex.RX push rax
   14000eb54:	5f                   	pop    rdi
   14000eb55:	43                   	rex.XB
   14000eb56:	4f                   	rex.WRXB
   14000eb57:	4e 56                	rex.WRX push rsi
   14000eb59:	45 52                	rex.RB push r10
   14000eb5b:	54                   	push   rsp
   14000eb5c:	53                   	push   rbx
   14000eb5d:	00 3d 01 58 38 36    	add    BYTE PTR [rip+0x36385801],bh        # 176394364 <.debug_line_str+0x363801eb>
   14000eb63:	5f                   	pop    rdi
   14000eb64:	54                   	push   rsp
   14000eb65:	55                   	push   rbp
   14000eb66:	4e                   	rex.WRX
   14000eb67:	45 5f                	rex.RB pop r15
   14000eb69:	55                   	push   rbp
   14000eb6a:	53                   	push   rbx
   14000eb6b:	45 5f                	rex.RB pop r15
   14000eb6d:	56                   	push   rsi
   14000eb6e:	45                   	rex.RB
   14000eb6f:	43 54                	rex.XB push r12
   14000eb71:	4f 52                	rex.WRXB push r10
   14000eb73:	5f                   	pop    rdi
   14000eb74:	43                   	rex.XB
   14000eb75:	4f                   	rex.WRXB
   14000eb76:	4e 56                	rex.WRX push rsi
   14000eb78:	45 52                	rex.RB push r10
   14000eb7a:	54                   	push   rsp
   14000eb7b:	53                   	push   rbx
   14000eb7c:	00 3e                	add    BYTE PTR [rsi],bh
   14000eb7e:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000eb81:	36 5f                	ss pop rdi
   14000eb83:	54                   	push   rsp
   14000eb84:	55                   	push   rbp
   14000eb85:	4e                   	rex.WRX
   14000eb86:	45 5f                	rex.RB pop r15
   14000eb88:	53                   	push   rbx
   14000eb89:	4c                   	rex.WR
   14000eb8a:	4f 57                	rex.WRXB push r15
   14000eb8c:	5f                   	pop    rdi
   14000eb8d:	50                   	push   rax
   14000eb8e:	53                   	push   rbx
   14000eb8f:	48 55                	rex.W push rbp
   14000eb91:	46                   	rex.RX
   14000eb92:	42 00 3f             	rex.X add BYTE PTR [rdi],dil
   14000eb95:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000eb98:	36 5f                	ss pop rdi
   14000eb9a:	54                   	push   rsp
   14000eb9b:	55                   	push   rbp
   14000eb9c:	4e                   	rex.WRX
   14000eb9d:	45 5f                	rex.RB pop r15
   14000eb9f:	41 56                	push   r14
   14000eba1:	4f                   	rex.WRXB
   14000eba2:	49                   	rex.WB
   14000eba3:	44 5f                	rex.R pop rdi
   14000eba5:	34 42                	xor    al,0x42
   14000eba7:	59                   	pop    rcx
   14000eba8:	54                   	push   rsp
   14000eba9:	45 5f                	rex.RB pop r15
   14000ebab:	50                   	push   rax
   14000ebac:	52                   	push   rdx
   14000ebad:	45                   	rex.RB
   14000ebae:	46                   	rex.RX
   14000ebaf:	49 58                	rex.WB pop r8
   14000ebb1:	45 53                	rex.RB push r11
   14000ebb3:	00 40 01             	add    BYTE PTR [rax+0x1],al
   14000ebb6:	58                   	pop    rax
   14000ebb7:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ebb9:	5f                   	pop    rdi
   14000ebba:	54                   	push   rsp
   14000ebbb:	55                   	push   rbp
   14000ebbc:	4e                   	rex.WRX
   14000ebbd:	45 5f                	rex.RB pop r15
   14000ebbf:	55                   	push   rbp
   14000ebc0:	53                   	push   rbx
   14000ebc1:	45 5f                	rex.RB pop r15
   14000ebc3:	47                   	rex.RXB
   14000ebc4:	41 54                	push   r12
   14000ebc6:	48                   	rex.W
   14000ebc7:	45 52                	rex.RB push r10
   14000ebc9:	5f                   	pop    rdi
   14000ebca:	32 50 41             	xor    dl,BYTE PTR [rax+0x41]
   14000ebcd:	52                   	push   rdx
   14000ebce:	54                   	push   rsp
   14000ebcf:	53                   	push   rbx
   14000ebd0:	00 41 01             	add    BYTE PTR [rcx+0x1],al
   14000ebd3:	58                   	pop    rax
   14000ebd4:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ebd6:	5f                   	pop    rdi
   14000ebd7:	54                   	push   rsp
   14000ebd8:	55                   	push   rbp
   14000ebd9:	4e                   	rex.WRX
   14000ebda:	45 5f                	rex.RB pop r15
   14000ebdc:	55                   	push   rbp
   14000ebdd:	53                   	push   rbx
   14000ebde:	45 5f                	rex.RB pop r15
   14000ebe0:	53                   	push   rbx
   14000ebe1:	43                   	rex.XB
   14000ebe2:	41 54                	push   r12
   14000ebe4:	54                   	push   rsp
   14000ebe5:	45 52                	rex.RB push r10
   14000ebe7:	5f                   	pop    rdi
   14000ebe8:	32 50 41             	xor    dl,BYTE PTR [rax+0x41]
   14000ebeb:	52                   	push   rdx
   14000ebec:	54                   	push   rsp
   14000ebed:	53                   	push   rbx
   14000ebee:	00 42 01             	add    BYTE PTR [rdx+0x1],al
   14000ebf1:	58                   	pop    rax
   14000ebf2:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ebf4:	5f                   	pop    rdi
   14000ebf5:	54                   	push   rsp
   14000ebf6:	55                   	push   rbp
   14000ebf7:	4e                   	rex.WRX
   14000ebf8:	45 5f                	rex.RB pop r15
   14000ebfa:	55                   	push   rbp
   14000ebfb:	53                   	push   rbx
   14000ebfc:	45 5f                	rex.RB pop r15
   14000ebfe:	47                   	rex.RXB
   14000ebff:	41 54                	push   r12
   14000ec01:	48                   	rex.W
   14000ec02:	45 52                	rex.RB push r10
   14000ec04:	5f                   	pop    rdi
   14000ec05:	34 50                	xor    al,0x50
   14000ec07:	41 52                	push   r10
   14000ec09:	54                   	push   rsp
   14000ec0a:	53                   	push   rbx
   14000ec0b:	00 43 01             	add    BYTE PTR [rbx+0x1],al
   14000ec0e:	58                   	pop    rax
   14000ec0f:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ec11:	5f                   	pop    rdi
   14000ec12:	54                   	push   rsp
   14000ec13:	55                   	push   rbp
   14000ec14:	4e                   	rex.WRX
   14000ec15:	45 5f                	rex.RB pop r15
   14000ec17:	55                   	push   rbp
   14000ec18:	53                   	push   rbx
   14000ec19:	45 5f                	rex.RB pop r15
   14000ec1b:	53                   	push   rbx
   14000ec1c:	43                   	rex.XB
   14000ec1d:	41 54                	push   r12
   14000ec1f:	54                   	push   rsp
   14000ec20:	45 52                	rex.RB push r10
   14000ec22:	5f                   	pop    rdi
   14000ec23:	34 50                	xor    al,0x50
   14000ec25:	41 52                	push   r10
   14000ec27:	54                   	push   rsp
   14000ec28:	53                   	push   rbx
   14000ec29:	00 44 01 58          	add    BYTE PTR [rcx+rax*1+0x58],al
   14000ec2d:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ec2f:	5f                   	pop    rdi
   14000ec30:	54                   	push   rsp
   14000ec31:	55                   	push   rbp
   14000ec32:	4e                   	rex.WRX
   14000ec33:	45 5f                	rex.RB pop r15
   14000ec35:	55                   	push   rbp
   14000ec36:	53                   	push   rbx
   14000ec37:	45 5f                	rex.RB pop r15
   14000ec39:	47                   	rex.RXB
   14000ec3a:	41 54                	push   r12
   14000ec3c:	48                   	rex.W
   14000ec3d:	45 52                	rex.RB push r10
   14000ec3f:	00 45 01             	add    BYTE PTR [rbp+0x1],al
   14000ec42:	58                   	pop    rax
   14000ec43:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ec45:	5f                   	pop    rdi
   14000ec46:	54                   	push   rsp
   14000ec47:	55                   	push   rbp
   14000ec48:	4e                   	rex.WRX
   14000ec49:	45 5f                	rex.RB pop r15
   14000ec4b:	55                   	push   rbp
   14000ec4c:	53                   	push   rbx
   14000ec4d:	45 5f                	rex.RB pop r15
   14000ec4f:	53                   	push   rbx
   14000ec50:	43                   	rex.XB
   14000ec51:	41 54                	push   r12
   14000ec53:	54                   	push   rsp
   14000ec54:	45 52                	rex.RB push r10
   14000ec56:	00 46 01             	add    BYTE PTR [rsi+0x1],al
   14000ec59:	58                   	pop    rax
   14000ec5a:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ec5c:	5f                   	pop    rdi
   14000ec5d:	54                   	push   rsp
   14000ec5e:	55                   	push   rbp
   14000ec5f:	4e                   	rex.WRX
   14000ec60:	45 5f                	rex.RB pop r15
   14000ec62:	41 56                	push   r14
   14000ec64:	4f                   	rex.WRXB
   14000ec65:	49                   	rex.WB
   14000ec66:	44 5f                	rex.R pop rdi
   14000ec68:	31 32                	xor    DWORD PTR [rdx],esi
   14000ec6a:	38 46 4d             	cmp    BYTE PTR [rsi+0x4d],al
   14000ec6d:	41 5f                	pop    r15
   14000ec6f:	43                   	rex.XB
   14000ec70:	48                   	rex.W
   14000ec71:	41                   	rex.B
   14000ec72:	49                   	rex.WB
   14000ec73:	4e 53                	rex.WRX push rbx
   14000ec75:	00 47 01             	add    BYTE PTR [rdi+0x1],al
   14000ec78:	58                   	pop    rax
   14000ec79:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ec7b:	5f                   	pop    rdi
   14000ec7c:	54                   	push   rsp
   14000ec7d:	55                   	push   rbp
   14000ec7e:	4e                   	rex.WRX
   14000ec7f:	45 5f                	rex.RB pop r15
   14000ec81:	41 56                	push   r14
   14000ec83:	4f                   	rex.WRXB
   14000ec84:	49                   	rex.WB
   14000ec85:	44 5f                	rex.R pop rdi
   14000ec87:	32 35 36 46 4d 41    	xor    dh,BYTE PTR [rip+0x414d4636]        # 1814e32c3 <.debug_line_str+0x414cf14a>
   14000ec8d:	5f                   	pop    rdi
   14000ec8e:	43                   	rex.XB
   14000ec8f:	48                   	rex.W
   14000ec90:	41                   	rex.B
   14000ec91:	49                   	rex.WB
   14000ec92:	4e 53                	rex.WRX push rbx
   14000ec94:	00 48 01             	add    BYTE PTR [rax+0x1],cl
   14000ec97:	58                   	pop    rax
   14000ec98:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ec9a:	5f                   	pop    rdi
   14000ec9b:	54                   	push   rsp
   14000ec9c:	55                   	push   rbp
   14000ec9d:	4e                   	rex.WRX
   14000ec9e:	45 5f                	rex.RB pop r15
   14000eca0:	41 56                	push   r14
   14000eca2:	4f                   	rex.WRXB
   14000eca3:	49                   	rex.WB
   14000eca4:	44 5f                	rex.R pop rdi
   14000eca6:	35 31 32 46 4d       	xor    eax,0x4d463231
   14000ecab:	41 5f                	pop    r15
   14000ecad:	43                   	rex.XB
   14000ecae:	48                   	rex.W
   14000ecaf:	41                   	rex.B
   14000ecb0:	49                   	rex.WB
   14000ecb1:	4e 53                	rex.WRX push rbx
   14000ecb3:	00 49 01             	add    BYTE PTR [rcx+0x1],cl
   14000ecb6:	58                   	pop    rax
   14000ecb7:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ecb9:	5f                   	pop    rdi
   14000ecba:	54                   	push   rsp
   14000ecbb:	55                   	push   rbp
   14000ecbc:	4e                   	rex.WRX
   14000ecbd:	45 5f                	rex.RB pop r15
   14000ecbf:	56                   	push   rsi
   14000ecc0:	32 44 46 5f          	xor    al,BYTE PTR [rsi+rax*2+0x5f]
   14000ecc4:	52                   	push   rdx
   14000ecc5:	45                   	rex.RB
   14000ecc6:	44 55                	rex.R push rbp
   14000ecc8:	43 54                	rex.XB push r12
   14000ecca:	49                   	rex.WB
   14000eccb:	4f                   	rex.WRXB
   14000eccc:	4e 5f                	rex.WRX pop rdi
   14000ecce:	50                   	push   rax
   14000eccf:	52                   	push   rdx
   14000ecd0:	45                   	rex.RB
   14000ecd1:	46                   	rex.RX
   14000ecd2:	45 52                	rex.RB push r10
   14000ecd4:	5f                   	pop    rdi
   14000ecd5:	48                   	rex.W
   14000ecd6:	41                   	rex.B
   14000ecd7:	44                   	rex.R
   14000ecd8:	44 50                	rex.R push rax
   14000ecda:	44 00 4a 01          	add    BYTE PTR [rdx+0x1],r9b
   14000ecde:	58                   	pop    rax
   14000ecdf:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ece1:	5f                   	pop    rdi
   14000ece2:	54                   	push   rsp
   14000ece3:	55                   	push   rbp
   14000ece4:	4e                   	rex.WRX
   14000ece5:	45 5f                	rex.RB pop r15
   14000ece7:	41 56                	push   r14
   14000ece9:	58                   	pop    rax
   14000ecea:	32 35 36 5f 55 4e    	xor    dh,BYTE PTR [rip+0x4e555f36]        # 18e564c26 <.debug_line_str+0x4e550aad>
   14000ecf0:	41                   	rex.B
   14000ecf1:	4c                   	rex.WR
   14000ecf2:	49                   	rex.WB
   14000ecf3:	47                   	rex.RXB
   14000ecf4:	4e                   	rex.WRX
   14000ecf5:	45                   	rex.RB
   14000ecf6:	44 5f                	rex.R pop rdi
   14000ecf8:	4c                   	rex.WR
   14000ecf9:	4f                   	rex.WRXB
   14000ecfa:	41                   	rex.B
   14000ecfb:	44 5f                	rex.R pop rdi
   14000ecfd:	4f 50                	rex.WRXB push r8
   14000ecff:	54                   	push   rsp
   14000ed00:	49                   	rex.WB
   14000ed01:	4d                   	rex.WRB
   14000ed02:	41                   	rex.B
   14000ed03:	4c 00 4b 01          	rex.WR add BYTE PTR [rbx+0x1],r9b
   14000ed07:	58                   	pop    rax
   14000ed08:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ed0a:	5f                   	pop    rdi
   14000ed0b:	54                   	push   rsp
   14000ed0c:	55                   	push   rbp
   14000ed0d:	4e                   	rex.WRX
   14000ed0e:	45 5f                	rex.RB pop r15
   14000ed10:	41 56                	push   r14
   14000ed12:	58                   	pop    rax
   14000ed13:	32 35 36 5f 55 4e    	xor    dh,BYTE PTR [rip+0x4e555f36]        # 18e564c4f <.debug_line_str+0x4e550ad6>
   14000ed19:	41                   	rex.B
   14000ed1a:	4c                   	rex.WR
   14000ed1b:	49                   	rex.WB
   14000ed1c:	47                   	rex.RXB
   14000ed1d:	4e                   	rex.WRX
   14000ed1e:	45                   	rex.RB
   14000ed1f:	44 5f                	rex.R pop rdi
   14000ed21:	53                   	push   rbx
   14000ed22:	54                   	push   rsp
   14000ed23:	4f 52                	rex.WRXB push r10
   14000ed25:	45 5f                	rex.RB pop r15
   14000ed27:	4f 50                	rex.WRXB push r8
   14000ed29:	54                   	push   rsp
   14000ed2a:	49                   	rex.WB
   14000ed2b:	4d                   	rex.WRB
   14000ed2c:	41                   	rex.B
   14000ed2d:	4c 00 4c 01 58       	rex.WR add BYTE PTR [rcx+rax*1+0x58],r9b
   14000ed32:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ed34:	5f                   	pop    rdi
   14000ed35:	54                   	push   rsp
   14000ed36:	55                   	push   rbp
   14000ed37:	4e                   	rex.WRX
   14000ed38:	45 5f                	rex.RB pop r15
   14000ed3a:	41 56                	push   r14
   14000ed3c:	58                   	pop    rax
   14000ed3d:	32 35 36 5f 53 50    	xor    dh,BYTE PTR [rip+0x50535f36]        # 190544c79 <.debug_line_str+0x50530b00>
   14000ed43:	4c                   	rex.WR
   14000ed44:	49 54                	rex.WB push r12
   14000ed46:	5f                   	pop    rdi
   14000ed47:	52                   	push   rdx
   14000ed48:	45                   	rex.RB
   14000ed49:	47 53                	rex.RXB push r11
   14000ed4b:	00 4d 01             	add    BYTE PTR [rbp+0x1],cl
   14000ed4e:	58                   	pop    rax
   14000ed4f:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ed51:	5f                   	pop    rdi
   14000ed52:	54                   	push   rsp
   14000ed53:	55                   	push   rbp
   14000ed54:	4e                   	rex.WRX
   14000ed55:	45 5f                	rex.RB pop r15
   14000ed57:	41 56                	push   r14
   14000ed59:	58                   	pop    rax
   14000ed5a:	31 32                	xor    DWORD PTR [rdx],esi
   14000ed5c:	38 5f 4f             	cmp    BYTE PTR [rdi+0x4f],bl
   14000ed5f:	50                   	push   rax
   14000ed60:	54                   	push   rsp
   14000ed61:	49                   	rex.WB
   14000ed62:	4d                   	rex.WRB
   14000ed63:	41                   	rex.B
   14000ed64:	4c 00 4e 01          	rex.WR add BYTE PTR [rsi+0x1],r9b
   14000ed68:	58                   	pop    rax
   14000ed69:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ed6b:	5f                   	pop    rdi
   14000ed6c:	54                   	push   rsp
   14000ed6d:	55                   	push   rbp
   14000ed6e:	4e                   	rex.WRX
   14000ed6f:	45 5f                	rex.RB pop r15
   14000ed71:	41 56                	push   r14
   14000ed73:	58                   	pop    rax
   14000ed74:	32 35 36 5f 4f 50    	xor    dh,BYTE PTR [rip+0x504f5f36]        # 190504cb0 <.debug_line_str+0x504f0b37>
   14000ed7a:	54                   	push   rsp
   14000ed7b:	49                   	rex.WB
   14000ed7c:	4d                   	rex.WRB
   14000ed7d:	41                   	rex.B
   14000ed7e:	4c 00 4f 01          	rex.WR add BYTE PTR [rdi+0x1],r9b
   14000ed82:	58                   	pop    rax
   14000ed83:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ed85:	5f                   	pop    rdi
   14000ed86:	54                   	push   rsp
   14000ed87:	55                   	push   rbp
   14000ed88:	4e                   	rex.WRX
   14000ed89:	45 5f                	rex.RB pop r15
   14000ed8b:	41 56                	push   r14
   14000ed8d:	58                   	pop    rax
   14000ed8e:	35 31 32 5f 53       	xor    eax,0x535f3231
   14000ed93:	50                   	push   rax
   14000ed94:	4c                   	rex.WR
   14000ed95:	49 54                	rex.WB push r12
   14000ed97:	5f                   	pop    rdi
   14000ed98:	52                   	push   rdx
   14000ed99:	45                   	rex.RB
   14000ed9a:	47 53                	rex.RXB push r11
   14000ed9c:	00 50 01             	add    BYTE PTR [rax+0x1],dl
   14000ed9f:	58                   	pop    rax
   14000eda0:	38 36                	cmp    BYTE PTR [rsi],dh
   14000eda2:	5f                   	pop    rdi
   14000eda3:	54                   	push   rsp
   14000eda4:	55                   	push   rbp
   14000eda5:	4e                   	rex.WRX
   14000eda6:	45 5f                	rex.RB pop r15
   14000eda8:	41 56                	push   r14
   14000edaa:	58                   	pop    rax
   14000edab:	32 35 36 5f 4d 4f    	xor    dh,BYTE PTR [rip+0x4f4d5f36]        # 18f4e4ce7 <.debug_line_str+0x4f4d0b6e>
   14000edb1:	56                   	push   rsi
   14000edb2:	45 5f                	rex.RB pop r15
   14000edb4:	42 59                	rex.X pop rcx
   14000edb6:	5f                   	pop    rdi
   14000edb7:	50                   	push   rax
   14000edb8:	49                   	rex.WB
   14000edb9:	45                   	rex.RB
   14000edba:	43                   	rex.XB
   14000edbb:	45 53                	rex.RB push r11
   14000edbd:	00 51 01             	add    BYTE PTR [rcx+0x1],dl
   14000edc0:	58                   	pop    rax
   14000edc1:	38 36                	cmp    BYTE PTR [rsi],dh
   14000edc3:	5f                   	pop    rdi
   14000edc4:	54                   	push   rsp
   14000edc5:	55                   	push   rbp
   14000edc6:	4e                   	rex.WRX
   14000edc7:	45 5f                	rex.RB pop r15
   14000edc9:	41 56                	push   r14
   14000edcb:	58                   	pop    rax
   14000edcc:	32 35 36 5f 53 54    	xor    dh,BYTE PTR [rip+0x54535f36]        # 194544d08 <.debug_line_str+0x54530b8f>
   14000edd2:	4f 52                	rex.WRXB push r10
   14000edd4:	45 5f                	rex.RB pop r15
   14000edd6:	42 59                	rex.X pop rcx
   14000edd8:	5f                   	pop    rdi
   14000edd9:	50                   	push   rax
   14000edda:	49                   	rex.WB
   14000eddb:	45                   	rex.RB
   14000eddc:	43                   	rex.XB
   14000eddd:	45 53                	rex.RB push r11
   14000eddf:	00 52 01             	add    BYTE PTR [rdx+0x1],dl
   14000ede2:	58                   	pop    rax
   14000ede3:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ede5:	5f                   	pop    rdi
   14000ede6:	54                   	push   rsp
   14000ede7:	55                   	push   rbp
   14000ede8:	4e                   	rex.WRX
   14000ede9:	45 5f                	rex.RB pop r15
   14000edeb:	41 56                	push   r14
   14000eded:	58                   	pop    rax
   14000edee:	35 31 32 5f 4d       	xor    eax,0x4d5f3231
   14000edf3:	4f 56                	rex.WRXB push r14
   14000edf5:	45 5f                	rex.RB pop r15
   14000edf7:	42 59                	rex.X pop rcx
   14000edf9:	5f                   	pop    rdi
   14000edfa:	50                   	push   rax
   14000edfb:	49                   	rex.WB
   14000edfc:	45                   	rex.RB
   14000edfd:	43                   	rex.XB
   14000edfe:	45 53                	rex.RB push r11
   14000ee00:	00 53 01             	add    BYTE PTR [rbx+0x1],dl
   14000ee03:	58                   	pop    rax
   14000ee04:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ee06:	5f                   	pop    rdi
   14000ee07:	54                   	push   rsp
   14000ee08:	55                   	push   rbp
   14000ee09:	4e                   	rex.WRX
   14000ee0a:	45 5f                	rex.RB pop r15
   14000ee0c:	41 56                	push   r14
   14000ee0e:	58                   	pop    rax
   14000ee0f:	35 31 32 5f 53       	xor    eax,0x535f3231
   14000ee14:	54                   	push   rsp
   14000ee15:	4f 52                	rex.WRXB push r10
   14000ee17:	45 5f                	rex.RB pop r15
   14000ee19:	42 59                	rex.X pop rcx
   14000ee1b:	5f                   	pop    rdi
   14000ee1c:	50                   	push   rax
   14000ee1d:	49                   	rex.WB
   14000ee1e:	45                   	rex.RB
   14000ee1f:	43                   	rex.XB
   14000ee20:	45 53                	rex.RB push r11
   14000ee22:	00 54 01 58          	add    BYTE PTR [rcx+rax*1+0x58],dl
   14000ee26:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ee28:	5f                   	pop    rdi
   14000ee29:	54                   	push   rsp
   14000ee2a:	55                   	push   rbp
   14000ee2b:	4e                   	rex.WRX
   14000ee2c:	45 5f                	rex.RB pop r15
   14000ee2e:	44                   	rex.R
   14000ee2f:	4f 55                	rex.WRXB push r13
   14000ee31:	42                   	rex.X
   14000ee32:	4c                   	rex.WR
   14000ee33:	45 5f                	rex.RB pop r15
   14000ee35:	57                   	push   rdi
   14000ee36:	49 54                	rex.WB push r12
   14000ee38:	48 5f                	rex.W pop rdi
   14000ee3a:	41                   	rex.B
   14000ee3b:	44                   	rex.R
   14000ee3c:	44 00 55 01          	add    BYTE PTR [rbp+0x1],r10b
   14000ee40:	58                   	pop    rax
   14000ee41:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ee43:	5f                   	pop    rdi
   14000ee44:	54                   	push   rsp
   14000ee45:	55                   	push   rbp
   14000ee46:	4e                   	rex.WRX
   14000ee47:	45 5f                	rex.RB pop r15
   14000ee49:	41                   	rex.B
   14000ee4a:	4c 57                	rex.WR push rdi
   14000ee4c:	41 59                	pop    r9
   14000ee4e:	53                   	push   rbx
   14000ee4f:	5f                   	pop    rdi
   14000ee50:	46                   	rex.RX
   14000ee51:	41                   	rex.B
   14000ee52:	4e                   	rex.WRX
   14000ee53:	43 59                	rex.XB pop r9
   14000ee55:	5f                   	pop    rdi
   14000ee56:	4d                   	rex.WRB
   14000ee57:	41 54                	push   r12
   14000ee59:	48 5f                	rex.W pop rdi
   14000ee5b:	33 38                	xor    edi,DWORD PTR [rax]
   14000ee5d:	37                   	(bad)
   14000ee5e:	00 56 01             	add    BYTE PTR [rsi+0x1],dl
   14000ee61:	58                   	pop    rax
   14000ee62:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ee64:	5f                   	pop    rdi
   14000ee65:	54                   	push   rsp
   14000ee66:	55                   	push   rbp
   14000ee67:	4e                   	rex.WRX
   14000ee68:	45 5f                	rex.RB pop r15
   14000ee6a:	55                   	push   rbp
   14000ee6b:	4e 52                	rex.WRX push rdx
   14000ee6d:	4f                   	rex.WRXB
   14000ee6e:	4c                   	rex.WR
   14000ee6f:	4c 5f                	rex.WR pop rdi
   14000ee71:	53                   	push   rbx
   14000ee72:	54                   	push   rsp
   14000ee73:	52                   	push   rdx
   14000ee74:	4c                   	rex.WR
   14000ee75:	45                   	rex.RB
   14000ee76:	4e 00 57 01          	rex.WRX add BYTE PTR [rdi+0x1],r10b
   14000ee7a:	58                   	pop    rax
   14000ee7b:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ee7d:	5f                   	pop    rdi
   14000ee7e:	54                   	push   rsp
   14000ee7f:	55                   	push   rbp
   14000ee80:	4e                   	rex.WRX
   14000ee81:	45 5f                	rex.RB pop r15
   14000ee83:	53                   	push   rbx
   14000ee84:	48                   	rex.W
   14000ee85:	49                   	rex.WB
   14000ee86:	46 54                	rex.RX push rsp
   14000ee88:	31 00                	xor    DWORD PTR [rax],eax
   14000ee8a:	58                   	pop    rax
   14000ee8b:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000ee8e:	36 5f                	ss pop rdi
   14000ee90:	54                   	push   rsp
   14000ee91:	55                   	push   rbp
   14000ee92:	4e                   	rex.WRX
   14000ee93:	45 5f                	rex.RB pop r15
   14000ee95:	5a                   	pop    rdx
   14000ee96:	45 52                	rex.RB push r10
   14000ee98:	4f 5f                	rex.WRXB pop r15
   14000ee9a:	45 58                	rex.RB pop r8
   14000ee9c:	54                   	push   rsp
   14000ee9d:	45                   	rex.RB
   14000ee9e:	4e                   	rex.WRX
   14000ee9f:	44 5f                	rex.R pop rdi
   14000eea1:	57                   	push   rdi
   14000eea2:	49 54                	rex.WB push r12
   14000eea4:	48 5f                	rex.W pop rdi
   14000eea6:	41                   	rex.B
   14000eea7:	4e                   	rex.WRX
   14000eea8:	44 00 59 01          	add    BYTE PTR [rcx+0x1],r11b
   14000eeac:	58                   	pop    rax
   14000eead:	38 36                	cmp    BYTE PTR [rsi],dh
   14000eeaf:	5f                   	pop    rdi
   14000eeb0:	54                   	push   rsp
   14000eeb1:	55                   	push   rbp
   14000eeb2:	4e                   	rex.WRX
   14000eeb3:	45 5f                	rex.RB pop r15
   14000eeb5:	50                   	push   rax
   14000eeb6:	52                   	push   rdx
   14000eeb7:	4f                   	rex.WRXB
   14000eeb8:	4d                   	rex.WRB
   14000eeb9:	4f 54                	rex.WRXB push r12
   14000eebb:	45 5f                	rex.RB pop r15
   14000eebd:	48                   	rex.W
   14000eebe:	49                   	rex.WB
   14000eebf:	4d                   	rex.WRB
   14000eec0:	4f                   	rex.WRXB
   14000eec1:	44                   	rex.R
   14000eec2:	45 5f                	rex.RB pop r15
   14000eec4:	49                   	rex.WB
   14000eec5:	4d 55                	rex.WRB push r13
   14000eec7:	4c 00 5a 01          	rex.WR add BYTE PTR [rdx+0x1],r11b
   14000eecb:	58                   	pop    rax
   14000eecc:	38 36                	cmp    BYTE PTR [rsi],dh
   14000eece:	5f                   	pop    rdi
   14000eecf:	54                   	push   rsp
   14000eed0:	55                   	push   rbp
   14000eed1:	4e                   	rex.WRX
   14000eed2:	45 5f                	rex.RB pop r15
   14000eed4:	46                   	rex.RX
   14000eed5:	41 53                	push   r11
   14000eed7:	54                   	push   rsp
   14000eed8:	5f                   	pop    rdi
   14000eed9:	50                   	push   rax
   14000eeda:	52                   	push   rdx
   14000eedb:	45                   	rex.RB
   14000eedc:	46                   	rex.RX
   14000eedd:	49 58                	rex.WB pop r8
   14000eedf:	00 5b 01             	add    BYTE PTR [rbx+0x1],bl
   14000eee2:	58                   	pop    rax
   14000eee3:	38 36                	cmp    BYTE PTR [rsi],dh
   14000eee5:	5f                   	pop    rdi
   14000eee6:	54                   	push   rsp
   14000eee7:	55                   	push   rbp
   14000eee8:	4e                   	rex.WRX
   14000eee9:	45 5f                	rex.RB pop r15
   14000eeeb:	52                   	push   rdx
   14000eeec:	45                   	rex.RB
   14000eeed:	41                   	rex.B
   14000eeee:	44 5f                	rex.R pop rdi
   14000eef0:	4d                   	rex.WRB
   14000eef1:	4f                   	rex.WRXB
   14000eef2:	44                   	rex.R
   14000eef3:	49                   	rex.WB
   14000eef4:	46 59                	rex.RX pop rcx
   14000eef6:	5f                   	pop    rdi
   14000eef7:	57                   	push   rdi
   14000eef8:	52                   	push   rdx
   14000eef9:	49 54                	rex.WB push r12
   14000eefb:	45 00 5c 01 58       	add    BYTE PTR [r9+rax*1+0x58],r11b
   14000ef00:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ef02:	5f                   	pop    rdi
   14000ef03:	54                   	push   rsp
   14000ef04:	55                   	push   rbp
   14000ef05:	4e                   	rex.WRX
   14000ef06:	45 5f                	rex.RB pop r15
   14000ef08:	4d                   	rex.WRB
   14000ef09:	4f 56                	rex.WRXB push r14
   14000ef0b:	45 5f                	rex.RB pop r15
   14000ef0d:	4d 31 5f 56          	xor    QWORD PTR [r15+0x56],r11
   14000ef11:	49                   	rex.WB
   14000ef12:	41 5f                	pop    r15
   14000ef14:	4f 52                	rex.WRXB push r10
   14000ef16:	00 5d 01             	add    BYTE PTR [rbp+0x1],bl
   14000ef19:	58                   	pop    rax
   14000ef1a:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ef1c:	5f                   	pop    rdi
   14000ef1d:	54                   	push   rsp
   14000ef1e:	55                   	push   rbp
   14000ef1f:	4e                   	rex.WRX
   14000ef20:	45 5f                	rex.RB pop r15
   14000ef22:	4e                   	rex.WRX
   14000ef23:	4f 54                	rex.WRXB push r12
   14000ef25:	5f                   	pop    rdi
   14000ef26:	55                   	push   rbp
   14000ef27:	4e 50                	rex.WRX push rax
   14000ef29:	41                   	rex.B
   14000ef2a:	49 52                	rex.WB push r10
   14000ef2c:	41                   	rex.B
   14000ef2d:	42                   	rex.X
   14000ef2e:	4c                   	rex.WR
   14000ef2f:	45 00 5e 01          	add    BYTE PTR [r14+0x1],r11b
   14000ef33:	58                   	pop    rax
   14000ef34:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ef36:	5f                   	pop    rdi
   14000ef37:	54                   	push   rsp
   14000ef38:	55                   	push   rbp
   14000ef39:	4e                   	rex.WRX
   14000ef3a:	45 5f                	rex.RB pop r15
   14000ef3c:	50                   	push   rax
   14000ef3d:	41 52                	push   r10
   14000ef3f:	54                   	push   rsp
   14000ef40:	49                   	rex.WB
   14000ef41:	41                   	rex.B
   14000ef42:	4c 5f                	rex.WR pop rdi
   14000ef44:	52                   	push   rdx
   14000ef45:	45                   	rex.RB
   14000ef46:	47 5f                	rex.RXB pop r15
   14000ef48:	53                   	push   rbx
   14000ef49:	54                   	push   rsp
   14000ef4a:	41                   	rex.B
   14000ef4b:	4c                   	rex.WR
   14000ef4c:	4c 00 5f 01          	rex.WR add BYTE PTR [rdi+0x1],r11b
   14000ef50:	58                   	pop    rax
   14000ef51:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ef53:	5f                   	pop    rdi
   14000ef54:	54                   	push   rsp
   14000ef55:	55                   	push   rbp
   14000ef56:	4e                   	rex.WRX
   14000ef57:	45 5f                	rex.RB pop r15
   14000ef59:	50                   	push   rax
   14000ef5a:	52                   	push   rdx
   14000ef5b:	4f                   	rex.WRXB
   14000ef5c:	4d                   	rex.WRB
   14000ef5d:	4f 54                	rex.WRXB push r12
   14000ef5f:	45 5f                	rex.RB pop r15
   14000ef61:	51                   	push   rcx
   14000ef62:	49                   	rex.WB
   14000ef63:	4d                   	rex.WRB
   14000ef64:	4f                   	rex.WRXB
   14000ef65:	44                   	rex.R
   14000ef66:	45 00 60 01          	add    BYTE PTR [r8+0x1],r12b
   14000ef6a:	58                   	pop    rax
   14000ef6b:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ef6d:	5f                   	pop    rdi
   14000ef6e:	54                   	push   rsp
   14000ef6f:	55                   	push   rbp
   14000ef70:	4e                   	rex.WRX
   14000ef71:	45 5f                	rex.RB pop r15
   14000ef73:	50                   	push   rax
   14000ef74:	52                   	push   rdx
   14000ef75:	4f                   	rex.WRXB
   14000ef76:	4d                   	rex.WRB
   14000ef77:	4f 54                	rex.WRXB push r12
   14000ef79:	45 5f                	rex.RB pop r15
   14000ef7b:	48                   	rex.W
   14000ef7c:	49 5f                	rex.WB pop r15
   14000ef7e:	52                   	push   rdx
   14000ef7f:	45                   	rex.RB
   14000ef80:	47 53                	rex.RXB push r11
   14000ef82:	00 61 01             	add    BYTE PTR [rcx+0x1],ah
   14000ef85:	58                   	pop    rax
   14000ef86:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ef88:	5f                   	pop    rdi
   14000ef89:	54                   	push   rsp
   14000ef8a:	55                   	push   rbp
   14000ef8b:	4e                   	rex.WRX
   14000ef8c:	45 5f                	rex.RB pop r15
   14000ef8e:	48                   	rex.W
   14000ef8f:	49                   	rex.WB
   14000ef90:	4d                   	rex.WRB
   14000ef91:	4f                   	rex.WRXB
   14000ef92:	44                   	rex.R
   14000ef93:	45 5f                	rex.RB pop r15
   14000ef95:	4d                   	rex.WRB
   14000ef96:	41 54                	push   r12
   14000ef98:	48 00 62 01          	rex.W add BYTE PTR [rdx+0x1],spl
   14000ef9c:	58                   	pop    rax
   14000ef9d:	38 36                	cmp    BYTE PTR [rsi],dh
   14000ef9f:	5f                   	pop    rdi
   14000efa0:	54                   	push   rsp
   14000efa1:	55                   	push   rbp
   14000efa2:	4e                   	rex.WRX
   14000efa3:	45 5f                	rex.RB pop r15
   14000efa5:	53                   	push   rbx
   14000efa6:	50                   	push   rax
   14000efa7:	4c                   	rex.WR
   14000efa8:	49 54                	rex.WB push r12
   14000efaa:	5f                   	pop    rdi
   14000efab:	4c                   	rex.WR
   14000efac:	4f                   	rex.WRXB
   14000efad:	4e                   	rex.WRX
   14000efae:	47 5f                	rex.RXB pop r15
   14000efb0:	4d                   	rex.WRB
   14000efb1:	4f 56                	rex.WRXB push r14
   14000efb3:	45 53                	rex.RB push r11
   14000efb5:	00 63 01             	add    BYTE PTR [rbx+0x1],ah
   14000efb8:	58                   	pop    rax
   14000efb9:	38 36                	cmp    BYTE PTR [rsi],dh
   14000efbb:	5f                   	pop    rdi
   14000efbc:	54                   	push   rsp
   14000efbd:	55                   	push   rbp
   14000efbe:	4e                   	rex.WRX
   14000efbf:	45 5f                	rex.RB pop r15
   14000efc1:	55                   	push   rbp
   14000efc2:	53                   	push   rbx
   14000efc3:	45 5f                	rex.RB pop r15
   14000efc5:	58                   	pop    rax
   14000efc6:	43                   	rex.XB
   14000efc7:	48                   	rex.W
   14000efc8:	47                   	rex.RXB
   14000efc9:	42 00 64 01 58       	add    BYTE PTR [rcx+r8*1+0x58],spl
   14000efce:	38 36                	cmp    BYTE PTR [rsi],dh
   14000efd0:	5f                   	pop    rdi
   14000efd1:	54                   	push   rsp
   14000efd2:	55                   	push   rbp
   14000efd3:	4e                   	rex.WRX
   14000efd4:	45 5f                	rex.RB pop r15
   14000efd6:	55                   	push   rbp
   14000efd7:	53                   	push   rbx
   14000efd8:	45 5f                	rex.RB pop r15
   14000efda:	4d                   	rex.WRB
   14000efdb:	4f 56                	rex.WRXB push r14
   14000efdd:	30 00                	xor    BYTE PTR [rax],al
   14000efdf:	65 01 58 38          	add    DWORD PTR gs:[rax+0x38],ebx
   14000efe3:	36 5f                	ss pop rdi
   14000efe5:	54                   	push   rsp
   14000efe6:	55                   	push   rbp
   14000efe7:	4e                   	rex.WRX
   14000efe8:	45 5f                	rex.RB pop r15
   14000efea:	4e                   	rex.WRX
   14000efeb:	4f 54                	rex.WRXB push r12
   14000efed:	5f                   	pop    rdi
   14000efee:	56                   	push   rsi
   14000efef:	45                   	rex.RB
   14000eff0:	43 54                	rex.XB push r12
   14000eff2:	4f 52                	rex.WRXB push r10
   14000eff4:	4d                   	rex.WRB
   14000eff5:	4f                   	rex.WRXB
   14000eff6:	44                   	rex.R
   14000eff7:	45 00 66 01          	add    BYTE PTR [r14+0x1],r12b
   14000effb:	58                   	pop    rax
   14000effc:	38 36                	cmp    BYTE PTR [rsi],dh
   14000effe:	5f                   	pop    rdi
   14000efff:	54                   	push   rsp
   14000f000:	55                   	push   rbp
   14000f001:	4e                   	rex.WRX
   14000f002:	45 5f                	rex.RB pop r15
   14000f004:	41 56                	push   r14
   14000f006:	4f                   	rex.WRXB
   14000f007:	49                   	rex.WB
   14000f008:	44 5f                	rex.R pop rdi
   14000f00a:	56                   	push   rsi
   14000f00b:	45                   	rex.RB
   14000f00c:	43 54                	rex.XB push r12
   14000f00e:	4f 52                	rex.WRXB push r10
   14000f010:	5f                   	pop    rdi
   14000f011:	44                   	rex.R
   14000f012:	45                   	rex.RB
   14000f013:	43                   	rex.XB
   14000f014:	4f                   	rex.WRXB
   14000f015:	44                   	rex.R
   14000f016:	45 00 67 01          	add    BYTE PTR [r15+0x1],r12b
   14000f01a:	58                   	pop    rax
   14000f01b:	38 36                	cmp    BYTE PTR [rsi],dh
   14000f01d:	5f                   	pop    rdi
   14000f01e:	54                   	push   rsp
   14000f01f:	55                   	push   rbp
   14000f020:	4e                   	rex.WRX
   14000f021:	45 5f                	rex.RB pop r15
   14000f023:	42 52                	rex.X push rdx
   14000f025:	41                   	rex.B
   14000f026:	4e                   	rex.WRX
   14000f027:	43                   	rex.XB
   14000f028:	48 5f                	rex.W pop rdi
   14000f02a:	50                   	push   rax
   14000f02b:	52                   	push   rdx
   14000f02c:	45                   	rex.RB
   14000f02d:	44                   	rex.R
   14000f02e:	49                   	rex.WB
   14000f02f:	43 54                	rex.XB push r12
   14000f031:	49                   	rex.WB
   14000f032:	4f                   	rex.WRXB
   14000f033:	4e 5f                	rex.WRX pop rdi
   14000f035:	48                   	rex.W
   14000f036:	49                   	rex.WB
   14000f037:	4e 54                	rex.WRX push rsp
   14000f039:	53                   	push   rbx
   14000f03a:	00 68 01             	add    BYTE PTR [rax+0x1],ch
   14000f03d:	58                   	pop    rax
   14000f03e:	38 36                	cmp    BYTE PTR [rsi],dh
   14000f040:	5f                   	pop    rdi
   14000f041:	54                   	push   rsp
   14000f042:	55                   	push   rbp
   14000f043:	4e                   	rex.WRX
   14000f044:	45 5f                	rex.RB pop r15
   14000f046:	51                   	push   rcx
   14000f047:	49                   	rex.WB
   14000f048:	4d                   	rex.WRB
   14000f049:	4f                   	rex.WRXB
   14000f04a:	44                   	rex.R
   14000f04b:	45 5f                	rex.RB pop r15
   14000f04d:	4d                   	rex.WRB
   14000f04e:	41 54                	push   r12
   14000f050:	48 00 69 01          	rex.W add BYTE PTR [rcx+0x1],bpl
   14000f054:	58                   	pop    rax
   14000f055:	38 36                	cmp    BYTE PTR [rsi],dh
   14000f057:	5f                   	pop    rdi
   14000f058:	54                   	push   rsp
   14000f059:	55                   	push   rbp
   14000f05a:	4e                   	rex.WRX
   14000f05b:	45 5f                	rex.RB pop r15
   14000f05d:	50                   	push   rax
   14000f05e:	52                   	push   rdx
   14000f05f:	4f                   	rex.WRXB
   14000f060:	4d                   	rex.WRB
   14000f061:	4f 54                	rex.WRXB push r12
   14000f063:	45 5f                	rex.RB pop r15
   14000f065:	51                   	push   rcx
   14000f066:	49 5f                	rex.WB pop r15
   14000f068:	52                   	push   rdx
   14000f069:	45                   	rex.RB
   14000f06a:	47 53                	rex.RXB push r11
   14000f06c:	00 6a 01             	add    BYTE PTR [rdx+0x1],ch
   14000f06f:	58                   	pop    rax
   14000f070:	38 36                	cmp    BYTE PTR [rsi],dh
   14000f072:	5f                   	pop    rdi
   14000f073:	54                   	push   rsp
   14000f074:	55                   	push   rbp
   14000f075:	4e                   	rex.WRX
   14000f076:	45 5f                	rex.RB pop r15
   14000f078:	45                   	rex.RB
   14000f079:	4d                   	rex.WRB
   14000f07a:	49 54                	rex.WB push r12
   14000f07c:	5f                   	pop    rdi
   14000f07d:	56                   	push   rsi
   14000f07e:	5a                   	pop    rdx
   14000f07f:	45 52                	rex.RB push r10
   14000f081:	4f 55                	rex.WRXB push r13
   14000f083:	50                   	push   rax
   14000f084:	50                   	push   rax
   14000f085:	45 52                	rex.RB push r10
   14000f087:	00 6b 01             	add    BYTE PTR [rbx+0x1],ch
   14000f08a:	58                   	pop    rax
   14000f08b:	38 36                	cmp    BYTE PTR [rsi],dh
   14000f08d:	5f                   	pop    rdi
   14000f08e:	54                   	push   rsp
   14000f08f:	55                   	push   rbp
   14000f090:	4e                   	rex.WRX
   14000f091:	45 5f                	rex.RB pop r15
   14000f093:	4c                   	rex.WR
   14000f094:	41 53                	push   r11
   14000f096:	54                   	push   rsp
   14000f097:	00 6c 00 03          	add    BYTE PTR [rax+rax*1+0x3],ch
   14000f09b:	69 78 38 36 5f 61 72 	imul   edi,DWORD PTR [rax+0x38],0x72615f36
   14000f0a2:	63 68 5f             	movsxd ebp,DWORD PTR [rax+0x5f]
   14000f0a5:	69 6e 64 69 63 65 73 	imul   ebp,DWORD PTR [rsi+0x64],0x73656369
   14000f0ac:	00 ed                	add    ch,ch
   14000f0ae:	00 00                	add    BYTE PTR [rax],al
   14000f0b0:	00 c5                	add    ch,al
   14000f0b2:	01 8a 0e 00 00 01    	add    DWORD PTR [rdx+0x100000e],ecx
   14000f0b8:	58                   	pop    rax
   14000f0b9:	38 36                	cmp    BYTE PTR [rsi],dh
   14000f0bb:	5f                   	pop    rdi
   14000f0bc:	41 52                	push   r10
   14000f0be:	43                   	rex.XB
   14000f0bf:	48 5f                	rex.W pop rdi
   14000f0c1:	43                   	rex.XB
   14000f0c2:	4d                   	rex.WRB
   14000f0c3:	4f 56                	rex.WRXB push r14
   14000f0c5:	00 00                	add    BYTE PTR [rax],al
   14000f0c7:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000f0ca:	36 5f                	ss pop rdi
   14000f0cc:	41 52                	push   r10
   14000f0ce:	43                   	rex.XB
   14000f0cf:	48 5f                	rex.W pop rdi
   14000f0d1:	43                   	rex.XB
   14000f0d2:	4d 50                	rex.WRB push r8
   14000f0d4:	58                   	pop    rax
   14000f0d5:	43                   	rex.XB
   14000f0d6:	48                   	rex.W
   14000f0d7:	47 00 01             	rex.RXB add BYTE PTR [r9],r8b
   14000f0da:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000f0dd:	36 5f                	ss pop rdi
   14000f0df:	41 52                	push   r10
   14000f0e1:	43                   	rex.XB
   14000f0e2:	48 5f                	rex.W pop rdi
   14000f0e4:	43                   	rex.XB
   14000f0e5:	4d 50                	rex.WRB push r8
   14000f0e7:	58                   	pop    rax
   14000f0e8:	43                   	rex.XB
   14000f0e9:	48                   	rex.W
   14000f0ea:	47 38 42 00          	rex.RXB cmp BYTE PTR [r10+0x0],r8b
   14000f0ee:	02 01                	add    al,BYTE PTR [rcx]
   14000f0f0:	58                   	pop    rax
   14000f0f1:	38 36                	cmp    BYTE PTR [rsi],dh
   14000f0f3:	5f                   	pop    rdi
   14000f0f4:	41 52                	push   r10
   14000f0f6:	43                   	rex.XB
   14000f0f7:	48 5f                	rex.W pop rdi
   14000f0f9:	58                   	pop    rax
   14000f0fa:	41                   	rex.B
   14000f0fb:	44                   	rex.R
   14000f0fc:	44 00 03             	add    BYTE PTR [rbx],r8b
   14000f0ff:	01 58 38             	add    DWORD PTR [rax+0x38],ebx
   14000f102:	36 5f                	ss pop rdi
   14000f104:	41 52                	push   r10
   14000f106:	43                   	rex.XB
   14000f107:	48 5f                	rex.W pop rdi
   14000f109:	42 53                	rex.X push rbx
   14000f10b:	57                   	push   rdi
   14000f10c:	41 50                	push   r8
   14000f10e:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
   14000f111:	58                   	pop    rax
   14000f112:	38 36                	cmp    BYTE PTR [rsi],dh
   14000f114:	5f                   	pop    rdi
   14000f115:	41 52                	push   r10
   14000f117:	43                   	rex.XB
   14000f118:	48 5f                	rex.W pop rdi
   14000f11a:	4c                   	rex.WR
   14000f11b:	41 53                	push   r11
   14000f11d:	54                   	push   rsp
   14000f11e:	00 05 00 02 01 06    	add    BYTE PTR [rip+0x6010200],al        # 14601f324 <.debug_line_str+0x600b1ab>
   14000f124:	73 69                	jae    14000f18f <.debug_info+0xef8>
   14000f126:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000f128:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
   14000f12d:	61                   	(bad)
   14000f12e:	72 00                	jb     14000f130 <.debug_info+0xe99>
   14000f130:	02 10                	add    dl,BYTE PTR [rax]
   14000f132:	05 5f 5f 69 6e       	add    eax,0x6e695f5f
   14000f137:	74 31                	je     14000f16a <.debug_info+0xed3>
   14000f139:	32 38                	xor    bh,BYTE PTR [rax]
   14000f13b:	00 02                	add    BYTE PTR [rdx],al
   14000f13d:	10 07                	adc    BYTE PTR [rdi],al
   14000f13f:	5f                   	pop    rdi
   14000f140:	5f                   	pop    rdi
   14000f141:	69 6e 74 31 32 38 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20383231
   14000f148:	75 6e                	jne    14000f1b8 <.debug_info+0xf21>
   14000f14a:	73 69                	jae    14000f1b5 <.debug_info+0xf1e>
   14000f14c:	67 6e                	outs   dx,BYTE PTR ds:[esi]
   14000f14e:	65 64 00 02          	gs add BYTE PTR fs:[rdx],al
   14000f152:	02 04 5f             	add    al,BYTE PTR [rdi+rbx*2]
   14000f155:	46 6c                	rex.RX ins BYTE PTR es:[rdi],dx
   14000f157:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000f158:	61                   	(bad)
   14000f159:	74 31                	je     14000f18c <.debug_info+0xef5>
   14000f15b:	36 00 02             	ss add BYTE PTR [rdx],al
   14000f15e:	04 03                	add    al,0x3
   14000f160:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f163:	70 6c                	jo     14000f1d1 <.debug_info+0xf3a>
   14000f165:	65 78 20             	gs js  14000f188 <.debug_info+0xef1>
   14000f168:	5f                   	pop    rdi
   14000f169:	46 6c                	rex.RX ins BYTE PTR es:[rdi],dx
   14000f16b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000f16c:	61                   	(bad)
   14000f16d:	74 31                	je     14000f1a0 <.debug_info+0xf09>
   14000f16f:	36 00 02             	ss add BYTE PTR [rdx],al
   14000f172:	08 03                	or     BYTE PTR [rbx],al
   14000f174:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f177:	70 6c                	jo     14000f1e5 <.debug_info+0xf4e>
   14000f179:	65 78 20             	gs js  14000f19c <.debug_info+0xf05>
   14000f17c:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
   14000f17e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000f17f:	61                   	(bad)
   14000f180:	74 00                	je     14000f182 <.debug_info+0xeeb>
   14000f182:	02 10                	add    dl,BYTE PTR [rax]
   14000f184:	03 63 6f             	add    esp,DWORD PTR [rbx+0x6f]
   14000f187:	6d                   	ins    DWORD PTR es:[rdi],dx
   14000f188:	70 6c                	jo     14000f1f6 <.debug_info+0xf5f>
   14000f18a:	65 78 20             	gs js  14000f1ad <.debug_info+0xf16>
   14000f18d:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
   14000f18f:	75 62                	jne    14000f1f3 <.debug_info+0xf5c>
   14000f191:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000f192:	65 00 02             	add    BYTE PTR gs:[rdx],al
   14000f195:	20 03                	and    BYTE PTR [rbx],al
   14000f197:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f19a:	70 6c                	jo     14000f208 <.debug_info+0xf71>
   14000f19c:	65 78 20             	gs js  14000f1bf <.debug_info+0xf28>
   14000f19f:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000f1a0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000f1a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   14000f1a2:	67 20 64 6f 75       	and    BYTE PTR [edi+ebp*2+0x75],ah
   14000f1a7:	62                   	(bad)
   14000f1a8:	6c                   	ins    BYTE PTR es:[rdi],dx
   14000f1a9:	65 00 02             	add    BYTE PTR gs:[rdx],al
   14000f1ac:	10 04 5f             	adc    BYTE PTR [rdi+rbx*2],al
   14000f1af:	46 6c                	rex.RX ins BYTE PTR es:[rdi],dx
   14000f1b1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000f1b2:	61                   	(bad)
   14000f1b3:	74 31                	je     14000f1e6 <.debug_info+0xf4f>
   14000f1b5:	32 38                	xor    bh,BYTE PTR [rax]
   14000f1b7:	00 02                	add    BYTE PTR [rdx],al
   14000f1b9:	20 03                	and    BYTE PTR [rbx],al
   14000f1bb:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
   14000f1be:	70 6c                	jo     14000f22c <.debug_info+0xf95>
   14000f1c0:	65 78 20             	gs js  14000f1e3 <.debug_info+0xf4c>
   14000f1c3:	5f                   	pop    rdi
   14000f1c4:	46 6c                	rex.RX ins BYTE PTR es:[rdi],dx
   14000f1c6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14000f1c7:	61                   	(bad)
   14000f1c8:	74 31                	je     14000f1fb <.debug_info+0xf64>
   14000f1ca:	32 38                	xor    bh,BYTE PTR [rax]
   14000f1cc:	00 0a                	add    BYTE PTR [rdx],cl
   14000f1ce:	66 75 6e             	data16 jne 14000f23f <.debug_info+0xfa8>
   14000f1d1:	63 5f 70             	movsxd ebx,DWORD PTR [rdi+0x70]
   14000f1d4:	74 72                	je     14000f248 <.debug_info+0xfb1>
   14000f1d6:	00 02                	add    BYTE PTR [rdx],al
   14000f1d8:	2a 10                	sub    dl,BYTE PTR [rax]
   14000f1da:	30 01                	xor    BYTE PTR [rcx],al
   14000f1dc:	00 00                	add    BYTE PTR [rax],al
   14000f1de:	04 36                	add    al,0x36
   14000f1e0:	0f 00 00             	sldt   WORD PTR [rax]
   14000f1e3:	52                   	push   rdx
   14000f1e4:	0f 00 00             	sldt   WORD PTR [rax]
   14000f1e7:	0b 00                	or     eax,DWORD PTR [rax]
   14000f1e9:	05 5f 5f 43 54       	add    eax,0x54435f5f
   14000f1ee:	4f 52                	rex.WRXB push r10
   14000f1f0:	5f                   	pop    rdi
   14000f1f1:	4c                   	rex.WR
   14000f1f2:	49 53                	rex.WB push r11
   14000f1f4:	54                   	push   rsp
   14000f1f5:	5f                   	pop    rdi
   14000f1f6:	5f                   	pop    rdi
   14000f1f7:	00 2f                	add    BYTE PTR [rdi],ch
   14000f1f9:	47 0f 00 00          	rex.RXB sldt WORD PTR [r8]
   14000f1fd:	05 5f 5f 44 54       	add    eax,0x54445f5f
   14000f202:	4f 52                	rex.WRXB push r10
   14000f204:	5f                   	pop    rdi
   14000f205:	4c                   	rex.WR
   14000f206:	49 53                	rex.WB push r11
   14000f208:	54                   	push   rsp
   14000f209:	5f                   	pop    rdi
   14000f20a:	5f                   	pop    rdi
   14000f20b:	00 30                	add    BYTE PTR [rax],dh
   14000f20d:	47 0f 00 00          	rex.RXB sldt WORD PTR [r8]
   14000f211:	04 36                	add    al,0x36
   14000f213:	0f 00 00             	sldt   WORD PTR [rax]
   14000f216:	8a 0f                	mov    cl,BYTE PTR [rdi]
   14000f218:	00 00                	add    BYTE PTR [rax],al
   14000f21a:	0c 99                	or     al,0x99
   14000f21c:	00 00                	add    BYTE PTR [rax],al
   14000f21e:	00 01                	add    BYTE PTR [rcx],al
   14000f220:	00 06                	add    BYTE PTR [rsi],al
   14000f222:	52                   	push   rdx
   14000f223:	0f 00 00             	sldt   WORD PTR [rax]
   14000f226:	94                   	xchg   esp,eax
   14000f227:	09 7a 0f             	or     DWORD PTR [rdx+0xf],edi
   14000f22a:	00 00                	add    BYTE PTR [rax],al
   14000f22c:	09 03                	or     DWORD PTR [rbx],eax
   14000f22e:	60                   	(bad)
   14000f22f:	81 00 40 01 00 00    	add    DWORD PTR [rax],0x140
   14000f235:	00 06                	add    BYTE PTR [rsi],al
   14000f237:	66 0f 00 00          	data16 sldt WORD PTR [rax]
   14000f23b:	95                   	xchg   ebp,eax
   14000f23c:	09 7a 0f             	or     DWORD PTR [rdx+0xf],edi
   14000f23f:	00 00                	add    BYTE PTR [rax],al
   14000f241:	09 03                	or     DWORD PTR [rbx],eax
   14000f243:	50                   	push   rax
   14000f244:	81 00 40 01 00 00    	add    DWORD PTR [rax],0x140
	...

Disassembly of section .debug_abbrev:

0000000140010000 <.debug_abbrev>:
   140010000:	01 24 00             	add    DWORD PTR [rax+rax*1],esp
   140010003:	0b 0b                	or     ecx,DWORD PTR [rbx]
   140010005:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
   140010008:	08 00                	or     BYTE PTR [rax],al
   14001000a:	00 02                	add    BYTE PTR [rdx],al
   14001000c:	16                   	(bad)
   14001000d:	00 03                	add    BYTE PTR [rbx],al
   14001000f:	08 3a                	or     BYTE PTR [rdx],bh
   140010011:	0b 3b                	or     edi,DWORD PTR [rbx]
   140010013:	0b 39                	or     edi,DWORD PTR [rcx]
   140010015:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
   140010018:	00 00                	add    BYTE PTR [rax],al
   14001001a:	03 0d 00 03 08 3a    	add    ecx,DWORD PTR [rip+0x3a080300]        # 17a090320 <.debug_line_str+0x3a07c1a7>
   140010020:	21 03                	and    DWORD PTR [rbx],eax
   140010022:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
   140010024:	39 21                	cmp    DWORD PTR [rcx],esp
   140010026:	0d 49 13 38 0b       	or     eax,0xb381349
   14001002b:	00 00                	add    BYTE PTR [rax],al
   14001002d:	04 05                	add    al,0x5
   14001002f:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
   140010032:	00 00                	add    BYTE PTR [rax],al
   140010034:	05 0f 00 0b 21       	add    eax,0x210b000f
   140010039:	08 49 13             	or     BYTE PTR [rcx+0x13],cl
   14001003c:	00 00                	add    BYTE PTR [rax],al
   14001003e:	06                   	(bad)
   14001003f:	13 01                	adc    eax,DWORD PTR [rcx]
   140010041:	03 08                	add    ecx,DWORD PTR [rax]
   140010043:	0b 21                	or     esp,DWORD PTR [rcx]
   140010045:	18 3a                	sbb    BYTE PTR [rdx],bh
   140010047:	21 03                	and    DWORD PTR [rbx],eax
   140010049:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
   14001004b:	39 21                	cmp    DWORD PTR [rcx],esp
   14001004d:	10 01                	adc    BYTE PTR [rcx],al
   14001004f:	13 00                	adc    eax,DWORD PTR [rax]
   140010051:	00 07                	add    BYTE PTR [rdi],al
   140010053:	2e 01 3f             	cs add DWORD PTR [rdi],edi
   140010056:	19 03                	sbb    DWORD PTR [rbx],eax
   140010058:	08 3a                	or     BYTE PTR [rdx],bh
   14001005a:	0b 3b                	or     edi,DWORD PTR [rbx]
   14001005c:	0b 39                	or     edi,DWORD PTR [rcx]
   14001005e:	0b 27                	or     esp,DWORD PTR [rdi]
   140010060:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
   140010063:	01 13                	add    DWORD PTR [rbx],edx
   140010065:	00 00                	add    BYTE PTR [rax],al
   140010067:	08 2e                	or     BYTE PTR [rsi],ch
   140010069:	01 3f                	add    DWORD PTR [rdi],edi
   14001006b:	19 03                	sbb    DWORD PTR [rbx],eax
   14001006d:	08 3a                	or     BYTE PTR [rdx],bh
   14001006f:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
   140010072:	0b 39                	or     edi,DWORD PTR [rcx]
   140010074:	21 09                	and    DWORD PTR [rcx],ecx
   140010076:	27                   	(bad)
   140010077:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
   14001007a:	3c 19                	cmp    al,0x19
   14001007c:	01 13                	add    DWORD PTR [rbx],edx
   14001007e:	00 00                	add    BYTE PTR [rax],al
   140010080:	09 11                	or     DWORD PTR [rcx],edx
   140010082:	01 25 08 13 0b 03    	add    DWORD PTR [rip+0x30b1308],esp        # 1430c1390 <.debug_line_str+0x30ad217>
   140010088:	1f                   	(bad)
   140010089:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
   14001008b:	11 01                	adc    DWORD PTR [rcx],eax
   14001008d:	12 07                	adc    al,BYTE PTR [rdi]
   14001008f:	10 17                	adc    BYTE PTR [rdi],dl
   140010091:	00 00                	add    BYTE PTR [rax],al
   140010093:	0a 26                	or     ah,BYTE PTR [rsi]
   140010095:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
   140010098:	00 00                	add    BYTE PTR [rax],al
   14001009a:	0b 0f                	or     ecx,DWORD PTR [rdi]
   14001009c:	00 0b                	add    BYTE PTR [rbx],cl
   14001009e:	0b 00                	or     eax,DWORD PTR [rax]
   1400100a0:	00 0c 2e             	add    BYTE PTR [rsi+rbp*1],cl
   1400100a3:	00 3f                	add    BYTE PTR [rdi],bh
   1400100a5:	19 03                	sbb    DWORD PTR [rbx],eax
   1400100a7:	08 3a                	or     BYTE PTR [rdx],bh
   1400100a9:	0b 3b                	or     edi,DWORD PTR [rbx]
   1400100ab:	0b 39                	or     edi,DWORD PTR [rcx]
   1400100ad:	0b 27                	or     esp,DWORD PTR [rdi]
   1400100af:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
   1400100b2:	00 00                	add    BYTE PTR [rax],al
   1400100b4:	0d 2e 00 3f 19       	or     eax,0x193f002e
   1400100b9:	03 08                	add    ecx,DWORD PTR [rax]
   1400100bb:	3a 0b                	cmp    cl,BYTE PTR [rbx]
   1400100bd:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
   1400100bf:	39 0b                	cmp    DWORD PTR [rbx],ecx
   1400100c1:	27                   	(bad)
   1400100c2:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
   1400100c5:	3c 19                	cmp    al,0x19
   1400100c7:	00 00                	add    BYTE PTR [rax],al
   1400100c9:	0e                   	(bad)
   1400100ca:	2e 01 3f             	cs add DWORD PTR [rdi],edi
   1400100cd:	19 03                	sbb    DWORD PTR [rbx],eax
   1400100cf:	08 3a                	or     BYTE PTR [rdx],bh
   1400100d1:	0b 3b                	or     edi,DWORD PTR [rbx]
   1400100d3:	0b 39                	or     edi,DWORD PTR [rcx]
   1400100d5:	0b 27                	or     esp,DWORD PTR [rdi]
   1400100d7:	19 49 13             	sbb    DWORD PTR [rcx+0x13],ecx
   1400100da:	11 01                	adc    DWORD PTR [rcx],eax
   1400100dc:	12 07                	adc    al,BYTE PTR [rdi]
   1400100de:	40 18 7c 19 00       	sbb    BYTE PTR [rcx+rbx*1+0x0],dil
   1400100e3:	00 0f                	add    BYTE PTR [rdi],cl
   1400100e5:	34 00                	xor    al,0x0
   1400100e7:	03 08                	add    ecx,DWORD PTR [rax]
   1400100e9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
   1400100eb:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
   1400100ed:	39 0b                	cmp    DWORD PTR [rbx],ecx
   1400100ef:	49 13 02             	adc    rax,QWORD PTR [r10]
   1400100f2:	18 00                	sbb    BYTE PTR [rax],al
	...

00000001400100f6 <.debug_abbrev>:
   1400100f6:	01 11                	add    DWORD PTR [rcx],edx
   1400100f8:	00 10                	add    BYTE PTR [rax],dl
   1400100fa:	17                   	(bad)
   1400100fb:	11 01                	adc    DWORD PTR [rcx],eax
   1400100fd:	12 0f                	adc    cl,BYTE PTR [rdi]
   1400100ff:	03 0e                	add    ecx,DWORD PTR [rsi]
   140010101:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
   140010103:	25 0e 13 05 00       	and    eax,0x5130e
	...

000000014001010a <.debug_abbrev>:
   14001010a:	01 28                	add    DWORD PTR [rax],ebp
   14001010c:	00 03                	add    BYTE PTR [rbx],al
   14001010e:	08 1c 0b             	or     BYTE PTR [rbx+rcx*1],bl
   140010111:	00 00                	add    BYTE PTR [rax],al
   140010113:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
   140010116:	0b 0b                	or     ecx,DWORD PTR [rbx]
   140010118:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
   14001011b:	08 00                	or     BYTE PTR [rax],al
   14001011d:	00 03                	add    BYTE PTR [rbx],al
   14001011f:	04 01                	add    al,0x1
   140010121:	03 08                	add    ecx,DWORD PTR [rax]
   140010123:	3e 21 07             	ds and DWORD PTR [rdi],eax
   140010126:	0b 21                	or     esp,DWORD PTR [rcx]
   140010128:	04 49                	add    al,0x49
   14001012a:	13 3a                	adc    edi,DWORD PTR [rdx]
   14001012c:	21 01                	and    DWORD PTR [rcx],eax
   14001012e:	3b 05 39 21 06 01    	cmp    eax,DWORD PTR [rip+0x1062139]        # 14107226d <.debug_line_str+0x105e0f4>
   140010134:	13 00                	adc    eax,DWORD PTR [rax]
   140010136:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
   140010139:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
   14001013c:	01 13                	add    DWORD PTR [rbx],edx
   14001013e:	00 00                	add    BYTE PTR [rax],al
   140010140:	05 34 00 03 08       	add    eax,0x8030034
   140010145:	3a 21                	cmp    ah,BYTE PTR [rcx]
   140010147:	02 3b                	add    bh,BYTE PTR [rbx]
   140010149:	0b 39                	or     edi,DWORD PTR [rcx]
   14001014b:	21 11                	and    DWORD PTR [rcx],edx
   14001014d:	49 13 3f             	adc    rdi,QWORD PTR [r15]
   140010150:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
   140010153:	00 00                	add    BYTE PTR [rax],al
   140010155:	06                   	(bad)
   140010156:	34 00                	xor    al,0x0
   140010158:	47 13 3a             	rex.RXB adc r15d,DWORD PTR [r10]
   14001015b:	21 03                	and    DWORD PTR [rbx],eax
   14001015d:	3b 05 39 21 0a 49    	cmp    eax,DWORD PTR [rip+0x490a2139]        # 1890b229c <.debug_line_str+0x4909e123>
   140010163:	13 02                	adc    eax,DWORD PTR [rdx]
   140010165:	18 00                	sbb    BYTE PTR [rax],al
   140010167:	00 07                	add    BYTE PTR [rdi],al
   140010169:	11 01                	adc    DWORD PTR [rcx],eax
   14001016b:	25 08 13 0b 03       	and    eax,0x30b1308
   140010170:	1f                   	(bad)
   140010171:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
   140010173:	10 17                	adc    BYTE PTR [rdi],dl
   140010175:	00 00                	add    BYTE PTR [rax],al
   140010177:	08 0f                	or     BYTE PTR [rdi],cl
   140010179:	00 0b                	add    BYTE PTR [rbx],cl
   14001017b:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
   14001017e:	00 00                	add    BYTE PTR [rax],al
   140010180:	09 15 00 27 19 00    	or     DWORD PTR [rip+0x192700],edx        # 1401a2886 <.debug_line_str+0x18e70d>
   140010186:	00 0a                	add    BYTE PTR [rdx],cl
   140010188:	16                   	(bad)
   140010189:	00 03                	add    BYTE PTR [rbx],al
   14001018b:	08 3a                	or     BYTE PTR [rdx],bh
   14001018d:	0b 3b                	or     edi,DWORD PTR [rbx]
   14001018f:	0b 39                	or     edi,DWORD PTR [rcx]
   140010191:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
   140010194:	00 00                	add    BYTE PTR [rax],al
   140010196:	0b 21                	or     esp,DWORD PTR [rcx]
   140010198:	00 00                	add    BYTE PTR [rax],al
   14001019a:	00 0c 21             	add    BYTE PTR [rcx+riz*1],cl
   14001019d:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
   1400101a0:	2f                   	(bad)
   1400101a1:	0b 00                	or     eax,DWORD PTR [rax]
	...

Disassembly of section .debug_line:

0000000140011000 <.debug_line>:
   140011000:	7b 00                	jnp    140011002 <.debug_line+0x2>
   140011002:	00 00                	add    BYTE PTR [rax],al
   140011004:	05 00 08 00 46       	add    eax,0x46000800
   140011009:	00 00                	add    BYTE PTR [rax],al
   14001100b:	00 01                	add    BYTE PTR [rcx],al
   14001100d:	01 01                	add    DWORD PTR [rcx],eax
   14001100f:	fb                   	sti
   140011010:	0e                   	(bad)
   140011011:	0d 00 01 01 01       	or     eax,0x1010100
   140011016:	01 00                	add    DWORD PTR [rax],eax
   140011018:	00 00                	add    BYTE PTR [rax],al
   14001101a:	01 00                	add    DWORD PTR [rax],eax
   14001101c:	00 01                	add    BYTE PTR [rcx],al
   14001101e:	01 01                	add    DWORD PTR [rcx],eax
   140011020:	1f                   	(bad)
   140011021:	03 39                	add    edi,DWORD PTR [rcx]
   140011023:	00 00                	add    BYTE PTR [rax],al
   140011025:	00 6a 00             	add    BYTE PTR [rdx+0x0],ch
   140011028:	00 00                	add    BYTE PTR [rax],al
   14001102a:	9f                   	lahf
   14001102b:	00 00                	add    BYTE PTR [rax],al
   14001102d:	00 02                	add    BYTE PTR [rdx],al
   14001102f:	01 1f                	add    DWORD PTR [rdi],ebx
   140011031:	02 0f                	add    cl,BYTE PTR [rdi]
   140011033:	06                   	(bad)
   140011034:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140011035:	00 00                	add    BYTE PTR [rax],al
   140011037:	00 00                	add    BYTE PTR [rax],al
   140011039:	ad                   	lods   eax,DWORD PTR ds:[rsi]
   14001103a:	00 00                	add    BYTE PTR [rax],al
   14001103c:	00 00                	add    BYTE PTR [rax],al
   14001103e:	b5 00                	mov    ch,0x0
   140011040:	00 00                	add    BYTE PTR [rax],al
   140011042:	01 bb 00 00 00 00    	add    DWORD PTR [rbx+0x0],edi
   140011048:	c8 00 00 00          	enter  0x0,0x0
   14001104c:	00 d5                	add    ch,dl
   14001104e:	00 00                	add    BYTE PTR [rax],al
   140011050:	00 02                	add    BYTE PTR [rdx],al
   140011052:	05 01 00 09 02       	add    eax,0x2090001
   140011057:	50                   	push   rax
   140011058:	14 00                	adc    al,0x0
   14001105a:	40 01 00             	rex add DWORD PTR [rax],eax
   14001105d:	00 00                	add    BYTE PTR [rax],al
   14001105f:	16                   	(bad)
   140011060:	82                   	(bad)
   140011061:	05 03 59 05 0f       	add    eax,0xf055903
   140011066:	e6 05                	out    0x5,al
   140011068:	03 91 08 13 08 13    	add    edx,DWORD PTR [rcx+0x13081308]
   14001106e:	05 08 bb 05 03       	add    eax,0x305bb08
   140011073:	84 05 0a 59 05 01    	test   BYTE PTR [rip+0x105590a],al        # 141066983 <.debug_line_str+0x105280a>
   140011079:	59                   	pop    rcx
   14001107a:	02 06                	add    al,BYTE PTR [rsi]
   14001107c:	00 01                	add    BYTE PTR [rcx],al
   14001107e:	01               	add    DWORD PTR [rax+0x0],ebx

000000014001107f <.debug_line>:
   14001107f:	58                   	pop    rax
   140011080:	00 00                	add    BYTE PTR [rax],al
   140011082:	00 05 00 08 00 2e    	add    BYTE PTR [rip+0x2e000800],al        # 16e011888 <.debug_line_str+0x2dffd70f>
   140011088:	00 00                	add    BYTE PTR [rax],al
   14001108a:	00 01                	add    BYTE PTR [rcx],al
   14001108c:	01 01                	add    DWORD PTR [rcx],eax
   14001108e:	fb                   	sti
   14001108f:	0e                   	(bad)
   140011090:	0d 00 01 01 01       	or     eax,0x1010100
   140011095:	01 00                	add    DWORD PTR [rax],eax
   140011097:	00 00                	add    BYTE PTR [rax],al
   140011099:	01 00                	add    DWORD PTR [rax],eax
   14001109b:	00 01                	add    BYTE PTR [rcx],al
   14001109d:	01 01                	add    DWORD PTR [rcx],eax
   14001109f:	1f                   	(bad)
   1400110a0:	02 e2                	add    ah,dl
   1400110a2:	00 00                	add    BYTE PTR [rax],al
   1400110a4:	00 41 01             	add    BYTE PTR [rcx+0x1],al
   1400110a7:	00 00                	add    BYTE PTR [rax],al
   1400110a9:	02 01                	add    al,BYTE PTR [rcx]
   1400110ab:	1f                   	(bad)
   1400110ac:	02 0f                	add    cl,BYTE PTR [rdi]
   1400110ae:	02 70 01             	add    dh,BYTE PTR [rax+0x1]
   1400110b1:	00 00                	add    BYTE PTR [rax],al
   1400110b3:	01 70 01             	add    DWORD PTR [rax+0x1],esi
   1400110b6:	00 00                	add    BYTE PTR [rax],al
   1400110b8:	01 00                	add    DWORD PTR [rax],eax
   1400110ba:	09 02                	or     DWORD PTR [rdx],eax
   1400110bc:	90                   	nop
   1400110bd:	2b 00                	sub    eax,DWORD PTR [rax]
   1400110bf:	40 01 00             	rex add DWORD PTR [rax],eax
   1400110c2:	00 00                	add    BYTE PTR [rax],al
   1400110c4:	03 f4                	add    esi,esp
   1400110c6:	00 01                	add    BYTE PTR [rcx],al
   1400110c8:	22 22                	and    ah,BYTE PTR [rdx]
   1400110ca:	67 59                	addr32 pop rcx
   1400110cc:	30 75 4b             	xor    BYTE PTR [rbp+0x4b],dh
   1400110cf:	67 67 30 3d 4c 22 22 	addr32 xor BYTE PTR [eip+0x222224c],bh        # 142233323 <.debug_line_str+0x221f1aa>
   1400110d6:	02 
   1400110d7:	01 00                	add    DWORD PTR [rax],eax
   1400110d9:	01 01                	add    DWORD PTR [rcx],eax

00000001400110db <.debug_line>:
   1400110db:	44 00 00             	add    BYTE PTR [rax],r8b
   1400110de:	00 05 00 08 00 3c    	add    BYTE PTR [rip+0x3c000800],al        # 17c0118e4 <.debug_line_str+0x3bffd76b>
   1400110e4:	00 00                	add    BYTE PTR [rax],al
   1400110e6:	00 01                	add    BYTE PTR [rcx],al
   1400110e8:	01 01                	add    DWORD PTR [rcx],eax
   1400110ea:	fb                   	sti
   1400110eb:	0e                   	(bad)
   1400110ec:	0d 00 01 01 01       	or     eax,0x1010100
   1400110f1:	01 00                	add    DWORD PTR [rax],eax
   1400110f3:	00 00                	add    BYTE PTR [rax],al
   1400110f5:	01 00                	add    DWORD PTR [rax],eax
   1400110f7:	00 01                	add    BYTE PTR [rcx],al
   1400110f9:	01 01                	add    DWORD PTR [rcx],eax
   1400110fb:	1f                   	(bad)
   1400110fc:	03 05 02 00 00 64    	add    eax,DWORD PTR [rip+0x64000002]        # 1a4011104 <.debug_line_str+0x63ffcf8b>
   140011102:	02 00                	add    al,BYTE PTR [rax]
   140011104:	00 87 02 00 00 02    	add    BYTE PTR [rdi+0x2000002],al
   14001110a:	01 1f                	add    DWORD PTR [rdi],ebx
   14001110c:	02 0f                	add    cl,BYTE PTR [rdi]
   14001110e:	04 b3                	add    al,0xb3
   140011110:	02 00                	add    al,BYTE PTR [rax]
   140011112:	00 01                	add    BYTE PTR [rcx],al
   140011114:	bd 02 00 00 02       	mov    ebp,0x2000002
   140011119:	c4 02 00 00          	(bad)
   14001111d:	01 d0                	add    eax,edx
   14001111f:	02 00                	add    al,BYTE PTR [rax]
   140011121:	00 01                	add    BYTE PTR [rcx],al

Disassembly of section .debug_frame:

0000000140012000 <.debug_frame>:
   140012000:	14 00                	adc    al,0x0
   140012002:	00 00                	add    BYTE PTR [rax],al
   140012004:	ff                   	(bad)
   140012005:	ff                   	(bad)
   140012006:	ff                   	(bad)
   140012007:	ff 01                	inc    DWORD PTR [rcx]
   140012009:	00 01                	add    BYTE PTR [rcx],al
   14001200b:	78 20                	js     14001202d <.debug_frame+0x2d>
   14001200d:	0c 07                	or     al,0x7
   14001200f:	08 a0 01 00 00 00    	or     BYTE PTR [rax+0x1],ah
   140012015:	00 00                	add    BYTE PTR [rax],al
   140012017:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
   14001201a:	00 00                	add    BYTE PTR [rax],al
   14001201c:	00 00                	add    BYTE PTR [rax],al
   14001201e:	00 00                	add    BYTE PTR [rax],al
   140012020:	50                   	push   rax
   140012021:	14 00                	adc    al,0x0
   140012023:	40 01 00             	rex add DWORD PTR [rax],eax
   140012026:	00 00                	add    BYTE PTR [rax],al
   140012028:	6b 00 00             	imul   eax,DWORD PTR [rax],0x0
   14001202b:	00 00                	add    BYTE PTR [rax],al
   14001202d:	00 00                	add    BYTE PTR [rax],al
   14001202f:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
   140012032:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
   140012038:	02 66 c6             	add    ah,BYTE PTR [rsi-0x3a]
   14001203b:	0c 07                	or     al,0x7
   14001203d:	08 00                	or     BYTE PTR [rax],al
	...

0000000140012040 <.debug_frame>:
   140012040:	14 00                	adc    al,0x0
   140012042:	00 00                	add    BYTE PTR [rax],al
   140012044:	ff                   	(bad)
   140012045:	ff                   	(bad)
   140012046:	ff                   	(bad)
   140012047:	ff 01                	inc    DWORD PTR [rcx]
   140012049:	00 01                	add    BYTE PTR [rcx],al
   14001204b:	78 20                	js     14001206d <.debug_frame+0x2d>
   14001204d:	0c 07                	or     al,0x7
   14001204f:	08 a0 01 00 00 00    	or     BYTE PTR [rax+0x1],ah
   140012055:	00 00                	add    BYTE PTR [rax],al
   140012057:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
   14001205a:	00 00                	add    BYTE PTR [rax],al
   14001205c:	40 00 00             	rex add BYTE PTR [rax],al
   14001205f:	00 90 2b 00 40 01    	add    BYTE PTR [rax+0x140002b],dl
   140012065:	00 00                	add    BYTE PTR [rax],al
   140012067:	00 32                	add    BYTE PTR [rdx],dh
   140012069:	00 00                	add    BYTE PTR [rax],al
   14001206b:	00 00                	add    BYTE PTR [rax],al
   14001206d:	00 00                	add    BYTE PTR [rax],al
   14001206f:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
   140012072:	10 82 02 41 0e 18    	adc    BYTE PTR [rdx+0x180e4102],al
   140012078:	80 03 6e             	add    BYTE PTR [rbx],0x6e
   14001207b:	0e                   	(bad)
   14001207c:	10 c0                	adc    al,al
   14001207e:	41 0e                	rex.B (bad)
   140012080:	08 c2                	or     dl,al
   140012082:	00 00                	add    BYTE PTR [rax],al
   140012084:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_str:

0000000140013000 <.debug_str>:
   140013000:	43 3a 2f             	rex.XB cmp bpl,BYTE PTR [r15]
   140013003:	62 75                	(bad)
   140013005:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x2f746f6f
   14001300c:	2f 
   14001300d:	73 72                	jae    140013081 <.debug_str+0x81>
   14001300f:	63 2f                	movsxd ebp,DWORD PTR [rdi]
   140013011:	67 63 63 2d          	movsxd esp,DWORD PTR [ebx+0x2d]
   140013015:	31 33                	xor    DWORD PTR [rbx],esi
   140013017:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   14001301a:	30 2f                	xor    BYTE PTR [rdi],ch
   14001301c:	6c                   	ins    BYTE PTR es:[rdi],dx
   14001301d:	69 62 67 63 63 2f 63 	imul   esp,DWORD PTR [rdx+0x67],0x632f6363
   140013024:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140013025:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140013026:	66 69 67 2f 69 33    	imul   sp,WORD PTR [rdi+0x2f],0x3369
   14001302c:	38 36                	cmp    BYTE PTR [rsi],dh
   14001302e:	5c                   	pop    rsp
   14001302f:	63 79 67             	movsxd edi,DWORD PTR [rcx+0x67]
   140013032:	77 69                	ja     14001309d <.debug_str+0x9d>
   140013034:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140013035:	2e 53                	cs push rbx
   140013037:	00 43 3a             	add    BYTE PTR [rbx+0x3a],al
   14001303a:	5c                   	pop    rsp
   14001303b:	62 75                	(bad)
   14001303d:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x5c746f6f
   140013044:	5c 
   140013045:	78 38                	js     14001307f <.debug_str+0x7f>
   140013047:	36 5f                	ss pop rdi
   140013049:	36 34 2d             	ss xor al,0x2d
   14001304c:	31 33                	xor    DWORD PTR [rbx],esi
   14001304e:	32 30                	xor    dh,BYTE PTR [rax]
   140013050:	2d 77 69 6e 33       	sub    eax,0x336e6977
   140013055:	32 2d 73 65 68 2d    	xor    ch,BYTE PTR [rip+0x2d686573]        # 16d6995ce <.debug_line_str+0x2d685455>
   14001305b:	75 63                	jne    1400130c0 <.debug_str+0xc0>
   14001305d:	72 74                	jb     1400130d3 <.debug_str+0xd3>
   14001305f:	2d 72 74 5f 76       	sub    eax,0x765f7472
   140013064:	31 31                	xor    DWORD PTR [rcx],esi
   140013066:	2d 72 65 76 31       	sub    eax,0x31766572
   14001306b:	5c                   	pop    rsp
   14001306c:	62 75                	(bad)
   14001306e:	69 6c 64 5c 67 63 63 	imul   ebp,DWORD PTR [rsp+riz*2+0x5c],0x2d636367
   140013075:	2d 
   140013076:	31 33                	xor    DWORD PTR [rbx],esi
   140013078:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   14001307b:	30 5c 78 38          	xor    BYTE PTR [rax+rdi*2+0x38],bl
   14001307f:	36 5f                	ss pop rdi
   140013081:	36 34 2d             	ss xor al,0x2d
   140013084:	77 36                	ja     1400130bc <.debug_str+0xbc>
   140013086:	34 2d                	xor    al,0x2d
   140013088:	6d                   	ins    DWORD PTR es:[rdi],dx
   140013089:	69 6e 67 77 33 32 5c 	imul   ebp,DWORD PTR [rsi+0x67],0x5c323377
   140013090:	6c                   	ins    BYTE PTR es:[rdi],dx
   140013091:	69 62 67 63 63 00 47 	imul   esp,DWORD PTR [rdx+0x67],0x47006363
   140013098:	4e 55                	rex.WRX push rbp
   14001309a:	20 41 53             	and    BYTE PTR [rcx+0x53],al
   14001309d:	20 32                	and    BYTE PTR [rdx],dh
   14001309f:	2e 33 39             	cs xor edi,DWORD PTR [rcx]
	...

Disassembly of section .debug_line_str:

0000000140014000 <.debug_line_str>:
   140014000:	43 3a 5c 55 73       	cmp    bl,BYTE PTR [r13+r10*2+0x73]
   140014005:	65 72 73             	gs jb  14001407b <.debug_line_str+0x7b>
   140014008:	5c                   	pop    rsp
   140014009:	47                   	rex.RXB
   14001400a:	44                   	rex.R
   14001400b:	44 5c                	rex.R pop rsp
   14001400d:	44                   	rex.R
   14001400e:	65 73 6b             	gs jae 14001407c <.debug_line_str+0x7c>
   140014011:	74 6f                	je     140014082 <.debug_line_str+0x82>
   140014013:	70 5c                	jo     140014071 <.debug_line_str+0x71>
   140014015:	70 72                	jo     140014089 <.debug_line_str+0x89>
   140014017:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140014018:	67 72 61             	addr32 jb 14001407c <.debug_line_str+0x7c>
   14001401b:	6d                   	ins    DWORD PTR es:[rdi],dx
   14001401c:	5c                   	pop    rsp
   14001401d:	63 5c 6c 69          	movsxd ebx,DWORD PTR [rsp+rbp*2+0x69]
   140014021:	62 72                	(bad)
   140014023:	61                   	(bad)
   140014024:	72 79                	jb     14001409f <.debug_line_str+0x9f>
   140014026:	5c                   	pop    rsp
   140014027:	74 65                	je     14001408e <.debug_line_str+0x8e>
   140014029:	73 74                	jae    14001409f <.debug_line_str+0x9f>
   14001402b:	5c                   	pop    rsp
   14001402c:	6c                   	ins    BYTE PTR es:[rdi],dx
   14001402d:	69 73 74 00 74 65 73 	imul   esi,DWORD PTR [rbx+0x74],0x73657400
   140014034:	74 31                	je     140014067 <.debug_line_str+0x67>
   140014036:	2e 63 00             	cs movsxd eax,DWORD PTR [rax]
   140014039:	43 3a 2f             	rex.XB cmp bpl,BYTE PTR [r15]
   14001403c:	55                   	push   rbp
   14001403d:	73 65                	jae    1400140a4 <.debug_line_str+0xa4>
   14001403f:	72 73                	jb     1400140b4 <.debug_line_str+0xb4>
   140014041:	2f                   	(bad)
   140014042:	47                   	rex.RXB
   140014043:	44                   	rex.R
   140014044:	44 2f                	rex.R (bad)
   140014046:	44                   	rex.R
   140014047:	65 73 6b             	gs jae 1400140b5 <.debug_line_str+0xb5>
   14001404a:	74 6f                	je     1400140bb <.debug_line_str+0xbb>
   14001404c:	70 2f                	jo     14001407d <.debug_line_str+0x7d>
   14001404e:	70 72                	jo     1400140c2 <.debug_line_str+0xc2>
   140014050:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140014051:	67 72 61             	addr32 jb 1400140b5 <.debug_line_str+0xb5>
   140014054:	6d                   	ins    DWORD PTR es:[rdi],dx
   140014055:	2f                   	(bad)
   140014056:	63 2f                	movsxd ebp,DWORD PTR [rdi]
   140014058:	6c                   	ins    BYTE PTR es:[rdi],dx
   140014059:	69 62 72 61 72 79 2f 	imul   esp,DWORD PTR [rdx+0x72],0x2f797261
   140014060:	74 65                	je     1400140c7 <.debug_line_str+0xc7>
   140014062:	73 74                	jae    1400140d8 <.debug_line_str+0xd8>
   140014064:	2f                   	(bad)
   140014065:	6c                   	ins    BYTE PTR es:[rdi],dx
   140014066:	69 73 74 00 43 3a 2f 	imul   esi,DWORD PTR [rbx+0x74],0x2f3a4300
   14001406d:	55                   	push   rbp
   14001406e:	73 65                	jae    1400140d5 <.debug_line_str+0xd5>
   140014070:	72 73                	jb     1400140e5 <.debug_line_str+0x3>
   140014072:	2f                   	(bad)
   140014073:	47                   	rex.RXB
   140014074:	44                   	rex.R
   140014075:	44 2f                	rex.R (bad)
   140014077:	44                   	rex.R
   140014078:	65 73 6b             	gs jae 1400140e6 <.debug_line_str+0x4>
   14001407b:	74 6f                	je     1400140ec <.debug_line_str+0xa>
   14001407d:	70 2f                	jo     1400140ae <.debug_line_str+0xae>
   14001407f:	70 72                	jo     1400140f3 <.debug_line_str+0x11>
   140014081:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140014082:	67 72 61             	addr32 jb 1400140e6 <.debug_line_str+0x4>
   140014085:	6d                   	ins    DWORD PTR es:[rdi],dx
   140014086:	2f                   	(bad)
   140014087:	63 2f                	movsxd ebp,DWORD PTR [rdi]
   140014089:	6c                   	ins    BYTE PTR es:[rdi],dx
   14001408a:	69 62 72 61 72 79 2f 	imul   esp,DWORD PTR [rdx+0x72],0x2f797261
   140014091:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
   140014098:	2f                   	(bad)
   140014099:	65 72 72             	gs jb  14001410e <.debug_line_str+0x2c>
   14001409c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   14001409d:	72 00                	jb     14001409f <.debug_line_str+0x9f>
   14001409f:	64 65 62 75 67 00 74 	(bad)
   1400140a6:	65 73 74             	gs jae 14001411d <.debug_line_str+0x3b>
   1400140a9:	31 2e                	xor    DWORD PTR [rsi],ebp
   1400140ab:	63 00                	movsxd eax,DWORD PTR [rax]
   1400140ad:	74 65                	je     140014114 <.debug_line_str+0x32>
   1400140af:	73 74                	jae    140014125 <.debug_line_str+0x43>
   1400140b1:	31 2e                	xor    DWORD PTR [rsi],ebp
   1400140b3:	63 00                	movsxd eax,DWORD PTR [rax]
   1400140b5:	65 72 72             	gs jb  14001412a <.debug_line_str+0x48>
   1400140b8:	2e 68 00 6c 69 73    	cs push 0x73696c00
   1400140be:	74 5f                	je     14001411f <.debug_line_str+0x3d>
   1400140c0:	74 79                	je     14001413b <.debug_line_str+0x59>
   1400140c2:	70 65                	jo     140014129 <.debug_line_str+0x47>
   1400140c4:	73 2e                	jae    1400140f4 <.debug_line_str+0x12>
   1400140c6:	68 00 6c 69 73       	push   0x73696c00
   1400140cb:	74 5f                	je     14001412c <.debug_line_str+0x4a>
   1400140cd:	62 61                	(bad)
   1400140cf:	73 69                	jae    14001413a <.debug_line_str+0x58>
   1400140d1:	63 2e                	movsxd ebp,DWORD PTR [rsi]
   1400140d3:	68 00 77 72 61       	push   0x61727700
   1400140d8:	70 5f                	jo     140014139 <.debug_line_str+0x57>
   1400140da:	61                   	(bad)
   1400140db:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400140dc:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400140dd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   1400140de:	63 2e                	movsxd ebp,DWORD PTR [rsi]
   1400140e0:	68 00          	push   0x5c3a4300

00000001400140e2 <.debug_line_str>:
   1400140e2:	43 3a 5c 62 75       	cmp    bl,BYTE PTR [r10+r12*2+0x75]
   1400140e7:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x5c746f6f
   1400140ee:	5c 
   1400140ef:	78 38                	js     140014129 <.debug_line_str+0x47>
   1400140f1:	36 5f                	ss pop rdi
   1400140f3:	36 34 2d             	ss xor al,0x2d
   1400140f6:	31 33                	xor    DWORD PTR [rbx],esi
   1400140f8:	32 30                	xor    dh,BYTE PTR [rax]
   1400140fa:	2d 77 69 6e 33       	sub    eax,0x336e6977
   1400140ff:	32 2d 73 65 68 2d    	xor    ch,BYTE PTR [rip+0x2d686573]        # 16d69a678 <.debug_line_str+0x2d6864ff>
   140014105:	75 63                	jne    14001416a <.debug_line_str+0x88>
   140014107:	72 74                	jb     14001417d <.debug_line_str+0x4>
   140014109:	2d 72 74 5f 76       	sub    eax,0x765f7472
   14001410e:	31 31                	xor    DWORD PTR [rcx],esi
   140014110:	2d 72 65 76 31       	sub    eax,0x31766572
   140014115:	5c                   	pop    rsp
   140014116:	62 75                	(bad)
   140014118:	69 6c 64 5c 67 63 63 	imul   ebp,DWORD PTR [rsp+riz*2+0x5c],0x2d636367
   14001411f:	2d 
   140014120:	31 33                	xor    DWORD PTR [rbx],esi
   140014122:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   140014125:	30 5c 78 38          	xor    BYTE PTR [rax+rdi*2+0x38],bl
   140014129:	36 5f                	ss pop rdi
   14001412b:	36 34 2d             	ss xor al,0x2d
   14001412e:	77 36                	ja     140014166 <.debug_line_str+0x84>
   140014130:	34 2d                	xor    al,0x2d
   140014132:	6d                   	ins    DWORD PTR es:[rdi],dx
   140014133:	69 6e 67 77 33 32 5c 	imul   ebp,DWORD PTR [rsi+0x67],0x5c323377
   14001413a:	6c                   	ins    BYTE PTR es:[rdi],dx
   14001413b:	69 62 67 63 63 00 43 	imul   esp,DWORD PTR [rdx+0x67],0x43006363
   140014142:	3a 2f                	cmp    ch,BYTE PTR [rdi]
   140014144:	62 75                	(bad)
   140014146:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x2f746f6f
   14001414d:	2f 
   14001414e:	73 72                	jae    1400141c2 <.debug_line_str+0x49>
   140014150:	63 2f                	movsxd ebp,DWORD PTR [rdi]
   140014152:	67 63 63 2d          	movsxd esp,DWORD PTR [ebx+0x2d]
   140014156:	31 33                	xor    DWORD PTR [rbx],esi
   140014158:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   14001415b:	30 2f                	xor    BYTE PTR [rdi],ch
   14001415d:	6c                   	ins    BYTE PTR es:[rdi],dx
   14001415e:	69 62 67 63 63 2f 63 	imul   esp,DWORD PTR [rdx+0x67],0x632f6363
   140014165:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   140014166:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140014167:	66 69 67 2f 69 33    	imul   sp,WORD PTR [rdi+0x2f],0x3369
   14001416d:	38 36                	cmp    BYTE PTR [rsi],dh
   14001416f:	00 63 79             	add    BYTE PTR [rbx+0x79],ah
   140014172:	67 77 69             	addr32 ja 1400141de <.debug_line_str+0x65>
   140014175:	6e                   	outs   dx,BYTE PTR ds:[rsi]
   140014176:	2e 53                	cs push rbx
	...

0000000140014179 <.debug_line_str>:
   140014179:	43 3a 2f             	rex.XB cmp bpl,BYTE PTR [r15]
   14001417c:	62 75                	(bad)
   14001417e:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x2f746f6f
   140014185:	2f 
   140014186:	73 72                	jae    1400141fa <.debug_line_str+0x81>
   140014188:	63 2f                	movsxd ebp,DWORD PTR [rdi]
   14001418a:	67 63 63 2d          	movsxd esp,DWORD PTR [ebx+0x2d]
   14001418e:	31 33                	xor    DWORD PTR [rbx],esi
   140014190:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   140014193:	30 2f                	xor    BYTE PTR [rdi],ch
   140014195:	6c                   	ins    BYTE PTR es:[rdi],dx
   140014196:	69 62 67 63 63 2f 6c 	imul   esp,DWORD PTR [rdx+0x67],0x6c2f6363
   14001419d:	69 62 67 63 63 32 2e 	imul   esp,DWORD PTR [rdx+0x67],0x2e326363
   1400141a4:	63 00                	movsxd eax,DWORD PTR [rax]
   1400141a6:	43 3a 5c 62 75       	cmp    bl,BYTE PTR [r10+r12*2+0x75]
   1400141ab:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x5c746f6f
   1400141b2:	5c 
   1400141b3:	78 38                	js     1400141ed <.debug_line_str+0x74>
   1400141b5:	36 5f                	ss pop rdi
   1400141b7:	36 34 2d             	ss xor al,0x2d
   1400141ba:	31 33                	xor    DWORD PTR [rbx],esi
   1400141bc:	32 30                	xor    dh,BYTE PTR [rax]
   1400141be:	2d 77 69 6e 33       	sub    eax,0x336e6977
   1400141c3:	32 2d 73 65 68 2d    	xor    ch,BYTE PTR [rip+0x2d686573]        # 16d69a73c <.debug_line_str+0x2d6865c3>
   1400141c9:	75 63                	jne    14001422e <.debug_line_str+0xb5>
   1400141cb:	72 74                	jb     140014241 <.debug_line_str+0xc8>
   1400141cd:	2d 72 74 5f 76       	sub    eax,0x765f7472
   1400141d2:	31 31                	xor    DWORD PTR [rcx],esi
   1400141d4:	2d 72 65 76 31       	sub    eax,0x31766572
   1400141d9:	5c                   	pop    rsp
   1400141da:	62 75                	(bad)
   1400141dc:	69 6c 64 5c 67 63 63 	imul   ebp,DWORD PTR [rsp+riz*2+0x5c],0x2d636367
   1400141e3:	2d 
   1400141e4:	31 33                	xor    DWORD PTR [rbx],esi
   1400141e6:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   1400141e9:	30 5c 78 38          	xor    BYTE PTR [rax+rdi*2+0x38],bl
   1400141ed:	36 5f                	ss pop rdi
   1400141ef:	36 34 2d             	ss xor al,0x2d
   1400141f2:	77 36                	ja     14001422a <.debug_line_str+0xb1>
   1400141f4:	34 2d                	xor    al,0x2d
   1400141f6:	6d                   	ins    DWORD PTR es:[rdi],dx
   1400141f7:	69 6e 67 77 33 32 5c 	imul   ebp,DWORD PTR [rsi+0x67],0x5c323377
   1400141fe:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400141ff:	69 62 67 63 63 00 43 	imul   esp,DWORD PTR [rdx+0x67],0x43006363
   140014206:	3a 2f                	cmp    ch,BYTE PTR [rdi]
   140014208:	62 75                	(bad)
   14001420a:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x2f746f6f
   140014211:	2f 
   140014212:	78 38                	js     14001424c <.debug_line_str+0xd3>
   140014214:	36 5f                	ss pop rdi
   140014216:	36 34 2d             	ss xor al,0x2d
   140014219:	31 33                	xor    DWORD PTR [rbx],esi
   14001421b:	32 30                	xor    dh,BYTE PTR [rax]
   14001421d:	2d 77 69 6e 33       	sub    eax,0x336e6977
   140014222:	32 2d 73 65 68 2d    	xor    ch,BYTE PTR [rip+0x2d686573]        # 16d69a79b <.debug_line_str+0x2d686622>
   140014228:	75 63                	jne    14001428d <.debug_line_str+0x114>
   14001422a:	72 74                	jb     1400142a0 <.debug_line_str+0x127>
   14001422c:	2d 72 74 5f 76       	sub    eax,0x765f7472
   140014231:	31 31                	xor    DWORD PTR [rcx],esi
   140014233:	2d 72 65 76 31       	sub    eax,0x31766572
   140014238:	2f                   	(bad)
   140014239:	62 75                	(bad)
   14001423b:	69 6c 64 2f 67 63 63 	imul   ebp,DWORD PTR [rsp+riz*2+0x2f],0x2d636367
   140014242:	2d 
   140014243:	31 33                	xor    DWORD PTR [rbx],esi
   140014245:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   140014248:	30 2f                	xor    BYTE PTR [rdi],ch
   14001424a:	78 38                	js     140014284 <.debug_line_str+0x10b>
   14001424c:	36 5f                	ss pop rdi
   14001424e:	36 34 2d             	ss xor al,0x2d
   140014251:	77 36                	ja     140014289 <.debug_line_str+0x110>
   140014253:	34 2d                	xor    al,0x2d
   140014255:	6d                   	ins    DWORD PTR es:[rdi],dx
   140014256:	69 6e 67 77 33 32 2f 	imul   ebp,DWORD PTR [rsi+0x67],0x2f323377
   14001425d:	6c                   	ins    BYTE PTR es:[rdi],dx
   14001425e:	69 62 67 63 63 00 43 	imul   esp,DWORD PTR [rdx+0x67],0x43006363
   140014265:	3a 2f                	cmp    ch,BYTE PTR [rdi]
   140014267:	62 75                	(bad)
   140014269:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x2f746f6f
   140014270:	2f 
   140014271:	73 72                	jae    1400142e5 <.debug_line_str+0x16c>
   140014273:	63 2f                	movsxd ebp,DWORD PTR [rdi]
   140014275:	67 63 63 2d          	movsxd esp,DWORD PTR [ebx+0x2d]
   140014279:	31 33                	xor    DWORD PTR [rbx],esi
   14001427b:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   14001427e:	30 2f                	xor    BYTE PTR [rdi],ch
   140014280:	6c                   	ins    BYTE PTR es:[rdi],dx
   140014281:	69 62 67 63 63 00 43 	imul   esp,DWORD PTR [rdx+0x67],0x43006363
   140014288:	3a 2f                	cmp    ch,BYTE PTR [rdi]
   14001428a:	62 75                	(bad)
   14001428c:	69 6c 64 72 6f 6f 74 	imul   ebp,DWORD PTR [rsp+riz*2+0x72],0x2f746f6f
   140014293:	2f 
   140014294:	73 72                	jae    140014308 <.debug_line_str+0x18f>
   140014296:	63 2f                	movsxd ebp,DWORD PTR [rdi]
   140014298:	67 63 63 2d          	movsxd esp,DWORD PTR [ebx+0x2d]
   14001429c:	31 33                	xor    DWORD PTR [rbx],esi
   14001429e:	2e 32 2e             	cs xor ch,BYTE PTR [rsi]
   1400142a1:	30 2f                	xor    BYTE PTR [rdi],ch
   1400142a3:	67 63 63 2f          	movsxd esp,DWORD PTR [ebx+0x2f]
   1400142a7:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400142aa:	66 69 67 2f 69 33    	imul   sp,WORD PTR [rdi+0x2f],0x3369
   1400142b0:	38 36                	cmp    BYTE PTR [rsi],dh
   1400142b2:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
   1400142b6:	67 63 63 32          	movsxd esp,DWORD PTR [ebx+0x32]
   1400142ba:	2e 63 00             	cs movsxd eax,DWORD PTR [rax]
   1400142bd:	69 33 38 36 2e 68    	imul   esi,DWORD PTR [rbx],0x682e3638
   1400142c3:	00 67 62             	add    BYTE PTR [rdi+0x62],ah
   1400142c6:	6c                   	ins    BYTE PTR es:[rdi],dx
   1400142c7:	2d 63 74 6f 72       	sub    eax,0x726f7463
   1400142cc:	73 2e                	jae    1400142fc <.debug_line_str+0x183>
   1400142ce:	68 00 6c 69 62       	push   0x62696c00
   1400142d3:	67 63 63 32          	movsxd esp,DWORD PTR [ebx+0x32]
   1400142d7:	2e 63 00             	cs movsxd eax,DWORD PTR [rax]
